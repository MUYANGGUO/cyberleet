[{"id": "1682", "name": "longest-palindromic-subsequence-ii", "content": {"questionId": "1822", "questionFrontendId": "1682", "questionTitle": "Longest Palindromic Subsequence II", "questionTitleSlug": "longest-palindromic-subsequence-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"591\", \"totalSubmission\": \"1.2K\", \"totalAcceptedRaw\": 591, \"totalSubmissionRaw\": 1153, \"acRate\": \"51.3%\"}", "similarQuestions": "[{\"title\": \"Longest Palindromic Subsequence\", \"titleSlug\": \"longest-palindromic-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1676", "name": "lowest-common-ancestor-of-a-binary-tree-iv", "content": {"questionId": "1816", "questionFrontendId": "1676", "questionTitle": "Lowest Common Ancestor of a Binary Tree IV", "questionTitleSlug": "lowest-common-ancestor-of-a-binary-tree-iv", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"1.6K\", \"totalSubmission\": \"2.1K\", \"totalAcceptedRaw\": 1640, \"totalSubmissionRaw\": 2107, \"acRate\": \"77.8%\"}", "similarQuestions": "[{\"title\": \"Lowest Common Ancestor of a Binary Search Tree\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-search-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of Deepest Leaves\", \"titleSlug\": \"lowest-common-ancestor-of-deepest-leaves\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree II\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree III\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree IV\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1696", "name": "jump-game-vi", "content": {"questionId": "1814", "questionFrontendId": "1696", "questionTitle": "Jump Game VI", "questionTitleSlug": "jump-game-vi", "content": "<p>You are given a <strong>0-indexed</strong> integer array <code>nums</code> and an integer <code>k</code>.</p>\n\n<p>You are initially standing at index <code>0</code>. In one move, you can jump at most <code>k</code> steps forward without going outside the boundaries of the array. That is, you can jump from index <code>i</code> to any index in the range <code>[i + 1, min(n - 1, i + k)]</code> <strong>inclusive</strong>.</p>\n\n<p>You want to reach the last index of the array (index <code>n - 1</code>). Your <strong>score</strong> is the <strong>sum</strong> of all <code>nums[j]</code> for each index <code>j</code> you visited in the array.</p>\n\n<p>Return <em>the <strong>maximum score</strong> you can get</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [<u>1</u>,<u>-1</u>,-2,<u>4</u>,-7,<u>3</u>], k = 2\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> You can choose your jumps forming the subsequence [1,-1,4,3] (underlined above). The sum is 7.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [<u>10</u>,-5,-2,<u>4</u>,0,<u>3</u>], k = 3\n<strong>Output:</strong> 17\n<strong>Explanation:</strong> You can choose your jumps forming the subsequence [10,4,3] (underlined above). The sum is 17.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,-5,-20,4,-1,3,-6,-3], k = 2\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>&nbsp;<code>1 &lt;= nums.length, k &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>4</sup>&nbsp;&lt;= nums[i]&nbsp;&lt;= 10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"8.4K\", \"totalSubmission\": \"14.1K\", \"totalAcceptedRaw\": 8435, \"totalSubmissionRaw\": 14132, \"acRate\": \"59.7%\"}", "similarQuestions": "[{\"title\": \"Sliding Window Maximum\", \"titleSlug\": \"sliding-window-maximum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dequeue", "slug": "dequeue"}]}}, {"id": "1695", "name": "maximum-erasure-value", "content": {"questionId": "1813", "questionFrontendId": "1695", "questionTitle": "Maximum Erasure Value", "questionTitleSlug": "maximum-erasure-value", "content": "<p>You are given an array of positive integers <code>nums</code> and want to erase a subarray containing&nbsp;<strong>unique elements</strong>. The <strong>score</strong> you get by erasing the subarray is equal to the <strong>sum</strong> of its elements.</p>\n\n<p>Return <em>the <strong>maximum score</strong> you can get by erasing <strong>exactly one</strong> subarray.</em></p>\n\n<p>An array <code>b</code> is called to be a <span class=\"tex-font-style-it\">subarray</span> of <code>a</code> if it forms a contiguous subsequence of <code>a</code>, that is, if it is equal to <code>a[l],a[l+1],...,a[r]</code> for some <code>(l,r)</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,2,4,5,6]\n<strong>Output:</strong> 17\n<strong>Explanation:</strong> The optimal subarray here is [2,4,5,6].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,2,1,2,5,2,1,2,5]\n<strong>Output:</strong> 8\n<strong>Explanation:</strong> The optimal subarray here is [5,2,1] or [1,2,5].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"7K\", \"totalSubmission\": \"14.3K\", \"totalAcceptedRaw\": 7024, \"totalSubmissionRaw\": 14322, \"acRate\": \"49.0%\"}", "similarQuestions": "[{\"title\": \"Longest Substring Without Repeating Characters\", \"titleSlug\": \"longest-substring-without-repeating-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "1666", "name": "change-the-root-of-a-binary-tree", "content": {"questionId": "1810", "questionFrontendId": "1666", "questionTitle": "Change the Root of a Binary Tree", "questionTitleSlug": "change-the-root-of-a-binary-tree", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"675\", \"totalSubmission\": \"1K\", \"totalAcceptedRaw\": 675, \"totalSubmissionRaw\": 1015, \"acRate\": \"66.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1690", "name": "stone-game-vii", "content": {"questionId": "1808", "questionFrontendId": "1690", "questionTitle": "Stone Game VII", "questionTitleSlug": "stone-game-vii", "content": "<p>Alice and Bob take turns playing a game, with <strong>Alice starting first</strong>.</p>\n\n<p>There are <code>n</code> stones arranged in a row. On each player&#39;s turn, they can <strong>remove</strong> either the leftmost stone or the rightmost stone from the row and receive points equal to the <strong>sum</strong> of the remaining stones&#39; values in the row. The winner is the one with the higher score when there are no stones left to remove.</p>\n\n<p>Bob found that he will always lose this game (poor Bob, he always loses), so he decided to <strong>minimize the score&#39;s difference</strong>. Alice&#39;s goal is to <strong>maximize the difference</strong> in the score.</p>\n\n<p>Given an array of integers <code>stones</code> where <code>stones[i]</code> represents the value of the <code>i<sup>th</sup></code> stone <strong>from the left</strong>, return <em>the <strong>difference</strong> in Alice and Bob&#39;s score if they both play <strong>optimally</strong>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> stones = [5,3,1,4,2]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> \n- Alice removes 2 and gets 5 + 3 + 1 + 4 = 13 points. Alice = 13, Bob = 0, stones = [5,3,1,4].\n- Bob removes 5 and gets 3 + 1 + 4 = 8 points. Alice = 13, Bob = 8, stones = [3,1,4].\n- Alice removes 3 and gets 1 + 4 = 5 points. Alice = 18, Bob = 8, stones = [1,4].\n- Bob removes 1 and gets 4 points. Alice = 18, Bob = 12, stones = [4].\n- Alice removes 4 and gets 0 points. Alice = 18, Bob = 12, stones = [].\nThe score difference is 18 - 12 = 6.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> stones = [7,90,5,1,100,10,10,2]\n<strong>Output:</strong> 122</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == stones.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 1000</code></li>\n\t<li><code>1 &lt;= stones[i] &lt;= 1000</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"4.9K\", \"totalSubmission\": \"10.8K\", \"totalAcceptedRaw\": 4881, \"totalSubmissionRaw\": 10754, \"acRate\": \"45.4%\"}", "similarQuestions": "[{\"title\": \"Stone Game\", \"titleSlug\": \"stone-game\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stone Game II\", \"titleSlug\": \"stone-game-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stone Game III\", \"titleSlug\": \"stone-game-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game IV\", \"titleSlug\": \"stone-game-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game V\", \"titleSlug\": \"stone-game-v\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game VI\", \"titleSlug\": \"stone-game-vi\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1689", "name": "partitioning-into-minimum-number-of-deci-binary-numbers", "content": {"questionId": "1807", "questionFrontendId": "1689", "questionTitle": "Partitioning Into Minimum Number Of Deci-Binary Numbers", "questionTitleSlug": "partitioning-into-minimum-number-of-deci-binary-numbers", "content": "<p>A decimal number is called <strong>deci-binary</strong> if each of its digits is either <code>0</code> or <code>1</code> without any leading zeros. For example, <code>101</code> and <code>1100</code> are <strong>deci-binary</strong>, while <code>112</code> and <code>3001</code> are not.</p>\r\n\r\n<p>Given a string <code>n</code> that represents a positive decimal integer, return <em>the <strong>minimum</strong> number of positive <strong>deci-binary</strong> numbers needed so that they sum up to </em><code>n</code><em>.</em></p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = &quot;32&quot;\r\n<strong>Output:</strong> 3\r\n<strong>Explanation:</strong> 10 + 11 + 11 = 32\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = &quot;82734&quot;\r\n<strong>Output:</strong> 8\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = &quot;27346209830709182346&quot;\r\n<strong>Output:</strong> 9\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= n.length &lt;= 10<sup>5</sup></code></li>\r\n\t<li><code>n</code> consists of only digits.</li>\r\n\t<li><code>n</code> does not contain any leading zeros and represents a positive integer.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"9K\", \"totalSubmission\": \"10.2K\", \"totalAcceptedRaw\": 9018, \"totalSubmissionRaw\": 10165, \"acRate\": \"88.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1680", "name": "concatenation-of-consecutive-binary-numbers", "content": {"questionId": "1800", "questionFrontendId": "1680", "questionTitle": "Concatenation of Consecutive Binary Numbers", "questionTitleSlug": "concatenation-of-consecutive-binary-numbers", "content": "<p>Given an integer <code>n</code>, return <em>the <strong>decimal value</strong> of the binary string formed by concatenating the binary representations of </em><code>1</code><em> to </em><code>n</code><em> in order, <strong>modulo </strong></em><code>10<sup>9 </sup>+ 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> 1\n<strong>Explanation: </strong>&quot;1&quot; in binary corresponds to the decimal value 1. \n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> 27\n<strong>Explanation: </strong>In binary, 1, 2, and 3 corresponds to &quot;1&quot;, &quot;10&quot;, and &quot;11&quot;.\nAfter concatenating them, we have &quot;11011&quot;, which corresponds to the decimal value 27.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 12\n<strong>Output:</strong> 505379714\n<strong>Explanation</strong>: The concatenation results in &quot;1101110010111011110001001101010111100&quot;.\nThe decimal value of that is 118505380540.\nAfter modulo 10<sup>9</sup> + 7, the result is 505379714.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"7.8K\", \"totalSubmission\": \"17.3K\", \"totalAcceptedRaw\": 7754, \"totalSubmissionRaw\": 17325, \"acRate\": \"44.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "1679", "name": "max-number-of-k-sum-pairs", "content": {"questionId": "1798", "questionFrontendId": "1679", "questionTitle": "Max Number of K-Sum Pairs", "questionTitleSlug": "max-number-of-k-sum-pairs", "content": "<p>You are given an integer array <code>nums</code> and an integer <code>k</code>.</p>\n\n<p>In one operation, you can pick two numbers from the array whose sum equals <code>k</code> and remove them from the array.</p>\n\n<p>Return <em>the maximum number of operations you can perform on the array</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4], k = 5\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Starting with nums = [1,2,3,4]:\n- Remove numbers 1 and 4, then nums = [2,3]\n- Remove numbers 2 and 3, then nums = []\nThere are no more pairs that sum up to 5, hence a total of 2 operations.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,1,3,4,3], k = 6\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> Starting with nums = [3,1,3,4,3]:\n- Remove the first two 3&#39;s, then nums = [1,4,3]\nThere are no more pairs that sum up to 6, hence a total of 1 operation.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"9.3K\", \"totalSubmission\": \"17.8K\", \"totalAcceptedRaw\": 9331, \"totalSubmissionRaw\": 17785, \"acRate\": \"52.5%\"}", "similarQuestions": "[{\"title\": \"Two Sum\", \"titleSlug\": \"two-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}]}}, {"id": "1660", "name": "correct-a-binary-tree", "content": {"questionId": "1796", "questionFrontendId": "1660", "questionTitle": "Correct a Binary Tree", "questionTitleSlug": "correct-a-binary-tree", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"1.6K\", \"totalSubmission\": \"2.1K\", \"totalAcceptedRaw\": 1632, \"totalSubmissionRaw\": 2065, \"acRate\": \"79.0%\"}", "similarQuestions": "[{\"title\": \"Flatten Binary Tree to Linked List\", \"titleSlug\": \"flatten-binary-tree-to-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Flatten a Multilevel Doubly Linked List\", \"titleSlug\": \"flatten-a-multilevel-doubly-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "1674", "name": "minimum-moves-to-make-array-complementary", "content": {"questionId": "1793", "questionFrontendId": "1674", "questionTitle": "Minimum Moves to Make Array Complementary", "questionTitleSlug": "minimum-moves-to-make-array-complementary", "content": "<p>You are given an integer array <code>nums</code> of <strong>even</strong> length <code>n</code> and an integer <code>limit</code>. In one move, you can replace any integer from <code>nums</code> with another integer between <code>1</code> and <code>limit</code>, inclusive.</p>\n\n<p>The array <code>nums</code> is <strong>complementary</strong> if for all indices <code>i</code> (<strong>0-indexed</strong>), <code>nums[i] + nums[n - 1 - i]</code> equals the same number. For example, the array <code>[1,2,3,4]</code> is complementary because for all indices <code>i</code>, <code>nums[i] + nums[n - 1 - i] = 5</code>.</p>\n\n<p>Return the <em><strong>minimum</strong> number of moves required to make </em><code>nums</code><em> <strong>complementary</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,4,3], limit = 4\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> In 1 move, you can change nums to [1,2,<u>2</u>,3] (underlined elements are changed).\nnums[0] + nums[3] = 1 + 3 = 4.\nnums[1] + nums[2] = 2 + 2 = 4.\nnums[2] + nums[1] = 2 + 2 = 4.\nnums[3] + nums[0] = 3 + 1 = 4.\nTherefore, nums[i] + nums[n-1-i] = 4 for every i, so nums is complementary.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,2,1], limit = 2\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> In 2 moves, you can change nums to [<u>2</u>,2,2,<u>2</u>]. You cannot change any number to 3 since 3 &gt; limit.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,1,2], limit = 2\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> nums is already complementary.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>2 &lt;= n&nbsp;&lt;=&nbsp;10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i]&nbsp;&lt;= limit &lt;=&nbsp;10<sup>5</sup></code></li>\n\t<li><code>n</code> is even.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"3.1K\", \"totalSubmission\": \"9.1K\", \"totalAcceptedRaw\": 3060, \"totalSubmissionRaw\": 9091, \"acRate\": \"33.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1673", "name": "find-the-most-competitive-subsequence", "content": {"questionId": "1792", "questionFrontendId": "1673", "questionTitle": "Find the Most Competitive Subsequence", "questionTitleSlug": "find-the-most-competitive-subsequence", "content": "<p>Given an integer array <code>nums</code> and a positive integer <code>k</code>, return <em>the most<strong> competitive</strong> subsequence of </em><code>nums</code> <em>of size </em><code>k</code>.</p>\n\n<p>An array&#39;s subsequence is a resulting sequence obtained by erasing some (possibly zero) elements from the array.</p>\n\n<p>We define that a subsequence <code>a</code> is more <strong>competitive</strong> than a subsequence <code>b</code> (of the same length) if in the first position where <code>a</code> and <code>b</code> differ, subsequence <code>a</code> has a number <strong>less</strong> than the corresponding number in <code>b</code>. For example, <code>[1,3,4]</code> is more competitive than <code>[1,3,5]</code> because the first position they differ is at the final number, and <code>4</code> is less than <code>5</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,5,2,6], k = 2\n<strong>Output:</strong> [2,6]\n<strong>Explanation:</strong> Among the set of every possible subsequence: {[3,5], [3,2], [3,6], [5,2], [5,6], [2,6]}, [2,6] is the most competitive.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,4,3,3,5,4,9,6], k = 4\n<strong>Output:</strong> [2,3,3,4]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= nums.length</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"7.6K\", \"totalSubmission\": \"20.3K\", \"totalAcceptedRaw\": 7576, \"totalSubmissionRaw\": 20307, \"acRate\": \"37.3%\"}", "similarQuestions": "[{\"title\": \"Remove K Digits\", \"titleSlug\": \"remove-k-digits\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Smallest Subsequence of Distinct Characters\", \"titleSlug\": \"smallest-subsequence-of-distinct-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1650", "name": "lowest-common-ancestor-of-a-binary-tree-iii", "content": {"questionId": "1790", "questionFrontendId": "1650", "questionTitle": "Lowest Common Ancestor of a Binary Tree III", "questionTitleSlug": "lowest-common-ancestor-of-a-binary-tree-iii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"2.8K\", \"totalSubmission\": \"3.6K\", \"totalAcceptedRaw\": 2807, \"totalSubmissionRaw\": 3571, \"acRate\": \"78.6%\"}", "similarQuestions": "[{\"title\": \"Lowest Common Ancestor of a Binary Search Tree\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-search-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree II\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree IV\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "1686", "name": "stone-game-vi", "content": {"questionId": "1788", "questionFrontendId": "1686", "questionTitle": "Stone Game VI", "questionTitleSlug": "stone-game-vi", "content": "<p>Alice and Bob take turns playing a game, with Alice starting first.</p>\n\n<p>There are <code>n</code> stones in a pile. On each player&#39;s turn, they can <strong>remove</strong> a stone from the pile and receive points based on the stone&#39;s value. Alice and Bob may <strong>value the stones differently</strong>.</p>\n\n<p>You are given two integer arrays of length <code>n</code>, <code>aliceValues</code> and <code>bobValues</code>. Each <code>aliceValues[i]</code> and <code>bobValues[i]</code> represents how Alice and Bob, respectively, value the <code>i<sup>th</sup></code> stone.</p>\n\n<p>The winner is the person with the most points after all the stones are chosen. If both players have the same amount of points, the game results in a draw. Both players will play <strong>optimally</strong>.&nbsp;Both players know the other&#39;s values.</p>\n\n<p>Determine the result of the game, and:</p>\n\n<ul>\n\t<li>If Alice wins, return <code>1</code>.</li>\n\t<li>If Bob wins, return <code>-1</code>.</li>\n\t<li>If the game results in a draw, return <code>0</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> aliceValues = [1,3], bobValues = [2,1]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong>\nIf Alice takes stone 1 (0-indexed) first, Alice will receive 3 points.\nBob can only choose stone 0, and will only receive 2 points.\nAlice wins.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> aliceValues = [1,2], bobValues = [3,1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong>\nIf Alice takes stone 0, and Bob takes stone 1, they will both have 1 point.\nDraw.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> aliceValues = [2,4,3], bobValues = [1,6,7]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong>\nRegardless of how Alice plays, Bob will be able to have more points than Alice.\nFor example, if Alice takes stone 1, Bob can take stone 2, and Alice takes stone 0, Alice will have 6 points to Bob&#39;s 7.\nBob wins.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == aliceValues.length == bobValues.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= aliceValues[i], bobValues[i] &lt;= 100</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"3.6K\", \"totalSubmission\": \"7.6K\", \"totalAcceptedRaw\": 3643, \"totalSubmissionRaw\": 7607, \"acRate\": \"47.9%\"}", "similarQuestions": "[{\"title\": \"Stone Game\", \"titleSlug\": \"stone-game\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stone Game II\", \"titleSlug\": \"stone-game-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stone Game III\", \"titleSlug\": \"stone-game-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game IV\", \"titleSlug\": \"stone-game-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game V\", \"titleSlug\": \"stone-game-v\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game VII\", \"titleSlug\": \"stone-game-vii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1685", "name": "sum-of-absolute-differences-in-a-sorted-array", "content": {"questionId": "1787", "questionFrontendId": "1685", "questionTitle": "Sum of Absolute Differences in a Sorted Array", "questionTitleSlug": "sum-of-absolute-differences-in-a-sorted-array", "content": "<p>You are given an integer array <code>nums</code> sorted in <strong>non-decreasing</strong> order.</p>\n\n<p>Build and return <em>an integer array </em><code>result</code><em> with the same length as </em><code>nums</code><em> such that </em><code>result[i]</code><em> is equal to the <strong>summation of absolute differences</strong> between </em><code>nums[i]</code><em> and all the other elements in the array.</em></p>\n\n<p>In other words, <code>result[i]</code> is equal to <code>sum(|nums[i]-nums[j]|)</code> where <code>0 &lt;= j &lt; nums.length</code> and <code>j != i</code> (<strong>0-indexed</strong>).</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,5]\n<strong>Output:</strong> [4,3,5]\n<strong>Explanation:</strong> Assuming the arrays are 0-indexed, then\nresult[0] = |2-2| + |2-3| + |2-5| = 0 + 1 + 3 = 4,\nresult[1] = |3-2| + |3-3| + |3-5| = 1 + 0 + 2 = 3,\nresult[2] = |5-2| + |5-3| + |5-5| = 3 + 2 + 0 = 5.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,4,6,8,10]\n<strong>Output:</strong> [24,15,13,15,21]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= nums[i + 1] &lt;= 10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"6K\", \"totalSubmission\": \"9.9K\", \"totalAcceptedRaw\": 5971, \"totalSubmissionRaw\": 9891, \"acRate\": \"60.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1664", "name": "ways-to-make-a-fair-array", "content": {"questionId": "1783", "questionFrontendId": "1664", "questionTitle": "Ways to Make a Fair Array", "questionTitleSlug": "ways-to-make-a-fair-array", "content": "<p>You are given an integer array&nbsp;<code>nums</code>. You can choose <strong>exactly one</strong> index (<strong>0-indexed</strong>) and remove the element. Notice that the index of the elements may change after the removal.</p>\n\n<p>For example, if <code>nums = [6,1,7,4,1]</code>:</p>\n\n<ul>\n\t<li>Choosing to remove index <code>1</code> results in <code>nums = [6,7,4,1]</code>.</li>\n\t<li>Choosing to remove index <code>2</code> results in <code>nums = [6,1,4,1]</code>.</li>\n\t<li>Choosing to remove index <code>4</code> results in <code>nums = [6,1,7,4]</code>.</li>\n</ul>\n\n<p>An array is <strong>fair</strong> if the sum of the odd-indexed values equals the sum of the even-indexed values.</p>\n\n<p>Return the <em><strong>number</strong> of indices that you could choose such that after the removal, </em><code>nums</code><em> </em><em>is <strong>fair</strong>. </em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,1,6,4]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong>\nRemove index 0: [1,6,4] -&gt; Even sum: 1 + 4 = 5. Odd sum: 6. Not fair.\nRemove index 1: [2,6,4] -&gt; Even sum: 2 + 4 = 6. Odd sum: 6. Fair.\nRemove index 2: [2,1,4] -&gt; Even sum: 2 + 4 = 6. Odd sum: 1. Not fair.\nRemove index 3: [2,1,6] -&gt; Even sum: 2 + 6 = 8. Odd sum: 1. Not fair.\nThere is 1 index that you can remove to make nums fair.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,1]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>&nbsp;You can remove any index and the remaining array is fair.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong>&nbsp;You cannot make a fair array after removing any index.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"8.4K\", \"totalSubmission\": \"13.9K\", \"totalAcceptedRaw\": 8402, \"totalSubmissionRaw\": 13924, \"acRate\": \"60.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1663", "name": "smallest-string-with-a-given-numeric-value", "content": {"questionId": "1782", "questionFrontendId": "1663", "questionTitle": "Smallest String With A Given Numeric Value", "questionTitleSlug": "smallest-string-with-a-given-numeric-value", "content": "<p>The <strong>numeric value</strong> of a <strong>lowercase character</strong> is defined as its position <code>(1-indexed)</code> in the alphabet, so the numeric value of <code>a</code> is <code>1</code>, the numeric value of <code>b</code> is <code>2</code>, the numeric value of <code>c</code> is <code>3</code>, and so on.</p>\n\n<p>The <strong>numeric value</strong> of a <strong>string</strong> consisting of lowercase characters is defined as the sum of its characters&#39; numeric values. For example, the numeric value of the string <code>&quot;abe&quot;</code> is equal to <code>1 + 2 + 5 = 8</code>.</p>\n\n<p>You are given two integers <code>n</code> and <code>k</code>. Return <em>the <strong>lexicographically smallest string</strong> with <strong>length</strong> equal to <code>n</code> and <strong>numeric value</strong> equal to <code>k</code>.</em></p>\n\n<p>Note that a string <code>x</code> is lexicographically smaller than string <code>y</code> if <code>x</code> comes before <code>y</code> in dictionary order, that is, either <code>x</code> is a prefix of <code>y</code>, or if <code>i</code> is the first position such that <code>x[i] != y[i]</code>, then <code>x[i]</code> comes before <code>y[i]</code> in alphabetic order.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3, k = 27\n<strong>Output:</strong> &quot;aay&quot;\n<strong>Explanation:</strong> The numeric value of the string is 1 + 1 + 25 = 27, and it is the smallest string with such a value and length equal to 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5, k = 73\n<strong>Output:</strong> &quot;aaszz&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>n &lt;= k &lt;= 26 * n</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"9.2K\", \"totalSubmission\": \"15.4K\", \"totalAcceptedRaw\": 9225, \"totalSubmissionRaw\": 15413, \"acRate\": \"59.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1644", "name": "lowest-common-ancestor-of-a-binary-tree-ii", "content": {"questionId": "1780", "questionFrontendId": "1644", "questionTitle": "Lowest Common Ancestor of a Binary Tree II", "questionTitleSlug": "lowest-common-ancestor-of-a-binary-tree-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"2.9K\", \"totalSubmission\": \"5K\", \"totalAcceptedRaw\": 2877, \"totalSubmissionRaw\": 4958, \"acRate\": \"58.0%\"}", "similarQuestions": "[{\"title\": \"Lowest Common Ancestor of a Binary Search Tree\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-search-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree III\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree IV\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "1657", "name": "determine-if-two-strings-are-close", "content": {"questionId": "1777", "questionFrontendId": "1657", "questionTitle": "Determine if Two Strings Are Close", "questionTitleSlug": "determine-if-two-strings-are-close", "content": "<p>Two strings are considered <strong>close</strong> if you can attain one from the other using the following operations:</p>\n\n<ul>\n\t<li>Operation 1: Swap any two <strong>existing</strong> characters.\n\n\t<ul>\n\t\t<li>For example, <code>a<u>b</u>cd<u>e</u> -&gt; a<u>e</u>cd<u>b</u></code></li>\n\t</ul>\n\t</li>\n\t<li>Operation 2: Transform <strong>every</strong> occurrence of one <strong>existing</strong> character into another <strong>existing</strong> character, and do the same with the other character.\n\t<ul>\n\t\t<li>For example, <code><u>aa</u>c<u>abb</u> -&gt; <u>bb</u>c<u>baa</u></code> (all <code>a</code>&#39;s turn into <code>b</code>&#39;s, and all <code>b</code>&#39;s turn into <code>a</code>&#39;s)</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>You can use the operations on either string as many times as necessary.</p>\n\n<p>Given two strings, <code>word1</code> and <code>word2</code>, return <code>true</code><em> if </em><code>word1</code><em> and </em><code>word2</code><em> are <strong>close</strong>, and </em><code>false</code><em> otherwise.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> word1 = &quot;abc&quot;, word2 = &quot;bca&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> You can attain word2 from word1 in 2 operations.\nApply Operation 1: &quot;a<u>bc</u>&quot; -&gt; &quot;a<u>cb</u>&quot;\nApply Operation 1: &quot;<u>a</u>c<u>b</u>&quot; -&gt; &quot;<u>b</u>c<u>a</u>&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> word1 = &quot;a&quot;, word2 = &quot;aa&quot;\n<strong>Output:</strong> false\n<strong>Explanation: </strong>It is impossible to attain word2 from word1, or vice versa, in any number of operations.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> word1 = &quot;cabbba&quot;, word2 = &quot;abbccc&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> You can attain word2 from word1 in 3 operations.\nApply Operation 1: &quot;ca<u>b</u>bb<u>a</u>&quot; -&gt; &quot;ca<u>a</u>bb<u>b</u>&quot;\n<code>Apply Operation 2: &quot;</code><u>c</u>aa<u>bbb</u>&quot; -&gt; &quot;<u>b</u>aa<u>ccc</u>&quot;\nApply Operation 2: &quot;<u>baa</u>ccc&quot; -&gt; &quot;<u>abb</u>ccc&quot;\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> word1 = &quot;cabbba&quot;, word2 = &quot;aabbss&quot;\n<strong>Output:</strong> false\n<strong>Explanation: </strong>It is impossible to attain word2 from word1, or vice versa, in any amount of operations.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word1.length, word2.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>word1</code> and <code>word2</code> contain&nbsp;only lowercase English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"8.4K\", \"totalSubmission\": \"16.6K\", \"totalAcceptedRaw\": 8409, \"totalSubmissionRaw\": 16557, \"acRate\": \"50.8%\"}", "similarQuestions": "[{\"title\": \"Buddy Strings\", \"titleSlug\": \"buddy-strings\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Swaps to Make Strings Equal\", \"titleSlug\": \"minimum-swaps-to-make-strings-equal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Steps to Make Two Strings Anagram\", \"titleSlug\": \"minimum-number-of-steps-to-make-two-strings-anagram\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1658", "name": "minimum-operations-to-reduce-x-to-zero", "content": {"questionId": "1776", "questionFrontendId": "1658", "questionTitle": "Minimum Operations to Reduce X to Zero", "questionTitleSlug": "minimum-operations-to-reduce-x-to-zero", "content": "<p>You are given an integer array <code>nums</code> and an integer <code>x</code>. In one operation, you can either remove the leftmost or the rightmost element from the array <code>nums</code> and subtract its value from <code>x</code>. Note that this <strong>modifies</strong> the array for future operations.</p>\n\n<p>Return <em>the <strong>minimum number</strong> of operations to reduce </em><code>x</code> <em>to <strong>exactly</strong></em> <code>0</code> <em>if it&#39;s possible</em><em>, otherwise, return </em><code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,4,2,3], x = 5\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The optimal solution is to remove the last two elements to reduce x to zero.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,6,7,8,9], x = 4\n<strong>Output:</strong> -1\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,20,1,1,3], x = 10\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The optimal solution is to remove the last three elements and the first two elements (5 operations in total) to reduce x to zero.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= x &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"8.2K\", \"totalSubmission\": \"27.1K\", \"totalAcceptedRaw\": 8188, \"totalSubmissionRaw\": 27074, \"acRate\": \"30.2%\"}", "similarQuestions": "[{\"title\": \"Minimum Size Subarray Sum\", \"titleSlug\": \"minimum-size-subarray-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}, {"name": "Binary Search", "slug": "binary-search"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1634", "name": "add-two-polynomials-represented-as-linked-lists", "content": {"questionId": "1774", "questionFrontendId": "1634", "questionTitle": "Add Two Polynomials Represented as Linked Lists", "questionTitleSlug": "add-two-polynomials-represented-as-linked-lists", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"1.2K\", \"totalSubmission\": \"2.1K\", \"totalAcceptedRaw\": 1178, \"totalSubmissionRaw\": 2102, \"acRate\": \"56.0%\"}", "similarQuestions": "[{\"title\": \"Add Two Numbers\", \"titleSlug\": \"add-two-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Merge Two Sorted Lists\", \"titleSlug\": \"merge-two-sorted-lists\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Two Numbers II\", \"titleSlug\": \"add-two-numbers-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}]}}, {"id": "1648", "name": "sell-diminishing-valued-colored-balls", "content": {"questionId": "1771", "questionFrontendId": "1648", "questionTitle": "Sell Diminishing-Valued Colored Balls", "questionTitleSlug": "sell-diminishing-valued-colored-balls", "content": "<p>You have an <code>inventory</code> of different colored balls, and there is a customer that wants <code>orders</code> balls of <strong>any</strong> color.</p>\n\n<p>The customer weirdly values the colored balls. Each colored ball&#39;s value is the number of balls <strong>of that color&nbsp;</strong>you currently have in your <code>inventory</code>. For example, if you own <code>6</code> yellow balls, the customer would pay <code>6</code> for the first yellow ball. After the transaction, there are only <code>5</code> yellow balls left, so the next yellow ball is then valued at <code>5</code> (i.e., the value of the balls decreases as you sell more to the customer).</p>\n\n<p>You are given an integer array, <code>inventory</code>, where <code>inventory[i]</code> represents the number of balls of the <code>i<sup>th</sup></code> color that you initially own. You are also given an integer <code>orders</code>, which represents the total number of balls that the customer wants. You can sell the balls <strong>in any order</strong>.</p>\n\n<p>Return <em>the <strong>maximum</strong> total value that you can attain after selling </em><code>orders</code><em> colored balls</em>. As the answer may be too large, return it <strong>modulo </strong><code>10<sup>9 </sup>+ 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/05/jj.gif\" style=\"width: 480px; height: 270px;\" />\n<pre>\n<strong>Input:</strong> inventory = [2,5], orders = 4\n<strong>Output:</strong> 14\n<strong>Explanation:</strong> Sell the 1st color 1 time (2) and the 2nd color 3 times (5 + 4 + 3).\nThe maximum total value is 2 + 5 + 4 + 3 = 14.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> inventory = [3,5], orders = 6\n<strong>Output:</strong> 19\n<strong>Explanation: </strong>Sell the 1st color 2 times (3 + 2) and the 2nd color 4 times (5 + 4 + 3 + 2).\nThe maximum total value is 3 + 2 + 5 + 4 + 3 + 2 = 19.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> inventory = [2,8,4,10,6], orders = 20\n<strong>Output:</strong> 110\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> inventory = [1000000000], orders = 1000000000\n<strong>Output:</strong> 21\n<strong>Explanation: </strong>Sell the 1st color 1000000000 times for a total value of 500000000500000000. 500000000500000000 modulo 10<sup>9 </sup>+ 7 = 21.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= inventory.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= inventory[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= orders &lt;= min(sum(inventory[i]), 10<sup>9</sup>)</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"4.9K\", \"totalSubmission\": \"16.1K\", \"totalAcceptedRaw\": 4917, \"totalSubmissionRaw\": 16125, \"acRate\": \"30.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Greedy", "slug": "greedy"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "1647", "name": "minimum-deletions-to-make-character-frequencies-unique", "content": {"questionId": "1770", "questionFrontendId": "1647", "questionTitle": "Minimum Deletions to Make Character Frequencies Unique", "questionTitleSlug": "minimum-deletions-to-make-character-frequencies-unique", "content": "<p>A string <code>s</code> is called <strong>good</strong> if there are no two different characters in <code>s</code> that have the same <strong>frequency</strong>.</p>\n\n<p>Given a string <code>s</code>, return<em> the <strong>minimum</strong> number of characters you need to delete to make </em><code>s</code><em> <strong>good</strong>.</em></p>\n\n<p>The <strong>frequency</strong> of a character in a string is the number of times it appears in the string. For example, in the string <code>&quot;aab&quot;</code>, the <strong>frequency</strong> of <code>&#39;a&#39;</code> is <code>2</code>, while the <strong>frequency</strong> of <code>&#39;b&#39;</code> is <code>1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aab&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> <code>s</code> is already good.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aaabbbcc&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> You can delete two &#39;b&#39;s resulting in the good string &quot;aaabcc&quot;.\nAnother way it to delete one &#39;b&#39; and one &#39;c&#39; resulting in the good string &quot;aaabbc&quot;.</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ceabaacb&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> You can delete both &#39;c&#39;s resulting in the good string &quot;eabaab&quot;.\nNote that we only care about characters that are still in the string at the end (i.e. frequency of 0 is ignored).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code>&nbsp;contains only lowercase English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"10.6K\", \"totalSubmission\": \"19.7K\", \"totalAcceptedRaw\": 10560, \"totalSubmissionRaw\": 19727, \"acRate\": \"53.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "1628", "name": "design-an-expression-tree-with-evaluate-function", "content": {"questionId": "1768", "questionFrontendId": "1628", "questionTitle": "Design an Expression Tree With Evaluate Function", "questionTitleSlug": "design-an-expression-tree-with-evaluate-function", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"1.5K\", \"totalSubmission\": \"1.9K\", \"totalAcceptedRaw\": 1540, \"totalSubmissionRaw\": 1893, \"acRate\": \"81.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Design", "slug": "design"}, {"name": "OOP", "slug": "oop"}]}}, {"id": "1670", "name": "design-front-middle-back-queue", "content": {"questionId": "1767", "questionFrontendId": "1670", "questionTitle": "Design Front Middle Back Queue", "questionTitleSlug": "design-front-middle-back-queue", "content": "<p>Design a queue that supports <code>push</code> and <code>pop</code> operations in the front, middle, and back.</p>\n\n<p>Implement the <code>FrontMiddleBack</code> class:</p>\n\n<ul>\n\t<li><code>FrontMiddleBack()</code> Initializes the queue.</li>\n\t<li><code>void pushFront(int val)</code> Adds <code>val</code> to the <strong>front</strong> of the queue.</li>\n\t<li><code>void pushMiddle(int val)</code> Adds <code>val</code> to the <strong>middle</strong> of the queue.</li>\n\t<li><code>void pushBack(int val)</code> Adds <code>val</code> to the <strong>back</strong> of the queue.</li>\n\t<li><code>int popFront()</code> Removes the <strong>front</strong> element of the queue and returns it. If the queue is empty, return <code>-1</code>.</li>\n\t<li><code>int popMiddle()</code> Removes the <strong>middle</strong> element of the queue and returns it. If the queue is empty, return <code>-1</code>.</li>\n\t<li><code>int popBack()</code> Removes the <strong>back</strong> element of the queue and returns it. If the queue is empty, return <code>-1</code>.</li>\n</ul>\n\n<p><strong>Notice</strong> that when there are <b>two</b> middle position choices, the operation is performed on the <strong>frontmost</strong> middle position choice. For example:</p>\n\n<ul>\n\t<li>Pushing <code>6</code> into the middle of <code>[1, 2, 3, 4, 5]</code> results in <code>[1, 2, <u>6</u>, 3, 4, 5]</code>.</li>\n\t<li>Popping the middle from <code>[1, 2, <u>3</u>, 4, 5, 6]</code> returns <code>3</code> and results in <code>[1, 2, 4, 5, 6]</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong>\n[&quot;FrontMiddleBackQueue&quot;, &quot;pushFront&quot;, &quot;pushBack&quot;, &quot;pushMiddle&quot;, &quot;pushMiddle&quot;, &quot;popFront&quot;, &quot;popMiddle&quot;, &quot;popMiddle&quot;, &quot;popBack&quot;, &quot;popFront&quot;]\n[[], [1], [2], [3], [4], [], [], [], [], []]\n<strong>Output:</strong>\n[null, null, null, null, null, 1, 3, 4, 2, -1]\n\n<strong>Explanation:</strong>\nFrontMiddleBackQueue q = new FrontMiddleBackQueue();\nq.pushFront(1);   // [<u>1</u>]\nq.pushBack(2);    // [1, <u>2</u>]\nq.pushMiddle(3);  // [1, <u>3</u>, 2]\nq.pushMiddle(4);  // [1, <u>4</u>, 3, 2]\nq.popFront();     // return 1 -&gt; [4, 3, 2]\nq.popMiddle();    // return 3 -&gt; [4, 2]\nq.popMiddle();    // return 4 -&gt; [2]\nq.popBack();      // return 2 -&gt; []\nq.popFront();     // return -1 -&gt; [] (The queue is empty)\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= val &lt;= 10<sup>9</sup></code></li>\n\t<li>At most&nbsp;<code>1000</code>&nbsp;calls will be made to&nbsp;<code>pushFront</code>,&nbsp;<code>pushMiddle</code>,&nbsp;<code>pushBack</code>, <code>popFront</code>, <code>popMiddle</code>, and <code>popBack</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"4.6K\", \"totalSubmission\": \"8.4K\", \"totalAcceptedRaw\": 4565, \"totalSubmissionRaw\": 8371, \"acRate\": \"54.5%\"}", "similarQuestions": "[{\"title\": \"Design Circular Deque\", \"titleSlug\": \"design-circular-deque\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Design Circular Queue\", \"titleSlug\": \"design-circular-queue\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}, {"name": "Design", "slug": "design"}, {"name": "Dequeue", "slug": "dequeue"}]}}, {"id": "1669", "name": "merge-in-between-linked-lists", "content": {"questionId": "1765", "questionFrontendId": "1669", "questionTitle": "Merge In Between Linked Lists", "questionTitleSlug": "merge-in-between-linked-lists", "content": "<p>You are given two linked lists: <code>list1</code> and <code>list2</code> of sizes <code>n</code> and <code>m</code> respectively.</p>\n\n<p>Remove <code>list1</code>&#39;s nodes from the <code>a<sup>th</sup></code> node to the <code>b<sup>th</sup></code> node, and put <code>list2</code> in their place.</p>\n\n<p>The blue edges and nodes in the following figure incidate the result:</p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/05/fig1.png\" style=\"height: 130px; width: 504px;\" />\n<p><em>Build the result list and return its head.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/05/merge_linked_list_ex1.png\" style=\"width: 406px; height: 140px;\" />\n<pre>\n<strong>Input:</strong> list1 = [0,1,2,3,4,5], a = 3, b = 4, list2 = [1000000,1000001,1000002]\n<strong>Output:</strong> [0,1,2,1000000,1000001,1000002,5]\n<strong>Explanation:</strong> We remove the nodes 3 and 4 and put the entire list2 in their place. The blue edges and nodes in the above figure indicate the result.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/05/merge_linked_list_ex2.png\" style=\"width: 463px; height: 140px;\" />\n<pre>\n<strong>Input:</strong> list1 = [0,1,2,3,4,5,6], a = 2, b = 5, list2 = [1000000,1000001,1000002,1000003,1000004]\n<strong>Output:</strong> [0,1,1000000,1000001,1000002,1000003,1000004,6]\n<strong>Explanation:</strong> The blue edges and nodes in the above figure indicate the result.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= list1.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= a &lt;= b &lt; list1.length - 1</code></li>\n\t<li><code>1 &lt;= list2.length &lt;= 10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"8.1K\", \"totalSubmission\": \"10.1K\", \"totalAcceptedRaw\": 8087, \"totalSubmissionRaw\": 10052, \"acRate\": \"80.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}]}}, {"id": "1642", "name": "furthest-building-you-can-reach", "content": {"questionId": "1762", "questionFrontendId": "1642", "questionTitle": "Furthest Building You Can Reach", "questionTitleSlug": "furthest-building-you-can-reach", "content": "<p>You are given an integer array <code>heights</code> representing the heights of buildings, some <code>bricks</code>, and some <code>ladders</code>.</p>\n\n<p>You start your journey from building <code>0</code> and move to the next building by possibly using bricks or ladders.</p>\n\n<p>While moving from building <code>i</code> to building <code>i+1</code> (<strong>0-indexed</strong>),</p>\n\n<ul>\n\t<li>If the current building&#39;s height is <strong>greater than or equal</strong> to the next building&#39;s height, you do <strong>not</strong> need a ladder or bricks.</li>\n\t<li>If the current building&#39;s height is <b>less than</b> the next building&#39;s height, you can either use <strong>one ladder</strong> or <code>(h[i+1] - h[i])</code> <strong>bricks</strong>.</li>\n</ul>\n\n<p><em>Return the furthest building index (0-indexed) you can reach if you use the given ladders and bricks optimally.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/27/q4.gif\" style=\"width: 562px; height: 561px;\" />\n<pre>\n<strong>Input:</strong> heights = [4,2,7,6,9,14,12], bricks = 5, ladders = 1\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Starting at building 0, you can follow these steps:\n- Go to building 1 without using ladders nor bricks since 4 &gt;= 2.\n- Go to building 2 using 5 bricks. You must use either bricks or ladders because 2 &lt; 7.\n- Go to building 3 without using ladders nor bricks since 7 &gt;= 6.\n- Go to building 4 using your only ladder. You must use either bricks or ladders because 6 &lt; 9.\nIt is impossible to go beyond building 4 because you do not have any more bricks or ladders.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> heights = [4,12,2,7,3,18,20,3,19], bricks = 10, ladders = 2\n<strong>Output:</strong> 7\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> heights = [14,3,19,3], bricks = 17, ladders = 0\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= heights.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= heights[i] &lt;= 10<sup>6</sup></code></li>\n\t<li><code>0 &lt;= bricks &lt;= 10<sup>9</sup></code></li>\n\t<li><code>0 &lt;= ladders &lt;= heights.length</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11K\", \"totalSubmission\": \"20.9K\", \"totalAcceptedRaw\": 10964, \"totalSubmissionRaw\": 20947, \"acRate\": \"52.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Heap", "slug": "heap"}]}}, {"id": "1641", "name": "count-sorted-vowel-strings", "content": {"questionId": "1761", "questionFrontendId": "1641", "questionTitle": "Count Sorted Vowel Strings", "questionTitleSlug": "count-sorted-vowel-strings", "content": "<p>Given an integer <code>n</code>, return <em>the number of strings of length </em><code>n</code><em> that consist only of vowels (</em><code>a</code><em>, </em><code>e</code><em>, </em><code>i</code><em>, </em><code>o</code><em>, </em><code>u</code><em>) and are <strong>lexicographically sorted</strong>.</em></p>\n\n<p>A string <code>s</code> is <strong>lexicographically sorted</strong> if for all valid <code>i</code>, <code>s[i]</code> is the same as or comes before <code>s[i+1]</code> in the alphabet.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The 5 sorted strings that consist of vowels only are <code>[&quot;a&quot;,&quot;e&quot;,&quot;i&quot;,&quot;o&quot;,&quot;u&quot;].</code>\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> 15\n<strong>Explanation:</strong> The 15 sorted strings that consist of vowels only are\n[&quot;aa&quot;,&quot;ae&quot;,&quot;ai&quot;,&quot;ao&quot;,&quot;au&quot;,&quot;ee&quot;,&quot;ei&quot;,&quot;eo&quot;,&quot;eu&quot;,&quot;ii&quot;,&quot;io&quot;,&quot;iu&quot;,&quot;oo&quot;,&quot;ou&quot;,&quot;uu&quot;].\nNote that &quot;ea&quot; is not a valid string since &#39;e&#39; comes after &#39;a&#39; in the alphabet.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 33\n<strong>Output:</strong> 66045\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 50</code>&nbsp;</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.3K\", \"totalSubmission\": \"19K\", \"totalAcceptedRaw\": 14343, \"totalSubmissionRaw\": 18982, \"acRate\": \"75.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "1613", "name": "find-the-missing-ids", "content": {"questionId": "1759", "questionFrontendId": "1613", "questionTitle": "Find the Missing IDs", "questionTitleSlug": "find-the-missing-ids", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"2K\", \"totalSubmission\": \"2.8K\", \"totalAcceptedRaw\": 2032, \"totalSubmissionRaw\": 2803, \"acRate\": \"72.5%\"}", "similarQuestions": "[{\"title\": \"Report Contiguous Dates\", \"titleSlug\": \"report-contiguous-dates\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find the Start and End Number of Continuous Ranges\", \"titleSlug\": \"find-the-start-and-end-number-of-continuous-ranges\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Transactions per Visit\", \"titleSlug\": \"number-of-transactions-per-visit\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1654", "name": "minimum-jumps-to-reach-home", "content": {"questionId": "1757", "questionFrontendId": "1654", "questionTitle": "Minimum Jumps to Reach Home", "questionTitleSlug": "minimum-jumps-to-reach-home", "content": "<p>A certain bug&#39;s home is on the x-axis at position <code>x</code>. Help them get there from position <code>0</code>.</p>\n\n<p>The bug jumps according to the following rules:</p>\n\n<ul>\n\t<li>It can jump exactly <code>a</code> positions <strong>forward</strong> (to the right).</li>\n\t<li>It can jump exactly <code>b</code> positions <strong>backward</strong> (to the left).</li>\n\t<li>It cannot jump backward twice in a row.</li>\n\t<li>It cannot jump to any <code>forbidden</code> positions.</li>\n</ul>\n\n<p>The bug may jump forward <strong>beyond</strong> its home, but it <strong>cannot jump</strong> to positions numbered with <strong>negative</strong> integers.</p>\n\n<p>Given an array of integers <code>forbidden</code>, where <code>forbidden[i]</code> means that the bug cannot jump to the position <code>forbidden[i]</code>, and integers <code>a</code>, <code>b</code>, and <code>x</code>, return <em>the minimum number of jumps needed for the bug to reach its home</em>. If there is no possible sequence of jumps that lands the bug on position <code>x</code>, return <code>-1.</code></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> forbidden = [14,4,18,1,15], a = 3, b = 15, x = 9\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> 3 jumps forward (0 -&gt; 3 -&gt; 6 -&gt; 9) will get the bug home.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> forbidden = [8,3,16,6,12,20], a = 15, b = 13, x = 11\n<strong>Output:</strong> -1\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> forbidden = [1,6,2,14,5,17,4], a = 16, b = 9, x = 7\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> One jump forward (0 -&gt; 16) then one jump backward (16 -&gt; 7) will get the bug home.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= forbidden.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= a, b, forbidden[i] &lt;= 2000</code></li>\n\t<li><code>0 &lt;= x &lt;= 2000</code></li>\n\t<li>All the elements in <code>forbidden</code> are distinct.</li>\n\t<li>Position <code>x</code> is not forbidden.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"4.7K\", \"totalSubmission\": \"17.5K\", \"totalAcceptedRaw\": 4671, \"totalSubmissionRaw\": 17474, \"acRate\": \"26.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1653", "name": "minimum-deletions-to-make-string-balanced", "content": {"questionId": "1756", "questionFrontendId": "1653", "questionTitle": "Minimum Deletions to Make String Balanced", "questionTitleSlug": "minimum-deletions-to-make-string-balanced", "content": "<p>You are given a string <code>s</code> consisting only of characters <code>&#39;a&#39;</code> and <code>&#39;b&#39;</code>\u200b\u200b\u200b\u200b.</p>\n\n<p>You can delete any number of characters in <code>s</code> to make <code>s</code> <strong>balanced</strong>. <code>s</code> is <strong>balanced</strong> if there is no pair of indices <code>(i,j)</code> such that <code>i &lt; j</code> and <code>s[i] = &#39;b&#39;</code> and <code>s[j]= &#39;a&#39;</code>.</p>\n\n<p>Return <em>the <strong>minimum</strong> number of deletions needed to make </em><code>s</code><em> <strong>balanced</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aababbab&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> You can either:\nDelete the characters at 0-indexed positions 2 and 6 (&quot;aa<u>b</u>abb<u>a</u>b&quot; -&gt; &quot;aaabbb&quot;), or\nDelete the characters at 0-indexed positions 3 and 6 (&quot;aab<u>a</u>bb<u>a</u>b&quot; -&gt; &quot;aabbbb&quot;).\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;bbaaaaabb&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The only solution is to delete the first two characters.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s[i]</code> is&nbsp;<code>&#39;a&#39;</code> or <code>&#39;b&#39;</code>\u200b\u200b.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"5.3K\", \"totalSubmission\": \"10.7K\", \"totalAcceptedRaw\": 5252, \"totalSubmissionRaw\": 10677, \"acRate\": \"49.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1631", "name": "path-with-minimum-effort", "content": {"questionId": "1753", "questionFrontendId": "1631", "questionTitle": "Path With Minimum Effort", "questionTitleSlug": "path-with-minimum-effort", "content": "<p>You are a hiker preparing for an upcoming hike. You are given <code>heights</code>, a 2D array of size <code>rows x columns</code>, where <code>heights[row][col]</code> represents the height of cell <code>(row, col)</code>. You are situated in the top-left cell, <code>(0, 0)</code>, and you hope to travel to the bottom-right cell, <code>(rows-1, columns-1)</code> (i.e.,&nbsp;<strong>0-indexed</strong>). You can move <strong>up</strong>, <strong>down</strong>, <strong>left</strong>, or <strong>right</strong>, and you wish to find a route that requires the minimum <strong>effort</strong>.</p>\n\n<p>A route&#39;s <strong>effort</strong> is the <strong>maximum absolute difference</strong><strong> </strong>in heights between two consecutive cells of the route.</p>\n\n<p>Return <em>the minimum <strong>effort</strong> required to travel from the top-left cell to the bottom-right cell.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/04/ex1.png\" style=\"width: 300px; height: 300px;\" /></p>\n\n<pre>\n<strong>Input:</strong> heights = [[1,2,2],[3,8,2],[5,3,5]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The route of [1,3,5,3,5] has a maximum absolute difference of 2 in consecutive cells.\nThis is better than the route of [1,2,2,2,5], where the maximum absolute difference is 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/04/ex2.png\" style=\"width: 300px; height: 300px;\" /></p>\n\n<pre>\n<strong>Input:</strong> heights = [[1,2,3],[3,8,4],[5,3,5]]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The route of [1,2,3,4,5] has a maximum absolute difference of 1 in consecutive cells, which is better than route [1,3,5,3,5].\n</pre>\n\n<p><strong>Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/04/ex3.png\" style=\"width: 300px; height: 300px;\" />\n<pre>\n<strong>Input:</strong> heights = [[1,2,1,1,1],[1,2,1,2,1],[1,2,1,2,1],[1,2,1,2,1],[1,1,1,2,1]]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> This route does not require any effort.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>rows == heights.length</code></li>\n\t<li><code>columns == heights[i].length</code></li>\n\t<li><code>1 &lt;= rows, columns &lt;= 100</code></li>\n\t<li><code>1 &lt;= heights[i][j] &lt;= 10<sup>6</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"10.3K\", \"totalSubmission\": \"24.6K\", \"totalAcceptedRaw\": 10334, \"totalSubmissionRaw\": 24587, \"acRate\": \"42.0%\"}", "similarQuestions": "[{\"title\": \"Path With Maximum Minimum Value\", \"titleSlug\": \"path-with-maximum-minimum-value\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Union Find", "slug": "union-find"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "1630", "name": "arithmetic-subarrays", "content": {"questionId": "1752", "questionFrontendId": "1630", "questionTitle": "Arithmetic Subarrays", "questionTitleSlug": "arithmetic-subarrays", "content": "<p>A sequence of numbers is called <strong>arithmetic</strong> if it consists of at least two elements, and the difference between every two consecutive elements is the same. More formally, a sequence <code>s</code> is arithmetic if and only if <code>s[i+1] - s[i] == s[1] - s[0] </code>for all valid <code>i</code>.</p>\n\n<p>For example, these are <strong>arithmetic</strong> sequences:</p>\n\n<pre>\n1, 3, 5, 7, 9\n7, 7, 7, 7\n3, -1, -5, -9</pre>\n\n<p>The following sequence is not <strong>arithmetic</strong>:</p>\n\n<pre>\n1, 1, 2, 5, 7</pre>\n\n<p>You are given an array of <code>n</code> integers, <code>nums</code>, and two arrays of <code>m</code> integers each, <code>l</code> and <code>r</code>, representing the <code>m</code> range queries, where the <code>i<sup>th</sup></code> query is the range <code>[l[i], r[i]]</code>. All the arrays are <strong>0-indexed</strong>.</p>\n\n<p>Return <em>a list of </em><code>boolean</code> <em>elements</em> <code>answer</code><em>, where</em> <code>answer[i]</code> <em>is</em> <code>true</code> <em>if the subarray</em> <code>nums[l[i]], nums[l[i]+1], ... , nums[r[i]]</code><em> can be <strong>rearranged</strong> to form an <strong>arithmetic</strong> sequence, and</em> <code>false</code> <em>otherwise.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = <code>[4,6,5,9,3,7]</code>, l = <code>[0,0,2]</code>, r = <code>[2,3,5]</code>\n<strong>Output:</strong> <code>[true,false,true]</code>\n<strong>Explanation:</strong>\nIn the 0<sup>th</sup> query, the subarray is [4,6,5]. This can be rearranged as [6,5,4], which is an arithmetic sequence.\nIn the 1<sup>st</sup> query, the subarray is [4,6,5,9]. This cannot be rearranged as an arithmetic sequence.\nIn the 2<sup>nd</sup> query, the subarray is <code>[5,9,3,7]. This</code> can be rearranged as <code>[3,5,7,9]</code>, which is an arithmetic sequence.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-12,-9,-3,-12,-6,15,20,-25,-20,-15,-10], l = [0,1,6,4,8,7], r = [4,4,9,7,9,10]\n<strong>Output:</strong> [false,true,false,false,true,true]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>m == l.length</code></li>\n\t<li><code>m == r.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 500</code></li>\n\t<li><code>1 &lt;= m &lt;= 500</code></li>\n\t<li><code>0 &lt;= l[i] &lt; r[i] &lt; n</code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"10.9K\", \"totalSubmission\": \"14K\", \"totalAcceptedRaw\": 10922, \"totalSubmissionRaw\": 13968, \"acRate\": \"78.2%\"}", "similarQuestions": "[{\"title\": \"Can Make Arithmetic Progression From Sequence\", \"titleSlug\": \"can-make-arithmetic-progression-from-sequence\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Sort", "slug": "sort"}]}}, {"id": "1612", "name": "check-if-two-expression-trees-are-equivalent", "content": {"questionId": "1750", "questionFrontendId": "1612", "questionTitle": "Check If Two Expression Trees are Equivalent", "questionTitleSlug": "check-if-two-expression-trees-are-equivalent", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"1.9K\", \"totalSubmission\": \"2.7K\", \"totalAcceptedRaw\": 1891, \"totalSubmissionRaw\": 2693, \"acRate\": \"70.2%\"}", "similarQuestions": "[{\"title\": \"Build Binary Expression Tree From Infix Expression\", \"titleSlug\": \"build-binary-expression-tree-from-infix-expression\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "1626", "name": "best-team-with-no-conflicts", "content": {"questionId": "1748", "questionFrontendId": "1626", "questionTitle": "Best Team With No Conflicts", "questionTitleSlug": "best-team-with-no-conflicts", "content": "<p>You are the manager of a basketball team. For the upcoming tournament, you want to choose the team with the highest overall score. The score of the team is the <strong>sum</strong> of scores of all the players in the team.</p>\n\n<p>However, the basketball team is not allowed to have <strong>conflicts</strong>. A <strong>conflict</strong> exists if a younger player has a <strong>strictly higher</strong> score than an older player. A conflict does <strong>not</strong> occur between players of the same age.</p>\n\n<p>Given two lists, <code>scores</code> and <code>ages</code>, where each <code>scores[i]</code> and <code>ages[i]</code> represents the score and age of the <code>i<sup>th</sup></code> player, respectively, return <em>the highest overall score of all possible basketball teams</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> scores = [1,3,5,10,15], ages = [1,2,3,4,5]\n<strong>Output:</strong> 34\n<strong>Explanation:</strong>&nbsp;You can choose all the players.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> scores = [4,5,6,5], ages = [2,1,2,1]\n<strong>Output:</strong> 16\n<strong>Explanation:</strong>&nbsp;It is best to choose the last 3 players. Notice that you are allowed to choose multiple people of the same age.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> scores = [1,2,3,5], ages = [8,9,10,1]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong>&nbsp;It is best to choose the first 3 players. \n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= scores.length, ages.length &lt;= 1000</code></li>\n\t<li><code>scores.length == ages.length</code></li>\n\t<li><code>1 &lt;= scores[i] &lt;= 10<sup>6</sup></code></li>\n\t<li><code>1 &lt;= ages[i] &lt;= 1000</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"7.9K\", \"totalSubmission\": \"21.2K\", \"totalAcceptedRaw\": 7854, \"totalSubmissionRaw\": 21173, \"acRate\": \"37.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1625", "name": "lexicographically-smallest-string-after-applying-operations", "content": {"questionId": "1747", "questionFrontendId": "1625", "questionTitle": "Lexicographically Smallest String After Applying Operations", "questionTitleSlug": "lexicographically-smallest-string-after-applying-operations", "content": "<p>You are given a string <code>s</code> of <strong>even length</strong> consisting of digits from <code>0</code> to <code>9</code>, and two integers <code>a</code> and <code>b</code>.</p>\r\n\r\n<p>You can apply either of the following two operations any number of times and in any order on <code>s</code>:</p>\r\n\r\n<ul>\r\n\t<li>Add <code>a</code> to all odd indices of <code>s</code> <strong>(0-indexed)</strong>. Digits post <code>9</code> are cycled back to <code>0</code>. For example, if <code>s = &quot;3456&quot;</code> and <code>a = 5</code>, <code>s</code> becomes <code>&quot;3951&quot;</code>.</li>\r\n\t<li>Rotate <code>s</code> to the right by <code>b</code> positions. For example, if <code>s = &quot;3456&quot;</code> and <code>b = 1</code>, <code>s</code> becomes <code>&quot;6345&quot;</code>.</li>\r\n</ul>\r\n\r\n<p>Return <em>the <strong>lexicographically smallest</strong> string you can obtain by applying the above operations any number of times on</em> <code>s</code>.</p>\r\n\r\n<p>A string <code>a</code> is lexicographically smaller than a string <code>b</code> (of the same length) if in the first position where <code>a</code> and <code>b</code> differ, string <code>a</code> has a letter that appears earlier in the alphabet than the corresponding letter in <code>b</code>. For example, <code>&quot;0158&quot;</code> is lexicographically smaller than <code>&quot;0190&quot;</code> because the first position they differ is at the third letter, and <code>&#39;5&#39;</code> comes before <code>&#39;9&#39;</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;5525&quot;, a = 9, b = 2\r\n<strong>Output:</strong> &quot;2050&quot;\r\n<strong>Explanation: </strong>We can apply the following operations:\r\nStart:  &quot;5525&quot;\r\nRotate: &quot;2555&quot;\r\nAdd:    &quot;2454&quot;\r\nAdd:    &quot;2353&quot;\r\nRotate: &quot;5323&quot;\r\nAdd:    &quot;5222&quot;\r\n\u200b\u200b\u200b\u200b\u200b\u200b\u200bAdd:    &quot;5121&quot;\r\n\u200b\u200b\u200b\u200b\u200b\u200b\u200bRotate: &quot;2151&quot;\r\n\u200b\u200b\u200b\u200b\u200b\u200b\u200bAdd:    &quot;2050&quot;\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\r\nThere is no way to obtain a string that is lexicographically smaller then &quot;2050&quot;.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;74&quot;, a = 5, b = 1\r\n<strong>Output:</strong> &quot;24&quot;\r\n<strong>Explanation: </strong>We can apply the following operations:\r\nStart:  &quot;74&quot;\r\nRotate: &quot;47&quot;\r\n\u200b\u200b\u200b\u200b\u200b\u200b\u200bAdd:    &quot;42&quot;\r\n\u200b\u200b\u200b\u200b\u200b\u200b\u200bRotate: &quot;24&quot;\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\r\nThere is no way to obtain a string that is lexicographically smaller then &quot;24&quot;.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;0011&quot;, a = 4, b = 2\r\n<strong>Output:</strong> &quot;0011&quot;\r\n<strong>Explanation: </strong>There are no sequence of operations that will give us a lexicographically smaller string than &quot;0011&quot;.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;43987654&quot;, a = 7, b = 3\r\n<strong>Output:</strong> &quot;00553311&quot;\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>2 &lt;= s.length &lt;= 100</code></li>\r\n\t<li><code>s.length</code> is even.</li>\r\n\t<li><code>s</code> consists of digits from <code>0</code> to <code>9</code> only.</li>\r\n\t<li><code>1 &lt;= a &lt;= 9</code></li>\r\n\t<li><code>1 &lt;= b &lt;= s.length - 1</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"5.9K\", \"totalSubmission\": \"9.4K\", \"totalAcceptedRaw\": 5932, \"totalSubmissionRaw\": 9370, \"acRate\": \"63.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1602", "name": "find-nearest-right-node-in-binary-tree", "content": {"questionId": "1745", "questionFrontendId": "1602", "questionTitle": "Find Nearest Right Node in Binary Tree", "questionTitleSlug": "find-nearest-right-node-in-binary-tree", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"7.1K\", \"totalSubmission\": \"9.5K\", \"totalAcceptedRaw\": 7142, \"totalSubmissionRaw\": 9536, \"acRate\": \"74.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1638", "name": "count-substrings-that-differ-by-one-character", "content": {"questionId": "1743", "questionFrontendId": "1638", "questionTitle": "Count Substrings That Differ by One Character", "questionTitleSlug": "count-substrings-that-differ-by-one-character", "content": "<p>Given two strings <code>s</code> and <code>t</code>, find the number of ways you can choose a non-empty substring of <code>s</code> and replace a <strong>single character</strong> by a different character such that the resulting substring is a substring of <code>t</code>. In other words, find the number of substrings in <code>s</code> that differ from some substring in <code>t</code> by <strong>exactly</strong> one character.</p>\n\n<p>For example, the underlined substrings in <code>&quot;<u>compute</u>r&quot;</code> and <code>&quot;<u>computa</u>tion&quot;</code> only differ by the <code>&#39;e&#39;</code>/<code>&#39;a&#39;</code>, so this is a valid way.</p>\n\n<p>Return <em>the number of substrings that satisfy the condition above.</em></p>\n\n<p>A <strong>substring</strong> is a contiguous sequence of characters within a string.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aba&quot;, t = &quot;baba&quot;\n<strong>Output:</strong> 6\n<strong>Explanation: </strong>The following are the pairs of substrings from s and t that differ by exactly 1 character:\n(&quot;<u>a</u>ba&quot;, &quot;<u>b</u>aba&quot;)\n(&quot;<u>a</u>ba&quot;, &quot;ba<u>b</u>a&quot;)\n(&quot;ab<u>a</u>&quot;, &quot;<u>b</u>aba&quot;)\n(&quot;ab<u>a</u>&quot;, &quot;ba<u>b</u>a&quot;)\n(&quot;a<u>b</u>a&quot;, &quot;b<u>a</u>ba&quot;)\n(&quot;a<u>b</u>a&quot;, &quot;bab<u>a</u>&quot;)\nThe underlined portions are the substrings that are chosen from s and t.\n</pre>\n\u200b\u200b<strong>Example 2:</strong>\n\n<pre>\n<strong>Input:</strong> s = &quot;ab&quot;, t = &quot;bb&quot;\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>The following are the pairs of substrings from s and t that differ by 1 character:\n(&quot;<u>a</u>b&quot;, &quot;<u>b</u>b&quot;)\n(&quot;<u>a</u>b&quot;, &quot;b<u>b</u>&quot;)\n(&quot;<u>ab</u>&quot;, &quot;<u>bb</u>&quot;)\n\u200b\u200b\u200b\u200bThe underlined portions are the substrings that are chosen from s and t.\n</pre>\n<strong>Example 3:</strong>\n\n<pre>\n<strong>Input:</strong> s = &quot;a&quot;, t = &quot;a&quot;\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abe&quot;, t = &quot;bbc&quot;\n<strong>Output:</strong> 10\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length, t.length &lt;= 100</code></li>\n\t<li><code>s</code> and <code>t</code> consist of lowercase English letters only.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"5.2K\", \"totalSubmission\": \"7.7K\", \"totalAcceptedRaw\": 5172, \"totalSubmissionRaw\": 7674, \"acRate\": \"67.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "String", "slug": "string"}, {"name": "Trie", "slug": "trie"}, {"name": "Rolling Hash", "slug": "rolling-hash"}]}}, {"id": "1637", "name": "widest-vertical-area-between-two-points-containing-no-points", "content": {"questionId": "1742", "questionFrontendId": "1637", "questionTitle": "Widest Vertical Area Between Two Points Containing No Points", "questionTitleSlug": "widest-vertical-area-between-two-points-containing-no-points", "content": "<p>Given <code>n</code> <code>points</code> on a 2D plane where <code>points[i] = [x<sub>i</sub>, y<sub>i</sub>]</code>, Return<em>&nbsp;the <strong>widest vertical area</strong> between two points such that no points are inside the area.</em></p>\n\n<p>A <strong>vertical area</strong> is an area of fixed-width extending infinitely along the y-axis (i.e., infinite height). The <strong>widest vertical area</strong> is the one with the maximum width.</p>\n\n<p>Note that points <strong>on the edge</strong> of a vertical area <strong>are not</strong> considered included in the area.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/19/points3.png\" style=\"width: 276px; height: 371px;\" />\u200b\n<pre>\n<strong>Input:</strong> points = [[8,7],[9,9],[7,4],[9,7]]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> Both the red and the blue area are optimal.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[3,1],[9,0],[1,0],[1,4],[5,3],[8,8]]\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == points.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>points[i].length == 2</code></li>\n\t<li><code>0 &lt;= x<sub>i</sub>, y<sub>i</sub>&nbsp;&lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"9.1K\", \"totalSubmission\": \"10.9K\", \"totalAcceptedRaw\": 9119, \"totalSubmissionRaw\": 10851, \"acRate\": \"84.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Sort", "slug": "sort"}]}}, {"id": "1616", "name": "split-two-strings-to-make-palindrome", "content": {"questionId": "1739", "questionFrontendId": "1616", "questionTitle": "Split Two Strings to Make Palindrome", "questionTitleSlug": "split-two-strings-to-make-palindrome", "content": "<p>You are given two strings <code>a</code> and <code>b</code> of the same length. Choose an index and split both strings <strong>at the same index</strong>, splitting <code>a</code> into two strings: <code>a<sub>prefix</sub></code> and <code>a<sub>suffix</sub></code> where <code>a = a<sub>prefix</sub> + a<sub>suffix</sub></code>, and splitting <code>b</code> into two strings: <code>b<sub>prefix</sub></code> and <code>b<sub>suffix</sub></code> where <code>b = b<sub>prefix</sub> + b<sub>suffix</sub></code>. Check if <code>a<sub>prefix</sub> + b<sub>suffix</sub></code> or <code>b<sub>prefix</sub> + a<sub>suffix</sub></code> forms a palindrome.</p>\n\n<p>When you split a string <code>s</code> into <code>s<sub>prefix</sub></code> and <code>s<sub>suffix</sub></code>, either <code>s<sub>suffix</sub></code> or <code>s<sub>prefix</sub></code> is allowed to be empty. For example, if <code>s = &quot;abc&quot;</code>, then <code>&quot;&quot; + &quot;abc&quot;</code>, <code>&quot;a&quot; + &quot;bc&quot;</code>, <code>&quot;ab&quot; + &quot;c&quot;</code> , and <code>&quot;abc&quot; + &quot;&quot;</code> are valid splits.</p>\n\n<p>Return <code>true</code><em> if it is possible to form</em><em> a palindrome string, otherwise return </em><code>false</code>.</p>\n\n<p><strong>Notice</strong> that&nbsp;<code>x + y</code> denotes the concatenation of strings <code>x</code> and <code>y</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = &quot;x&quot;, b = &quot;y&quot;\n<strong>Output:</strong> true\n<strong>Explaination:</strong> If either a or b are palindromes the answer is true since you can split in the following way:\na<sub>prefix</sub> = &quot;&quot;, a<sub>suffix</sub> = &quot;x&quot;\nb<sub>prefix</sub> = &quot;&quot;, b<sub>suffix</sub> = &quot;y&quot;\nThen, a<sub>prefix</sub> + b<sub>suffix</sub> = &quot;&quot; + &quot;y&quot; = &quot;y&quot;, which is a palindrome.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = &quot;abdef&quot;, b = &quot;fecab&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = &quot;ulacfd&quot;, b = &quot;jizalu&quot;\n<strong>Output:</strong> true\n<strong>Explaination:</strong> Split them at index 3:\na<sub>prefix</sub> = &quot;ula&quot;, a<sub>suffix</sub> = &quot;cfd&quot;\nb<sub>prefix</sub> = &quot;jiz&quot;, b<sub>suffix</sub> = &quot;alu&quot;\nThen, a<sub>prefix</sub> + b<sub>suffix</sub> = &quot;ula&quot; + &quot;alu&quot; = &quot;ulaalu&quot;, which is a palindrome.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = &quot;xbdef&quot;, b = &quot;xecab&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= a.length, b.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>a.length == b.length</code></li>\n\t<li><code>a</code> and <code>b</code> consist of lowercase English letters</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"10.6K\", \"totalSubmission\": \"29.1K\", \"totalAcceptedRaw\": 10596, \"totalSubmissionRaw\": 29130, \"acRate\": \"36.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}, {"name": "String", "slug": "string"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1615", "name": "maximal-network-rank", "content": {"questionId": "1738", "questionFrontendId": "1615", "questionTitle": "Maximal Network Rank", "questionTitleSlug": "maximal-network-rank", "content": "<p>There is an infrastructure of <code>n</code> cities with some number of <code>roads</code> connecting these cities. Each <code>roads[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> indicates that there is a bidirectional road between cities <code>a<sub>i</sub></code> and <code>b<sub>i</sub></code>.</p>\n\n<p>The <strong>network rank</strong><em> </em>of <strong>two different cities</strong> is defined as the total number of&nbsp;<strong>directly</strong> connected roads to <strong>either</strong> city. If a road is directly connected to both cities, it is only counted <strong>once</strong>.</p>\n\n<p>The <strong>maximal network rank </strong>of the infrastructure is the <strong>maximum network rank</strong> of all pairs of different cities.</p>\n\n<p>Given the integer <code>n</code> and the array <code>roads</code>, return <em>the <strong>maximal network rank</strong> of the entire infrastructure</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/21/ex1.png\" style=\"width: 292px; height: 172px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, roads = [[0,1],[0,3],[1,2],[1,3]]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The network rank of cities 0 and 1 is 4 as there are 4 roads that are connected to either 0 or 1. The road between 0 and 1 is only counted once.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/21/ex2.png\" style=\"width: 292px; height: 172px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5, roads = [[0,1],[0,3],[1,2],[1,3],[2,3],[2,4]]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> There are 5 roads that are connected to cities 1 or 2.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 8, roads = [[0,1],[1,2],[2,3],[2,4],[5,6],[5,7]]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The network rank of 2 and 5 is 5. Notice that all the cities do not have to be connected.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 100</code></li>\n\t<li><code>0 &lt;= roads.length &lt;= n * (n - 1) / 2</code></li>\n\t<li><code>roads[i].length == 2</code></li>\n\t<li><code>0 &lt;= a<sub>i</sub>, b<sub>i</sub>&nbsp;&lt;= n-1</code></li>\n\t<li><code>a<sub>i</sub>&nbsp;!=&nbsp;b<sub>i</sub></code></li>\n\t<li>Each&nbsp;pair of cities has <strong>at most one</strong> road connecting them.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"10.4K\", \"totalSubmission\": \"20.2K\", \"totalAcceptedRaw\": 10365, \"totalSubmissionRaw\": 20163, \"acRate\": \"51.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Graph", "slug": "graph"}]}}, {"id": "1596", "name": "the-most-frequently-ordered-products-for-each-customer", "content": {"questionId": "1735", "questionFrontendId": "1596", "questionTitle": "The Most Frequently Ordered Products for Each Customer", "questionTitleSlug": "the-most-frequently-ordered-products-for-each-customer", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"3.6K\", \"totalSubmission\": \"4.3K\", \"totalAcceptedRaw\": 3555, \"totalSubmissionRaw\": 4263, \"acRate\": \"83.4%\"}", "similarQuestions": "[{\"title\": \"The Most Recent Orders for Each Product\", \"titleSlug\": \"the-most-recent-orders-for-each-product\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1609", "name": "even-odd-tree", "content": {"questionId": "1731", "questionFrontendId": "1609", "questionTitle": "Even Odd Tree", "questionTitleSlug": "even-odd-tree", "content": "<p>A binary tree is named <strong>Even-Odd</strong> if it meets the following conditions:</p>\n\n<ul>\n\t<li>The root of the binary tree is at level index <code>0</code>, its children are at level index <code>1</code>, their children are at level index <code>2</code>, etc.</li>\n\t<li>For every <strong>even-indexed</strong> level, all nodes at the level have <strong>odd</strong> integer values in <strong>strictly increasing</strong> order (from left to right).</li>\n\t<li>For every <b>odd-indexed</b> level, all nodes at the level have <b>even</b> integer values in <strong>strictly decreasing</strong> order (from left to right).</li>\n</ul>\n\n<p>Given the <code>root</code> of a binary tree, <em>return </em><code>true</code><em> if the binary tree is <strong>Even-Odd</strong>, otherwise return </em><code>false</code><em>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/15/sample_1_1966.png\" style=\"width: 362px; height: 229px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,10,4,3,null,7,9,12,8,6,null,null,2]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The node values on each level are:\nLevel 0: [1]\nLevel 1: [10,4]\nLevel 2: [3,7,9]\nLevel 3: [12,8,6,2]\nSince levels 0 and 2 are all odd and increasing, and levels 1 and 3 are all even and decreasing, the tree is Even-Odd.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/15/sample_2_1966.png\" style=\"width: 363px; height: 167px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> root = [5,4,2,3,3,7]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The node values on each level are:\nLevel 0: [5]\nLevel 1: [4,2]\nLevel 2: [3,3,7]\nNode values in the level 2 must be in strictly increasing order, so the tree is not Even-Odd.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/22/sample_1_333_1966.png\" style=\"width: 363px; height: 167px;\" /></p>\n\n<pre>\n<strong>Input:</strong> root = [5,9,1,3,5,7]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Node values in the level 1 should be even integers.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [11,8,6,1,3,9,11,30,20,18,16,12,10,4,2,17]\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>5</sup>]</code>.</li>\n\t<li><code>1 &lt;= Node.val &lt;= 10<sup>6</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13.4K\", \"totalSubmission\": \"25K\", \"totalAcceptedRaw\": 13367, \"totalSubmissionRaw\": 24996, \"acRate\": \"53.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "1586", "name": "binary-search-tree-iterator-ii", "content": {"questionId": "1729", "questionFrontendId": "1586", "questionTitle": "Binary Search Tree Iterator II", "questionTitleSlug": "binary-search-tree-iterator-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"2K\", \"totalSubmission\": \"3K\", \"totalAcceptedRaw\": 1994, \"totalSubmissionRaw\": 2989, \"acRate\": \"66.7%\"}", "similarQuestions": "[{\"title\": \"Binary Search Tree Iterator\", \"titleSlug\": \"binary-search-tree-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Design", "slug": "design"}]}}, {"id": "1620", "name": "coordinate-with-maximum-network-quality", "content": {"questionId": "1726", "questionFrontendId": "1620", "questionTitle": "Coordinate With Maximum Network Quality", "questionTitleSlug": "coordinate-with-maximum-network-quality", "content": "<p>You are given an array of network towers <code>towers</code> and an integer <code>radius</code>, where <code>towers[i] = [x<sub>i</sub>, y<sub>i</sub>, q<sub>i</sub>]</code> denotes the <code>i<sup>th</sup></code> network tower with location <code>(x<sub>i</sub>, y<sub>i</sub>)</code> and quality factor <code>q<sub>i</sub></code>. All the coordinates are <strong>integral coordinates</strong> on the X-Y plane, and the distance between two coordinates is the <strong>Euclidean distance</strong>.</p>\n\n<p>The integer <code>radius</code> denotes the <strong>maximum distance</strong> in which the tower is <strong>reachable</strong>. The tower is <strong>reachable</strong> if the distance is less than or equal to <code>radius</code>. Outside that distance, the signal becomes garbled, and the tower is <strong>not reachable</strong>.</p>\n\n<p>The signal quality of the <code>i<sup>th</sup></code> tower at a coordinate <code>(x, y)</code> is calculated with the formula <code>&lfloor;q<sub>i</sub> / (1 + d)&rfloor;</code>, where <code>d</code> is the distance between the tower and the coordinate. The <strong>network quality</strong> at a coordinate is the sum of the signal qualities from all the <strong>reachable</strong> towers.</p>\n\n<p>Return <em>the integral coordinate where the <strong>network quality</strong> is maximum</em>. If there are multiple coordinates with the same <strong>network quality</strong>, return <em>the lexicographically minimum coordinate</em>.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>A coordinate <code>(x1, y1)</code> is lexicographically smaller than <code>(x2, y2)</code> if either <code>x1 &lt; x2</code> or <code>x1 == x2</code> and <code>y1 &lt; y2</code>.</li>\n\t<li><code>&lfloor;val&rfloor;</code> is the greatest integer less than or equal to <code>val</code> (the floor function).</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/22/untitled-diagram.png\" style=\"width: 176px; height: 176px;\" />\n<pre>\n<strong>Input:</strong> towers = [[1,2,5],[2,1,7],[3,1,9]], radius = 2\n<strong>Output:</strong> [2,1]\n<strong>Explanation: </strong>\nAt coordinate (2, 1) the total quality is 13\n- Quality of 7 from (2, 1) results in &lfloor;7 / (1 + sqrt(0)&rfloor; = &lfloor;7&rfloor; = 7\n- Quality of 5 from (1, 2) results in &lfloor;5 / (1 + sqrt(2)&rfloor; = &lfloor;2.07&rfloor; = 2\n- Quality of 9 from (3, 1) results in &lfloor;9 / (1 + sqrt(1)&rfloor; = &lfloor;4.5&rfloor; = 4\nNo other coordinate has higher quality.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> towers = [[23,11,21]], radius = 9\n<strong>Output:</strong> [23,11]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> towers = [[1,2,13],[2,1,7],[0,1,9]], radius = 2\n<strong>Output:</strong> [1,2]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> towers = [[2,1,9],[0,1,9]], radius = 2\n<strong>Output:</strong> [0,1]\n<strong>Explanation: </strong>Both (0, 1) and (2, 1) are optimal in terms of quality but (0, 1) is lexicograpically minimal.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= towers.length &lt;= 50</code></li>\n\t<li><code>towers[i].length == 3</code></li>\n\t<li><code>0 &lt;= x<sub>i</sub>, y<sub>i</sub>, q<sub>i</sub> &lt;= 50</code></li>\n\t<li><code>1 &lt;= radius &lt;= 50</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"4.5K\", \"totalSubmission\": \"12K\", \"totalAcceptedRaw\": 4463, \"totalSubmissionRaw\": 11993, \"acRate\": \"37.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1621", "name": "number-of-sets-of-k-non-overlapping-line-segments", "content": {"questionId": "1725", "questionFrontendId": "1621", "questionTitle": "Number of Sets of K Non-Overlapping Line Segments", "questionTitleSlug": "number-of-sets-of-k-non-overlapping-line-segments", "content": "<p>Given <code>n</code> points on a 1-D plane, where the <code>i<sup>th</sup></code> point (from <code>0</code> to <code>n-1</code>) is at <code>x = i</code>, find the number of ways we can draw <strong>exactly</strong> <code>k</code> <strong>non-overlapping</strong> line segments such that each segment covers two or more points. The endpoints of each segment must have <strong>integral coordinates</strong>. The <code>k</code> line segments <strong>do not</strong> have to cover all <code>n</code> points, and they are <strong>allowed</strong> to share endpoints.</p>\r\n\r\n<p>Return <em>the number of ways we can draw </em><code>k</code><em> non-overlapping line segments</em><em>.</em>&nbsp;Since this number can be huge, return it <strong>modulo</strong> <code>10<sup>9</sup> + 7</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/07/ex1.png\" style=\"width: 179px; height: 222px;\" />\r\n<pre>\r\n<strong>Input:</strong> n = 4, k = 2\r\n<strong>Output:</strong> 5\r\n<strong>Explanation: \r\n</strong>The two line segments are shown in red and blue.\r\nThe image above shows the 5 different ways {(0,2),(2,3)}, {(0,1),(1,3)}, {(0,1),(2,3)}, {(1,2),(2,3)}, {(0,1),(1,2)}.</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 3, k = 1\r\n<strong>Output:</strong> 3\r\n<strong>Explanation: </strong>The 3 ways are {(0,1)}, {(0,2)}, {(1,2)}.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 30, k = 7\r\n<strong>Output:</strong> 796297179\r\n<strong>Explanation: </strong>The total number of possible ways to draw 7 line segments is 3796297200. Taking this number modulo 10<sup>9</sup> + 7 gives us 796297179.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 5, k = 3\r\n<strong>Output:</strong> 7\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 3, k = 2\r\n<strong>Output:</strong> 1</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>2 &lt;= n &lt;= 1000</code></li>\r\n\t<li><code>1 &lt;= k &lt;= n-1</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"3.5K\", \"totalSubmission\": \"8.5K\", \"totalAcceptedRaw\": 3525, \"totalSubmissionRaw\": 8536, \"acRate\": \"41.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1600", "name": "throne-inheritance", "content": {"questionId": "1722", "questionFrontendId": "1600", "questionTitle": "Throne Inheritance", "questionTitleSlug": "throne-inheritance", "content": "<p>A kingdom consists of a king, his children, his grandchildren, and so on. Every once in a while, someone in the family dies or a child is born.</p>\n\n<p>The kingdom has a well-defined order of inheritance that consists of the king as the first member. Let&#39;s define the recursive function <code>Successor(x, curOrder)</code>, which given a person <code>x</code> and the inheritance order so far, returns who should be the next person after <code>x</code> in the order of inheritance.</p>\n\n<pre>\nSuccessor(x, curOrder):\n    if x has no children or all of x&#39;s children are in curOrder:\n        if x is the king return null\n        else return Successor(x&#39;s parent, curOrder)\n    else return x&#39;s oldest child who&#39;s not in curOrder\n</pre>\n\n<p>For example, assume we have a kingdom that consists of the king, his children Alice and Bob (Alice is older than Bob), and finally Alice&#39;s son Jack.</p>\n\n<ol>\n\t<li>In the beginning, <code>curOrder</code> will be <code>[&quot;king&quot;]</code>.</li>\n\t<li>Calling <code>Successor(king, curOrder)</code> will return Alice, so we append to <code>curOrder</code> to get <code>[&quot;king&quot;, &quot;Alice&quot;]</code>.</li>\n\t<li>Calling <code>Successor(Alice, curOrder)</code> will return Jack, so we append to <code>curOrder</code> to get <code>[&quot;king&quot;, &quot;Alice&quot;, &quot;Jack&quot;]</code>.</li>\n\t<li>Calling <code>Successor(Jack, curOrder)</code> will return Bob, so we append to <code>curOrder</code> to get <code>[&quot;king&quot;, &quot;Alice&quot;, &quot;Jack&quot;, &quot;Bob&quot;]</code>.</li>\n\t<li>Calling <code>Successor(Bob, curOrder)</code> will return <code>null</code>. Thus the order of inheritance will be <code>[&quot;king&quot;, &quot;Alice&quot;, &quot;Jack&quot;, &quot;Bob&quot;]</code>.</li>\n</ol>\n\n<p>Using the above function, we can always obtain a unique order of inheritance.</p>\n\n<p>Implement the <code>ThroneInheritance</code> class:</p>\n\n<ul>\n\t<li><code>ThroneInheritance(string kingName)</code> Initializes an object of the <code>ThroneInheritance</code> class. The name of the king is given as part of the constructor.</li>\n\t<li><code>void birth(string parentName, string childName)</code> Indicates that <code>parentName</code> gave birth to <code>childName</code>.</li>\n\t<li><code>void death(string name)</code> Indicates the death of <code>name</code>. The death of the person doesn&#39;t affect the <code>Successor</code> function nor the current inheritance order. You can treat it as just marking the person as dead.</li>\n\t<li><code>string[] getInheritanceOrder()</code> Returns a list representing the current order of inheritance <strong>excluding</strong> dead people.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;ThroneInheritance&quot;, &quot;birth&quot;, &quot;birth&quot;, &quot;birth&quot;, &quot;birth&quot;, &quot;birth&quot;, &quot;birth&quot;, &quot;getInheritanceOrder&quot;, &quot;death&quot;, &quot;getInheritanceOrder&quot;]\n[[&quot;king&quot;], [&quot;king&quot;, &quot;andy&quot;], [&quot;king&quot;, &quot;bob&quot;], [&quot;king&quot;, &quot;catherine&quot;], [&quot;andy&quot;, &quot;matthew&quot;], [&quot;bob&quot;, &quot;alex&quot;], [&quot;bob&quot;, &quot;asha&quot;], [null], [&quot;bob&quot;], [null]]\n<strong>Output</strong>\n[null, null, null, null, null, null, null, [&quot;king&quot;, &quot;andy&quot;, &quot;matthew&quot;, &quot;bob&quot;, &quot;alex&quot;, &quot;asha&quot;, &quot;catherine&quot;], null, [&quot;king&quot;, &quot;andy&quot;, &quot;matthew&quot;, &quot;alex&quot;, &quot;asha&quot;, &quot;catherine&quot;]]\n\n<strong>Explanation</strong>\nThroneInheritance t= new ThroneInheritance(&quot;king&quot;); // order: <strong>king</strong>\nt.birth(&quot;king&quot;, &quot;andy&quot;); // order: king &gt; <strong>andy</strong>\nt.birth(&quot;king&quot;, &quot;bob&quot;); // order: king &gt; andy &gt; <strong>bob</strong>\nt.birth(&quot;king&quot;, &quot;catherine&quot;); // order: king &gt; andy &gt; bob &gt; <strong>catherine</strong>\nt.birth(&quot;andy&quot;, &quot;matthew&quot;); // order: king &gt; andy &gt; <strong>matthew</strong> &gt; bob &gt; catherine\nt.birth(&quot;bob&quot;, &quot;alex&quot;); // order: king &gt; andy &gt; matthew &gt; bob &gt; <strong>alex</strong> &gt; catherine\nt.birth(&quot;bob&quot;, &quot;asha&quot;); // order: king &gt; andy &gt; matthew &gt; bob &gt; alex &gt; <strong>asha</strong> &gt; catherine\nt.getInheritanceOrder(); // return [&quot;king&quot;, &quot;andy&quot;, &quot;matthew&quot;, &quot;bob&quot;, &quot;alex&quot;, &quot;asha&quot;, &quot;catherine&quot;]\nt.death(&quot;bob&quot;); // order: king &gt; andy &gt; matthew &gt; <strong><s>bob</s></strong> &gt; alex &gt; asha &gt; catherine\nt.getInheritanceOrder(); // return [&quot;king&quot;, &quot;andy&quot;, &quot;matthew&quot;, &quot;alex&quot;, &quot;asha&quot;, &quot;catherine&quot;]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= kingName.length, parentName.length, childName.length, name.length &lt;= 15</code></li>\n\t<li><code>kingName</code>, <code>parentName</code>, <code>childName</code>, and <code>name</code> consist of lowercase English letters only.</li>\n\t<li>All arguments <code>childName</code> and <code>kingName</code> are <strong>distinct</strong>.</li>\n\t<li>All <code>name</code> arguments of <code>death</code> will be passed to either the constructor or as <code>childName</code> to <code>birth</code> first.</li>\n\t<li>For each call to&nbsp;<code>birth(parentName, childName)</code>, it is guaranteed that&nbsp;<code>parentName</code> is alive.</li>\n\t<li>At most <code>10<sup>5</sup></code> calls will be made to <code>birth</code> and <code>death</code>.</li>\n\t<li>At most <code>10</code> calls will be made to <code>getInheritanceOrder</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"6.9K\", \"totalSubmission\": \"11.6K\", \"totalAcceptedRaw\": 6897, \"totalSubmissionRaw\": 11616, \"acRate\": \"59.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Design", "slug": "design"}]}}, {"id": "1599", "name": "maximum-profit-of-operating-a-centennial-wheel", "content": {"questionId": "1721", "questionFrontendId": "1599", "questionTitle": "Maximum Profit of Operating a Centennial Wheel", "questionTitleSlug": "maximum-profit-of-operating-a-centennial-wheel", "content": "<p>You are the operator of a Centennial Wheel that has <strong>four gondolas</strong>, and each gondola has room for <strong>up</strong> <strong>to</strong> <strong>four people</strong>. You have the ability to rotate the gondolas <strong>counterclockwise</strong>, which costs you <code>runningCost</code> dollars.</p>\n\n<p>You are given an array <code>customers</code> of length <code>n</code> where <code>customers[i]</code> is the number of new customers arriving just before the <code>i<sup>th</sup></code> rotation (0-indexed). This means you <strong>must rotate the wheel </strong><code>i</code><strong> times before the </strong><code>customers[i]</code><strong> customers arrive</strong>. <strong>You cannot make customers wait if there is room in the gondola</strong>. Each customer pays <code>boardingCost</code> dollars when they board on the gondola closest to the ground and will exit once that gondola reaches the ground again.</p>\n\n<p>You can stop the wheel at any time, including <strong>before</strong> <strong>serving</strong> <strong>all</strong> <strong>customers</strong>. If you decide to stop serving customers, <strong>all subsequent rotations are free</strong> in order to get all the customers down safely. Note that if there are currently more than four customers waiting at the wheel, only four will board the gondola, and the rest will wait <strong>for the next rotation</strong>.</p>\n\n<p>Return<em> the minimum number of rotations you need to perform to maximize your profit.</em> If there is <strong>no scenario</strong> where the profit is positive, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/09/wheeldiagram12.png\" style=\"width: 906px; height: 291px;\" />\n<pre>\n<strong>Input:</strong> customers = [8,3], boardingCost = 5, runningCost = 6\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The numbers written on the gondolas are the number of people currently there.\n1. 8 customers arrive, 4 board and 4 wait for the next gondola, the wheel rotates. Current profit is 4 * $5 - 1 * $6 = $14.\n2. 3 customers arrive, the 4 waiting board the wheel and the other 3 wait, the wheel rotates. Current profit is 8 * $5 - 2 * $6 = $28.\n3. The final 3 customers board the gondola, the wheel rotates. Current profit is 11 * $5 - 3 * $6 = $37.\nThe highest profit was $37 after rotating the wheel 3 times.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> customers = [10,9,6], boardingCost = 6, runningCost = 4\n<strong>Output:</strong> 7\n<strong>Explanation:</strong>\n1. 10 customers arrive, 4 board and 6 wait for the next gondola, the wheel rotates. Current profit is 4 * $6 - 1 * $4 = $20.\n2. 9 customers arrive, 4 board and 11 wait (2 originally waiting, 9 newly waiting), the wheel rotates. Current profit is 8 * $6 - 2 * $4 = $40.\n3. The final 6 customers arrive, 4 board and 13 wait, the wheel rotates. Current profit is 12 * $6 - 3 * $4 = $60.\n4. 4 board and 9 wait, the wheel rotates. Current profit is 16 * $6 - 4 * $4 = $80.\n5. 4 board and 5 wait, the wheel rotates. Current profit is 20 * $6 - 5 * $4 = $100.\n6. 4 board and 1 waits, the wheel rotates. Current profit is 24 * $6 - 6 * $4 = $120.\n7. 1 boards, the wheel rotates. Current profit is 25 * $6 - 7 * $4 = $122.\nThe highest profit was $122 after rotating the wheel 7 times.\n\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> customers = [3,4,0,5,1], boardingCost = 1, runningCost = 92\n<strong>Output:</strong> -1\n<strong>Explanation:</strong>\n1. 3 customers arrive, 3 board and 0 wait, the wheel rotates. Current profit is 3 * $1 - 1 * $92 = -$89.\n2. 4 customers arrive, 4 board and 0 wait, the wheel rotates. Current profit is 7 * $1 - 2 * $92 = -$177.\n3. 0 customers arrive, 0 board and 0 wait, the wheel rotates. Current profit is 7 * $1 - 3 * $92 = -$269.\n4. 5 customers arrive, 4 board and 1 waits, the wheel rotates. Current profit is 11 * $1 - 4 * $92 = -$357.\n5. 1 customer arrives, 2 board and 0 wait, the wheel rotates. Current profit is 13 * $1 - 5 * $92 = -$447.\nThe profit was never positive, so return -1.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> customers = [10,10,6,4,7], boardingCost = 3, runningCost = 8\n<strong>Output:</strong> 9\n<strong>Explanation:</strong>\n1. 10 customers arrive, 4 board and 6 wait, the wheel rotates. Current profit is 4 * $3 - 1 * $8 = $4.\n2. 10 customers arrive, 4 board and 12 wait, the wheel rotates. Current profit is 8 * $3 - 2 * $8 = $8.\n3. 6 customers arrive, 4 board and 14 wait, the wheel rotates. Current profit is 12 * $3 - 3 * $8 = $12.\n4. 4 customers arrive, 4 board and 14 wait, the wheel rotates. Current profit is 16 * $3 - 4 * $8 = $16.\n5. 7 customers arrive, 4 board and 17 wait, the wheel rotates. Current profit is 20 * $3 - 5 * $8 = $20.\n6. 4 board and 13 wait, the wheel rotates. Current profit is 24 * $3 - 6 * $8 = $24.\n7. 4 board and 9 wait, the wheel rotates. Current profit is 28 * $3 - 7 * $8 = $28.\n8. 4 board and 5 wait, the wheel rotates. Current profit is 32 * $3 - 8 * $8 = $32.\n9. 4 board and 1 waits, the wheel rotates. Current profit is 36 * $3 - 9 * $8 = $36.\n10. 1 board and 0 wait, the wheel rotates. Current profit is 37 * $3 - 10 * $8 = $31.\nThe highest profit was $36 after rotating the wheel 9 times.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == customers.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= customers[i] &lt;= 50</code></li>\n\t<li><code>1 &lt;= boardingCost, runningCost &lt;= 100</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"7.7K\", \"totalSubmission\": \"17.7K\", \"totalAcceptedRaw\": 7681, \"totalSubmissionRaw\": 17724, \"acRate\": \"43.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1580", "name": "put-boxes-into-the-warehouse-ii", "content": {"questionId": "1719", "questionFrontendId": "1580", "questionTitle": "Put Boxes Into the Warehouse II", "questionTitleSlug": "put-boxes-into-the-warehouse-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"1.2K\", \"totalSubmission\": \"1.9K\", \"totalAcceptedRaw\": 1208, \"totalSubmissionRaw\": 1921, \"acRate\": \"62.9%\"}", "similarQuestions": "[{\"title\": \"Put Boxes Into the Warehouse I\", \"titleSlug\": \"put-boxes-into-the-warehouse-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1594", "name": "maximum-non-negative-product-in-a-matrix", "content": {"questionId": "1716", "questionFrontendId": "1594", "questionTitle": "Maximum Non Negative Product in a Matrix", "questionTitleSlug": "maximum-non-negative-product-in-a-matrix", "content": "<p>You are given a&nbsp;<code>rows x cols</code>&nbsp;matrix&nbsp;<code>grid</code>.&nbsp;Initially, you&nbsp;are located at the top-left&nbsp;corner <code>(0, 0)</code>,&nbsp;and in each step, you can only <strong>move right&nbsp;or&nbsp;down</strong> in the matrix.</p>\n\n<p>Among all possible paths starting from the top-left corner&nbsp;<code>(0, 0)</code>&nbsp;and ending in the bottom-right corner&nbsp;<code>(rows - 1, cols - 1)</code>, find the path with the&nbsp;<strong>maximum non-negative product</strong>. The product of a path is the product of all integers in the grid cells visited along the path.</p>\n\n<p>Return the&nbsp;<em>maximum non-negative product&nbsp;<strong>modulo</strong>&nbsp;</em><code>10<sup>9</sup>&nbsp;+ 7</code>.&nbsp;<em>If the maximum product is <strong>negative</strong> return&nbsp;</em><code>-1</code>.</p>\n\n<p><strong>Notice that the modulo is performed after getting the maximum product.</strong></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[-1,-2,-3],\n&nbsp;              [-2,-3,-3],\n&nbsp;              [-3,-3,-2]]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> It&#39;s not possible to get non-negative product in the path from (0, 0) to (2, 2), so return -1.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[<strong>1</strong>,-2,1],\n&nbsp;              [<strong>1</strong>,<strong>-2</strong>,1],\n&nbsp;              [3,<strong>-4</strong>,<strong>1</strong>]]\n<strong>Output:</strong> 8\n<strong>Explanation:</strong> Maximum non-negative product is in bold (1 * 1 * -2 * -4 * 1 = 8).\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[<strong>1</strong>, 3],\n&nbsp;              [<strong>0</strong>,<strong>-4</strong>]]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Maximum non-negative product is in bold (1 * 0 * -4 = 0).\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[ <strong>1</strong>, 4,4,0],\n&nbsp;              [<strong>-2</strong>, 0,0,1],\n&nbsp;              [ <strong>1</strong>,<strong>-1</strong>,<strong>1</strong>,<strong>1</strong>]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Maximum non-negative product is in bold (1 * -2 * 1 * -1 * 1 * 1 = 2).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= rows, cols &lt;= 15</code></li>\n\t<li><code>-4 &lt;= grid[i][j] &lt;= 4</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"9.4K\", \"totalSubmission\": \"29.3K\", \"totalAcceptedRaw\": 9351, \"totalSubmissionRaw\": 29342, \"acRate\": \"31.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1593", "name": "split-a-string-into-the-max-number-of-unique-substrings", "content": {"questionId": "1715", "questionFrontendId": "1593", "questionTitle": "Split a String Into the Max Number of Unique Substrings", "questionTitleSlug": "split-a-string-into-the-max-number-of-unique-substrings", "content": "<p>Given a string&nbsp;<code>s</code><var>,</var>&nbsp;return <em>the maximum&nbsp;number of unique substrings that the given string can be split into</em>.</p>\n\n<p>You can split string&nbsp;<code>s</code> into any list of&nbsp;<strong>non-empty substrings</strong>, where the concatenation of the substrings forms the original string.&nbsp;However, you must split the substrings such that all of them are <strong>unique</strong>.</p>\n\n<p>A <strong>substring</strong> is a contiguous sequence of characters within a string.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ababccc&quot;\n<strong>Output:</strong> 5\n<strong>Explanation</strong>: One way to split maximally is [&#39;a&#39;, &#39;b&#39;, &#39;ab&#39;, &#39;c&#39;, &#39;cc&#39;]. Splitting like [&#39;a&#39;, &#39;b&#39;, &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;cc&#39;] is not valid as you have &#39;a&#39; and &#39;b&#39; multiple times.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aba&quot;\n<strong>Output:</strong> 2\n<strong>Explanation</strong>: One way to split maximally is [&#39;a&#39;, &#39;ba&#39;].\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aa&quot;\n<strong>Output:</strong> 1\n<strong>Explanation</strong>: It is impossible to split the string any further.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>\n\t<p><code>1 &lt;= s.length&nbsp;&lt;= 16</code></p>\n\t</li>\n\t<li>\n\t<p><code>s</code> contains&nbsp;only lower case English letters.</p>\n\t</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"10.2K\", \"totalSubmission\": \"21.3K\", \"totalAcceptedRaw\": 10178, \"totalSubmissionRaw\": 21294, \"acRate\": \"47.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "1570", "name": "dot-product-of-two-sparse-vectors", "content": {"questionId": "1713", "questionFrontendId": "1570", "questionTitle": "Dot Product of Two Sparse Vectors", "questionTitleSlug": "dot-product-of-two-sparse-vectors", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"17.7K\", \"totalSubmission\": \"19.3K\", \"totalAcceptedRaw\": 17699, \"totalSubmissionRaw\": 19317, \"acRate\": \"91.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Hash Table", "slug": "hash-table"}, {"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "1605", "name": "find-valid-matrix-given-row-and-column-sums", "content": {"questionId": "1711", "questionFrontendId": "1605", "questionTitle": "Find Valid Matrix Given Row and Column Sums", "questionTitleSlug": "find-valid-matrix-given-row-and-column-sums", "content": "<p>You are given two arrays <code>rowSum</code> and <code>colSum</code> of non-negative integers where <code>rowSum[i]</code> is the sum of the elements in the <code>i<sup>th</sup></code> row and <code>colSum[j]</code> is the sum of the elements of the <code>j<sup>th</sup></code> column of a 2D matrix. In other words, you do not know the elements of the matrix, but you do know the sums of each row and column.</p>\r\n\r\n<p>Find any matrix of <strong>non-negative</strong> integers of size <code>rowSum.length x colSum.length</code> that satisfies the <code>rowSum</code> and <code>colSum</code> requirements.</p>\r\n\r\n<p>Return <em>a 2D array representing <strong>any</strong> matrix that fulfills the requirements</em>. It&#39;s guaranteed that <strong>at least one </strong>matrix that fulfills the requirements exists.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> rowSum = [3,8], colSum = [4,7]\r\n<strong>Output:</strong> [[3,0],\r\n         [1,7]]\r\n<strong>Explanation:</strong>\r\n0th row: 3 + 0 = 0 == rowSum[0]\r\n1st row: 1 + 7 = 8 == rowSum[1]\r\n0th column: 3 + 1 = 4 == colSum[0]\r\n1st column: 0 + 7 = 7 == colSum[1]\r\nThe row and column sums match, and all matrix elements are non-negative.\r\nAnother possible matrix is: [[1,2],\r\n                             [3,5]]\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> rowSum = [5,7,10], colSum = [8,6,8]\r\n<strong>Output:</strong> [[0,5,0],\r\n         [6,1,0],\r\n         [2,0,8]]\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> rowSum = [14,9], colSum = [6,9,8]\r\n<strong>Output:</strong> [[0,9,5],\r\n         [6,0,3]]\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> rowSum = [1,0], colSum = [1]\r\n<strong>Output:</strong> [[1],\r\n         [0]]\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> rowSum = [0], colSum = [0]\r\n<strong>Output:</strong> [[0]]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= rowSum.length, colSum.length &lt;= 500</code></li>\r\n\t<li><code>0 &lt;= rowSum[i], colSum[i] &lt;= 10<sup>8</sup></code></li>\r\n\t<li><code>sum(rows) == sum(columns)</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"7.6K\", \"totalSubmission\": \"9.8K\", \"totalAcceptedRaw\": 7594, \"totalSubmissionRaw\": 9815, \"acRate\": \"77.4%\"}", "similarQuestions": "[{\"title\": \"Reconstruct a 2-Row Binary Matrix\", \"titleSlug\": \"reconstruct-a-2-row-binary-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1604", "name": "alert-using-same-key-card-three-or-more-times-in-a-one-hour-period", "content": {"questionId": "1709", "questionFrontendId": "1604", "questionTitle": "Alert Using Same Key-Card Three or More Times in a One Hour Period", "questionTitleSlug": "alert-using-same-key-card-three-or-more-times-in-a-one-hour-period", "content": "<p>LeetCode company workers use key-cards to unlock office doors. Each time a worker uses their key-card, the security system saves the worker&#39;s name and the time when it was used. The system emits an <strong>alert</strong> if any worker uses the key-card <strong>three or more times</strong> in a one-hour period.</p>\n\n<p>You are given a list of strings <code>keyName</code> and <code>keyTime</code> where <code>[keyName[i], keyTime[i]]</code> corresponds to a person&#39;s name and the time when their key-card was used <strong>in a</strong> <strong>single day</strong>.</p>\n\n<p>Access times are given in the <strong>24-hour time format &quot;HH:MM&quot;</strong>, such as <code>&quot;23:51&quot;</code> and <code>&quot;09:49&quot;</code>.</p>\n\n<p>Return a <em>list of unique worker names who received an alert for frequent keycard use</em>. Sort the names in <strong>ascending order alphabetically</strong>.</p>\n\n<p>Notice that <code>&quot;10:00&quot;</code> - <code>&quot;11:00&quot;</code> is considered to be within a one-hour period, while <code>&quot;22:51&quot;</code> - <code>&quot;23:52&quot;</code> is not considered to be within a one-hour period.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> keyName = [&quot;daniel&quot;,&quot;daniel&quot;,&quot;daniel&quot;,&quot;luis&quot;,&quot;luis&quot;,&quot;luis&quot;,&quot;luis&quot;], keyTime = [&quot;10:00&quot;,&quot;10:40&quot;,&quot;11:00&quot;,&quot;09:00&quot;,&quot;11:00&quot;,&quot;13:00&quot;,&quot;15:00&quot;]\n<strong>Output:</strong> [&quot;daniel&quot;]\n<strong>Explanation:</strong> &quot;daniel&quot; used the keycard 3 times in a one-hour period (&quot;10:00&quot;,&quot;10:40&quot;, &quot;11:00&quot;).\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> keyName = [&quot;alice&quot;,&quot;alice&quot;,&quot;alice&quot;,&quot;bob&quot;,&quot;bob&quot;,&quot;bob&quot;,&quot;bob&quot;], keyTime = [&quot;12:01&quot;,&quot;12:00&quot;,&quot;18:00&quot;,&quot;21:00&quot;,&quot;21:20&quot;,&quot;21:30&quot;,&quot;23:00&quot;]\n<strong>Output:</strong> [&quot;bob&quot;]\n<strong>Explanation:</strong> &quot;bob&quot; used the keycard 3 times in a one-hour period (&quot;21:00&quot;,&quot;21:20&quot;, &quot;21:30&quot;).\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> keyName = [&quot;john&quot;,&quot;john&quot;,&quot;john&quot;], keyTime = [&quot;23:58&quot;,&quot;23:59&quot;,&quot;00:01&quot;]\n<strong>Output:</strong> []\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> keyName = [&quot;leslie&quot;,&quot;leslie&quot;,&quot;leslie&quot;,&quot;clare&quot;,&quot;clare&quot;,&quot;clare&quot;,&quot;clare&quot;], keyTime = [&quot;13:00&quot;,&quot;13:20&quot;,&quot;14:00&quot;,&quot;18:00&quot;,&quot;18:51&quot;,&quot;19:30&quot;,&quot;19:49&quot;]\n<strong>Output:</strong> [&quot;clare&quot;,&quot;leslie&quot;]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= keyName.length, keyTime.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>keyName.length == keyTime.length</code></li>\n\t<li><code>keyTime[i]</code>&nbsp;is in the format <strong>&quot;HH:MM&quot;</strong>.</li>\n\t<li><code>[keyName[i], keyTime[i]]</code> is <strong>unique</strong>.</li>\n\t<li><code>1 &lt;= keyName[i].length &lt;= 10</code></li>\n\t<li><code>keyName[i] contains only lowercase English letters.</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"6.1K\", \"totalSubmission\": \"14.7K\", \"totalAcceptedRaw\": 6138, \"totalSubmissionRaw\": 14665, \"acRate\": \"41.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Ordered Map", "slug": "ordered-map"}]}}, {"id": "1584", "name": "min-cost-to-connect-all-points", "content": {"questionId": "1706", "questionFrontendId": "1584", "questionTitle": "Min Cost to Connect All Points", "questionTitleSlug": "min-cost-to-connect-all-points", "content": "<p>You are given an array&nbsp;<code>points</code>&nbsp;representing integer coordinates of some points on a 2D-plane, where <code>points[i] = [x<sub>i</sub>, y<sub>i</sub>]</code>.</p>\n\n<p>The cost of connecting two points <code>[x<sub>i</sub>, y<sub>i</sub>]</code> and <code>[x<sub>j</sub>, y<sub>j</sub>]</code> is the <strong>manhattan distance</strong> between them:&nbsp;<code>|x<sub>i</sub> - x<sub>j</sub>| + |y<sub>i</sub> - y<sub>j</sub>|</code>, where <code>|val|</code> denotes the absolute value of&nbsp;<code>val</code>.</p>\n\n<p>Return&nbsp;<em>the minimum cost to make all points connected.</em> All points are connected if there is <strong>exactly one</strong> simple path between any two points.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/26/d.png\" style=\"width: 214px; height: 268px;\" /></p>\n\n<pre>\n<strong>Input:</strong> points = [[0,0],[2,2],[3,10],[5,2],[7,0]]\n<strong>Output:</strong> 20\n<strong>Explanation:\n</strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/26/c.png\" style=\"width: 214px; height: 268px;\" />\nWe can connect the points as shown above to get the minimum cost of 20.\nNotice that there is a unique path between every pair of points.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[3,12],[-2,5],[-4,1]]\n<strong>Output:</strong> 18\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[0,0],[1,1],[1,0],[-1,1]]\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[-1000000,-1000000],[1000000,1000000]]\n<strong>Output:</strong> 4000000\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[0,0]]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= points.length &lt;= 1000</code></li>\n\t<li><code>-10<sup>6</sup>&nbsp;&lt;= x<sub>i</sub>, y<sub>i</sub> &lt;= 10<sup>6</sup></code></li>\n\t<li>All pairs <code>(x<sub>i</sub>, y<sub>i</sub>)</code> are distinct.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11.1K\", \"totalSubmission\": \"22.4K\", \"totalAcceptedRaw\": 11122, \"totalSubmissionRaw\": 22394, \"acRate\": \"49.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Union Find", "slug": "union-find"}]}}, {"id": "1583", "name": "count-unhappy-friends", "content": {"questionId": "1705", "questionFrontendId": "1583", "questionTitle": "Count Unhappy Friends", "questionTitleSlug": "count-unhappy-friends", "content": "<p>You are given a list of&nbsp;<code>preferences</code>&nbsp;for&nbsp;<code>n</code>&nbsp;friends, where <code>n</code> is always <strong>even</strong>.</p>\n\n<p>For each person <code>i</code>,&nbsp;<code>preferences[i]</code>&nbsp;contains&nbsp;a list of friends&nbsp;<strong>sorted</strong> in the <strong>order of preference</strong>. In other words, a friend earlier in the list is more preferred than a friend later in the list.&nbsp;Friends in&nbsp;each list are&nbsp;denoted by integers from <code>0</code> to <code>n-1</code>.</p>\n\n<p>All the friends are divided into pairs.&nbsp;The pairings are&nbsp;given in a list&nbsp;<code>pairs</code>,&nbsp;where <code>pairs[i] = [x<sub>i</sub>, y<sub>i</sub>]</code> denotes <code>x<sub>i</sub></code>&nbsp;is paired with <code>y<sub>i</sub></code> and <code>y<sub>i</sub></code> is paired with <code>x<sub>i</sub></code>.</p>\n\n<p>However, this pairing may cause some of the friends to be unhappy.&nbsp;A friend <code>x</code>&nbsp;is unhappy if <code>x</code>&nbsp;is paired with <code>y</code>&nbsp;and there exists a friend <code>u</code>&nbsp;who&nbsp;is paired with <code>v</code>&nbsp;but:</p>\n\n<ul>\n\t<li><code>x</code>&nbsp;prefers <code>u</code>&nbsp;over <code>y</code>,&nbsp;and</li>\n\t<li><code>u</code>&nbsp;prefers <code>x</code>&nbsp;over <code>v</code>.</li>\n</ul>\n\n<p>Return <em>the number of unhappy friends</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, preferences = [[1, 2, 3], [3, 2, 0], [3, 1, 0], [1, 2, 0]], pairs = [[0, 1], [2, 3]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong>\nFriend 1 is unhappy because:\n- 1 is paired with 0 but prefers 3 over 0, and\n- 3 prefers 1 over 2.\nFriend 3 is unhappy because:\n- 3 is paired with 2 but prefers 1 over 2, and\n- 1 prefers 3 over 0.\nFriends 0 and 2 are happy.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, preferences = [[1], [0]], pairs = [[1, 0]]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Both friends 0 and 1 are happy.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, preferences = [[1, 3, 2], [2, 3, 0], [1, 3, 0], [0, 2, 1]], pairs = [[1, 3], [0, 2]]\n<strong>Output:</strong> 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 500</code></li>\n\t<li><code>n</code>&nbsp;is even.</li>\n\t<li><code>preferences.length&nbsp;== n</code></li>\n\t<li><code>preferences[i].length&nbsp;== n - 1</code></li>\n\t<li><code>0 &lt;= preferences[i][j] &lt;= n - 1</code></li>\n\t<li><code>preferences[i]</code>&nbsp;does not contain <code>i</code>.</li>\n\t<li>All values in&nbsp;<code>preferences[i]</code>&nbsp;are unique.</li>\n\t<li><code>pairs.length&nbsp;== n/2</code></li>\n\t<li><code>pairs[i].length&nbsp;== 2</code></li>\n\t<li><code>x<sub>i</sub> != y<sub>i</sub></code></li>\n\t<li><code>0 &lt;= x<sub>i</sub>, y<sub>i</sub>&nbsp;&lt;= n - 1</code></li>\n\t<li>Each person is contained in <strong>exactly one</strong> pair.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"8.5K\", \"totalSubmission\": \"16.1K\", \"totalAcceptedRaw\": 8534, \"totalSubmissionRaw\": 16052, \"acRate\": \"53.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "1564", "name": "put-boxes-into-the-warehouse-i", "content": {"questionId": "1703", "questionFrontendId": "1564", "questionTitle": "Put Boxes Into the Warehouse I", "questionTitleSlug": "put-boxes-into-the-warehouse-i", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"2.1K\", \"totalSubmission\": \"3.2K\", \"totalAcceptedRaw\": 2129, \"totalSubmissionRaw\": 3215, \"acRate\": \"66.2%\"}", "similarQuestions": "[{\"title\": \"Put Boxes Into the Warehouse II\", \"titleSlug\": \"put-boxes-into-the-warehouse-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1555", "name": "bank-account-summary", "content": {"questionId": "1702", "questionFrontendId": "1555", "questionTitle": "Bank Account Summary", "questionTitleSlug": "bank-account-summary", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"3.1K\", \"totalSubmission\": \"5.9K\", \"totalAcceptedRaw\": 3093, \"totalSubmissionRaw\": 5906, \"acRate\": \"52.4%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1578", "name": "minimum-deletion-cost-to-avoid-repeating-letters", "content": {"questionId": "1700", "questionFrontendId": "1578", "questionTitle": "Minimum Deletion Cost to Avoid Repeating Letters", "questionTitleSlug": "minimum-deletion-cost-to-avoid-repeating-letters", "content": "<p>Given a&nbsp;string <code>s</code> and an array of integers <code>cost</code> where <code>cost[i]</code>&nbsp;is the cost of deleting the <code>i<sup>th</sup></code> character in <code>s</code>.</p>\n\n<p>Return the minimum cost of deletions such that there are no two identical letters next to each other.</p>\n\n<p>Notice that you will delete the chosen characters at the same time, in other words, after deleting a character, the costs of deleting other characters will not change.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abaac&quot;, cost = [1,2,3,4,5]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Delete the letter &quot;a&quot; with cost 3 to get &quot;abac&quot; (String without two identical letters next to each other).\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abc&quot;, cost = [1,2,3]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> You don&#39;t need to delete any character because there are no identical letters next to each other.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aabaa&quot;, cost = [1,2,3,4,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Delete the first and the last character, getting the string (&quot;aba&quot;).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>s.length == cost.length</code></li>\n\t<li><code>1 &lt;= s.length, cost.length &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= cost[i] &lt;=&nbsp;10^4</code></li>\n\t<li><code>s</code> contains only lowercase English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"15.4K\", \"totalSubmission\": \"25.7K\", \"totalAcceptedRaw\": 15434, \"totalSubmissionRaw\": 25675, \"acRate\": \"60.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1577", "name": "number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers", "content": {"questionId": "1699", "questionFrontendId": "1577", "questionTitle": "Number of Ways Where Square of Number Is Equal to Product of Two Numbers", "questionTitleSlug": "number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers", "content": "<p>Given two arrays of integers&nbsp;<code>nums1</code> and <code>nums2</code>, return the number of triplets formed (type 1 and type 2) under the following rules:</p>\n\n<ul>\n\t<li>Type 1: Triplet (i, j, k)&nbsp;if <code>nums1[i]<sup>2</sup>&nbsp;== nums2[j] * nums2[k]</code> where <code>0 &lt;= i &lt; nums1.length</code> and <code>0 &lt;= j &lt; k &lt; nums2.length</code>.</li>\n\t<li>Type 2:&nbsp;Triplet (i, j, k) if <code>nums2[i]<sup>2</sup>&nbsp;== nums1[j] * nums1[k]</code> where <code>0 &lt;= i &lt; nums2.length</code> and <code>0 &lt;= j &lt; k &lt; nums1.length</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [7,4], nums2 = [5,2,8,9]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> Type 1: (1,1,2), nums1[1]^2 = nums2[1] * nums2[2]. (4^2 = 2 * 8). \n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,1], nums2 = [1,1,1]\n<strong>Output:</strong> 9\n<strong>Explanation:</strong> All Triplets are valid, because 1^2 = 1 * 1.\nType 1: (0,0,1), (0,0,2), (0,1,2), (1,0,1), (1,0,2), (1,1,2).  nums1[i]^2 = nums2[j] * nums2[k].\nType 2: (0,0,1), (1,0,1), (2,0,1). nums2[i]^2 = nums1[j] * nums1[k].\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [7,7,8,3], nums2 = [1,2,9,7]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There are 2 valid triplets.\nType 1: (3,0,2).  nums1[3]^2 = nums2[0] * nums2[2].\nType 2: (3,0,1).  nums2[3]^2 = nums1[0] * nums1[1].\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [4,7,9,11,23], nums2 = [3,5,1024,12,18]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There are no valid triplets.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums1.length, nums2.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= nums1[i], nums2[i] &lt;= 10^5</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"10.4K\", \"totalSubmission\": \"27.9K\", \"totalAcceptedRaw\": 10360, \"totalSubmissionRaw\": 27923, \"acRate\": \"37.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Math", "slug": "math"}]}}, {"id": "1554", "name": "strings-differ-by-one-character", "content": {"questionId": "1697", "questionFrontendId": "1554", "questionTitle": "Strings Differ by One Character", "questionTitleSlug": "strings-differ-by-one-character", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"1.9K\", \"totalSubmission\": \"3K\", \"totalAcceptedRaw\": 1891, \"totalSubmissionRaw\": 2971, \"acRate\": \"63.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "1589", "name": "maximum-sum-obtained-of-any-permutation", "content": {"questionId": "1695", "questionFrontendId": "1589", "questionTitle": "Maximum Sum Obtained of Any Permutation", "questionTitleSlug": "maximum-sum-obtained-of-any-permutation", "content": "<p>We have an array of integers, <code>nums</code>, and an array of <code>requests</code> where <code>requests[i] = [start<sub>i</sub>, end<sub>i</sub>]</code>. The <code>i<sup>th</sup></code> request asks for the sum of <code>nums[start<sub>i</sub>] + nums[start<sub>i</sub> + 1] + ... + nums[end<sub>i</sub> - 1] + nums[end<sub>i</sub>]</code>. Both <code>start<sub>i</sub></code> and <code>end<sub>i</sub></code> are <em>0-indexed</em>.</p>\n\n<p>Return <em>the maximum total sum of all requests <strong>among all permutations</strong> of</em> <code>nums</code>.</p>\n\n<p>Since the answer may be too large, return it <strong>modulo</strong> <code>10<sup>9</sup> + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,5], requests = [[1,3],[0,1]]\n<strong>Output:</strong> 19\n<strong>Explanation:</strong> One permutation of nums is [2,1,3,4,5] with the following result: \nrequests[0] -&gt; nums[1] + nums[2] + nums[3] = 1 + 3 + 4 = 8\nrequests[1] -&gt; nums[0] + nums[1] = 2 + 1 = 3\nTotal sum: 8 + 3 = 11.\nA permutation with a higher total sum is [3,5,4,2,1] with the following result:\nrequests[0] -&gt; nums[1] + nums[2] + nums[3] = 5 + 4 + 2 = 11\nrequests[1] -&gt; nums[0] + nums[1] = 3 + 5  = 8\nTotal sum: 11 + 8 = 19, which is the best that you can do.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,5,6], requests = [[0,1]]\n<strong>Output:</strong> 11\n<strong>Explanation:</strong> A permutation with the max total sum is [6,5,4,3,2,1] with request sums [11].</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,5,10], requests = [[0,2],[1,3],[1,1]]\n<strong>Output:</strong> 47\n<strong>Explanation:</strong> A permutation with the max total sum is [4,10,5,3,2,1] with request sums [19,18,10].</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= nums[i]&nbsp;&lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= requests.length &lt;=&nbsp;10<sup>5</sup></code></li>\n\t<li><code>requests[i].length == 2</code></li>\n\t<li><code>0 &lt;= start<sub>i</sub>&nbsp;&lt;= end<sub>i</sub>&nbsp;&lt;&nbsp;n</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"6.6K\", \"totalSubmission\": \"19.1K\", \"totalAcceptedRaw\": 6568, \"totalSubmissionRaw\": 19062, \"acRate\": \"34.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1590", "name": "make-sum-divisible-by-p", "content": {"questionId": "1694", "questionFrontendId": "1590", "questionTitle": "Make Sum Divisible by P", "questionTitleSlug": "make-sum-divisible-by-p", "content": "<p>Given an array of positive integers <code>nums</code>, remove the <strong>smallest</strong> subarray (possibly <strong>empty</strong>) such that the <strong>sum</strong> of the remaining elements is divisible by <code>p</code>. It is <strong>not</strong> allowed to remove the whole array.</p>\r\n\r\n<p>Return <em>the length of the smallest subarray that you need to remove, or </em><code>-1</code><em> if it&#39;s impossible</em>.</p>\r\n\r\n<p>A <strong>subarray</strong> is defined as a contiguous block of elements in the array.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [3,1,4,2], p = 6\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong> The sum of the elements in nums is 10, which is not divisible by 6. We can remove the subarray [4], and the sum of the remaining elements is 6, which is divisible by 6.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [6,3,5,2], p = 9\r\n<strong>Output:</strong> 2\r\n<strong>Explanation:</strong> We cannot remove a single element to get a sum divisible by 9. The best way is to remove the subarray [5,2], leaving us with [6,3] with sum 9.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [1,2,3], p = 3\r\n<strong>Output:</strong> 0\r\n<strong>Explanation:</strong> Here the sum is 6. which is already divisible by 3. Thus we do not need to remove anything.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [1,2,3], p = 7\r\n<strong>Output:</strong> -1\r\n<strong>Explanation:</strong> There is no way to remove a subarray in order to get a sum divisible by 7.\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [1000000000,1000000000,1000000000], p = 3\r\n<strong>Output:</strong> 0\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\r\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\r\n\t<li><code>1 &lt;= p &lt;= 10<sup>9</sup></code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"6.6K\", \"totalSubmission\": \"24.3K\", \"totalAcceptedRaw\": 6587, \"totalSubmissionRaw\": 24283, \"acRate\": \"27.1%\"}", "similarQuestions": "[{\"title\": \"Subarray Sums Divisible by K\", \"titleSlug\": \"subarray-sums-divisible-by-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Hash Table", "slug": "hash-table"}, {"name": "Math", "slug": "math"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "1567", "name": "maximum-length-of-subarray-with-positive-product", "content": {"questionId": "1690", "questionFrontendId": "1567", "questionTitle": "Maximum Length of Subarray With Positive Product", "questionTitleSlug": "maximum-length-of-subarray-with-positive-product", "content": "<p>Given an array of integers&nbsp;<code>nums</code>, find&nbsp;the maximum length of a subarray where the product of all its elements is positive.</p>\n\n<p>A subarray of an array is a consecutive sequence of zero or more values taken out of that array.</p>\n\n<p>Return&nbsp;<em>the maximum length of a subarray with positive product</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,-2,-3,4]\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>The array nums already has a positive product of 24.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,1,-2,-3,-4]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>The longest subarray with positive product is [1,-2,-3] which has a product of 6.\nNotice that we cannot include 0 in the subarray since that&#39;ll make the product 0 which is not positive.</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,-2,-3,0,1]\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>The longest subarray with positive product is [-1,-2] or [-2,-3].\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,2]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,5,-6,4,0,10]\n<strong>Output:</strong> 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10^5</code></li>\n\t<li><code>-10^9 &lt;= nums[i]&nbsp;&lt;= 10^9</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11.4K\", \"totalSubmission\": \"31.4K\", \"totalAcceptedRaw\": 11383, \"totalSubmissionRaw\": 31412, \"acRate\": \"36.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1549", "name": "the-most-recent-orders-for-each-product", "content": {"questionId": "1688", "questionFrontendId": "1549", "questionTitle": "The Most Recent Orders for Each Product", "questionTitleSlug": "the-most-recent-orders-for-each-product", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"3.6K\", \"totalSubmission\": \"5.4K\", \"totalAcceptedRaw\": 3589, \"totalSubmissionRaw\": 5449, \"acRate\": \"65.9%\"}", "similarQuestions": "[{\"title\": \"The Most Recent Three Orders\", \"titleSlug\": \"the-most-recent-three-orders\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"The Most Frequently Ordered Products for Each Customer\", \"titleSlug\": \"the-most-frequently-ordered-products-for-each-customer\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1562", "name": "find-latest-group-of-size-m", "content": {"questionId": "1684", "questionFrontendId": "1562", "questionTitle": "Find Latest Group of Size M", "questionTitleSlug": "find-latest-group-of-size-m", "content": "<p>Given an array <code>arr</code>&nbsp;that represents a permutation of numbers from <code>1</code>&nbsp;to <code>n</code>. You have a binary string of size&nbsp;<code>n</code>&nbsp;that initially has all its bits set to zero.</p>\n\n<p>At each step <code>i</code>&nbsp;(assuming both the binary string and <code>arr</code> are 1-indexed) from <code>1</code> to&nbsp;<code>n</code>, the bit at position&nbsp;<code>arr[i]</code>&nbsp;is set to&nbsp;<code>1</code>. You are given an integer&nbsp;<code>m</code>&nbsp;and you need to find the latest step at which there exists a group of ones of length&nbsp;<code>m</code>. A group of ones is a contiguous substring of 1s such that it cannot be extended in either direction.</p>\n\n<p>Return <em>the latest step at which there exists a group of ones of length <strong>exactly</strong></em>&nbsp;<code>m</code>. <em>If no such group exists, return</em>&nbsp;<code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [3,5,1,2,4], m = 1\n<strong>Output:</strong> 4\n<strong>Explanation:\n</strong>Step 1: &quot;00<u>1</u>00&quot;, groups: [&quot;1&quot;]\nStep 2: &quot;0010<u>1</u>&quot;, groups: [&quot;1&quot;, &quot;1&quot;]\nStep 3: &quot;<u>1</u>0101&quot;, groups: [&quot;1&quot;, &quot;1&quot;, &quot;1&quot;]\nStep 4: &quot;1<u>1</u>101&quot;, groups: [&quot;111&quot;, &quot;1&quot;]\nStep 5: &quot;111<u>1</u>1&quot;, groups: [&quot;11111&quot;]\nThe latest step at which there exists a group of size 1 is step 4.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [3,1,5,4,2], m = 2\n<strong>Output:</strong> -1\n<strong>Explanation:\n</strong>Step 1: &quot;00<u>1</u>00&quot;, groups: [&quot;1&quot;]\nStep 2: &quot;<u>1</u>0100&quot;, groups: [&quot;1&quot;, &quot;1&quot;]\nStep 3: &quot;1010<u>1</u>&quot;, groups: [&quot;1&quot;, &quot;1&quot;, &quot;1&quot;]\nStep 4: &quot;101<u>1</u>1&quot;, groups: [&quot;1&quot;, &quot;111&quot;]\nStep 5: &quot;1<u>1</u>111&quot;, groups: [&quot;11111&quot;]\nNo group of size 2 exists during any step.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1], m = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [2,1], m = 2\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == arr.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= arr[i] &lt;= n</code></li>\n\t<li>All integers in&nbsp;<code>arr</code>&nbsp;are&nbsp;<strong>distinct</strong>.</li>\n\t<li><code>1 &lt;= m&nbsp;&lt;= arr.length</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"8.7K\", \"totalSubmission\": \"22.2K\", \"totalAcceptedRaw\": 8669, \"totalSubmissionRaw\": 22191, \"acRate\": \"39.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "1561", "name": "maximum-number-of-coins-you-can-get", "content": {"questionId": "1683", "questionFrontendId": "1561", "questionTitle": "Maximum Number of Coins You Can Get", "questionTitleSlug": "maximum-number-of-coins-you-can-get", "content": "<p>There are 3n&nbsp;piles of coins of&nbsp;varying size, you and your friends will take piles of coins as follows:</p>\n\n<ul>\n\t<li>In each step, you will choose <strong>any&nbsp;</strong>3 piles of coins (not necessarily consecutive).</li>\n\t<li>Of your choice,&nbsp;Alice&nbsp;will pick&nbsp;the pile with the maximum number of coins.</li>\n\t<li>You will pick the next pile with maximum number of coins.</li>\n\t<li>Your friend Bob will pick the last pile.</li>\n\t<li>Repeat&nbsp;until&nbsp;there are no more piles of coins.</li>\n</ul>\n\n<p>Given an array of integers <code>piles</code>&nbsp;where <code>piles[i]</code> is the number of coins in the <code>i<sup>th</sup></code> pile.</p>\n\n<p>Return the maximum number of coins which you can have.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> piles = [2,4,1,2,7,8]\n<strong>Output:</strong> 9\n<strong>Explanation: </strong>Choose the triplet (2, 7, 8), Alice Pick the pile with 8 coins, you the pile with <strong>7</strong> coins and Bob the last one.\nChoose the triplet (1, 2, 4), Alice Pick the pile with 4 coins, you the pile with <strong>2</strong> coins and Bob the last one.\nThe maximum number of coins which you can have are: 7 + 2 = 9.\nOn the other hand if we choose this arrangement (1, <strong>2</strong>, 8), (2, <strong>4</strong>, 7) you only get 2 + 4 = 6 coins which is not optimal.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> piles = [2,4,5]\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> piles = [9,8,7,6,5,1,2,3,4]\n<strong>Output:</strong> 18\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= piles.length &lt;= 10^5</code></li>\n\t<li><code>piles.length % 3 == 0</code></li>\n\t<li><code>1 &lt;= piles[i] &lt;= 10^4</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"19.2K\", \"totalSubmission\": \"24.5K\", \"totalAcceptedRaw\": 19189, \"totalSubmissionRaw\": 24539, \"acRate\": \"78.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Sort", "slug": "sort"}]}}, {"id": "1538", "name": "guess-the-majority-in-a-hidden-array", "content": {"questionId": "1681", "questionFrontendId": "1538", "questionTitle": "Guess the Majority in a Hidden Array", "questionTitleSlug": "guess-the-majority-in-a-hidden-array", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"699\", \"totalSubmission\": \"1.1K\", \"totalAcceptedRaw\": 699, \"totalSubmissionRaw\": 1144, \"acRate\": \"61.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "1574", "name": "shortest-subarray-to-be-removed-to-make-array-sorted", "content": {"questionId": "1679", "questionFrontendId": "1574", "questionTitle": "Shortest Subarray to be Removed to Make Array Sorted", "questionTitleSlug": "shortest-subarray-to-be-removed-to-make-array-sorted", "content": "<p>Given an integer array&nbsp;<code>arr</code>, remove a&nbsp;subarray (can be empty) from&nbsp;<code>arr</code>&nbsp;such that the remaining elements in <code>arr</code>&nbsp;are <strong>non-decreasing</strong>.</p>\n\n<p>A subarray is a contiguous&nbsp;subsequence of the array.</p>\n\n<p>Return&nbsp;<em>the length of the shortest subarray to remove</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,3,10,4,2,3,5]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>The shortest subarray we can remove is [10,4,2] of length 3. The remaining elements after that will be [1,2,3,3,5] which are sorted.\nAnother correct solution is to remove the subarray [3,10,4].</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [5,4,3,2,1]\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>Since the array is strictly decreasing, we can only keep a single element. Therefore we need to remove a subarray of length 4, either [5,4,3,2] or [4,3,2,1].\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,3]\n<strong>Output:</strong> 0\n<strong>Explanation: </strong>The array is already non-decreasing. We do not need to remove any elements.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 10^5</code></li>\n\t<li><code>0 &lt;= arr[i] &lt;= 10^9</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"7.9K\", \"totalSubmission\": \"24.2K\", \"totalAcceptedRaw\": 7861, \"totalSubmissionRaw\": 24155, \"acRate\": \"32.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "1573", "name": "number-of-ways-to-split-a-string", "content": {"questionId": "1678", "questionFrontendId": "1573", "questionTitle": "Number of Ways to Split a String", "questionTitleSlug": "number-of-ways-to-split-a-string", "content": "<p>Given a binary string <code>s</code> (a string consisting only of &#39;0&#39;s and &#39;1&#39;s),&nbsp;we can split <code>s</code>&nbsp;into 3 <strong>non-empty</strong> strings s1, s2, s3 (s1+ s2+ s3 = s).</p>\n\n<p>Return the number of ways <code>s</code> can be split such that the number of&nbsp;characters &#39;1&#39; is the same in s1, s2, and s3.</p>\n\n<p>Since the answer&nbsp;may be too large,&nbsp;return it modulo&nbsp;10^9 + 7.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;10101&quot;\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> There are four ways to split s in 3 parts where each part contain the same number of letters &#39;1&#39;.\n&quot;1|010|1&quot;\n&quot;1|01|01&quot;\n&quot;10|10|1&quot;\n&quot;10|1|01&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;1001&quot;\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;0000&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> There are three ways to split s in 3 parts.\n&quot;0|0|00&quot;\n&quot;0|00|0&quot;\n&quot;00|0|0&quot;\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;100100010100110&quot;\n<strong>Output:</strong> 12\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= s.length &lt;= 10^5</code></li>\n\t<li><code>s[i]</code> is <code>&#39;0&#39;</code>&nbsp;or&nbsp;<code>&#39;1&#39;</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"9.6K\", \"totalSubmission\": \"31.3K\", \"totalAcceptedRaw\": 9606, \"totalSubmissionRaw\": 31345, \"acRate\": \"30.6%\"}", "similarQuestions": "[{\"title\": \"Split Array with Equal Sum\", \"titleSlug\": \"split-array-with-equal-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "1552", "name": "magnetic-force-between-two-balls", "content": {"questionId": "1675", "questionFrontendId": "1552", "questionTitle": "Magnetic Force Between Two Balls", "questionTitleSlug": "magnetic-force-between-two-balls", "content": "<p>In universe Earth&nbsp;C-137, Rick discovered a special form of magnetic force between&nbsp;two balls if they are put in his new invented basket. Rick has&nbsp;<code>n</code> empty baskets, the <code>i<sup>th</sup></code> basket is at <code>position[i]</code>, Morty has <code>m</code> balls and needs to distribute the balls into the baskets such that the <strong>minimum&nbsp;magnetic force</strong>&nbsp;between any two balls is <strong>maximum</strong>.</p>\n\n<p>Rick stated that&nbsp;magnetic force between two different balls at positions <code>x</code> and <code>y</code> is <code>|x - y|</code>.</p>\n\n<p>Given the integer array <code>position</code>&nbsp;and the integer <code>m</code>. Return <em>the required force</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/11/q3v1.jpg\" style=\"width: 562px; height: 195px;\" />\n<pre>\n<strong>Input:</strong> position = [1,2,3,4,7], m = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Distributing the 3 balls into baskets 1, 4 and 7 will make the magnetic force between ball pairs [3, 3, 6]. The minimum magnetic force is 3. We cannot achieve a larger minimum magnetic force than 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> position = [5,4,3,2,1,1000000000], m = 2\n<strong>Output:</strong> 999999999\n<strong>Explanation:</strong> We can use baskets 1 and 1000000000.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == position.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= position[i] &lt;= 10^9</code></li>\n\t<li>All integers in <code>position</code> are <strong>distinct</strong>.</li>\n\t<li><code>2 &lt;= m &lt;= position.length</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"10.9K\", \"totalSubmission\": \"22.5K\", \"totalAcceptedRaw\": 10907, \"totalSubmissionRaw\": 22472, \"acRate\": \"48.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "1551", "name": "minimum-operations-to-make-array-equal", "content": {"questionId": "1674", "questionFrontendId": "1551", "questionTitle": "Minimum Operations to Make Array Equal", "questionTitleSlug": "minimum-operations-to-make-array-equal", "content": "<p>You have an array <code>arr</code> of length <code>n</code> where <code>arr[i] = (2 * i) + 1</code> for all valid values of <code>i</code> (i.e. <code>0 &lt;= i &lt; n</code>).</p>\r\n\r\n<p>In one operation, you can select two indices <code>x</code>&nbsp;and <code>y</code> where <code>0 &lt;= x, y &lt; n</code> and subtract <code>1</code> from <code>arr[x]</code> and add <code>1</code> to <code>arr[y]</code>&nbsp;(i.e. perform <code>arr[x] -=1&nbsp;</code>and <code>arr[y] += 1</code>).&nbsp;The goal is to make all the elements of the array <strong>equal</strong>. It is <strong>guaranteed</strong> that all the elements of the array can be made equal using some operations.</p>\r\n\r\n<p>Given an integer <code>n</code>, the length of the array. Return <em>the minimum number of operations</em> needed to make&nbsp;all the elements of arr equal.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 3\r\n<strong>Output:</strong> 2\r\n<strong>Explanation:</strong> arr = [1, 3, 5]\r\nFirst operation choose x = 2 and y = 0, this leads arr to be [2, 3, 4]\r\nIn the second operation choose x = 2 and y = 0 again, thus arr = [3, 3, 3].\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 6\r\n<strong>Output:</strong> 9\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= n &lt;= 10^4</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"19.5K\", \"totalSubmission\": \"25.1K\", \"totalAcceptedRaw\": 19478, \"totalSubmissionRaw\": 25067, \"acRate\": \"77.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "1533", "name": "find-the-index-of-the-large-integer", "content": {"questionId": "1672", "questionFrontendId": "1533", "questionTitle": "Find the Index of the Large Integer", "questionTitleSlug": "find-the-index-of-the-large-integer", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"1.6K\", \"totalSubmission\": \"3K\", \"totalAcceptedRaw\": 1624, \"totalSubmissionRaw\": 2954, \"acRate\": \"55.0%\"}", "similarQuestions": "[{\"title\": \"Search in a Sorted Array of Unknown Size\", \"titleSlug\": \"search-in-a-sorted-array-of-unknown-size\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "1532", "name": "the-most-recent-three-orders", "content": {"questionId": "1671", "questionFrontendId": "1532", "questionTitle": "The Most Recent Three Orders", "questionTitleSlug": "the-most-recent-three-orders", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"4.5K\", \"totalSubmission\": \"6.2K\", \"totalAcceptedRaw\": 4493, \"totalSubmissionRaw\": 6190, \"acRate\": \"72.6%\"}", "similarQuestions": "[{\"title\": \"The Most Recent Orders for Each Product\", \"titleSlug\": \"the-most-recent-orders-for-each-product\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1545", "name": "find-kth-bit-in-nth-binary-string", "content": {"questionId": "1667", "questionFrontendId": "1545", "questionTitle": "Find Kth Bit in Nth Binary String", "questionTitleSlug": "find-kth-bit-in-nth-binary-string", "content": "<p>Given two positive integers&nbsp;<code>n</code>&nbsp;and <code>k</code>,&nbsp;the binary string&nbsp;&nbsp;<code>S<sub>n</sub></code>&nbsp;is formed as follows:</p>\r\n\r\n<ul>\r\n\t<li><code>S<sub>1</sub>&nbsp;= &quot;0&quot;</code></li>\r\n\t<li><code>S<sub><span style=\"font-size: 10.8333px;\">i</span></sub>&nbsp;=&nbsp;S<sub><span style=\"font-size: 10.8333px;\">i-1</span></sub>&nbsp;+ &quot;1&quot; + reverse(invert(S<sub><span style=\"font-size: 10.8333px;\">i-1</span></sub>))</code>&nbsp;for&nbsp;<code>i &gt; 1</code></li>\r\n</ul>\r\n\r\n<p>Where&nbsp;<code>+</code>&nbsp;denotes the concatenation operation,&nbsp;<code>reverse(x)</code>&nbsp;returns the reversed string <font face=\"monospace\">x,</font>&nbsp;and&nbsp;<code>invert(x)</code>&nbsp;inverts all the bits in <font face=\"monospace\">x</font> (0 changes to 1 and 1 changes to 0).</p>\r\n\r\n<p>For example, the first 4 strings in the above sequence are:</p>\r\n\r\n<ul>\r\n\t<li><code>S<sub>1&nbsp;</sub>= &quot;0&quot;</code></li>\r\n\t<li><code>S<sub>2&nbsp;</sub>= &quot;0<strong>1</strong>1&quot;</code></li>\r\n\t<li><code>S<sub>3&nbsp;</sub>= &quot;011<strong>1</strong>001&quot;</code></li>\r\n\t<li><code>S<sub>4</sub> = &quot;0111001<strong>1</strong>0110001&quot;</code></li>\r\n</ul>\r\n\r\n<p>Return <em>the</em> <code>k<sup>th</sup></code> <em>bit</em> <em>in</em>&nbsp;<code>S<sub>n</sub></code>. It is guaranteed that&nbsp;<code>k</code>&nbsp;is valid for the given&nbsp;<code>n</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 3, k = 1\r\n<strong>Output:</strong> &quot;0&quot;\r\n<strong>Explanation: </strong>S<sub>3</sub>&nbsp;is &quot;<strong><u>0</u></strong>111001&quot;. The first bit is &quot;0&quot;.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 4, k = 11\r\n<strong>Output:</strong> &quot;1&quot;\r\n<strong>Explanation: </strong>S<sub>4</sub>&nbsp;is &quot;0111001101<strong><u>1</u></strong>0001&quot;. The 11th bit is &quot;1&quot;.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 1, k = 1\r\n<strong>Output:</strong> &quot;0&quot;\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 2, k = 3\r\n<strong>Output:</strong> &quot;1&quot;\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= n &lt;= 20</code></li>\r\n\t<li><code>1 &lt;= k &lt;= 2<sup>n</sup> - 1</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13.6K\", \"totalSubmission\": \"23.8K\", \"totalAcceptedRaw\": 13580, \"totalSubmissionRaw\": 23767, \"acRate\": \"57.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "1522", "name": "diameter-of-n-ary-tree", "content": {"questionId": "1665", "questionFrontendId": "1522", "questionTitle": "Diameter of N-Ary Tree", "questionTitleSlug": "diameter-of-n-ary-tree", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"3.9K\", \"totalSubmission\": \"5.6K\", \"totalAcceptedRaw\": 3868, \"totalSubmissionRaw\": 5597, \"acRate\": \"69.1%\"}", "similarQuestions": "[{\"title\": \"Diameter of Binary Tree\", \"titleSlug\": \"diameter-of-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "1558", "name": "minimum-numbers-of-function-calls-to-make-target-array", "content": {"questionId": "1662", "questionFrontendId": "1558", "questionTitle": "Minimum Numbers of Function Calls to Make Target Array", "questionTitleSlug": "minimum-numbers-of-function-calls-to-make-target-array", "content": "<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/10/sample_2_1887.png\" style=\"width: 573px; height: 294px;\" /></p>\n\n<p>Your task is to form&nbsp;an integer array <code>nums</code> from an initial array of zeros&nbsp;<code>arr</code> that is the&nbsp;same size&nbsp;as <code>nums</code>.</p>\n\n<p>Return the minimum number of&nbsp;function calls to make <code>nums</code> from <code>arr</code>.</p>\n\n<p>The answer is guaranteed to fit in a 32-bit signed integer.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,5]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> Increment by 1 (second element): [0, 0] to get [0, 1] (1 operation).\nDouble all the elements: [0, 1] -&gt; [0, 2] -&gt; [0, 4] (2 operations).\nIncrement by 1 (both elements)  [0, 4] -&gt; [1, 4] -&gt; <strong>[1, 5]</strong> (2 operations).\nTotal of operations: 1 + 2 + 2 = 5.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,2]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Increment by 1 (both elements) [0, 0] -&gt; [0, 1] -&gt; [1, 1] (2 operations).\nDouble all the elements: [1, 1] -&gt; <strong>[2, 2]</strong> (1 operation).\nTotal of operations: 2 + 1 = 3.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,2,5]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> (initial)[0,0,0] -&gt; [1,0,0] -&gt; [1,0,1] -&gt; [2,0,2] -&gt; [2,1,2] -&gt; [4,2,4] -&gt; <strong>[4,2,5]</strong>(nums).\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,2,4]\n<strong>Output:</strong> 7\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,4,8,16]\n<strong>Output:</strong> 8\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10^5</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10^9</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"9K\", \"totalSubmission\": \"14.4K\", \"totalAcceptedRaw\": 9014, \"totalSubmissionRaw\": 14405, \"acRate\": \"62.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1557", "name": "minimum-number-of-vertices-to-reach-all-nodes", "content": {"questionId": "1661", "questionFrontendId": "1557", "questionTitle": "Minimum Number of Vertices to Reach All Nodes", "questionTitleSlug": "minimum-number-of-vertices-to-reach-all-nodes", "content": "<p>Given a<strong>&nbsp;directed acyclic graph</strong>,&nbsp;with&nbsp;<code>n</code>&nbsp;vertices numbered from&nbsp;<code>0</code>&nbsp;to&nbsp;<code>n-1</code>,&nbsp;and an array&nbsp;<code>edges</code>&nbsp;where&nbsp;<code>edges[i] = [from<sub>i</sub>, to<sub>i</sub>]</code>&nbsp;represents a directed edge from node&nbsp;<code>from<sub>i</sub></code>&nbsp;to node&nbsp;<code>to<sub>i</sub></code>.</p>\r\n\r\n<p>Find <em>the smallest set of vertices from which all nodes in the graph are reachable</em>. It&#39;s guaranteed that a unique solution exists.</p>\r\n\r\n<p>Notice that you can return the vertices in any order.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/07/untitled22.png\" style=\"width: 231px; height: 181px;\" /></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 6, edges = [[0,1],[0,2],[2,5],[3,4],[4,2]]\r\n<strong>Output:</strong> [0,3]\r\n<b>Explanation: </b>It&#39;s not possible to reach all the nodes from a single vertex. From 0 we can reach [0,1,2,5]. From 3 we can reach [3,4,2,5]. So we output [0,3].</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/07/untitled.png\" style=\"width: 201px; height: 201px;\" /></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 5, edges = [[0,1],[2,1],[3,1],[1,4],[2,4]]\r\n<strong>Output:</strong> [0,2,3]\r\n<strong>Explanation: </strong>Notice that vertices 0, 3 and 2 are not reachable from any other node, so we must include them. Also any of these vertices can reach nodes 1 and 4.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>2 &lt;= n &lt;= 10^5</code></li>\r\n\t<li><code>1 &lt;= edges.length &lt;= min(10^5, n * (n - 1) / 2)</code></li>\r\n\t<li><code>edges[i].length == 2</code></li>\r\n\t<li><code>0 &lt;= from<sub>i,</sub>&nbsp;to<sub>i</sub> &lt; n</code></li>\r\n\t<li>All pairs <code>(from<sub>i</sub>, to<sub>i</sub>)</code> are distinct.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"17.5K\", \"totalSubmission\": \"23.4K\", \"totalAcceptedRaw\": 17542, \"totalSubmissionRaw\": 23416, \"acRate\": \"74.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Graph", "slug": "graph"}]}}, {"id": "1536", "name": "minimum-swaps-to-arrange-a-binary-grid", "content": {"questionId": "1658", "questionFrontendId": "1536", "questionTitle": "Minimum Swaps to Arrange a Binary Grid", "questionTitleSlug": "minimum-swaps-to-arrange-a-binary-grid", "content": "<p>Given an <code>n&nbsp;x n</code>&nbsp;binary <code>grid</code>, in one step you can choose two <strong>adjacent rows</strong> of the grid and swap them.</p>\n\n<p>A grid is said to be <strong>valid</strong> if all the cells above the main diagonal are <strong>zeros</strong>.</p>\n\n<p>Return <em>the minimum number of steps</em> needed to make the grid valid, or <strong>-1</strong> if the grid cannot be valid.</p>\n\n<p>The main diagonal of a grid is the diagonal that starts at cell <code>(1, 1)</code> and ends at cell <code>(n, n)</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/28/fw.jpg\" style=\"width: 750px; height: 141px;\" />\n<pre>\n<strong>Input:</strong> grid = [[0,0,1],[1,1,0],[1,0,0]]\n<strong>Output:</strong> 3\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/16/e2.jpg\" style=\"width: 270px; height: 270px;\" />\n<pre>\n<strong>Input:</strong> grid = [[0,1,1,0],[0,1,1,0],[0,1,1,0],[0,1,1,0]]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> All rows are similar, swaps have no effect on the grid.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/16/e3.jpg\" style=\"width: 200px; height: 200px;\" />\n<pre>\n<strong>Input:</strong> grid = [[1,0,0],[1,1,0],[1,1,1]]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= n&nbsp;&lt;= 200</code></li>\n\t<li><code>grid[i][j]</code> is <code>0</code> or <code>1</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"7.9K\", \"totalSubmission\": \"18.3K\", \"totalAcceptedRaw\": 7888, \"totalSubmissionRaw\": 18340, \"acRate\": \"43.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1535", "name": "find-the-winner-of-an-array-game", "content": {"questionId": "1657", "questionFrontendId": "1535", "questionTitle": "Find the Winner of an Array Game", "questionTitleSlug": "find-the-winner-of-an-array-game", "content": "<p>Given an integer array <code>arr</code> of <strong>distinct</strong> integers and an integer <code>k</code>.</p>\r\n\r\n<p>A game will be played between the first two elements of the array (i.e. <code>arr[0]</code> and <code>arr[1]</code>). In each round of the game, we compare <code>arr[0]</code> with <code>arr[1]</code>, the larger integer&nbsp;wins and remains at position <code>0</code> and the smaller integer moves to the end of the array. The game ends when an integer wins <code>k</code> consecutive rounds.</p>\r\n\r\n<p>Return <em>the integer which will win the game</em>.</p>\r\n\r\n<p>It is <strong>guaranteed</strong> that there will be a winner of the game.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [2,1,3,5,4,6,7], k = 2\r\n<strong>Output:</strong> 5\r\n<strong>Explanation:</strong> Let&#39;s see the rounds of the game:\r\nRound |       arr       | winner | win_count\r\n  1   | [2,1,3,5,4,6,7] | 2      | 1\r\n  2   | [2,3,5,4,6,7,1] | 3      | 1\r\n  3   | [3,5,4,6,7,1,2] | 5      | 1\r\n  4   | [5,4,6,7,1,2,3] | 5      | 2\r\nSo we can see that 4 rounds will be played and 5 is the winner because it wins 2 consecutive games.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [3,2,1], k = 10\r\n<strong>Output:</strong> 3\r\n<strong>Explanation:</strong> 3 will win the first 10 rounds consecutively.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [1,9,8,2,3,7,6,4,5], k = 7\r\n<strong>Output:</strong> 9\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [1,11,22,33,44,55,66,77,88,99], k = 1000000000\r\n<strong>Output:</strong> 99\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>2 &lt;= arr.length &lt;= 10^5</code></li>\r\n\t<li><code>1 &lt;= arr[i] &lt;= 10^6</code></li>\r\n\t<li><code>arr</code> contains <b>distinct</b>&nbsp;integers.</li>\r\n\t<li><code>1 &lt;= k &lt;= 10^9</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"16.9K\", \"totalSubmission\": \"36K\", \"totalAcceptedRaw\": 16927, \"totalSubmissionRaw\": 36021, \"acRate\": \"47.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "1530", "name": "number-of-good-leaf-nodes-pairs", "content": {"questionId": "1653", "questionFrontendId": "1530", "questionTitle": "Number of Good Leaf Nodes Pairs", "questionTitleSlug": "number-of-good-leaf-nodes-pairs", "content": "<p>Given the <code>root</code> of a binary tree and an integer <code>distance</code>. A pair of two different <strong>leaf</strong> nodes of a binary tree is said to be good if the length of <strong>the shortest path</strong> between them is less than or equal to <code>distance</code>.</p>\r\n\r\n<p>Return <em>the number of good leaf node pairs</em> in the tree.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/09/e1.jpg\" style=\"width: 321px; height: 321px;\" />\r\n<pre>\r\n<strong>Input:</strong> root = [1,2,3,null,4], distance = 3\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong> The leaf nodes of the tree are 3 and 4 and the length of the shortest path between them is 3. This is the only good pair.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/09/e2.jpg\" style=\"width: 441px; height: 321px;\" />\r\n<pre>\r\n<strong>Input:</strong> root = [1,2,3,4,5,6,7], distance = 3\r\n<strong>Output:</strong> 2\r\n<strong>Explanation:</strong> The good pairs are [4,5] and [6,7] with shortest path = 2. The pair [4,6] is not good because the length of ther shortest path between them is 4.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [7,1,4,6,null,5,3,null,null,null,null,null,2], distance = 3\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong> The only good pair is [2,5].\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [100], distance = 1\r\n<strong>Output:</strong> 0\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [1,1,1], distance = 2\r\n<strong>Output:</strong> 1\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li>The number of nodes in the&nbsp;<code>tree</code>&nbsp;is in the range&nbsp;<code>[1, 2^10].</code></li>\r\n\t<li>Each node&#39;s value is between&nbsp;<code>[1, 100]</code>.</li>\r\n\t<li><code>1 &lt;= distance &lt;= 10</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13.7K\", \"totalSubmission\": \"24.6K\", \"totalAcceptedRaw\": 13690, \"totalSubmissionRaw\": 24607, \"acRate\": \"55.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1529", "name": "bulb-switcher-iv", "content": {"questionId": "1652", "questionFrontendId": "1529", "questionTitle": "Bulb Switcher IV", "questionTitleSlug": "bulb-switcher-iv", "content": "<p>There is a room with <code>n</code>&nbsp;bulbs, numbered from <code>0</code> to&nbsp;<code>n-1</code>,&nbsp;arranged in a row from left to right. Initially all the bulbs are <strong>turned off</strong>.</p>\n\n<p>Your task is to obtain the configuration represented by <code>target</code> where&nbsp;<code>target[i]</code> is &#39;1&#39; if the i-th bulb is turned on and is &#39;0&#39; if it is turned off.</p>\n\n<p>You have a switch&nbsp;to flip the state of the bulb,&nbsp;a flip operation is defined as follows:</p>\n\n<ul>\n\t<li>Choose <strong>any</strong> bulb (index&nbsp;<code>i</code>)&nbsp;of your current configuration.</li>\n\t<li>Flip each bulb from index&nbsp;<code>i</code> to&nbsp;<code>n-1</code>.</li>\n</ul>\n\n<p>When any bulb is flipped it means that if it is 0 it changes to 1 and if it is 1 it changes to 0.</p>\n\n<p>Return the <strong>minimum</strong> number of flips required to form <code>target</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> target = &quot;10111&quot;\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>Initial configuration &quot;00000&quot;.\nflip from the third bulb:  &quot;00000&quot; -&gt; &quot;00111&quot;\nflip from the first bulb:  &quot;00111&quot; -&gt; &quot;11000&quot;\nflip from the second bulb:  &quot;11000&quot; -&gt; &quot;10111&quot;\nWe need at least 3 flip operations to form target.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> target = &quot;101&quot;\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>&quot;000&quot; -&gt; &quot;111&quot; -&gt; &quot;100&quot; -&gt; &quot;101&quot;.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> target = &quot;00000&quot;\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> target = &quot;001011101&quot;\n<strong>Output:</strong> 5\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= target.length &lt;= 10^5</code></li>\n\t<li><code>target[i] == &#39;0&#39;</code>&nbsp;or <code>target[i] == &#39;1&#39;</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"18.2K\", \"totalSubmission\": \"25.6K\", \"totalAcceptedRaw\": 18162, \"totalSubmissionRaw\": 25642, \"acRate\": \"70.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "1506", "name": "find-root-of-n-ary-tree", "content": {"questionId": "1650", "questionFrontendId": "1506", "questionTitle": "Find Root of N-Ary Tree", "questionTitleSlug": "find-root-of-n-ary-tree", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"3.3K\", \"totalSubmission\": \"4.1K\", \"totalAcceptedRaw\": 3317, \"totalSubmissionRaw\": 4093, \"acRate\": \"81.0%\"}", "similarQuestions": "[{\"title\": \"Move Sub-Tree of N-Ary Tree\", \"titleSlug\": \"move-sub-tree-of-n-ary-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "1546", "name": "maximum-number-of-non-overlapping-subarrays-with-sum-equals-target", "content": {"questionId": "1649", "questionFrontendId": "1546", "questionTitle": "Maximum Number of Non-Overlapping Subarrays With Sum Equals Target", "questionTitleSlug": "maximum-number-of-non-overlapping-subarrays-with-sum-equals-target", "content": "<p>Given an array <code>nums</code> and an integer <code><font face=\"monospace\">target</font></code>.</p>\n\n<p>Return the maximum number of <strong>non-empty</strong>&nbsp;<strong>non-overlapping</strong> subarrays such that the sum of values in each subarray is equal to <code><font face=\"monospace\">target</font></code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,1,1,1], target = 2\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>There are 2 non-overlapping subarrays [<strong>1,1</strong>,1,<strong>1,1</strong>] with sum equals to target(2).\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,3,5,1,4,2,-9], target = 6\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>There are 3 subarrays with sum equal to 6.\n([5,1], [4,2], [3,5,1,4,2,-9]) but only the first 2 are non-overlapping.</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-2,6,6,3,5,4,1,2,8], target = 10\n<strong>Output:</strong> 3\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,0,0], target = 0\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;=&nbsp;10^5</code></li>\n\t<li><code>-10^4 &lt;= nums[i] &lt;=&nbsp;10^4</code></li>\n\t<li><code>0 &lt;= target &lt;= 10^6</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11.9K\", \"totalSubmission\": \"27.4K\", \"totalAcceptedRaw\": 11928, \"totalSubmissionRaw\": 27350, \"acRate\": \"43.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1541", "name": "minimum-insertions-to-balance-a-parentheses-string", "content": {"questionId": "1648", "questionFrontendId": "1541", "questionTitle": "Minimum Insertions to Balance a Parentheses String", "questionTitleSlug": "minimum-insertions-to-balance-a-parentheses-string", "content": "<p>Given a parentheses string <code>s</code> containing only the characters <code>&#39;(&#39;</code> and <code>&#39;)&#39;</code>. A parentheses string is <strong>balanced</strong> if:</p>\n\n<ul>\n\t<li>Any left parenthesis&nbsp;<code>&#39;(&#39;</code>&nbsp;must have a corresponding two consecutive right parenthesis&nbsp;<code>&#39;))&#39;</code>.</li>\n\t<li>Left parenthesis&nbsp;<code>&#39;(&#39;</code>&nbsp;must go before the corresponding two&nbsp;consecutive right parenthesis&nbsp;<code>&#39;))&#39;</code>.</li>\n</ul>\n\n<p>In other words, we treat <code>&#39;(&#39;</code> as openning parenthesis and <code>&#39;))&#39;</code> as closing parenthesis.</p>\n\n<p>For example, <code>&quot;())&quot;</code>, <code>&quot;())(())))&quot;</code> and <code>&quot;(())())))&quot;</code> are&nbsp;balanced, <code>&quot;)()&quot;</code>, <code>&quot;()))&quot;</code> and <code>&quot;(()))&quot;</code> are not balanced.</p>\n\n<p>You can insert the characters <code>&#39;(&#39;</code> and <code>&#39;)&#39;</code> at any position of the string to balance it if needed.</p>\n\n<p>Return <em>the minimum number of insertions</em> needed to make <code>s</code> balanced.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;(()))&quot;\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The second &#39;(&#39; has two matching &#39;))&#39;, but the first &#39;(&#39; has only &#39;)&#39; matching. We need to to add one more &#39;)&#39; at the end of the string to be &quot;(())))&quot; which is balanced.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;())&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The string is already balanced.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;))())(&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Add &#39;(&#39; to match the first &#39;))&#39;, Add &#39;))&#39; to match the last &#39;(&#39;.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;((((((&quot;\n<strong>Output:</strong> 12\n<strong>Explanation:</strong> Add 12 &#39;)&#39; to balance the string.\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;)))))))&quot;\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> Add 4 &#39;(&#39; at the beginning of the string and one &#39;)&#39; at the end. The string becomes &quot;(((())))))))&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10^5</code></li>\n\t<li><code>s</code> consists of <code>&#39;(&#39;</code> and <code>&#39;)&#39;</code> only.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"9K\", \"totalSubmission\": \"21.4K\", \"totalAcceptedRaw\": 9046, \"totalSubmissionRaw\": 21358, \"acRate\": \"42.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Stack", "slug": "stack"}]}}, {"id": "1540", "name": "can-convert-string-in-k-moves", "content": {"questionId": "1647", "questionFrontendId": "1540", "questionTitle": "Can Convert String in K Moves", "questionTitleSlug": "can-convert-string-in-k-moves", "content": "<p>Given two strings&nbsp;<code>s</code>&nbsp;and&nbsp;<code>t</code>, your goal is to convert&nbsp;<code>s</code>&nbsp;into&nbsp;<code>t</code>&nbsp;in&nbsp;<code>k</code><strong>&nbsp;</strong>moves or less.</p>\n\n<p>During the&nbsp;<code>i<sup>th</sup></code>&nbsp;(<font face=\"monospace\"><code>1 &lt;= i &lt;= k</code>)&nbsp;</font>move you can:</p>\n\n<ul>\n\t<li>Choose any index&nbsp;<code>j</code>&nbsp;(1-indexed) from&nbsp;<code>s</code>, such that&nbsp;<code>1 &lt;= j &lt;= s.length</code>&nbsp;and <code>j</code>&nbsp;has not been chosen in any previous move,&nbsp;and shift the character at that index&nbsp;<code>i</code>&nbsp;times.</li>\n\t<li>Do nothing.</li>\n</ul>\n\n<p>Shifting a character means replacing it by the next letter in the alphabet&nbsp;(wrapping around so that&nbsp;<code>&#39;z&#39;</code>&nbsp;becomes&nbsp;<code>&#39;a&#39;</code>). Shifting a character by&nbsp;<code>i</code>&nbsp;means applying the shift operations&nbsp;<code>i</code>&nbsp;times.</p>\n\n<p>Remember that any index&nbsp;<code>j</code>&nbsp;can be picked at most once.</p>\n\n<p>Return&nbsp;<code>true</code>&nbsp;if it&#39;s possible to convert&nbsp;<code>s</code>&nbsp;into&nbsp;<code>t</code>&nbsp;in no more than&nbsp;<code>k</code>&nbsp;moves, otherwise return&nbsp;<code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;input&quot;, t = &quot;ouput&quot;, k = 9\n<strong>Output:</strong> true\n<b>Explanation: </b>In the 6th move, we shift &#39;i&#39; 6 times to get &#39;o&#39;. And in the 7th move we shift &#39;n&#39; to get &#39;u&#39;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abc&quot;, t = &quot;bcd&quot;, k = 10\n<strong>Output:</strong> false\n<strong>Explanation: </strong>We need to shift each character in s one time to convert it into t. We can shift &#39;a&#39; to &#39;b&#39; during the 1st move. However, there is no way to shift the other characters in the remaining moves to obtain t from s.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aab&quot;, t = &quot;bbb&quot;, k = 27\n<strong>Output:</strong> true\n<b>Explanation: </b>In the 1st move, we shift the first &#39;a&#39; 1 time to get &#39;b&#39;. In the 27th move, we shift the second &#39;a&#39; 27 times to get &#39;b&#39;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length, t.length &lt;= 10^5</code></li>\n\t<li><code>0 &lt;= k &lt;= 10^9</code></li>\n\t<li><code>s</code>, <code>t</code> contain&nbsp;only lowercase English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"8.6K\", \"totalSubmission\": \"28.5K\", \"totalAcceptedRaw\": 8649, \"totalSubmissionRaw\": 28535, \"acRate\": \"30.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1519", "name": "number-of-nodes-in-the-sub-tree-with-the-same-label", "content": {"questionId": "1643", "questionFrontendId": "1519", "questionTitle": "Number of Nodes in the Sub-Tree With the Same Label", "questionTitleSlug": "number-of-nodes-in-the-sub-tree-with-the-same-label", "content": "<p>Given a tree (i.e. a connected, undirected graph that has no cycles) consisting of <code>n</code> nodes numbered from <code>0</code> to <code>n - 1</code> and exactly <code>n - 1</code> <code>edges</code>. The <strong>root</strong> of the tree is the node <code>0</code>, and each node of the tree has <strong>a label</strong> which is a lower-case character given in the string <code>labels</code> (i.e. The node with the number <code>i</code> has the label <code>labels[i]</code>).</p>\r\n\r\n<p>The <code>edges</code> array is given on the form <code>edges[i] = [a<sub>i</sub>, b<sub>i</sub>]</code>, which means there is an edge between nodes <code>a<sub>i</sub></code> and <code>b<sub>i</sub></code> in the tree.</p>\r\n\r\n<p>Return <em>an array of size <code>n</code></em> where <code>ans[i]</code> is the number of nodes in the subtree of the&nbsp;<code>i<sup>th</sup></code>&nbsp;node which have the same label as node <code>i</code>.</p>\r\n\r\n<p>A&nbsp;subtree&nbsp;of a tree&nbsp;<code>T</code> is the tree consisting of a node in <code>T</code> and all of its descendant&nbsp;nodes.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/01/q3e1.jpg\" style=\"width: 441px; height: 321px;\" />\r\n<pre>\r\n<strong>Input:</strong> n = 7, edges = [[0,1],[0,2],[1,4],[1,5],[2,3],[2,6]], labels = &quot;abaedcd&quot;\r\n<strong>Output:</strong> [2,1,1,1,1,1,1]\r\n<strong>Explanation:</strong> Node 0 has label &#39;a&#39; and its sub-tree has node 2 with label &#39;a&#39; as well, thus the answer is 2. Notice that any node is part of its sub-tree.\r\nNode 1 has a label &#39;b&#39;. The sub-tree of node 1 contains nodes 1,4 and 5, as nodes 4 and 5 have different labels than node 1, the answer is just 1 (the node itself).\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/01/q3e2.jpg\" style=\"width: 381px; height: 321px;\" />\r\n<pre>\r\n<strong>Input:</strong> n = 4, edges = [[0,1],[1,2],[0,3]], labels = &quot;bbbb&quot;\r\n<strong>Output:</strong> [4,2,1,1]\r\n<strong>Explanation:</strong> The sub-tree of node 2 contains only node 2, so the answer is 1.\r\nThe sub-tree of node 3 contains only node 3, so the answer is 1.\r\nThe sub-tree of node 1 contains nodes 1 and 2, both have label &#39;b&#39;, thus the answer is 2.\r\nThe sub-tree of node 0 contains nodes 0, 1, 2 and 3, all with label &#39;b&#39;, thus the answer is 4.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/01/q3e3.jpg\" style=\"width: 381px; height: 321px;\" />\r\n<pre>\r\n<strong>Input:</strong> n = 5, edges = [[0,1],[0,2],[1,3],[0,4]], labels = &quot;aabab&quot;\r\n<strong>Output:</strong> [3,2,1,1,1]\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 6, edges = [[0,1],[0,2],[1,3],[3,4],[4,5]], labels = &quot;cbabaa&quot;\r\n<strong>Output:</strong> [1,2,1,1,2,1]\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 7, edges = [[0,1],[1,2],[2,3],[3,4],[4,5],[5,6]], labels = &quot;aaabaaa&quot;\r\n<strong>Output:</strong> [6,5,4,1,3,2,1]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= n &lt;= 10^5</code></li>\r\n\t<li><code>edges.length == n - 1</code></li>\r\n\t<li><code>edges[i].length == 2</code></li>\r\n\t<li><code>0 &lt;= a<sub>i</sub>,&nbsp;b<sub>i</sub> &lt; n</code></li>\r\n\t<li><code>a<sub>i</sub> !=&nbsp;b<sub>i</sub></code></li>\r\n\t<li><code>labels.length == n</code></li>\r\n\t<li><code>labels</code> is consisting of only of lower-case English letters.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11K\", \"totalSubmission\": \"29.9K\", \"totalAcceptedRaw\": 10962, \"totalSubmissionRaw\": 29930, \"acRate\": \"36.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1501", "name": "countries-you-can-safely-invest-in", "content": {"questionId": "1641", "questionFrontendId": "1501", "questionTitle": "Countries You Can Safely Invest In", "questionTitleSlug": "countries-you-can-safely-invest-in", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"4.7K\", \"totalSubmission\": \"7.8K\", \"totalAcceptedRaw\": 4663, \"totalSubmissionRaw\": 7759, \"acRate\": \"60.1%\"}", "similarQuestions": "[{\"title\": \"Average Salary: Departments VS Company\", \"titleSlug\": \"average-salary-departments-vs-company\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1500", "name": "design-a-file-sharing-system", "content": {"questionId": "1640", "questionFrontendId": "1500", "questionTitle": "Design a File Sharing System", "questionTitleSlug": "design-a-file-sharing-system", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"1.4K\", \"totalSubmission\": \"3K\", \"totalAcceptedRaw\": 1376, \"totalSubmissionRaw\": 2999, \"acRate\": \"45.9%\"}", "similarQuestions": "[{\"title\": \"Design Twitter\", \"titleSlug\": \"design-twitter\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Design", "slug": "design"}]}}, {"id": "1513", "name": "number-of-substrings-with-only-1s", "content": {"questionId": "1636", "questionFrontendId": "1513", "questionTitle": "Number of Substrings With Only 1s", "questionTitleSlug": "number-of-substrings-with-only-1s", "content": "<p>Given a binary string&nbsp;<code>s</code>&nbsp;(a string consisting only of &#39;0&#39; and &#39;1&#39;s).</p>\r\n\r\n<p>Return the number of substrings with all characters 1&#39;s.</p>\r\n\r\n<p>Since the answer&nbsp;may be too large,&nbsp;return it modulo&nbsp;10^9 + 7.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;0110111&quot;\r\n<strong>Output:</strong> 9\r\n<strong>Explanation: </strong>There are 9 substring in total with only 1&#39;s characters.\r\n&quot;1&quot; -&gt; 5 times.\r\n&quot;11&quot; -&gt; 3 times.\r\n&quot;111&quot; -&gt; 1 time.</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;101&quot;\r\n<strong>Output:</strong> 2\r\n<strong>Explanation: </strong>Substring &quot;1&quot; is shown 2 times in s.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;111111&quot;\r\n<strong>Output:</strong> 21\r\n<strong>Explanation: </strong>Each substring contains only 1&#39;s characters.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;000&quot;\r\n<strong>Output:</strong> 0\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>s[i] == &#39;0&#39;</code> or <code>s[i] == &#39;1&#39;</code></li>\r\n\t<li><code>1 &lt;= s.length &lt;= 10^5</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"18.2K\", \"totalSubmission\": \"44.3K\", \"totalAcceptedRaw\": 18211, \"totalSubmissionRaw\": 44254, \"acRate\": \"41.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "String", "slug": "string"}]}}, {"id": "1490", "name": "clone-n-ary-tree", "content": {"questionId": "1634", "questionFrontendId": "1490", "questionTitle": "Clone N-ary Tree", "questionTitleSlug": "clone-n-ary-tree", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"6.8K\", \"totalSubmission\": \"8.1K\", \"totalAcceptedRaw\": 6761, \"totalSubmissionRaw\": 8076, \"acRate\": \"83.7%\"}", "similarQuestions": "[{\"title\": \"Clone Graph\", \"titleSlug\": \"clone-graph\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Copy List with Random Pointer\", \"titleSlug\": \"copy-list-with-random-pointer\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Clone Binary Tree With Random Pointer\", \"titleSlug\": \"clone-binary-tree-with-random-pointer\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1525", "name": "number-of-good-ways-to-split-a-string", "content": {"questionId": "1632", "questionFrontendId": "1525", "questionTitle": "Number of Good Ways to Split a String", "questionTitleSlug": "number-of-good-ways-to-split-a-string", "content": "<p>You are given a string <code>s</code>, a&nbsp;split is called <em>good</em>&nbsp;if you can split&nbsp;<code>s</code> into 2&nbsp;non-empty strings <code>p</code> and <code>q</code> where its concatenation is equal to <code>s</code> and the number of distinct letters in <code>p</code> and <code>q</code> are the same.</p>\r\n\r\n<p>Return the number of <em>good</em> splits you can make in <code>s</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;aacaba&quot;\r\n<strong>Output:</strong> 2\r\n<strong>Explanation:</strong> There are 5 ways to split <code>&quot;aacaba&quot;</code> and 2 of them are good. \r\n(&quot;a&quot;, &quot;acaba&quot;) Left string and right string contains 1 and 3 different letters respectively.\r\n(&quot;aa&quot;, &quot;caba&quot;) Left string and right string contains 1 and 3 different letters respectively.\r\n(&quot;aac&quot;, &quot;aba&quot;) Left string and right string contains 2 and 2 different letters respectively (good split).\r\n(&quot;aaca&quot;, &quot;ba&quot;) Left string and right string contains 2 and 2 different letters respectively (good split).\r\n(&quot;aacab&quot;, &quot;a&quot;) Left string and right string contains 3 and 1 different letters respectively.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;abcd&quot;\r\n<strong>Output:</strong> 1\r\n<strong>Explanation: </strong>Split the string as follows (&quot;ab&quot;, &quot;cd&quot;).\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;aaaaa&quot;\r\n<strong>Output:</strong> 4\r\n<strong>Explanation: </strong>All possible splits are good.</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;acbadbaada&quot;\r\n<strong>Output:</strong> 2\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>s</code> contains only lowercase English letters.</li>\r\n\t<li><code>1 &lt;= s.length &lt;= 10^5</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"15.2K\", \"totalSubmission\": \"22.7K\", \"totalAcceptedRaw\": 15175, \"totalSubmissionRaw\": 22711, \"acRate\": \"66.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "1524", "name": "number-of-sub-arrays-with-odd-sum", "content": {"questionId": "1631", "questionFrontendId": "1524", "questionTitle": "Number of Sub-arrays With Odd Sum", "questionTitleSlug": "number-of-sub-arrays-with-odd-sum", "content": "<p>Given an array of integers <code>arr</code>. Return <em>the number of sub-arrays</em> with <strong>odd</strong> sum.</p>\r\n\r\n<p>As the answer may grow large, the answer&nbsp;<strong>must be</strong>&nbsp;computed modulo&nbsp;<code>10^9 + 7</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [1,3,5]\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> All sub-arrays are [[1],[1,3],[1,3,5],[3],[3,5],[5]]\r\nAll sub-arrays sum are [1,4,9,3,8,5].\r\nOdd sums are [1,9,3,5] so the answer is 4.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [2,4,6]\r\n<strong>Output:</strong> 0\r\n<strong>Explanation:</strong> All sub-arrays are [[2],[2,4],[2,4,6],[4],[4,6],[6]]\r\nAll sub-arrays sum are [2,6,12,4,10,6].\r\nAll sub-arrays have even sum and the answer is 0.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [1,2,3,4,5,6,7]\r\n<strong>Output:</strong> 16\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [100,100,99,99]\r\n<strong>Output:</strong> 4\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [7]\r\n<strong>Output:</strong> 1\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= arr.length &lt;= 10^5</code></li>\r\n\t<li><code>1 &lt;= arr[i] &lt;= 100</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11K\", \"totalSubmission\": \"28.2K\", \"totalAcceptedRaw\": 11042, \"totalSubmissionRaw\": 28163, \"acRate\": \"39.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Math", "slug": "math"}]}}, {"id": "1504", "name": "count-submatrices-with-all-ones", "content": {"questionId": "1628", "questionFrontendId": "1504", "questionTitle": "Count Submatrices With All Ones", "questionTitleSlug": "count-submatrices-with-all-ones", "content": "<p>Given a&nbsp;<code>rows * columns</code>&nbsp;matrix <code>mat</code> of ones and zeros, return how many&nbsp;<strong>submatrices</strong> have all ones.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> mat = [[1,0,1],\r\n&nbsp;             [1,1,0],\r\n&nbsp;             [1,1,0]]\r\n<strong>Output:</strong> 13\r\n<strong>Explanation:\r\n</strong>There are <b>6</b> rectangles of side 1x1.\r\nThere are <b>2</b> rectangles of side 1x2.\r\nThere are <b>3</b> rectangles of side 2x1.\r\nThere is <b>1</b> rectangle of side 2x2. \r\nThere is <b>1</b> rectangle of side 3x1.\r\nTotal number of rectangles = 6 + 2 + 3 + 1 + 1 = <strong>13.</strong>\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> mat = [[0,1,1,0],\r\n&nbsp;             [0,1,1,1],\r\n&nbsp;             [1,1,1,0]]\r\n<strong>Output:</strong> 24\r\n<strong>Explanation:</strong>\r\nThere are <b>8</b> rectangles of side 1x1.\r\nThere are <b>5</b> rectangles of side 1x2.\r\nThere are <b>2</b> rectangles of side 1x3. \r\nThere are <b>4</b> rectangles of side 2x1.\r\nThere are <b>2</b> rectangles of side 2x2. \r\nThere are <b>2</b> rectangles of side 3x1. \r\nThere is <b>1</b> rectangle of side 3x2. \r\nTotal number of rectangles = 8 + 5 + 2 + 4 + 2 + 2 + 1 = 24<strong>.</strong>\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> mat = [[1,1,1,1,1,1]]\r\n<strong>Output:</strong> 21\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> mat = [[1,0,1],[0,1,0],[1,0,1]]\r\n<strong>Output:</strong> 5\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= rows&nbsp;&lt;= 150</code></li>\r\n\t<li><code>1 &lt;= columns&nbsp;&lt;= 150</code></li>\r\n\t<li><code>0 &lt;= mat[i][j] &lt;= 1</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"16.9K\", \"totalSubmission\": \"27.6K\", \"totalAcceptedRaw\": 16866, \"totalSubmissionRaw\": 27623, \"acRate\": \"61.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1503", "name": "last-moment-before-all-ants-fall-out-of-a-plank", "content": {"questionId": "1627", "questionFrontendId": "1503", "questionTitle": "Last Moment Before All Ants Fall Out of a Plank", "questionTitleSlug": "last-moment-before-all-ants-fall-out-of-a-plank", "content": "<p>We have a wooden&nbsp;plank of the length <code>n</code> <strong>units</strong>. Some ants are walking on the&nbsp;plank, each ant moves with speed <strong>1 unit per second</strong>. Some of the ants move to the <strong>left</strong>, the other move to the <strong>right</strong>.</p>\r\n\r\n<p>When two ants moving in two <strong>different</strong> directions meet at some point, they change their directions and continue moving again. Assume changing directions doesn&#39;t take any additional time.</p>\r\n\r\n<p>When an ant reaches <strong>one end</strong> of the plank at a time <code>t</code>, it falls out of the plank imediately.</p>\r\n\r\n<p>Given an integer <code>n</code> and two integer arrays <code>left</code> and <code>right</code>, the positions of the ants moving to the left and the right.&nbsp;Return <em>the&nbsp;moment</em> when the last ant(s) fall out of the plank.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/06/17/ants.jpg\" style=\"width: 450px; height: 610px;\" />\r\n<pre>\r\n<strong>Input:</strong> n = 4, left = [4,3], right = [0,1]\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> In the image above:\r\n-The ant at index 0 is named A and going to the right.\r\n-The ant at index 1 is named B and going to the right.\r\n-The ant at index 3 is named C and going to the left.\r\n-The ant at index 4 is named D and going to the left.\r\nNote that the last moment when an ant was on the plank is t = 4 second, after that it falls imediately out of the plank. (i.e. We can say that at t = 4.0000000001, there is no ants on the plank).\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/06/17/ants2.jpg\" style=\"width: 639px; height: 101px;\" />\r\n<pre>\r\n<strong>Input:</strong> n = 7, left = [], right = [0,1,2,3,4,5,6,7]\r\n<strong>Output:</strong> 7\r\n<strong>Explanation:</strong> All ants are going to the right, the ant at index 0 needs 7 seconds to fall.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/06/17/ants3.jpg\" style=\"width: 639px; height: 100px;\" />\r\n<pre>\r\n<strong>Input:</strong> n = 7, left = [0,1,2,3,4,5,6,7], right = []\r\n<strong>Output:</strong> 7\r\n<strong>Explanation:</strong> All ants are going to the left, the ant at index 7 needs 7 seconds to fall.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 9, left = [5], right = [4]\r\n<strong>Output:</strong> 5\r\n<strong>Explanation:</strong> At t = 1 second, both ants will be at the same intial position but with different direction.\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 6, left = [6], right = [0]\r\n<strong>Output:</strong> 6\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= n &lt;= 10^4</code></li>\r\n\t<li><code>0 &lt;= left.length &lt;= n + 1</code></li>\r\n\t<li><code>0 &lt;= left[i] &lt;= n</code></li>\r\n\t<li><code>0 &lt;= right.length &lt;= n + 1</code></li>\r\n\t<li><code>0 &lt;= right[i] &lt;= n</code></li>\r\n\t<li><code>1 &lt;= left.length + right.length &lt;= n + 1</code></li>\r\n\t<li>All values of <code>left</code> and <code>right</code> are unique, and each value can appear <strong>only in one</strong> of the two arrays.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11K\", \"totalSubmission\": \"20.9K\", \"totalAcceptedRaw\": 11034, \"totalSubmissionRaw\": 20868, \"acRate\": \"52.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Brainteaser", "slug": "brainteaser"}]}}, {"id": "1485", "name": "clone-binary-tree-with-random-pointer", "content": {"questionId": "1624", "questionFrontendId": "1485", "questionTitle": "Clone Binary Tree With Random Pointer", "questionTitleSlug": "clone-binary-tree-with-random-pointer", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"5.4K\", \"totalSubmission\": \"6.7K\", \"totalAcceptedRaw\": 5389, \"totalSubmissionRaw\": 6742, \"acRate\": \"79.9%\"}", "similarQuestions": "[{\"title\": \"Clone Graph\", \"titleSlug\": \"clone-graph\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Copy List with Random Pointer\", \"titleSlug\": \"copy-list-with-random-pointer\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Clone N-ary Tree\", \"titleSlug\": \"clone-n-ary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1498", "name": "number-of-subsequences-that-satisfy-the-given-sum-condition", "content": {"questionId": "1621", "questionFrontendId": "1498", "questionTitle": "Number of Subsequences That Satisfy the Given Sum Condition", "questionTitleSlug": "number-of-subsequences-that-satisfy-the-given-sum-condition", "content": "<p>Given an array of integers <code>nums</code> and an integer <code>target</code>.</p>\n\n<p>Return the number of <strong>non-empty</strong> subsequences of <code>nums</code> such that the sum of the minimum and maximum element on it is less or equal to&nbsp;<code>target</code>. Since the answer&nbsp;may be too large,&nbsp;return it modulo&nbsp;<code>10<sup>9</sup> + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,5,6,7], target = 9\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>There are 4 subsequences that satisfy the condition.\n[3] -&gt; Min value + max value &lt;= target (3 + 3 &lt;= 9)\n[3,5] -&gt; (3 + 5 &lt;= 9)\n[3,5,6] -&gt; (3 + 6 &lt;= 9)\n[3,6] -&gt; (3 + 6 &lt;= 9)\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,3,6,8], target = 10\n<strong>Output:</strong> 6\n<strong>Explanation: </strong>There are 6 subsequences that satisfy the condition. (nums can have repeated numbers).\n[3] , [3] , [3,3], [3,6] , [3,6] , [3,3,6]</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,3,4,6,7], target = 12\n<strong>Output:</strong> 61\n<strong>Explanation: </strong>There are 63 non-empty subsequences, two of them don&#39;t satisfy the condition ([6,7], [7]).\nNumber of valid subsequences (63 - 2 = 61).\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,2,4,1,7,6,8], target = 16\n<strong>Output:</strong> 127\n<strong>Explanation: </strong>All non-empty subset satisfy the condition (2^7 - 1) = 127</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>6</sup></code></li>\n\t<li><code>1 &lt;= target &lt;= 10<sup>6</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"12.6K\", \"totalSubmission\": \"33.1K\", \"totalAcceptedRaw\": 12637, \"totalSubmissionRaw\": 33111, \"acRate\": \"38.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Sort", "slug": "sort"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "1497", "name": "check-if-array-pairs-are-divisible-by-k", "content": {"questionId": "1620", "questionFrontendId": "1497", "questionTitle": "Check If Array Pairs Are Divisible by k", "questionTitleSlug": "check-if-array-pairs-are-divisible-by-k", "content": "<p>Given an array of integers <code>arr</code> of even length <code>n</code> and an integer <code>k</code>.</p>\n\n<p>We want to divide the array into exactly <code>n /&nbsp;2</code> pairs such that the sum of each pair is divisible by <code>k</code>.</p>\n\n<p>Return <em>True</em> If you can find a way to do that or <em>False</em> otherwise.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,3,4,5,10,6,7,8,9], k = 5\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Pairs are (1,9),(2,8),(3,7),(4,6) and (5,10).\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,3,4,5,6], k = 7\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Pairs are (1,6),(2,5) and(3,4).\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,3,4,5,6], k = 10\n<strong>Output:</strong> false\n<strong>Explanation:</strong> You can try all possible pairs to see that there is no way to divide arr into 3 pairs each with sum divisible by 10.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [-10,10], k = 2\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [-1,1,-2,2,-3,3,-4,4], k = 3\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>arr.length == n</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>n</code> is even.</li>\n\t<li><code>-10<sup>9</sup> &lt;= arr[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"16.5K\", \"totalSubmission\": \"40.7K\", \"totalAcceptedRaw\": 16499, \"totalSubmissionRaw\": 40704, \"acRate\": \"40.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Math", "slug": "math"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1509", "name": "minimum-difference-between-largest-and-smallest-value-in-three-moves", "content": {"questionId": "1616", "questionFrontendId": "1509", "questionTitle": "Minimum Difference Between Largest and Smallest Value in Three Moves", "questionTitleSlug": "minimum-difference-between-largest-and-smallest-value-in-three-moves", "content": "<p>Given an array <code>nums</code>, you are allowed to choose one element of <code>nums</code> and change it by any&nbsp;value in one move.</p>\r\n\r\n<p>Return the minimum difference between the largest and smallest value of <code>nums</code>&nbsp;after perfoming at most 3 moves.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [5,3,2,4]\r\n<strong>Output:</strong> 0\r\n<strong>Explanation:</strong> Change the array [5,3,2,4] to [<strong>2</strong>,<strong>2</strong>,2,<strong>2</strong>].\r\nThe difference between the maximum and minimum is 2-2 = 0.</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [1,5,0,10,14]\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong> Change the array [1,5,0,10,14] to [1,<strong>1</strong>,0,<strong>1</strong>,<strong>1</strong>]. \r\nThe difference between the maximum and minimum is 1-0 = 1.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [6,6,0,1,1,4,6]\r\n<strong>Output:</strong> 2\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [1,5,6,14,15]\r\n<strong>Output:</strong> 1\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= nums.length &lt;= 10^5</code></li>\r\n\t<li><code>-10^9 &lt;= nums[i] &lt;= 10^9</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"9.8K\", \"totalSubmission\": \"18.9K\", \"totalAcceptedRaw\": 9755, \"totalSubmissionRaw\": 18870, \"acRate\": \"51.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "1508", "name": "range-sum-of-sorted-subarray-sums", "content": {"questionId": "1615", "questionFrontendId": "1508", "questionTitle": "Range Sum of Sorted Subarray Sums", "questionTitleSlug": "range-sum-of-sorted-subarray-sums", "content": "<p>Given the array <code>nums</code> consisting of <code>n</code> positive integers. You computed the sum of all non-empty continous subarrays from&nbsp;the array and then sort them in non-decreasing order, creating a new array of <code>n * (n + 1) / 2</code>&nbsp;numbers.</p>\n\n<p><em>Return the sum of the numbers from index </em><code>left</code><em> to index </em><code>right</code> (<strong>indexed from 1</strong>)<em>, inclusive, in the&nbsp;new array.&nbsp;</em>Since the answer can be a huge number return it modulo 10^9 + 7.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4], n = 4, left = 1, right = 5\n<strong>Output:</strong> 13 \n<strong>Explanation:</strong> All subarray sums are 1, 3, 6, 10, 2, 5, 9, 3, 7, 4. After sorting them in non-decreasing order we have the new array [1, 2, 3, 3, 4, 5, 6, 7, 9, 10]. The sum of the numbers from index le = 1 to ri = 5 is 1 + 2 + 3 + 3 + 4 = 13. \n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4], n = 4, left = 3, right = 4\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The given array is the same as example 1. We have the new array [1, 2, 3, 3, 4, 5, 6, 7, 9, 10]. The sum of the numbers from index le = 3 to ri = 4 is 3 + 3 = 6.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4], n = 4, left = 1, right = 10\n<strong>Output:</strong> 50\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10^3</code></li>\n\t<li><code>nums.length == n</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 100</code></li>\n\t<li><code>1 &lt;= left &lt;= right&nbsp;&lt;= n * (n + 1) / 2</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.4K\", \"totalSubmission\": \"23K\", \"totalAcceptedRaw\": 14383, \"totalSubmissionRaw\": 23048, \"acRate\": \"62.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "1488", "name": "avoid-flood-in-the-city", "content": {"questionId": "1612", "questionFrontendId": "1488", "questionTitle": "Avoid Flood in The City", "questionTitleSlug": "avoid-flood-in-the-city", "content": "<p>Your country has an infinite number of lakes. Initially, all the lakes are empty, but when it rains over the <code>nth</code> lake, the <code>nth</code> lake becomes full of water. If it rains over a lake which is <strong>full of water</strong>, there will be a <strong>flood</strong>. Your goal is to avoid the flood in any lake.</p>\n\n<p>Given an integer array <code>rains</code> where:</p>\n\n<ul>\n\t<li><code>rains[i] &gt; 0</code> means there will be rains over the <code>rains[i]</code> lake.</li>\n\t<li><code>rains[i] == 0</code> means there are no rains this day and you can choose <strong>one lake</strong> this day and <strong>dry it</strong>.</li>\n</ul>\n\n<p>Return <em>an array <code>ans</code></em> where:</p>\n\n<ul>\n\t<li><code>ans.length == rains.length</code></li>\n\t<li><code>ans[i] == -1</code> if <code>rains[i] &gt; 0</code>.</li>\n\t<li><code>ans[i]</code> is the lake you choose to dry in the <code>ith</code> day&nbsp;if <code>rains[i] == 0</code>.</li>\n</ul>\n\n<p>If there are multiple valid answers return <strong>any</strong> of them. If it is impossible to avoid flood return <strong>an empty array</strong>.</p>\n\n<p>Notice that if you chose to dry a full lake, it becomes empty, but if you chose to dry an empty lake, nothing changes. (see example 4)</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> rains = [1,2,3,4]\n<strong>Output:</strong> [-1,-1,-1,-1]\n<strong>Explanation:</strong> After the first day full lakes are [1]\nAfter the second day full lakes are [1,2]\nAfter the third day full lakes are [1,2,3]\nAfter the fourth day full lakes are [1,2,3,4]\nThere&#39;s no day to dry any lake and there is no flood in any lake.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> rains = [1,2,0,0,2,1]\n<strong>Output:</strong> [-1,-1,2,1,-1,-1]\n<strong>Explanation:</strong> After the first day full lakes are [1]\nAfter the second day full lakes are [1,2]\nAfter the third day, we dry lake 2. Full lakes are [1]\nAfter the fourth day, we dry lake 1. There is no full lakes.\nAfter the fifth day, full lakes are [2].\nAfter the sixth day, full lakes are [1,2].\nIt is easy that this scenario is flood-free. [-1,-1,1,2,-1,-1] is another acceptable scenario.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> rains = [1,2,0,1,2]\n<strong>Output:</strong> []\n<strong>Explanation:</strong> After the second day, full lakes are  [1,2]. We have to dry one lake in the third day.\nAfter that, it will rain over lakes [1,2]. It&#39;s easy to prove that no matter which lake you choose to dry in the 3rd day, the other one will flood.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> rains = [69,0,0,0,69]\n<strong>Output:</strong> [-1,69,1,1,-1]\n<strong>Explanation:</strong> Any solution on one of the forms [-1,69,x,y,-1], [-1,x,69,y,-1] or [-1,x,y,69,-1] is acceptable where 1 &lt;= x,y &lt;= 10^9\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> rains = [10,20,20]\n<strong>Output:</strong> []\n<strong>Explanation:</strong> It will rain over lake 20 two consecutive days. There is no chance to dry any lake.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= rains.length &lt;= 10^5</code></li>\n\t<li><code>0 &lt;= rains[i] &lt;= 10^9</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13K\", \"totalSubmission\": \"52.5K\", \"totalAcceptedRaw\": 12994, \"totalSubmissionRaw\": 52545, \"acRate\": \"24.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Hash Table", "slug": "hash-table"}]}}, {"id": "1487", "name": "making-file-names-unique", "content": {"questionId": "1611", "questionFrontendId": "1487", "questionTitle": "Making File Names Unique", "questionTitleSlug": "making-file-names-unique", "content": "<p>Given an array of strings <code>names</code> of size <code>n</code>. You will create <code>n</code> folders in your file system <strong>such that</strong>, at the <code>ith</code> minute, you will create a folder with the name <code>names[i]</code>.</p>\r\n\r\n<p>Since two files <strong>cannot</strong> have the same name, if you enter a folder name which is previously used,&nbsp;the system&nbsp;will have a suffix&nbsp;addition to its name in the form of <code>(k)</code>,&nbsp;where,&nbsp;<code>k</code> is the <strong>smallest positive integer</strong> such that the obtained name remains unique.</p>\r\n\r\n<p>Return <em>an array of strings of length <code>n</code></em> where <code>ans[i]</code> is the actual name the system will assign to the <code>ith</code> folder when you create it.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> names = [&quot;pes&quot;,&quot;fifa&quot;,&quot;gta&quot;,&quot;pes(2019)&quot;]\r\n<strong>Output:</strong> [&quot;pes&quot;,&quot;fifa&quot;,&quot;gta&quot;,&quot;pes(2019)&quot;]\r\n<strong>Explanation:</strong> Let&#39;s see how the file system creates folder names:\r\n&quot;pes&quot; --&gt; not assigned before, remains &quot;pes&quot;\r\n&quot;fifa&quot; --&gt; not assigned before, remains &quot;fifa&quot;\r\n&quot;gta&quot; --&gt; not assigned before, remains &quot;gta&quot;\r\n&quot;pes(2019)&quot; --&gt; not assigned before, remains &quot;pes(2019)&quot;\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> names = [&quot;gta&quot;,&quot;gta(1)&quot;,&quot;gta&quot;,&quot;avalon&quot;]\r\n<strong>Output:</strong> [&quot;gta&quot;,&quot;gta(1)&quot;,&quot;gta(2)&quot;,&quot;avalon&quot;]\r\n<strong>Explanation:</strong> Let&#39;s see how the file system creates folder names:\r\n&quot;gta&quot; --&gt; not assigned before, remains &quot;gta&quot;\r\n&quot;gta(1)&quot; --&gt; not assigned before, remains &quot;gta(1)&quot;\r\n&quot;gta&quot; --&gt; the name is reserved, system adds (k), since &quot;gta(1)&quot; is also reserved, systems put k = 2. it becomes &quot;gta(2)&quot;\r\n&quot;avalon&quot; --&gt; not assigned before, remains &quot;avalon&quot;\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> names = [&quot;onepiece&quot;,&quot;onepiece(1)&quot;,&quot;onepiece(2)&quot;,&quot;onepiece(3)&quot;,&quot;onepiece&quot;]\r\n<strong>Output:</strong> [&quot;onepiece&quot;,&quot;onepiece(1)&quot;,&quot;onepiece(2)&quot;,&quot;onepiece(3)&quot;,&quot;onepiece(4)&quot;]\r\n<strong>Explanation:</strong> When the last folder is created, the smallest positive valid k is 4, and it becomes &quot;onepiece(4)&quot;.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> names = [&quot;wano&quot;,&quot;wano&quot;,&quot;wano&quot;,&quot;wano&quot;]\r\n<strong>Output:</strong> [&quot;wano&quot;,&quot;wano(1)&quot;,&quot;wano(2)&quot;,&quot;wano(3)&quot;]\r\n<strong>Explanation:</strong> Just increase the value of k each time you create folder &quot;wano&quot;.\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> names = [&quot;kaido&quot;,&quot;kaido(1)&quot;,&quot;kaido&quot;,&quot;kaido(1)&quot;]\r\n<strong>Output:</strong> [&quot;kaido&quot;,&quot;kaido(1)&quot;,&quot;kaido(2)&quot;,&quot;kaido(1)(1)&quot;]\r\n<strong>Explanation:</strong> Please note that system adds the suffix (k) to current name even it contained the same suffix before.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= names.length &lt;= 5 * 10^4</code></li>\r\n\t<li><code>1 &lt;= names[i].length &lt;= 20</code></li>\r\n\t<li><code>names[i]</code> consists of lower case English letters, digits and/or round brackets.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"12.2K\", \"totalSubmission\": \"40.2K\", \"totalAcceptedRaw\": 12171, \"totalSubmissionRaw\": 40162, \"acRate\": \"30.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "String", "slug": "string"}]}}, {"id": "1468", "name": "calculate-salaries", "content": {"questionId": "1608", "questionFrontendId": "1468", "questionTitle": "Calculate Salaries", "questionTitleSlug": "calculate-salaries", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"5.3K\", \"totalSubmission\": \"6.6K\", \"totalAcceptedRaw\": 5278, \"totalSubmissionRaw\": 6552, \"acRate\": \"80.6%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1459", "name": "rectangles-area", "content": {"questionId": "1607", "questionFrontendId": "1459", "questionTitle": "Rectangles Area", "questionTitleSlug": "rectangles-area", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"3.6K\", \"totalSubmission\": \"5.7K\", \"totalAcceptedRaw\": 3627, \"totalSubmissionRaw\": 5662, \"acRate\": \"64.1%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1482", "name": "minimum-number-of-days-to-make-m-bouquets", "content": {"questionId": "1605", "questionFrontendId": "1482", "questionTitle": "Minimum Number of Days to Make m Bouquets", "questionTitleSlug": "minimum-number-of-days-to-make-m-bouquets", "content": "<p>Given an integer array <code>bloomDay</code>, an integer <code>m</code> and an integer <code>k</code>.</p>\r\n\r\n<p>We need to make <code>m</code>&nbsp;bouquets. To make a bouquet,&nbsp;you need to use <code>k</code> <strong>adjacent flowers</strong> from the garden.</p>\r\n\r\n<p>The garden consists of <code>n</code> flowers, the <code>ith</code> flower will bloom in the <code>bloomDay[i]</code>&nbsp;and then can be used in&nbsp;<strong>exactly one</strong> bouquet.</p>\r\n\r\n<p>Return <em>the minimum number of days</em> you need to wait to be able to make <code>m</code> bouquets from the garden. If it is impossible to make <code>m</code> bouquets return <strong>-1</strong>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> bloomDay = [1,10,3,10,2], m = 3, k = 1\r\n<strong>Output:</strong> 3\r\n<strong>Explanation:</strong> Let&#39;s see what happened in the first three days. x means flower bloomed and _ means flower didn&#39;t bloom in the garden.\r\nWe need 3 bouquets each should contain 1 flower.\r\nAfter day 1: [x, _, _, _, _]   // we can only make one bouquet.\r\nAfter day 2: [x, _, _, _, x]   // we can only make two bouquets.\r\nAfter day 3: [x, _, x, _, x]   // we can make 3 bouquets. The answer is 3.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> bloomDay = [1,10,3,10,2], m = 3, k = 2\r\n<strong>Output:</strong> -1\r\n<strong>Explanation:</strong> We need 3 bouquets each has 2 flowers, that means we need 6 flowers. We only have 5 flowers so it is impossible to get the needed bouquets and we return -1.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> bloomDay = [7,7,7,7,12,7,7], m = 2, k = 3\r\n<strong>Output:</strong> 12\r\n<strong>Explanation:</strong> We need 2 bouquets each should have 3 flowers.\r\nHere&#39;s the garden after the 7 and 12 days:\r\nAfter day 7: [x, x, x, x, _, x, x]\r\nWe can make one bouquet of the first three flowers that bloomed. We cannot make another bouquet from the last three flowers that bloomed because they are not adjacent.\r\nAfter day 12: [x, x, x, x, x, x, x]\r\nIt is obvious that we can make two bouquets in different ways.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> bloomDay = [1000000000,1000000000], m = 1, k = 1\r\n<strong>Output:</strong> 1000000000\r\n<strong>Explanation:</strong> You need to wait 1000000000 days to have a flower ready for a bouquet.\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> bloomDay = [1,10,2,9,3,8,4,7,5,6], m = 4, k = 2\r\n<strong>Output:</strong> 9\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>bloomDay.length == n</code></li>\r\n\t<li><code>1 &lt;= n &lt;= 10^5</code></li>\r\n\t<li><code>1 &lt;= bloomDay[i] &lt;= 10^9</code></li>\r\n\t<li><code>1 &lt;= m &lt;= 10^6</code></li>\r\n\t<li><code>1 &lt;= k &lt;= n</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"16.5K\", \"totalSubmission\": \"33.5K\", \"totalAcceptedRaw\": 16493, \"totalSubmissionRaw\": 33451, \"acRate\": \"49.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "1481", "name": "least-number-of-unique-integers-after-k-removals", "content": {"questionId": "1604", "questionFrontendId": "1481", "questionTitle": "Least Number of Unique Integers after K Removals", "questionTitleSlug": "least-number-of-unique-integers-after-k-removals", "content": "<p>Given an array of integers&nbsp;<code>arr</code>&nbsp;and an integer <code>k</code>.&nbsp;Find the <em>least number of unique integers</em>&nbsp;after removing <strong>exactly</strong> <code>k</code> elements<b>.</b></p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>arr = [5,5,4], k = 1\r\n<strong>Output: </strong>1\r\n<strong>Explanation</strong>: Remove the single 4, only 5 is left.\r\n</pre>\r\n<strong>Example 2:</strong>\r\n\r\n<pre>\r\n<strong>Input: </strong>arr = [4,3,1,1,3,3,2], k = 3\r\n<strong>Output: </strong>2\r\n<strong>Explanation</strong>: Remove 4, 2 and either one of the two 1s or three 3s. 1 and 3 will be left.</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= arr.length&nbsp;&lt;= 10^5</code></li>\r\n\t<li><code>1 &lt;= arr[i] &lt;= 10^9</code></li>\r\n\t<li><code>0 &lt;= k&nbsp;&lt;= arr.length</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"24.2K\", \"totalSubmission\": \"43.8K\", \"totalAcceptedRaw\": 24215, \"totalSubmissionRaw\": 43755, \"acRate\": \"55.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "1493", "name": "longest-subarray-of-1s-after-deleting-one-element", "content": {"questionId": "1586", "questionFrontendId": "1493", "questionTitle": "Longest Subarray of 1's After Deleting One Element", "questionTitleSlug": "longest-subarray-of-1s-after-deleting-one-element", "content": "<p>Given a binary array <code>nums</code>, you should delete one element from it.</p>\n\n<p>Return the size of the longest non-empty subarray containing only 1&#39;s&nbsp;in the resulting array.</p>\n\n<p>Return 0 if there is no such subarray.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,0,1]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>After deleting the number in position 2, [1,1,1] contains 3 numbers with value of 1&#39;s.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,1,1,1,0,1,1,0,1]\n<strong>Output:</strong> 5\n<strong>Explanation: </strong>After deleting the number in position 4, [0,1,1,1,1,1,0,1] longest subarray with value of 1&#39;s is [1,1,1,1,1].</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,1]\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>You must delete one element.</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,0,0,1,1,1,0,1]\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,0,0]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10^5</code></li>\n\t<li><code>nums[i]</code>&nbsp;is either&nbsp;<code>0</code>&nbsp;or&nbsp;<code>1</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"16.4K\", \"totalSubmission\": \"28K\", \"totalAcceptedRaw\": 16391, \"totalSubmissionRaw\": 28034, \"acRate\": \"58.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "1492", "name": "the-kth-factor-of-n", "content": {"questionId": "1585", "questionFrontendId": "1492", "questionTitle": "The kth Factor of n", "questionTitleSlug": "the-kth-factor-of-n", "content": "<p>Given two positive integers <code>n</code> and <code>k</code>.</p>\r\n\r\n<p>A factor of an integer <code>n</code> is defined as an integer <code>i</code> where <code>n % i == 0</code>.</p>\r\n\r\n<p>Consider a list of all factors of <code>n</code>&nbsp;sorted in <strong>ascending order</strong>, return <em>the </em><code>kth</code><em> factor</em> in this list or return <strong>-1</strong> if <code>n</code> has less than&nbsp;<code>k</code> factors.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 12, k = 3\r\n<strong>Output:</strong> 3\r\n<strong>Explanation:</strong> Factors list is [1, 2, 3, 4, 6, 12], the 3rd factor is 3.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 7, k = 2\r\n<strong>Output:</strong> 7\r\n<strong>Explanation:</strong> Factors list is [1, 7], the 2nd factor is 7.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 4, k = 4\r\n<strong>Output:</strong> -1\r\n<strong>Explanation:</strong> Factors list is [1, 2, 4], there is only 3 factors. We should return -1.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 1, k = 1\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong> Factors list is [1], the 1st factor is 1.\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 1000, k = 3\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> Factors list is [1, 2, 4, 5, 8, 10, 20, 25, 40, 50, 100, 125, 200, 250, 500, 1000].\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= k &lt;= n &lt;= 1000</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"40.3K\", \"totalSubmission\": \"63.1K\", \"totalAcceptedRaw\": 40269, \"totalSubmissionRaw\": 63078, \"acRate\": \"63.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "1472", "name": "design-browser-history", "content": {"questionId": "1582", "questionFrontendId": "1472", "questionTitle": "Design Browser History", "questionTitleSlug": "design-browser-history", "content": "<p>You have a <strong>browser</strong> of one tab where you start on the <code>homepage</code> and you can visit another <code>url</code>, get back in the history number of <code>steps</code> or move forward in the history number of <code>steps</code>.</p>\n\n<p>Implement the <code>BrowserHistory</code> class:</p>\n\n<ul>\n\t<li><code>BrowserHistory(string homepage)</code> Initializes the object with the <code>homepage</code>&nbsp;of the browser.</li>\n\t<li><code>void visit(string url)</code>&nbsp;Visits&nbsp;<code>url</code> from the current page. It clears up all the forward history.</li>\n\t<li><code>string back(int steps)</code>&nbsp;Move <code>steps</code> back in history. If you can only return <code>x</code> steps in the history and <code>steps &gt; x</code>, you will&nbsp;return only <code>x</code> steps. Return the current <code>url</code>&nbsp;after moving back in history <strong>at most</strong> <code>steps</code>.</li>\n\t<li><code>string forward(int steps)</code>&nbsp;Move <code>steps</code> forward in history. If you can only forward <code>x</code> steps in the history and <code>steps &gt; x</code>, you will&nbsp;forward only&nbsp;<code>x</code> steps. Return the current <code>url</code>&nbsp;after forwarding in history <strong>at most</strong> <code>steps</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example:</strong></p>\n\n<pre>\n<b>Input:</b>\n[&quot;BrowserHistory&quot;,&quot;visit&quot;,&quot;visit&quot;,&quot;visit&quot;,&quot;back&quot;,&quot;back&quot;,&quot;forward&quot;,&quot;visit&quot;,&quot;forward&quot;,&quot;back&quot;,&quot;back&quot;]\n[[&quot;leetcode.com&quot;],[&quot;google.com&quot;],[&quot;facebook.com&quot;],[&quot;youtube.com&quot;],[1],[1],[1],[&quot;linkedin.com&quot;],[2],[2],[7]]\n<b>Output:</b>\n[null,null,null,null,&quot;facebook.com&quot;,&quot;google.com&quot;,&quot;facebook.com&quot;,null,&quot;linkedin.com&quot;,&quot;google.com&quot;,&quot;leetcode.com&quot;]\n\n<b>Explanation:</b>\nBrowserHistory browserHistory = new BrowserHistory(&quot;leetcode.com&quot;);\nbrowserHistory.visit(&quot;google.com&quot;);       // You are in &quot;leetcode.com&quot;. Visit &quot;google.com&quot;\nbrowserHistory.visit(&quot;facebook.com&quot;);     // You are in &quot;google.com&quot;. Visit &quot;facebook.com&quot;\nbrowserHistory.visit(&quot;youtube.com&quot;);      // You are in &quot;facebook.com&quot;. Visit &quot;youtube.com&quot;\nbrowserHistory.back(1);                   // You are in &quot;youtube.com&quot;, move back to &quot;facebook.com&quot; return &quot;facebook.com&quot;\nbrowserHistory.back(1);                   // You are in &quot;facebook.com&quot;, move back to &quot;google.com&quot; return &quot;google.com&quot;\nbrowserHistory.forward(1);                // You are in &quot;google.com&quot;, move forward to &quot;facebook.com&quot; return &quot;facebook.com&quot;\nbrowserHistory.visit(&quot;linkedin.com&quot;);     // You are in &quot;facebook.com&quot;. Visit &quot;linkedin.com&quot;\nbrowserHistory.forward(2);                // You are in &quot;linkedin.com&quot;, you cannot move forward any steps.\nbrowserHistory.back(2);                   // You are in &quot;linkedin.com&quot;, move back two steps to &quot;facebook.com&quot; then to &quot;google.com&quot;. return &quot;google.com&quot;\nbrowserHistory.back(7);                   // You are in &quot;google.com&quot;, you can move back only one step to &quot;leetcode.com&quot;. return &quot;leetcode.com&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= homepage.length &lt;= 20</code></li>\n\t<li><code>1 &lt;= url.length &lt;= 20</code></li>\n\t<li><code>1 &lt;= steps &lt;= 100</code></li>\n\t<li><code>homepage</code> and <code>url</code> consist of&nbsp; &#39;.&#39; or lower case English letters.</li>\n\t<li>At most <code>5000</code>&nbsp;calls will be made to <code>visit</code>, <code>back</code>, and <code>forward</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23.8K\", \"totalSubmission\": \"34.1K\", \"totalAcceptedRaw\": 23763, \"totalSubmissionRaw\": 34088, \"acRate\": \"69.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}]}}, {"id": "1471", "name": "the-k-strongest-values-in-an-array", "content": {"questionId": "1581", "questionFrontendId": "1471", "questionTitle": "The k Strongest Values in an Array", "questionTitleSlug": "the-k-strongest-values-in-an-array", "content": "<p>Given an array of integers <code>arr</code>&nbsp;and an integer <code>k</code>.</p>\r\n\r\n<p>A value <code>arr[i]</code> is said to be stronger than a value <code>arr[j]</code> if <code>|arr[i] - m| &gt; |arr[j]&nbsp;- m|</code> where <code>m</code> is the <strong>median</strong> of the array.<br />\r\nIf <code>|arr[i] - m| == |arr[j] - m|</code>, then <code>arr[i]</code> is said to be stronger than <code>arr[j]</code> if <code>arr[i] &gt; arr[j]</code>.</p>\r\n\r\n<p>Return <em>a list of the strongest <code>k</code></em> values in the array. return the answer <strong>in any arbitrary order</strong>.</p>\r\n\r\n<p><strong>Median</strong> is the middle value in an ordered integer list. More formally, if the length of the list is n, the median is the element in position <code>((n - 1) / 2)</code> in the sorted list&nbsp;<strong>(0-indexed)</strong>.</p>\r\n\r\n<ul>\r\n\t<li>For <code>arr =&nbsp;[6, -3, 7, 2, 11]</code>,&nbsp;<code>n = 5</code> and the median is obtained by sorting the array&nbsp;<code>arr = [-3, 2, 6, 7, 11]</code> and the median is <code>arr[m]</code> where <code>m = ((5 - 1) / 2) = 2</code>. The median is <code>6</code>.</li>\r\n\t<li>For <code>arr =&nbsp;[-7, 22, 17,&thinsp;3]</code>,&nbsp;<code>n = 4</code> and the median is obtained by sorting the array&nbsp;<code>arr = [-7, 3, 17, 22]</code> and the median is <code>arr[m]</code> where <code>m = ((4 - 1) / 2) = 1</code>. The median is <code>3</code>.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [1,2,3,4,5], k = 2\r\n<strong>Output:</strong> [5,1]\r\n<strong>Explanation:</strong> Median is 3, the elements of the array sorted by the strongest are [5,1,4,2,3]. The strongest 2 elements are [5, 1]. [1, 5] is also <strong>accepted</strong> answer.\r\nPlease note that although |5 - 3| == |1 - 3| but 5 is stronger than 1 because 5 &gt; 1.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [1,1,3,5,5], k = 2\r\n<strong>Output:</strong> [5,5]\r\n<strong>Explanation:</strong> Median is 3, the elements of the array sorted by the strongest are [5,5,1,1,3]. The strongest 2 elements are [5, 5].\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [6,7,11,7,6,8], k = 5\r\n<strong>Output:</strong> [11,8,6,6,7]\r\n<strong>Explanation:</strong> Median is 7, the elements of the array sorted by the strongest are [11,8,6,6,7,7].\r\nAny permutation of [11,8,6,6,7] is <strong>accepted</strong>.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [6,-3,7,2,11], k = 3\r\n<strong>Output:</strong> [-3,11,2]\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [-7,22,17,3], k = 2\r\n<strong>Output:</strong> [22,17]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= arr.length &lt;= 10^5</code></li>\r\n\t<li><code>-10^5 &lt;= arr[i] &lt;= 10^5</code></li>\r\n\t<li><code>1 &lt;= k &lt;= arr.length</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"19.1K\", \"totalSubmission\": \"32.8K\", \"totalAcceptedRaw\": 19131, \"totalSubmissionRaw\": 32770, \"acRate\": \"58.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "1454", "name": "active-users", "content": {"questionId": "1579", "questionFrontendId": "1454", "questionTitle": "Active Users", "questionTitleSlug": "active-users", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"7.6K\", \"totalSubmission\": \"19.6K\", \"totalAcceptedRaw\": 7571, \"totalSubmissionRaw\": 19588, \"acRate\": \"38.7%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1445", "name": "apples-oranges", "content": {"questionId": "1578", "questionFrontendId": "1445", "questionTitle": "Apples & Oranges", "questionTitleSlug": "apples-oranges", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"9.8K\", \"totalSubmission\": \"10.8K\", \"totalAcceptedRaw\": 9782, \"totalSubmissionRaw\": 10811, \"acRate\": \"90.5%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1466", "name": "reorder-routes-to-make-all-paths-lead-to-the-city-zero", "content": {"questionId": "1576", "questionFrontendId": "1466", "questionTitle": "Reorder Routes to Make All Paths Lead to the City Zero", "questionTitleSlug": "reorder-routes-to-make-all-paths-lead-to-the-city-zero", "content": "<p>There are&nbsp;<code>n</code>&nbsp;cities numbered from&nbsp;<code>0</code>&nbsp;to&nbsp;<code>n-1</code> and&nbsp;<code>n-1</code> roads such that&nbsp;there is only one way to travel between two&nbsp;different cities (this network form a tree).&nbsp;Last year,&nbsp;The ministry of transport&nbsp;decided to orient the roads in one direction because they are too narrow.</p>\n\n<p>Roads are represented by&nbsp;<code>connections</code>&nbsp;where&nbsp;<code>connections[i] = [a, b]</code>&nbsp;represents a&nbsp;road&nbsp;from city&nbsp;<code>a</code>&nbsp;to&nbsp;<code>b</code>.</p>\n\n<p>This year, there will be a big event in the capital (city 0), and many people want to travel to this city.</p>\n\n<p>Your task consists of reorienting&nbsp;some roads such that each city can visit the city&nbsp;0. Return the <strong>minimum</strong> number of edges changed.</p>\n\n<p>It&#39;s <strong>guaranteed</strong> that each city can reach the city 0 after reorder.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/05/13/sample_1_1819.png\" style=\"width: 240px; height: 150px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 6, connections = [[0,1],[1,3],[2,3],[4,0],[4,5]]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>Change the direction of edges show in red such that each node can reach the node 0 (capital).</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/05/13/sample_2_1819.png\" style=\"width: 380px; height: 60px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5, connections = [[1,0],[1,2],[3,2],[3,4]]\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>Change the direction of edges show in red such that each node can reach the node 0 (capital).</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3, connections = [[1,0],[2,0]]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 5 * 10^4</code></li>\n\t<li><code>connections.length == n-1</code></li>\n\t<li><code>connections[i].length == 2</code></li>\n\t<li><code>0 &lt;= connections[i][0], connections[i][1] &lt;= n-1</code></li>\n\t<li><code>connections[i][0] != connections[i][1]</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"21.6K\", \"totalSubmission\": \"35.1K\", \"totalAcceptedRaw\": 21587, \"totalSubmissionRaw\": 35145, \"acRate\": \"61.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1465", "name": "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts", "content": {"questionId": "1575", "questionFrontendId": "1465", "questionTitle": "Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts", "questionTitleSlug": "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts", "content": "<p>Given a rectangular cake with height <code>h</code> and width <code>w</code>, and two arrays of integers <code>horizontalCuts</code> and <code>verticalCuts</code> where <code>horizontalCuts[i]</code> is the distance from the top of the rectangular cake to the <code>ith</code> horizontal cut&nbsp;and similarly, <code>verticalCuts[j]</code> is the distance from the&nbsp;left of the rectangular cake to the <code>jth</code>&nbsp;vertical cut.</p>\n\n<p><em>Return the maximum area of a piece of cake after you cut at each horizontal and vertical position provided in the arrays <code>horizontalCuts</code> and <code>verticalCuts</code>.&nbsp;</em>Since the answer can be a huge number, return this modulo 10^9 + 7.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/05/14/leetcode_max_area_2.png\" style=\"width: 300px; height: 320px;\" /></p>\n\n<pre>\n<strong>Input:</strong> h = 5, w = 4, horizontalCuts = [1,2,4], verticalCuts = [1,3]\n<strong>Output:</strong> 4 \n<strong>Explanation:</strong> The figure above represents the given rectangular cake. Red lines are the horizontal and vertical cuts. After you cut the cake, the green piece of cake has the maximum area.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/05/14/leetcode_max_area_3.png\" style=\"width: 300px; height: 320px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> h = 5, w = 4, horizontalCuts = [3,1], verticalCuts = [1]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The figure above represents the given rectangular cake. Red lines are the horizontal and vertical cuts. After you cut the cake, the green and yellow pieces of cake have the maximum area.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> h = 5, w = 4, horizontalCuts = [3], verticalCuts = [3]\n<strong>Output:</strong> 9\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= h,&nbsp;w &lt;= 10^9</code></li>\n\t<li><code>1 &lt;=&nbsp;horizontalCuts.length &lt;&nbsp;min(h, 10^5)</code></li>\n\t<li><code>1 &lt;=&nbsp;verticalCuts.length &lt; min(w, 10^5)</code></li>\n\t<li><code>1 &lt;=&nbsp;horizontalCuts[i] &lt; h</code></li>\n\t<li><code>1 &lt;=&nbsp;verticalCuts[i] &lt; w</code></li>\n\t<li>It is guaranteed that all elements in&nbsp;<code>horizontalCuts</code>&nbsp;are distinct.</li>\n\t<li>It is guaranteed that all elements in <code>verticalCuts</code>&nbsp;are distinct.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.7K\", \"totalSubmission\": \"46.4K\", \"totalAcceptedRaw\": 14663, \"totalSubmissionRaw\": 46443, \"acRate\": \"31.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "1477", "name": "find-two-non-overlapping-sub-arrays-each-with-target-sum", "content": {"questionId": "1573", "questionFrontendId": "1477", "questionTitle": "Find Two Non-overlapping Sub-arrays Each With Target Sum", "questionTitleSlug": "find-two-non-overlapping-sub-arrays-each-with-target-sum", "content": "<p>Given an array of integers <code>arr</code> and an integer <code>target</code>.</p>\n\n<p>You have to find <strong>two non-overlapping sub-arrays</strong> of <code>arr</code> each with sum equal <code>target</code>. There can be multiple answers so you have to find an answer where the sum of the lengths of the two sub-arrays is <strong>minimum</strong>.</p>\n\n<p>Return <em>the minimum sum of the lengths</em> of the two required sub-arrays, or return <em><strong>-1</strong></em> if you cannot&nbsp;find such two sub-arrays.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [3,2,2,4,3], target = 3\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Only two sub-arrays have sum = 3 ([3] and [3]). The sum of their lengths is 2.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [7,3,4,7], target = 7\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Although we have three non-overlapping sub-arrays of sum = 7 ([7], [3,4] and [7]), but we will choose the first and third sub-arrays as the sum of their lengths is 2.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [4,3,2,6,2,3,4], target = 6\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> We have only one sub-array of sum = 6.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [5,5,4,4,5], target = 3\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> We cannot find a sub-array of sum = 3.\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [3,1,1,1,5,1,2,1], target = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Note that sub-arrays [1,2] and [2,1] cannot be an answer because they overlap.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= arr[i] &lt;= 1000</code></li>\n\t<li><code>1 &lt;= target &lt;= 10^8</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"18.8K\", \"totalSubmission\": \"55.8K\", \"totalAcceptedRaw\": 18838, \"totalSubmissionRaw\": 55848, \"acRate\": \"33.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1476", "name": "subrectangle-queries", "content": {"questionId": "1572", "questionFrontendId": "1476", "questionTitle": "Subrectangle Queries", "questionTitleSlug": "subrectangle-queries", "content": "<p>Implement the class <code>SubrectangleQueries</code>&nbsp;which receives a <code>rows x cols</code> rectangle as a matrix of integers in the constructor and supports two methods:</p>\r\n\r\n<p>1.<code>&nbsp;updateSubrectangle(int row1, int col1, int row2, int col2, int newValue)</code></p>\r\n\r\n<ul>\r\n\t<li>Updates all values with <code>newValue</code> in the subrectangle whose upper left coordinate is <code>(row1,col1)</code> and bottom right coordinate is <code>(row2,col2)</code>.</li>\r\n</ul>\r\n\r\n<p>2.<code>&nbsp;getValue(int row, int col)</code></p>\r\n\r\n<ul>\r\n\t<li>Returns the current value of the coordinate <code>(row,col)</code> from&nbsp;the rectangle.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input</strong>\r\n[&quot;SubrectangleQueries&quot;,&quot;getValue&quot;,&quot;updateSubrectangle&quot;,&quot;getValue&quot;,&quot;getValue&quot;,&quot;updateSubrectangle&quot;,&quot;getValue&quot;,&quot;getValue&quot;]\r\n[[[[1,2,1],[4,3,4],[3,2,1],[1,1,1]]],[0,2],[0,0,3,2,5],[0,2],[3,1],[3,0,3,2,10],[3,1],[0,2]]\r\n<strong>Output</strong>\r\n[null,1,null,5,5,null,10,5]\r\n<strong>Explanation</strong>\r\nSubrectangleQueries subrectangleQueries = new SubrectangleQueries([[1,2,1],[4,3,4],[3,2,1],[1,1,1]]);  \r\n// The initial rectangle (4x3) looks like:\r\n// 1 2 1\r\n// 4 3 4\r\n// 3 2 1\r\n// 1 1 1\r\nsubrectangleQueries.getValue(0, 2); // return 1\r\nsubrectangleQueries.updateSubrectangle(0, 0, 3, 2, 5);\r\n// After this update the rectangle looks like:\r\n// 5 5 5\r\n// 5 5 5\r\n// 5 5 5\r\n// 5 5 5 \r\nsubrectangleQueries.getValue(0, 2); // return 5\r\nsubrectangleQueries.getValue(3, 1); // return 5\r\nsubrectangleQueries.updateSubrectangle(3, 0, 3, 2, 10);\r\n// After this update the rectangle looks like:\r\n// 5   5   5\r\n// 5   5   5\r\n// 5   5   5\r\n// 10  10  10 \r\nsubrectangleQueries.getValue(3, 1); // return 10\r\nsubrectangleQueries.getValue(0, 2); // return 5\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input</strong>\r\n[&quot;SubrectangleQueries&quot;,&quot;getValue&quot;,&quot;updateSubrectangle&quot;,&quot;getValue&quot;,&quot;getValue&quot;,&quot;updateSubrectangle&quot;,&quot;getValue&quot;]\r\n[[[[1,1,1],[2,2,2],[3,3,3]]],[0,0],[0,0,2,2,100],[0,0],[2,2],[1,1,2,2,20],[2,2]]\r\n<strong>Output</strong>\r\n[null,1,null,100,100,null,20]\r\n<strong>Explanation</strong>\r\nSubrectangleQueries subrectangleQueries = new SubrectangleQueries([[1,1,1],[2,2,2],[3,3,3]]);\r\nsubrectangleQueries.getValue(0, 0); // return 1\r\nsubrectangleQueries.updateSubrectangle(0, 0, 2, 2, 100);\r\nsubrectangleQueries.getValue(0, 0); // return 100\r\nsubrectangleQueries.getValue(2, 2); // return 100\r\nsubrectangleQueries.updateSubrectangle(1, 1, 2, 2, 20);\r\nsubrectangleQueries.getValue(2, 2); // return 20\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li>There will be at most <code><font face=\"monospace\">500</font></code>&nbsp;operations considering both methods:&nbsp;<code>updateSubrectangle</code> and <code>getValue</code>.</li>\r\n\t<li><code>1 &lt;= rows, cols &lt;= 100</code></li>\r\n\t<li><code>rows ==&nbsp;rectangle.length</code></li>\r\n\t<li><code>cols == rectangle[i].length</code></li>\r\n\t<li><code>0 &lt;= row1 &lt;= row2 &lt; rows</code></li>\r\n\t<li><code>0 &lt;= col1 &lt;= col2 &lt; cols</code></li>\r\n\t<li><code>1 &lt;= newValue, rectangle[i][j] &lt;= 10^9</code></li>\r\n\t<li><code>0 &lt;= row &lt; rows</code></li>\r\n\t<li><code>0 &lt;= col &lt; cols</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"29.3K\", \"totalSubmission\": \"33K\", \"totalAcceptedRaw\": 29302, \"totalSubmissionRaw\": 33028, \"acRate\": \"88.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "1457", "name": "pseudo-palindromic-paths-in-a-binary-tree", "content": {"questionId": "1568", "questionFrontendId": "1457", "questionTitle": "Pseudo-Palindromic Paths in a Binary Tree", "questionTitleSlug": "pseudo-palindromic-paths-in-a-binary-tree", "content": "<p>Given a binary tree where node values are digits from 1 to 9. A path in the binary tree is said to be <strong>pseudo-palindromic</strong> if at least one permutation of the node values in the path is a palindrome.</p>\n\n<p><em>Return the number of <strong>pseudo-palindromic</strong> paths going from the root node to leaf nodes.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/05/06/palindromic_paths_1.png\" style=\"width: 300px; height: 201px;\" /></p>\n\n<pre>\n<strong>Input:</strong> root = [2,3,1,3,1,null,1]\n<strong>Output:</strong> 2 \n<strong>Explanation:</strong> The figure above represents the given binary tree. There are three paths going from the root node to leaf nodes: the red path [2,3,3], the green path [2,1,1], and the path [2,3,1]. Among these paths only red path and green path are pseudo-palindromic paths since the red path [2,3,3] can be rearranged in [3,2,3] (palindrome) and the green path [2,1,1] can be rearranged in [1,2,1] (palindrome).\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/05/07/palindromic_paths_2.png\" style=\"width: 300px; height: 314px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> root = [2,1,1,1,3,null,null,null,null,null,1]\n<strong>Output:</strong> 1 \n<strong>Explanation:</strong> The figure above represents the given binary tree. There are three paths going from the root node to leaf nodes: the green path [2,1,1], the path [2,1,3,1], and the path [2,1]. Among these paths only the green path is pseudo-palindromic since [2,1,1] can be rearranged in [1,2,1] (palindrome).\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [9]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The&nbsp;given binary tree will have between <code>1</code> and <code>10^5</code> nodes.</li>\n\t<li>Node values are digits from <code>1</code> to <code>9</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"21.6K\", \"totalSubmission\": \"31.7K\", \"totalAcceptedRaw\": 21609, \"totalSubmissionRaw\": 31666, \"acRate\": \"68.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Bit Manipulation", "slug": "bit-manipulation"}, {"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1456", "name": "maximum-number-of-vowels-in-a-substring-of-given-length", "content": {"questionId": "1567", "questionFrontendId": "1456", "questionTitle": "Maximum Number of Vowels in a Substring of Given Length", "questionTitleSlug": "maximum-number-of-vowels-in-a-substring-of-given-length", "content": "<p>Given a string <code>s</code> and an integer <code>k</code>.</p>\r\n\r\n<p>Return <em>the maximum number of vowel letters</em> in any substring of <code>s</code>&nbsp;with&nbsp;length <code>k</code>.</p>\r\n\r\n<p><strong>Vowel letters</strong> in&nbsp;English are&nbsp;(a, e, i, o, u).</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;abciiidef&quot;, k = 3\r\n<strong>Output:</strong> 3\r\n<strong>Explanation:</strong> The substring &quot;iii&quot; contains 3 vowel letters.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;aeiou&quot;, k = 2\r\n<strong>Output:</strong> 2\r\n<strong>Explanation:</strong> Any substring of length 2 contains 2 vowels.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;leetcode&quot;, k = 3\r\n<strong>Output:</strong> 2\r\n<strong>Explanation:</strong> &quot;lee&quot;, &quot;eet&quot; and &quot;ode&quot; contain 2 vowels.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;rhythms&quot;, k = 4\r\n<strong>Output:</strong> 0\r\n<strong>Explanation:</strong> We can see that s doesn&#39;t have any vowel letters.\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;tryhard&quot;, k = 4\r\n<strong>Output:</strong> 1\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= s.length &lt;= 10^5</code></li>\r\n\t<li><code>s</code>&nbsp;consists of lowercase English letters.</li>\r\n\t<li><code>1 &lt;= k &lt;= s.length</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23.4K\", \"totalSubmission\": \"43.2K\", \"totalAcceptedRaw\": 23398, \"totalSubmissionRaw\": 43205, \"acRate\": \"54.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "1440", "name": "evaluate-boolean-expression", "content": {"questionId": "1565", "questionFrontendId": "1440", "questionTitle": "Evaluate Boolean Expression", "questionTitleSlug": "evaluate-boolean-expression", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"4.7K\", \"totalSubmission\": \"6.3K\", \"totalAcceptedRaw\": 4681, \"totalSubmissionRaw\": 6308, \"acRate\": \"74.2%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1452", "name": "people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list", "content": {"questionId": "1562", "questionFrontendId": "1452", "questionTitle": "People Whose List of Favorite Companies Is Not a Subset of Another List", "questionTitleSlug": "people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list", "content": "<p>Given the array <code>favoriteCompanies</code> where <code>favoriteCompanies[i]</code> is the list of favorites companies for the <code>ith</code> person (<strong>indexed from 0</strong>).</p>\n\n<p><em>Return the indices of people whose list of favorite companies is not a <strong>subset</strong> of any other list of favorites companies</em>. You must return the indices&nbsp;in increasing order.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> favoriteCompanies = [[&quot;leetcode&quot;,&quot;google&quot;,&quot;facebook&quot;],[&quot;google&quot;,&quot;microsoft&quot;],[&quot;google&quot;,&quot;facebook&quot;],[&quot;google&quot;],[&quot;amazon&quot;]]\n<strong>Output:</strong> [0,1,4] \n<strong>Explanation:</strong> \nPerson with index=2 has favoriteCompanies[2]=[&quot;google&quot;,&quot;facebook&quot;] which is a subset of favoriteCompanies[0]=[&quot;leetcode&quot;,&quot;google&quot;,&quot;facebook&quot;] corresponding to the person with index 0. \nPerson with index=3 has favoriteCompanies[3]=[&quot;google&quot;] which is a subset of favoriteCompanies[0]=[&quot;leetcode&quot;,&quot;google&quot;,&quot;facebook&quot;] and favoriteCompanies[1]=[&quot;google&quot;,&quot;microsoft&quot;]. \nOther lists of favorite companies are not a subset of another list, therefore, the answer is [0,1,4].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> favoriteCompanies = [[&quot;leetcode&quot;,&quot;google&quot;,&quot;facebook&quot;],[&quot;leetcode&quot;,&quot;amazon&quot;],[&quot;facebook&quot;,&quot;google&quot;]]\n<strong>Output:</strong> [0,1] \n<strong>Explanation:</strong> In this case favoriteCompanies[2]=[&quot;facebook&quot;,&quot;google&quot;] is a subset of favoriteCompanies[0]=[&quot;leetcode&quot;,&quot;google&quot;,&quot;facebook&quot;], therefore, the answer is [0,1].\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> favoriteCompanies = [[&quot;leetcode&quot;],[&quot;google&quot;],[&quot;facebook&quot;],[&quot;amazon&quot;]]\n<strong>Output:</strong> [0,1,2,3]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;=&nbsp;favoriteCompanies.length &lt;= 100</code></li>\n\t<li><code>1 &lt;=&nbsp;favoriteCompanies[i].length &lt;= 500</code></li>\n\t<li><code>1 &lt;=&nbsp;favoriteCompanies[i][j].length &lt;= 20</code></li>\n\t<li>All strings in <code>favoriteCompanies[i]</code> are <strong>distinct</strong>.</li>\n\t<li>All lists of favorite companies are <strong>distinct</strong>, that is, If we sort alphabetically each list then <code>favoriteCompanies[i] != favoriteCompanies[j].</code></li>\n\t<li>All strings consist of lowercase English letters only.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13.8K\", \"totalSubmission\": \"25.3K\", \"totalAcceptedRaw\": 13837, \"totalSubmissionRaw\": 25269, \"acRate\": \"54.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "1451", "name": "rearrange-words-in-a-sentence", "content": {"questionId": "1561", "questionFrontendId": "1451", "questionTitle": "Rearrange Words in a Sentence", "questionTitleSlug": "rearrange-words-in-a-sentence", "content": "<p>Given a sentence&nbsp;<code>text</code> (A&nbsp;<em>sentence</em>&nbsp;is a string of space-separated words) in the following format:</p>\n\n<ul>\n\t<li>First letter is in upper case.</li>\n\t<li>Each word in <code>text</code> are separated by a single space.</li>\n</ul>\n\n<p>Your task is to rearrange the words in text such that&nbsp;all words are rearranged in an increasing order of their lengths. If two words have the same length, arrange them in their original order.</p>\n\n<p>Return the new text&nbsp;following the format shown above.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;Leetcode is cool&quot;\n<strong>Output:</strong> &quot;Is cool leetcode&quot;\n<strong>Explanation: </strong>There are 3 words, &quot;Leetcode&quot; of length 8, &quot;is&quot; of length 2 and &quot;cool&quot; of length 4.\nOutput is ordered by length and the new first word starts with capital letter.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;Keep calm and code on&quot;\n<strong>Output:</strong> &quot;On and keep calm code&quot;\n<strong>Explanation: </strong>Output is ordered as follows:\n&quot;On&quot; 2 letters.\n&quot;and&quot; 3 letters.\n&quot;keep&quot; 4 letters in case of tie order by position in original text.\n&quot;calm&quot; 4 letters.\n&quot;code&quot; 4 letters.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;To be or not to be&quot;\n<strong>Output:</strong> &quot;To be or to be not&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>text</code> begins with a capital letter and then contains lowercase letters and single space between words.</li>\n\t<li><code>1 &lt;= text.length &lt;= 10^5</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"24.1K\", \"totalSubmission\": \"41K\", \"totalAcceptedRaw\": 24087, \"totalSubmissionRaw\": 41025, \"acRate\": \"58.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "1462", "name": "course-schedule-iv", "content": {"questionId": "1558", "questionFrontendId": "1462", "questionTitle": "Course Schedule IV", "questionTitleSlug": "course-schedule-iv", "content": "<p>There are a total of <code>n</code> courses you have to take, labeled from <code>0</code> to <code>n-1</code>.</p>\n\n<p>Some courses may have direct prerequisites, for example, to take course 0 you have first to take course 1, which is expressed as a pair: <code>[1,0]</code></p>\n\n<p>Given the total number of courses <code>n</code>,&nbsp;a list of direct&nbsp;<code>prerequisite</code> <strong>pairs</strong> and a list of <code>queries</code> <strong>pairs</strong>.</p>\n\n<p>You should answer for each <code>queries[i]</code> whether the course <code>queries[i][0]</code> is a&nbsp;prerequisite of the course&nbsp;<code>queries[i][1]</code> or not.</p>\n\n<p>Return <em>a list of boolean</em>, the answers to the given <code>queries</code>.</p>\n\n<p>Please note that if course <strong>a</strong> is a prerequisite of course <strong>b</strong> and course <strong>b</strong> is a prerequisite&nbsp;of course <strong>c</strong>, then, course <strong>a</strong> is a&nbsp;prerequisite of course <strong>c</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/17/graph.png\" style=\"width: 300px; height: 300px;\" />\n<pre>\n<strong>Input:</strong> n = 2, prerequisites = [[1,0]], queries = [[0,1],[1,0]]\n<strong>Output:</strong> [false,true]\n<strong>Explanation:</strong> course 0 is not a prerequisite of course 1 but the opposite is true.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, prerequisites = [], queries = [[1,0],[0,1]]\n<strong>Output:</strong> [false,false]\n<strong>Explanation:</strong> There are no prerequisites and each course is independent.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/17/graph-1.png\" style=\"width: 300px; height: 300px;\" />\n<pre>\n<strong>Input:</strong> n = 3, prerequisites = [[1,2],[1,0],[2,0]], queries = [[1,0],[1,2]]\n<strong>Output:</strong> [true,true]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3, prerequisites = [[1,0],[2,0]], queries = [[0,1],[2,0]]\n<strong>Output:</strong> [false,true]\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5, prerequisites = [[0,1],[1,2],[2,3],[3,4]], queries = [[0,4],[4,0],[1,3],[3,0]]\n<strong>Output:</strong> [true,false,true,false]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 100</code></li>\n\t<li><code>0 &lt;= prerequisite.length &lt;= (n * (n - 1) / 2)</code></li>\n\t<li><code>0 &lt;= prerequisite[i][0], prerequisite[i][1] &lt; n</code></li>\n\t<li><code>prerequisite[i][0] != prerequisite[i][1]</code></li>\n\t<li>The prerequisites graph has no cycles.</li>\n\t<li>The prerequisites graph has no repeated edges.</li>\n\t<li><code>1 &lt;= queries.length &lt;= 10^4</code></li>\n\t<li><code>queries[i][0] != queries[i][1]</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.1K\", \"totalSubmission\": \"32K\", \"totalAcceptedRaw\": 14082, \"totalSubmissionRaw\": 31958, \"acRate\": \"44.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Graph", "slug": "graph"}]}}, {"id": "1461", "name": "check-if-a-string-contains-all-binary-codes-of-size-k", "content": {"questionId": "1557", "questionFrontendId": "1461", "questionTitle": "Check If a String Contains All Binary Codes of Size K", "questionTitleSlug": "check-if-a-string-contains-all-binary-codes-of-size-k", "content": "<p>Given a binary string <code>s</code> and an integer <code>k</code>.</p>\n\n<p>Return <em>True</em> if every&nbsp;binary code&nbsp;of length <code>k</code> is a substring of <code>s</code>. Otherwise, return <em>False</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;00110110&quot;, k = 2\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The binary codes of length 2 are &quot;00&quot;, &quot;01&quot;, &quot;10&quot; and &quot;11&quot;. They can be all found as substrings at indicies 0, 1, 3 and 2 respectively.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;00110&quot;, k = 2\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;0110&quot;, k = 1\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The binary codes of length 1 are &quot;0&quot; and &quot;1&quot;, it is clear that both exist as a substring. \n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;0110&quot;, k = 2\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The binary code &quot;00&quot; is of length 2 and doesn&#39;t exist in the array.\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;0000000001011100&quot;, k = 4\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 5 * 10^5</code></li>\n\t<li><code>s</code> consists of 0&#39;s and 1&#39;s only.</li>\n\t<li><code>1 &lt;= k &lt;= 20</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13.5K\", \"totalSubmission\": \"28.9K\", \"totalAcceptedRaw\": 13484, \"totalSubmissionRaw\": 28884, \"acRate\": \"46.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "1443", "name": "minimum-time-to-collect-all-apples-in-a-tree", "content": {"questionId": "1554", "questionFrontendId": "1443", "questionTitle": "Minimum Time to Collect All Apples in a Tree", "questionTitleSlug": "minimum-time-to-collect-all-apples-in-a-tree", "content": "<p>Given an undirected tree consisting of <code>n</code> vertices numbered from <code>0</code> to <code>n-1</code>, which has some apples in their vertices. You spend 1 second to walk over one edge of the tree. <em>Return the minimum time in seconds you have to spend to collect all apples in the tree, starting at <strong>vertex 0</strong> and coming back to this vertex.</em></p>\n\n<p>The edges of the undirected tree are given in the array <code>edges</code>, where <code>edges[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> means that exists an edge connecting the vertices <code>a<sub>i</sub></code> and <code>b<sub>i</sub></code>. Additionally, there is a boolean array <code>hasApple</code>, where <code>hasApple[i] = true</code> means that vertex <code>i</code> has an apple; otherwise, it does not have any apple.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/23/min_time_collect_apple_1.png\" style=\"width: 300px; height: 212px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 7, edges = [[0,1],[0,2],[1,4],[1,5],[2,3],[2,6]], hasApple = [false,false,true,false,true,true,false]\n<strong>Output:</strong> 8 \n<strong>Explanation:</strong> The figure above represents the given tree where red vertices have an apple. One optimal path to collect all apples is shown by the green arrows.  \n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/23/min_time_collect_apple_2.png\" style=\"width: 300px; height: 212px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 7, edges = [[0,1],[0,2],[1,4],[1,5],[2,3],[2,6]], hasApple = [false,false,true,false,false,true,false]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The figure above represents the given tree where red vertices have an apple. One optimal path to collect all apples is shown by the green arrows.  \n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 7, edges = [[0,1],[0,2],[1,4],[1,5],[2,3],[2,6]], hasApple = [false,false,false,false,false,false,false]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10^5</code></li>\n\t<li><code>edges.length == n - 1</code></li>\n\t<li><code>edges[i].length == 2</code></li>\n\t<li><code>0 &lt;= a<sub>i</sub> &lt; b<sub>i</sub> &lt;= n - 1</code></li>\n\t<li><code>from<sub>i</sub>&nbsp;&lt; to<sub>i</sub></code></li>\n\t<li><code>hasApple.length == n</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"16.3K\", \"totalSubmission\": \"29.8K\", \"totalAcceptedRaw\": 16271, \"totalSubmissionRaw\": 29843, \"acRate\": \"54.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1442", "name": "count-triplets-that-can-form-two-arrays-of-equal-xor", "content": {"questionId": "1553", "questionFrontendId": "1442", "questionTitle": "Count Triplets That Can Form Two Arrays of Equal XOR", "questionTitleSlug": "count-triplets-that-can-form-two-arrays-of-equal-xor", "content": "<p>Given an array of&nbsp;integers <code>arr</code>.</p>\r\n\r\n<p>We want to select three indices <code>i</code>, <code>j</code> and <code>k</code> where <code>(0 &lt;= i &lt; j &lt;= k &lt; arr.length)</code>.</p>\r\n\r\n<p>Let&#39;s define <code>a</code> and <code>b</code> as follows:</p>\r\n\r\n<ul>\r\n\t<li><code>a = arr[i] ^ arr[i + 1] ^ ... ^ arr[j - 1]</code></li>\r\n\t<li><code>b = arr[j] ^ arr[j + 1] ^ ... ^ arr[k]</code></li>\r\n</ul>\r\n\r\n<p>Note that <strong>^</strong> denotes the <strong>bitwise-xor</strong> operation.</p>\r\n\r\n<p>Return <em>the number of triplets</em> (<code>i</code>, <code>j</code> and <code>k</code>) Where <code>a == b</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [2,3,1,6,7]\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> The triplets are (0,1,2), (0,2,2), (2,3,4) and (2,4,4)\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [1,1,1,1,1]\r\n<strong>Output:</strong> 10\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [2,3]\r\n<strong>Output:</strong> 0\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [1,3,5,7,9]\r\n<strong>Output:</strong> 3\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [7,11,12,9,5,2,7,17,22]\r\n<strong>Output:</strong> 8\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= arr.length &lt;= 300</code></li>\r\n\t<li><code>1 &lt;= arr[i] &lt;= 10^8</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.9K\", \"totalSubmission\": \"21.1K\", \"totalAcceptedRaw\": 14917, \"totalSubmissionRaw\": 21099, \"acRate\": \"70.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Math", "slug": "math"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "1421", "name": "npv-queries", "content": {"questionId": "1551", "questionFrontendId": "1421", "questionTitle": "NPV Queries", "questionTitleSlug": "npv-queries", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"6.1K\", \"totalSubmission\": \"7.4K\", \"totalAcceptedRaw\": 6078, \"totalSubmissionRaw\": 7433, \"acRate\": \"81.8%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1438", "name": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit", "content": {"questionId": "1549", "questionFrontendId": "1438", "questionTitle": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit", "questionTitleSlug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit", "content": "<p>Given an&nbsp;array of integers <code>nums</code> and an&nbsp;integer <code>limit</code>, return the size of the longest <strong>non-empty</strong> subarray such that the absolute difference between any two elements of this subarray is less than or equal to&nbsp;<code>limit</code><em>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [8,2,4,7], limit = 4\n<strong>Output:</strong> 2 \n<strong>Explanation:</strong> All subarrays are: \n[8] with maximum absolute diff |8-8| = 0 &lt;= 4.\n[8,2] with maximum absolute diff |8-2| = 6 &gt; 4. \n[8,2,4] with maximum absolute diff |8-2| = 6 &gt; 4.\n[8,2,4,7] with maximum absolute diff |8-2| = 6 &gt; 4.\n[2] with maximum absolute diff |2-2| = 0 &lt;= 4.\n[2,4] with maximum absolute diff |2-4| = 2 &lt;= 4.\n[2,4,7] with maximum absolute diff |2-7| = 5 &gt; 4.\n[4] with maximum absolute diff |4-4| = 0 &lt;= 4.\n[4,7] with maximum absolute diff |4-7| = 3 &lt;= 4.\n[7] with maximum absolute diff |7-7| = 0 &lt;= 4. \nTherefore, the size of the longest subarray is 2.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [10,1,2,4,7,2], limit = 5\n<strong>Output:</strong> 4 \n<strong>Explanation:</strong> The subarray [2,4,7,2] is the longest since the maximum absolute diff is |2-7| = 5 &lt;= 5.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,2,2,2,4,4,2,2], limit = 0\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10^9</code></li>\n\t<li><code>0 &lt;= limit &lt;= 10^9</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"43.4K\", \"totalSubmission\": \"99.4K\", \"totalAcceptedRaw\": 43401, \"totalSubmissionRaw\": 99386, \"acRate\": \"43.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "1437", "name": "check-if-all-1s-are-at-least-length-k-places-away", "content": {"questionId": "1548", "questionFrontendId": "1437", "questionTitle": "Check If All 1's Are at Least Length K Places Away", "questionTitleSlug": "check-if-all-1s-are-at-least-length-k-places-away", "content": "<p>Given an array <code>nums</code> of 0s and 1s and an integer <code>k</code>, return <code>True</code> if all 1&#39;s are at least <code>k</code> places away from each other, otherwise return <code>False</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/15/sample_1_1791.png\" style=\"width: 214px; height: 90px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,0,0,0,1,0,0,1], k = 2\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Each of the 1s are at least 2 places away from each other.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/15/sample_2_1791.png\" style=\"width: 160px; height: 86px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,0,0,1,0,1], k = 2\n<strong>Output:</strong> false\n<strong>Explanation: </strong>The second 1 and third 1 are only one apart from each other.</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,1,1,1], k = 0\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,1,0,1], k = 1\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10^5</code></li>\n\t<li><code>0 &lt;= k &lt;= nums.length</code></li>\n\t<li><code>nums[i]</code>&nbsp;is&nbsp;<code>0</code>&nbsp;or&nbsp;<code>1</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"21K\", \"totalSubmission\": \"33.9K\", \"totalAcceptedRaw\": 20954, \"totalSubmissionRaw\": 33872, \"acRate\": \"61.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "1448", "name": "count-good-nodes-in-binary-tree", "content": {"questionId": "1544", "questionFrontendId": "1448", "questionTitle": "Count Good Nodes in Binary Tree", "questionTitleSlug": "count-good-nodes-in-binary-tree", "content": "<p>Given a binary tree <code>root</code>, a node <em>X</em> in the tree is named&nbsp;<strong>good</strong> if in the path from root to <em>X</em> there are no nodes with a value <em>greater than</em> X.</p>\r\n\r\n<p>Return the number of <strong>good</strong> nodes in the binary tree.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/02/test_sample_1.png\" style=\"width: 263px; height: 156px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [3,1,4,3,null,1,5]\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> Nodes in blue are <strong>good</strong>.\r\nRoot Node (3) is always a good node.\r\nNode 4 -&gt; (3,4) is the maximum value in the path starting from the root.\r\nNode 5 -&gt; (3,4,5) is the maximum value in the path\r\nNode 3 -&gt; (3,1,3) is the maximum value in the path.</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/02/test_sample_2.png\" style=\"width: 157px; height: 161px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [3,3,null,4,2]\r\n<strong>Output:</strong> 3\r\n<strong>Explanation:</strong> Node 2 -&gt; (3, 3, 2) is not good, because &quot;3&quot; is higher than it.</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [1]\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong> Root is considered as <strong>good</strong>.</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li>The number of nodes in the binary tree is in the range&nbsp;<code>[1, 10^5]</code>.</li>\r\n\t<li>Each node&#39;s value is between <code>[-10^4, 10^4]</code>.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"25.7K\", \"totalSubmission\": \"36.5K\", \"totalAcceptedRaw\": 25691, \"totalSubmissionRaw\": 36544, \"acRate\": \"70.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1447", "name": "simplified-fractions", "content": {"questionId": "1543", "questionFrontendId": "1447", "questionTitle": "Simplified Fractions", "questionTitleSlug": "simplified-fractions", "content": "<p>Given an integer <code>n</code>, return a list of all <strong>simplified</strong> fractions between 0 and 1 (exclusive) such that the denominator is less-than-or-equal-to <code>n</code>. The fractions can be in <strong>any</strong> order.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 2\r\n<strong>Output:</strong> [&quot;1/2&quot;]\r\n<strong>Explanation: </strong>&quot;1/2&quot; is the only unique fraction with a denominator less-than-or-equal-to 2.</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 3\r\n<strong>Output:</strong> [&quot;1/2&quot;,&quot;1/3&quot;,&quot;2/3&quot;]\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 4\r\n<strong>Output:</strong> [&quot;1/2&quot;,&quot;1/3&quot;,&quot;1/4&quot;,&quot;2/3&quot;,&quot;3/4&quot;]\r\n<strong>Explanation: </strong>&quot;2/4&quot; is not a simplified fraction because it can be simplified to &quot;1/2&quot;.</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 1\r\n<strong>Output:</strong> []\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13.4K\", \"totalSubmission\": \"21.6K\", \"totalAcceptedRaw\": 13376, \"totalSubmissionRaw\": 21629, \"acRate\": \"61.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "1424", "name": "diagonal-traverse-ii", "content": {"questionId": "1539", "questionFrontendId": "1424", "questionTitle": "Diagonal Traverse II", "questionTitleSlug": "diagonal-traverse-ii", "content": "Given a list of lists of integers,&nbsp;<code>nums</code>,&nbsp;return all elements of <code>nums</code> in diagonal order as shown in the below images.\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/08/sample_1_1784.png\" style=\"width: 158px; height: 143px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [[1,2,3],[4,5,6],[7,8,9]]\n<strong>Output:</strong> [1,4,2,7,5,3,8,6,9]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/08/sample_2_1784.png\" style=\"width: 230px; height: 177px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [[1,2,3,4,5],[6,7],[8],[9,10,11],[12,13,14,15,16]]\n<strong>Output:</strong> [1,6,2,8,7,3,9,4,12,10,5,13,11,14,15,16]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [[1,2,3],[4],[5,6,7],[8],[9,10,11]]\n<strong>Output:</strong> [1,4,2,5,3,8,6,9,7,10,11]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [[1,2,3,4,5,6]]\n<strong>Output:</strong> [1,2,3,4,5,6]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= nums[i].length &lt;=&nbsp;10^5</code></li>\n\t<li><code>1 &lt;= nums[i][j] &lt;= 10^9</code></li>\n\t<li>There at most <code>10^5</code> elements in <code>nums</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"21K\", \"totalSubmission\": \"46.7K\", \"totalAcceptedRaw\": 21046, \"totalSubmissionRaw\": 46730, \"acRate\": \"45.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "1423", "name": "maximum-points-you-can-obtain-from-cards", "content": {"questionId": "1538", "questionFrontendId": "1423", "questionTitle": "Maximum Points You Can Obtain from Cards", "questionTitleSlug": "maximum-points-you-can-obtain-from-cards", "content": "<p>There are several cards&nbsp;<strong>arranged in a row</strong>, and each card has an associated number of points&nbsp;The points are given in the integer array&nbsp;<code>cardPoints</code>.</p>\n\n<p>In one step, you can take one card from the beginning or from the end of the row. You have to take exactly <code>k</code> cards.</p>\n\n<p>Your score is the sum of the points of the cards you have taken.</p>\n\n<p>Given the integer array <code>cardPoints</code> and the integer <code>k</code>, return the <em>maximum score</em> you can obtain.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> cardPoints = [1,2,3,4,5,6,1], k = 3\n<strong>Output:</strong> 12\n<strong>Explanation:</strong> After the first step, your score will always be 1. However, choosing the rightmost card first will maximize your total score. The optimal strategy is to take the three cards on the right, giving a final score of 1 + 6 + 5 = 12.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> cardPoints = [2,2,2], k = 2\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Regardless of which two cards you take, your score will always be 4.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> cardPoints = [9,7,7,9,7,7,9], k = 7\n<strong>Output:</strong> 55\n<strong>Explanation:</strong> You have to take all the cards. Your score is the sum of points of all cards.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> cardPoints = [1,1000,1], k = 1\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> You cannot take the card in the middle. Your best score is 1. \n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> cardPoints = [1,79,80,1,1,1,200,1], k = 3\n<strong>Output:</strong> 202\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= cardPoints.length &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= cardPoints[i] &lt;= 10^4</code></li>\n\t<li><code>1 &lt;= k &lt;= cardPoints.length</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"35.4K\", \"totalSubmission\": \"77.1K\", \"totalAcceptedRaw\": 35419, \"totalSubmissionRaw\": 77106, \"acRate\": \"45.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "1398", "name": "customers-who-bought-products-a-and-b-but-not-c", "content": {"questionId": "1536", "questionFrontendId": "1398", "questionTitle": "Customers Who Bought Products A and B but Not C", "questionTitleSlug": "customers-who-bought-products-a-and-b-but-not-c", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"10.8K\", \"totalSubmission\": \"13.2K\", \"totalAcceptedRaw\": 10840, \"totalSubmissionRaw\": 13219, \"acRate\": \"82.0%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1419", "name": "minimum-number-of-frogs-croaking", "content": {"questionId": "1534", "questionFrontendId": "1419", "questionTitle": "Minimum Number of Frogs Croaking", "questionTitleSlug": "minimum-number-of-frogs-croaking", "content": "<p>Given the string <code>croakOfFrogs</code>, which represents a combination of the string &quot;croak&quot; from different frogs, that is, multiple frogs can croak at the same time, so multiple &ldquo;croak&rdquo; are mixed.&nbsp;<em>Return the minimum number of </em>different<em> frogs to finish all the croak in the given string.</em></p>\n\n<p>A valid &quot;croak&quot;&nbsp;means a frog is printing 5 letters &lsquo;c&rsquo;, &rsquo;r&rsquo;, &rsquo;o&rsquo;, &rsquo;a&rsquo;, &rsquo;k&rsquo;&nbsp;<strong>sequentially</strong>.&nbsp;The frogs have to print all five letters to finish a croak.&nbsp;If the given string is not a combination of valid&nbsp;&quot;croak&quot;&nbsp;return -1.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> croakOfFrogs = &quot;croakcroak&quot;\n<strong>Output:</strong> 1 \n<strong>Explanation:</strong> One frog yelling &quot;croak<strong>&quot;</strong> twice.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> croakOfFrogs = &quot;crcoakroak&quot;\n<strong>Output:</strong> 2 \n<strong>Explanation:</strong> The minimum number of frogs is two.&nbsp;\nThe first frog could yell &quot;<strong>cr</strong>c<strong>oak</strong>roak&quot;.\nThe second frog could yell later &quot;cr<strong>c</strong>oak<strong>roak</strong>&quot;.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> croakOfFrogs = &quot;croakcrook&quot;\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> The given string is an invalid combination of &quot;croak<strong>&quot;</strong> from different frogs.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> croakOfFrogs = &quot;croakcroa&quot;\n<strong>Output:</strong> -1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;=&nbsp;croakOfFrogs.length &lt;= 10^5</code></li>\n\t<li>All characters in the string are: <code>&#39;c&#39;</code>, <code>&#39;r&#39;</code>, <code>&#39;o&#39;</code>, <code>&#39;a&#39;</code> or <code>&#39;k&#39;</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.4K\", \"totalSubmission\": \"30.7K\", \"totalAcceptedRaw\": 14431, \"totalSubmissionRaw\": 30689, \"acRate\": \"47.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "1418", "name": "display-table-of-food-orders-in-a-restaurant", "content": {"questionId": "1533", "questionFrontendId": "1418", "questionTitle": "Display Table of Food Orders in a Restaurant", "questionTitleSlug": "display-table-of-food-orders-in-a-restaurant", "content": "<p>Given&nbsp;the array <code>orders</code>, which represents the orders that customers have done in a restaurant. More specifically&nbsp;<code>orders[i]=[customerName<sub>i</sub>,tableNumber<sub>i</sub>,foodItem<sub>i</sub>]</code> where <code>customerName<sub>i</sub></code> is the name of the customer, <code>tableNumber<sub>i</sub></code>&nbsp;is the table customer sit at, and <code>foodItem<sub>i</sub></code>&nbsp;is the item customer orders.</p>\r\n\r\n<p><em>Return the restaurant&#39;s &ldquo;<strong>display table</strong>&rdquo;</em>. The &ldquo;<strong>display table</strong>&rdquo; is a table whose row entries denote how many of each food item each table ordered. The first column is the table number and the remaining columns correspond to each food item in alphabetical order. The first row should be a header whose first column is &ldquo;Table&rdquo;, followed by the names of the food items. Note that the customer names are not part of the table. Additionally, the rows should be sorted in numerically increasing order.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> orders = [[&quot;David&quot;,&quot;3&quot;,&quot;Ceviche&quot;],[&quot;Corina&quot;,&quot;10&quot;,&quot;Beef Burrito&quot;],[&quot;David&quot;,&quot;3&quot;,&quot;Fried Chicken&quot;],[&quot;Carla&quot;,&quot;5&quot;,&quot;Water&quot;],[&quot;Carla&quot;,&quot;5&quot;,&quot;Ceviche&quot;],[&quot;Rous&quot;,&quot;3&quot;,&quot;Ceviche&quot;]]\r\n<strong>Output:</strong> [[&quot;Table&quot;,&quot;Beef Burrito&quot;,&quot;Ceviche&quot;,&quot;Fried Chicken&quot;,&quot;Water&quot;],[&quot;3&quot;,&quot;0&quot;,&quot;2&quot;,&quot;1&quot;,&quot;0&quot;],[&quot;5&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,&quot;1&quot;],[&quot;10&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;]] \r\n<strong>Explanation:\r\n</strong>The displaying table looks like:\r\n<strong>Table,Beef Burrito,Ceviche,Fried Chicken,Water</strong>\r\n3    ,0           ,2      ,1            ,0\r\n5    ,0           ,1      ,0            ,1\r\n10   ,1           ,0      ,0            ,0\r\nFor the table 3: David orders &quot;Ceviche&quot; and &quot;Fried Chicken&quot;, and Rous orders &quot;Ceviche&quot;.\r\nFor the table 5: Carla orders &quot;Water&quot; and &quot;Ceviche&quot;.\r\nFor the table 10: Corina orders &quot;Beef Burrito&quot;. \r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> orders = [[&quot;James&quot;,&quot;12&quot;,&quot;Fried Chicken&quot;],[&quot;Ratesh&quot;,&quot;12&quot;,&quot;Fried Chicken&quot;],[&quot;Amadeus&quot;,&quot;12&quot;,&quot;Fried Chicken&quot;],[&quot;Adam&quot;,&quot;1&quot;,&quot;Canadian Waffles&quot;],[&quot;Brianna&quot;,&quot;1&quot;,&quot;Canadian Waffles&quot;]]\r\n<strong>Output:</strong> [[&quot;Table&quot;,&quot;Canadian Waffles&quot;,&quot;Fried Chicken&quot;],[&quot;1&quot;,&quot;2&quot;,&quot;0&quot;],[&quot;12&quot;,&quot;0&quot;,&quot;3&quot;]] \r\n<strong>Explanation:</strong> \r\nFor the table 1: Adam and Brianna order &quot;Canadian Waffles&quot;.\r\nFor the table 12: James, Ratesh and Amadeus order &quot;Fried Chicken&quot;.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> orders = [[&quot;Laura&quot;,&quot;2&quot;,&quot;Bean Burrito&quot;],[&quot;Jhon&quot;,&quot;2&quot;,&quot;Beef Burrito&quot;],[&quot;Melissa&quot;,&quot;2&quot;,&quot;Soda&quot;]]\r\n<strong>Output:</strong> [[&quot;Table&quot;,&quot;Bean Burrito&quot;,&quot;Beef Burrito&quot;,&quot;Soda&quot;],[&quot;2&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;]]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;=&nbsp;orders.length &lt;= 5 * 10^4</code></li>\r\n\t<li><code>orders[i].length == 3</code></li>\r\n\t<li><code>1 &lt;= customerName<sub>i</sub>.length, foodItem<sub>i</sub>.length &lt;= 20</code></li>\r\n\t<li><code>customerName<sub>i</sub></code> and <code>foodItem<sub>i</sub></code> consist of lowercase and uppercase English letters and the space character.</li>\r\n\t<li><code>tableNumber<sub>i</sub>&nbsp;</code>is a valid integer between <code>1</code> and <code>500</code>.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"12.2K\", \"totalSubmission\": \"18K\", \"totalAcceptedRaw\": 12214, \"totalSubmissionRaw\": 17994, \"acRate\": \"67.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}]}}, {"id": "1433", "name": "check-if-a-string-can-break-another-string", "content": {"questionId": "1530", "questionFrontendId": "1433", "questionTitle": "Check If a String Can Break Another String", "questionTitleSlug": "check-if-a-string-can-break-another-string", "content": "<p>Given two strings: <code>s1</code> and <code>s2</code> with the same&nbsp;size, check if some&nbsp;permutation of string <code>s1</code> can break&nbsp;some&nbsp;permutation of string <code>s2</code> or vice-versa. In other words <code>s2</code> can break <code>s1</code>&nbsp;or vice-versa.</p>\n\n<p>A string <code>x</code>&nbsp;can break&nbsp;string <code>y</code>&nbsp;(both of size <code>n</code>) if <code>x[i] &gt;= y[i]</code>&nbsp;(in alphabetical order)&nbsp;for all <code>i</code>&nbsp;between <code>0</code> and <code>n-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s1 = &quot;abc&quot;, s2 = &quot;xya&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> &quot;ayx&quot; is a permutation of s2=&quot;xya&quot; which can break to string &quot;abc&quot; which is a permutation of s1=&quot;abc&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s1 = &quot;abe&quot;, s2 = &quot;acd&quot;\n<strong>Output:</strong> false \n<strong>Explanation:</strong> All permutations for s1=&quot;abe&quot; are: &quot;abe&quot;, &quot;aeb&quot;, &quot;bae&quot;, &quot;bea&quot;, &quot;eab&quot; and &quot;eba&quot; and all permutation for s2=&quot;acd&quot; are: &quot;acd&quot;, &quot;adc&quot;, &quot;cad&quot;, &quot;cda&quot;, &quot;dac&quot; and &quot;dca&quot;. However, there is not any permutation from s1 which can break some permutation from s2 and vice-versa.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s1 = &quot;leetcodee&quot;, s2 = &quot;interview&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>s1.length == n</code></li>\n\t<li><code>s2.length == n</code></li>\n\t<li><code>1 &lt;= n &lt;= 10^5</code></li>\n\t<li>All strings consist of lowercase English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"17.7K\", \"totalSubmission\": \"26.4K\", \"totalAcceptedRaw\": 17683, \"totalSubmissionRaw\": 26388, \"acRate\": \"67.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1432", "name": "max-difference-you-can-get-from-changing-an-integer", "content": {"questionId": "1529", "questionFrontendId": "1432", "questionTitle": "Max Difference You Can Get From Changing an Integer", "questionTitleSlug": "max-difference-you-can-get-from-changing-an-integer", "content": "<p>You are given an integer <code>num</code>. You will apply the following steps exactly <strong>two</strong> times:</p>\n\n<ul>\n\t<li>Pick a digit <code>x (0&nbsp;&lt;= x &lt;= 9)</code>.</li>\n\t<li>Pick another digit <code>y (0&nbsp;&lt;= y &lt;= 9)</code>. The digit <code>y</code> can be equal to <code>x</code>.</li>\n\t<li>Replace all the occurrences of <code>x</code> in the decimal representation of <code>num</code> by <code>y</code>.</li>\n\t<li>The new integer <strong>cannot</strong> have any leading zeros, also the new integer <strong>cannot</strong> be 0.</li>\n</ul>\n\n<p>Let <code>a</code>&nbsp;and <code>b</code>&nbsp;be the results of applying the operations to <code>num</code> the first and second times, respectively.</p>\n\n<p>Return <em>the max difference</em> between <code>a</code> and <code>b</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 555\n<strong>Output:</strong> 888\n<strong>Explanation:</strong> The first time pick x = 5 and y = 9 and store the new integer in a.\nThe second time pick x = 5 and y = 1 and store the new integer in b.\nWe have now a = 999 and b = 111 and max difference = 888\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 9\n<strong>Output:</strong> 8\n<strong>Explanation:</strong> The first time pick x = 9 and y = 9 and store the new integer in a.\nThe second time pick x = 9 and y = 1 and store the new integer in b.\nWe have now a = 9 and b = 1 and max difference = 8\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 123456\n<strong>Output:</strong> 820000\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 10000\n<strong>Output:</strong> 80000\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 9288\n<strong>Output:</strong> 8700\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num &lt;= 10^8</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"9.3K\", \"totalSubmission\": \"21.7K\", \"totalAcceptedRaw\": 9282, \"totalSubmissionRaw\": 21664, \"acRate\": \"42.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "1410", "name": "html-entity-parser", "content": {"questionId": "1526", "questionFrontendId": "1410", "questionTitle": "HTML Entity Parser", "questionTitleSlug": "html-entity-parser", "content": "<p><strong>HTML entity parser</strong> is the parser that takes HTML code as input and replace all the entities of the special characters by the characters itself.</p>\n\n<p>The special characters and their entities for HTML are:</p>\n\n<ul>\n\t<li><strong>Quotation Mark:</strong>&nbsp;the entity is <code>&amp;quot;</code> and&nbsp;symbol character is <code>&quot;</code>.</li>\n\t<li><strong>Single Quote&nbsp;Mark:</strong>&nbsp;the entity is <code>&amp;apos;</code> and&nbsp;symbol character is <code>&#39;</code>.</li>\n\t<li><strong>Ampersand:</strong>&nbsp;the entity is <code>&amp;amp;</code> and symbol character is <code>&amp;</code>.</li>\n\t<li><strong>Greater Than Sign:</strong>&nbsp;the entity is <code>&amp;gt;</code>&nbsp;and symbol character is <code>&gt;</code>.</li>\n\t<li><strong>Less Than Sign:</strong>&nbsp;the entity is <code>&amp;lt;</code>&nbsp;and symbol character is <code>&lt;</code>.</li>\n\t<li><strong>Slash:</strong>&nbsp;the entity is <code>&amp;frasl;</code> and&nbsp;symbol character is <code>/</code>.</li>\n</ul>\n\n<p>Given the input <code>text</code> string to the HTML parser, you have to implement the entity parser.</p>\n\n<p>Return <em>the text</em> after replacing the entities by the special characters.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;&amp;amp; is an HTML entity but &amp;ambassador; is not.&quot;\n<strong>Output:</strong> &quot;&amp; is an HTML entity but &amp;ambassador; is not.&quot;\n<strong>Explanation:</strong> The parser will replace the &amp;amp; entity by &amp;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;and I quote: &amp;quot;...&amp;quot;&quot;\n<strong>Output:</strong> &quot;and I quote: \\&quot;...\\&quot;&quot;\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;Stay home! Practice on Leetcode :)&quot;\n<strong>Output:</strong> &quot;Stay home! Practice on Leetcode :)&quot;\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;x &amp;gt; y &amp;amp;&amp;amp; x &amp;lt; y is always false&quot;\n<strong>Output:</strong> &quot;x &gt; y &amp;&amp; x &lt; y is always false&quot;\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;leetcode.com&amp;frasl;problemset&amp;frasl;all&quot;\n<strong>Output:</strong> &quot;leetcode.com/problemset/all&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= text.length &lt;= 10^5</code></li>\n\t<li>The string may contain any possible characters out of all the 256&nbsp;ASCII characters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.3K\", \"totalSubmission\": \"26.2K\", \"totalAcceptedRaw\": 14256, \"totalSubmissionRaw\": 26197, \"acRate\": \"54.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Stack", "slug": "stack"}]}}, {"id": "1409", "name": "queries-on-a-permutation-with-key", "content": {"questionId": "1525", "questionFrontendId": "1409", "questionTitle": "Queries on a Permutation With Key", "questionTitleSlug": "queries-on-a-permutation-with-key", "content": "<p>Given the array <code>queries</code> of positive integers between <code>1</code> and <code>m</code>, you have to process all <code>queries[i]</code> (from <code>i=0</code> to <code>i=queries.length-1</code>) according to the following rules:</p>\r\n\r\n<ul>\r\n\t<li>In the beginning, you have the permutation <code>P=[1,2,3,...,m]</code>.</li>\r\n\t<li>For the current <code>i</code>, find the position of <code>queries[i]</code> in the permutation <code>P</code> (<strong>indexing from 0</strong>) and then move this at the beginning of the permutation <code>P.</code>&nbsp;Notice that the position of <code>queries[i]</code> in <code>P</code> is the result for <code>queries[i]</code>.</li>\r\n</ul>\r\n\r\n<p>Return an array containing the result for the given <code>queries</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> queries = [3,1,2,1], m = 5\r\n<strong>Output:</strong> [2,1,2,1] \r\n<strong>Explanation:</strong> The queries are processed as follow: \r\nFor i=0: queries[i]=3, P=[1,2,3,4,5], position of 3 in P is <strong>2</strong>, then we move 3 to the beginning of P resulting in P=[3,1,2,4,5]. \r\nFor i=1: queries[i]=1, P=[3,1,2,4,5], position of 1 in P is <strong>1</strong>, then we move 1 to the beginning of P resulting in P=[1,3,2,4,5]. \r\nFor i=2: queries[i]=2, P=[1,3,2,4,5], position of 2 in P is <strong>2</strong>, then we move 2 to the beginning of P resulting in P=[2,1,3,4,5]. \r\nFor i=3: queries[i]=1, P=[2,1,3,4,5], position of 1 in P is <strong>1</strong>, then we move 1 to the beginning of P resulting in P=[1,2,3,4,5]. \r\nTherefore, the array containing the result is [2,1,2,1].  \r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> queries = [4,1,2,2], m = 4\r\n<strong>Output:</strong> [3,1,2,0]\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> queries = [7,5,5,8,3], m = 8\r\n<strong>Output:</strong> [6,5,0,7,5]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= m &lt;= 10^3</code></li>\r\n\t<li><code>1 &lt;= queries.length &lt;= m</code></li>\r\n\t<li><code>1 &lt;= queries[i] &lt;= m</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23.2K\", \"totalSubmission\": \"28.5K\", \"totalAcceptedRaw\": 23153, \"totalSubmissionRaw\": 28454, \"acRate\": \"81.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "1393", "name": "capital-gainloss", "content": {"questionId": "1523", "questionFrontendId": "1393", "questionTitle": "Capital Gain/Loss", "questionTitleSlug": "capital-gainloss", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"9.7K\", \"totalSubmission\": \"10.7K\", \"totalAcceptedRaw\": 9671, \"totalSubmissionRaw\": 10711, \"acRate\": \"90.3%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1404", "name": "number-of-steps-to-reduce-a-number-in-binary-representation-to-one", "content": {"questionId": "1520", "questionFrontendId": "1404", "questionTitle": "Number of Steps to Reduce a Number in Binary Representation to One", "questionTitleSlug": "number-of-steps-to-reduce-a-number-in-binary-representation-to-one", "content": "<p>Given a number&nbsp;<code>s</code> in their binary representation. Return the number of steps to reduce it to 1 under the following rules:</p>\n\n<ul>\n\t<li>\n\t<p>If the current number is even, you have to divide it by 2.</p>\n\t</li>\n\t<li>\n\t<p>If the current number is odd, you have to add 1 to it.</p>\n\t</li>\n</ul>\n\n<p>It&#39;s guaranteed that you can always reach to one for all testcases.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;1101&quot;\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> &quot;1101&quot; corressponds to number 13 in their decimal representation.\nStep 1) 13 is odd, add 1 and obtain 14.&nbsp;\nStep 2) 14 is even, divide by 2 and obtain 7.\nStep 3) 7 is odd, add 1 and obtain 8.\nStep 4) 8 is even, divide by 2 and obtain 4.&nbsp; \nStep 5) 4 is even, divide by 2 and obtain 2.&nbsp;\nStep 6) 2 is even, divide by 2 and obtain 1.&nbsp; \n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;10&quot;\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> &quot;10&quot; corressponds to number 2 in their decimal representation.\nStep 1) 2 is even, divide by 2 and obtain 1.&nbsp; \n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;1&quot;\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length&nbsp;&lt;= 500</code></li>\n\t<li><code>s</code> consists of characters &#39;0&#39; or &#39;1&#39;</li>\n\t<li><code>s[0] == &#39;1&#39;</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"15.8K\", \"totalSubmission\": \"31.7K\", \"totalAcceptedRaw\": 15778, \"totalSubmissionRaw\": 31742, \"acRate\": \"49.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "1415", "name": "the-k-th-lexicographical-string-of-all-happy-strings-of-length-n", "content": {"questionId": "1516", "questionFrontendId": "1415", "questionTitle": "The k-th Lexicographical String of All Happy Strings of Length n", "questionTitleSlug": "the-k-th-lexicographical-string-of-all-happy-strings-of-length-n", "content": "<p>A <strong>happy string</strong> is a string that:</p>\r\n\r\n<ul>\r\n\t<li>consists only of letters of the set <code>[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</code>.</li>\r\n\t<li><code>s[i] != s[i + 1]</code>&nbsp;for all values of <code>i</code> from <code>1</code> to <code>s.length - 1</code> (string is 1-indexed).</li>\r\n</ul>\r\n\r\n<p>For example, strings <strong>&quot;abc&quot;, &quot;ac&quot;, &quot;b&quot;</strong> and <strong>&quot;abcbabcbcb&quot;</strong> are all happy strings and strings <strong>&quot;aa&quot;, &quot;baa&quot;</strong> and&nbsp;<strong>&quot;ababbc&quot;</strong> are not happy strings.</p>\r\n\r\n<p>Given two integers <code>n</code> and <code>k</code>, consider a list of all happy strings of length <code>n</code> sorted in lexicographical order.</p>\r\n\r\n<p>Return <em>the kth string</em> of this list or return an <strong>empty string</strong>&nbsp;if there are less than <code>k</code> happy strings of length <code>n</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 1, k = 3\r\n<strong>Output:</strong> &quot;c&quot;\r\n<strong>Explanation:</strong> The list [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;] contains all happy strings of length 1. The third string is &quot;c&quot;.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 1, k = 4\r\n<strong>Output:</strong> &quot;&quot;\r\n<strong>Explanation:</strong> There are only 3 happy strings of length 1.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 3, k = 9\r\n<strong>Output:</strong> &quot;cab&quot;\r\n<strong>Explanation:</strong> There are 12 different happy string of length 3 [&quot;aba&quot;, &quot;abc&quot;, &quot;aca&quot;, &quot;acb&quot;, &quot;bab&quot;, &quot;bac&quot;, &quot;bca&quot;, &quot;bcb&quot;, &quot;cab&quot;, &quot;cac&quot;, &quot;cba&quot;, &quot;cbc&quot;]. You will find the 9th string = &quot;cab&quot;\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 2, k = 7\r\n<strong>Output:</strong> &quot;&quot;\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 10, k = 100\r\n<strong>Output:</strong> &quot;abacbabacb&quot;\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= n &lt;= 10</code></li>\r\n\t<li><code>1 &lt;= k &lt;= 100</code></li>\r\n</ul>\r\n\r\n<div id=\"vidyowebrtcscreenshare_is_installed\">&nbsp;</div>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.3K\", \"totalSubmission\": \"20.4K\", \"totalAcceptedRaw\": 14262, \"totalSubmissionRaw\": 20375, \"acRate\": \"70.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "1414", "name": "find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k", "content": {"questionId": "1515", "questionFrontendId": "1414", "questionTitle": "Find the Minimum Number of Fibonacci Numbers Whose Sum Is K", "questionTitleSlug": "find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k", "content": "<p>Given an integer&nbsp;<code>k</code>, <em>return the minimum number of Fibonacci numbers whose sum is equal to </em><code>k</code>. The same Fibonacci number can be used multiple times.</p>\n\n<p>The Fibonacci numbers are defined as:</p>\n\n<ul>\n\t<li><code>F<sub>1</sub> = 1</code></li>\n\t<li><code>F<sub>2</sub> = 1</code></li>\n\t<li><code>F<sub>n</sub> = F<sub>n-1</sub> + F<sub>n-2</sub></code> for <code>n &gt; 2.</code></li>\n</ul>\nIt is guaranteed that for the given constraints we can always find such Fibonacci numbers that sum up to <code>k</code>.\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 7\n<strong>Output:</strong> 2 \n<strong>Explanation:</strong> The Fibonacci numbers are: 1, 1, 2, 3, 5, 8, 13, ... \nFor k = 7 we can use 2 + 5 = 7.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 10\n<strong>Output:</strong> 2 \n<strong>Explanation:</strong> For k = 10 we can use 2 + 8 = 10.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 19\n<strong>Output:</strong> 3 \n<strong>Explanation:</strong> For k = 19 we can use 1 + 5 + 13 = 19.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= 10^9</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"17.9K\", \"totalSubmission\": \"28.2K\", \"totalAcceptedRaw\": 17927, \"totalSubmissionRaw\": 28204, \"acRate\": \"63.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1396", "name": "design-underground-system", "content": {"questionId": "1512", "questionFrontendId": "1396", "questionTitle": "Design Underground System", "questionTitleSlug": "design-underground-system", "content": "<p>Implement the <code>UndergroundSystem</code> class:</p>\n\n<ul>\n\t<li><code>void checkIn(int id, string stationName, int t)</code>\n\n\t<ul>\n\t\t<li>A customer with a card id equal to <code>id</code>, gets in the station <code>stationName</code> at time <code>t</code>.</li>\n\t\t<li>A customer can only be checked into one place at a time.</li>\n\t</ul>\n\t</li>\n\t<li><code>void checkOut(int id, string stationName, int t)</code>\n\t<ul>\n\t\t<li>A customer with a card id equal to <code>id</code>, gets out from the station <code>stationName</code> at time <code>t</code>.</li>\n\t</ul>\n\t</li>\n\t<li><code>double getAverageTime(string startStation, string endStation)</code>\n\t<ul>\n\t\t<li>Returns the average time to travel between the <code>startStation</code> and the <code>endStation</code>.</li>\n\t\t<li>The average time is computed from all the previous traveling from <code>startStation</code> to <code>endStation</code> that happened <strong>directly</strong>.</li>\n\t\t<li>Call to <code>getAverageTime</code> is always valid.</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>You can assume all calls to <code>checkIn</code> and <code>checkOut</code> methods are consistent. If a customer gets in at time <strong>t<sub>1</sub></strong> at some station, they get out at time <strong>t<sub>2</sub></strong> with <strong>t<sub>2</sub> &gt; t<sub>1</sub></strong>. All events happen in chronological order.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;UndergroundSystem&quot;,&quot;checkIn&quot;,&quot;checkIn&quot;,&quot;checkIn&quot;,&quot;checkOut&quot;,&quot;checkOut&quot;,&quot;checkOut&quot;,&quot;getAverageTime&quot;,&quot;getAverageTime&quot;,&quot;checkIn&quot;,&quot;getAverageTime&quot;,&quot;checkOut&quot;,&quot;getAverageTime&quot;]\n[[],[45,&quot;Leyton&quot;,3],[32,&quot;Paradise&quot;,8],[27,&quot;Leyton&quot;,10],[45,&quot;Waterloo&quot;,15],[27,&quot;Waterloo&quot;,20],[32,&quot;Cambridge&quot;,22],[&quot;Paradise&quot;,&quot;Cambridge&quot;],[&quot;Leyton&quot;,&quot;Waterloo&quot;],[10,&quot;Leyton&quot;,24],[&quot;Leyton&quot;,&quot;Waterloo&quot;],[10,&quot;Waterloo&quot;,38],[&quot;Leyton&quot;,&quot;Waterloo&quot;]]\n\n<strong>Output</strong>\n[null,null,null,null,null,null,null,14.00000,11.00000,null,11.00000,null,12.00000]\n\n<strong>Explanation</strong>\nUndergroundSystem undergroundSystem = new UndergroundSystem();\nundergroundSystem.checkIn(45, &quot;Leyton&quot;, 3);\nundergroundSystem.checkIn(32, &quot;Paradise&quot;, 8);\nundergroundSystem.checkIn(27, &quot;Leyton&quot;, 10);\nundergroundSystem.checkOut(45, &quot;Waterloo&quot;, 15);\nundergroundSystem.checkOut(27, &quot;Waterloo&quot;, 20);\nundergroundSystem.checkOut(32, &quot;Cambridge&quot;, 22);\nundergroundSystem.getAverageTime(&quot;Paradise&quot;, &quot;Cambridge&quot;); &nbsp; &nbsp; &nbsp; // return 14.00000. There was only one travel from &quot;Paradise&quot; (at time 8) to &quot;Cambridge&quot; (at time 22)\nundergroundSystem.getAverageTime(&quot;Leyton&quot;, &quot;Waterloo&quot;); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// return 11.00000. There were two travels from &quot;Leyton&quot; to &quot;Waterloo&quot;, a customer with id=45 from time=3 to time=15 and a customer with id=27 from time=10 to time=20. So the average time is ( (15-3) + (20-10) ) / 2 = 11.00000\nundergroundSystem.checkIn(10, &quot;Leyton&quot;, 24);\nundergroundSystem.getAverageTime(&quot;Leyton&quot;, &quot;Waterloo&quot;); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// return 11.00000\nundergroundSystem.checkOut(10, &quot;Waterloo&quot;, 38);\nundergroundSystem.getAverageTime(&quot;Leyton&quot;, &quot;Waterloo&quot;); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// return 12.00000\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;UndergroundSystem&quot;,&quot;checkIn&quot;,&quot;checkOut&quot;,&quot;getAverageTime&quot;,&quot;checkIn&quot;,&quot;checkOut&quot;,&quot;getAverageTime&quot;,&quot;checkIn&quot;,&quot;checkOut&quot;,&quot;getAverageTime&quot;]\n[[],[10,&quot;Leyton&quot;,3],[10,&quot;Paradise&quot;,8],[&quot;Leyton&quot;,&quot;Paradise&quot;],[5,&quot;Leyton&quot;,10],[5,&quot;Paradise&quot;,16],[&quot;Leyton&quot;,&quot;Paradise&quot;],[2,&quot;Leyton&quot;,21],[2,&quot;Paradise&quot;,30],[&quot;Leyton&quot;,&quot;Paradise&quot;]]\n\n<strong>Output</strong>\n[null,null,null,5.00000,null,null,5.50000,null,null,6.66667]\n\n<strong>Explanation</strong>\nUndergroundSystem undergroundSystem = new UndergroundSystem();\nundergroundSystem.checkIn(10, &quot;Leyton&quot;, 3);\nundergroundSystem.checkOut(10, &quot;Paradise&quot;, 8);\nundergroundSystem.getAverageTime(&quot;Leyton&quot;, &quot;Paradise&quot;); // return 5.00000\nundergroundSystem.checkIn(5, &quot;Leyton&quot;, 10);\nundergroundSystem.checkOut(5, &quot;Paradise&quot;, 16);\nundergroundSystem.getAverageTime(&quot;Leyton&quot;, &quot;Paradise&quot;); // return 5.50000\nundergroundSystem.checkIn(2, &quot;Leyton&quot;, 21);\nundergroundSystem.checkOut(2, &quot;Paradise&quot;, 30);\nundergroundSystem.getAverageTime(&quot;Leyton&quot;, &quot;Paradise&quot;); // return 6.66667\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>There will be at most <code>20000</code> operations.</li>\n\t<li><code>1 &lt;= id, t &lt;= 10<sup>6</sup></code></li>\n\t<li>All strings consist of uppercase and lowercase English letters, and digits.</li>\n\t<li><code>1 &lt;= stationName.length &lt;= 10</code></li>\n\t<li>Answers within <code>10<sup>-5</sup></code> of the actual value will be accepted as correct.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"30.7K\", \"totalSubmission\": \"44.9K\", \"totalAcceptedRaw\": 30742, \"totalSubmissionRaw\": 44934, \"acRate\": \"68.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}]}}, {"id": "1395", "name": "count-number-of-teams", "content": {"questionId": "1511", "questionFrontendId": "1395", "questionTitle": "Count Number of Teams", "questionTitleSlug": "count-number-of-teams", "content": "<p>There are&nbsp;<code>n</code>&nbsp;soldiers standing in a line. Each soldier is assigned a <strong>unique</strong> <code>rating</code> value.</p>\r\n\r\n<p>You have to form a team of 3 soldiers&nbsp;amongst them under the following rules:</p>\r\n\r\n<ul>\r\n\t<li>Choose 3 soldiers with index (<code>i</code>, <code>j</code>, <code>k</code>) with&nbsp;rating (<code>rating[i]</code>, <code>rating[j]</code>, <code>rating[k]</code>).</li>\r\n\t<li>A team is valid if:&nbsp; (<code>rating[i] &lt; rating[j] &lt; rating[k]</code>) or (<code>rating[i] &gt; rating[j] &gt; rating[k]</code>) where (<code>0&nbsp;&lt;= i &lt;&nbsp;j &lt;&nbsp;k &lt;&nbsp;n</code>).</li>\r\n</ul>\r\n\r\n<p>Return the number of teams you can form given the conditions. (soldiers can be part of multiple teams).</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> rating = [2,5,3,4,1]\r\n<strong>Output:</strong> 3\r\n<strong>Explanation:</strong> We can form three teams given the conditions. (2,3,4), (5,4,1), (5,3,1). \r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> rating = [2,1,3]\r\n<strong>Output:</strong> 0\r\n<strong>Explanation:</strong> We can&#39;t form any team given the conditions.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> rating = [1,2,3,4]\r\n<strong>Output:</strong> 4\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>n == rating.length</code></li>\r\n\t<li><code>1 &lt;= n &lt;= 200</code></li>\r\n\t<li><code>1 &lt;= rating[i] &lt;= 10^5</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"44.4K\", \"totalSubmission\": \"54.3K\", \"totalAcceptedRaw\": 44387, \"totalSubmissionRaw\": 54267, \"acRate\": \"81.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "1391", "name": "check-if-there-is-a-valid-path-in-a-grid", "content": {"questionId": "1507", "questionFrontendId": "1391", "questionTitle": "Check if There is a Valid Path in a Grid", "questionTitleSlug": "check-if-there-is-a-valid-path-in-a-grid", "content": "Given a <em>m</em> x <em>n</em> <code>grid</code>. Each cell of the <code>grid</code> represents a street. The street of&nbsp;<code>grid[i][j]</code> can be:\n<ul>\n\t<li><strong>1</strong> which means a street connecting the left cell and the right cell.</li>\n\t<li><strong>2</strong> which means a street connecting the upper cell and the lower cell.</li>\n\t<li><b>3</b>&nbsp;which means a street connecting the left cell and the lower cell.</li>\n\t<li><b>4</b> which means a street connecting the right cell and the lower cell.</li>\n\t<li><b>5</b> which means a street connecting the left cell and the upper cell.</li>\n\t<li><b>6</b> which means a street connecting the right cell and the upper cell.</li>\n</ul>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/03/05/main.png\" style=\"width: 450px; height: 708px;\" /></p>\n\n<p>You will initially start at the street of the&nbsp;upper-left cell <code>(0,0)</code>. A valid path in the grid is a path which starts from the upper left&nbsp;cell <code>(0,0)</code> and ends at the bottom-right&nbsp;cell <code>(m - 1, n - 1)</code>. <strong>The path should only follow the streets</strong>.</p>\n\n<p><strong>Notice</strong> that you are <strong>not allowed</strong> to change any street.</p>\n\n<p>Return <i>true</i>&nbsp;if there is a valid path in the grid or <em>false</em> otherwise.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/03/05/e1.png\" style=\"width: 455px; height: 311px;\" />\n<pre>\n<strong>Input:</strong> grid = [[2,4,3],[6,5,2]]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> As shown you can start at cell (0, 0) and visit all the cells of the grid to reach (m - 1, n - 1).\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/03/05/e2.png\" style=\"width: 455px; height: 293px;\" />\n<pre>\n<strong>Input:</strong> grid = [[1,2,1],[1,2,1]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> As shown you the street at cell (0, 0) is not connected with any street of any other cell and you will get stuck at cell (0, 0)\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,1,2]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> You will get stuck at cell (0, 1) and you cannot reach cell (0, 2).\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,1,1,1,1,1,3]]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[2],[2],[2],[2],[2],[2],[6]]\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 300</code></li>\n\t<li><code>1 &lt;= grid[i][j] &lt;= 6</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"12.7K\", \"totalSubmission\": \"28.2K\", \"totalAcceptedRaw\": 12681, \"totalSubmissionRaw\": 28199, \"acRate\": \"45.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1400", "name": "construct-k-palindrome-strings", "content": {"questionId": "1502", "questionFrontendId": "1400", "questionTitle": "Construct K Palindrome Strings", "questionTitleSlug": "construct-k-palindrome-strings", "content": "<p>Given a string <code>s</code> and an integer <code>k</code>. You should construct <code>k</code> non-empty <strong>palindrome</strong> strings using <strong>all the characters</strong> in <code>s</code>.</p>\r\n\r\n<p>Return <em><strong>True</strong></em> if you can use all the characters in <code>s</code> to construct <code>k</code> palindrome strings or <em><strong>False</strong></em> otherwise.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;annabelle&quot;, k = 2\r\n<strong>Output:</strong> true\r\n<strong>Explanation:</strong> You can construct two palindromes using all characters in s.\r\nSome possible constructions &quot;anna&quot; + &quot;elble&quot;, &quot;anbna&quot; + &quot;elle&quot;, &quot;anellena&quot; + &quot;b&quot;\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;leetcode&quot;, k = 3\r\n<strong>Output:</strong> false\r\n<strong>Explanation:</strong> It is impossible to construct 3 palindromes using all the characters of s.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;true&quot;, k = 4\r\n<strong>Output:</strong> true\r\n<strong>Explanation:</strong> The only possible solution is to put each character in a separate string.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;yzyzyzyzyzyzyzy&quot;, k = 2\r\n<strong>Output:</strong> true\r\n<strong>Explanation:</strong> Simply you can put all z&#39;s in one string and all y&#39;s in the other string. Both strings will be palindrome.\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;cr&quot;, k = 7\r\n<strong>Output:</strong> false\r\n<strong>Explanation:</strong> We don&#39;t have enough characters in s to construct 7 palindromes.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= s.length &lt;= 10^5</code></li>\r\n\t<li>All characters in <code>s</code> are lower-case English letters.</li>\r\n\t<li><code>1 &lt;= k &lt;= 10^5</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"15.3K\", \"totalSubmission\": \"24.4K\", \"totalAcceptedRaw\": 15334, \"totalSubmissionRaw\": 24413, \"acRate\": \"62.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1401", "name": "circle-and-rectangle-overlapping", "content": {"questionId": "1501", "questionFrontendId": "1401", "questionTitle": "Circle and Rectangle Overlapping", "questionTitleSlug": "circle-and-rectangle-overlapping", "content": "<p>Given a circle represented as (<code>radius</code>, <code>x_center</code>, <code>y_center</code>)&nbsp;and an axis-aligned rectangle represented as (<code>x1</code>, <code>y1</code>, <code>x2</code>, <code>y2</code>),&nbsp;where (<code>x1</code>, <code>y1</code>) are the coordinates of the bottom-left corner, and (<code>x2</code>, <code>y2</code>) are the coordinates of the top-right corner of the&nbsp;rectangle.</p>\n\n<p>Return True if the circle and rectangle are overlapped otherwise return False.</p>\n\n<p>In other words, check if there are <strong>any </strong>point&nbsp;(xi, yi) such that belongs to the circle and the rectangle at the same time.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/20/sample_4_1728.png\" style=\"width: 258px; height: 167px;\" /></p>\n\n<pre>\n<strong>Input:</strong> radius = 1, x_center = 0, y_center = 0, x1 = 1, y1 = -1, x2 = 3, y2 = 1\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Circle and rectangle share the point (1,0) \n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/20/sample_2_1728.png\" style=\"width: 150px; height: 135px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> radius = 1, x_center = 0, y_center = 0, x1 = -1, y1 = 0, x2 = 0, y2 = 1\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/03/03/sample_6_1728.png\" style=\"width: 175px; height: 165px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> radius = 1, x_center = 1, y_center = 1, x1 = -3, y1 = -3, x2 = 3, y2 = 3\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> radius = 1, x_center = 1, y_center = 1, x1 = 1, y1 = -3, x2 = 2, y2 = -1\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= radius &lt;= 2000</code></li>\n\t<li><code>-10^4 &lt;= x_center, y_center, x1, y1, x2, y2 &lt;= 10^4</code></li>\n\t<li><code>x1 &lt; x2</code></li>\n\t<li><code>y1 &lt; y2</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"6.7K\", \"totalSubmission\": \"16K\", \"totalAcceptedRaw\": 6746, \"totalSubmissionRaw\": 15964, \"acRate\": \"42.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Geometry", "slug": "geometry"}]}}, {"id": "1379", "name": "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree", "content": {"questionId": "1498", "questionFrontendId": "1379", "questionTitle": "Find a Corresponding Node of a Binary Tree in a Clone of That Tree", "questionTitleSlug": "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree", "content": "<p>Given two binary trees <code>original</code> and <code>cloned</code> and given a reference to a node <code>target</code> in the original tree.</p>\n\n<p>The <code>cloned</code> tree is a <strong>copy of</strong> the <code>original</code> tree.</p>\n\n<p>Return <em>a reference to the same node</em> in the <code>cloned</code> tree.</p>\n\n<p><strong>Note</strong> that you are <strong>not allowed</strong> to change any of the two trees or the <code>target</code> node and the answer <strong>must be</strong> a reference to a node in the <code>cloned</code> tree.</p>\n\n<p><strong>Follow up:</strong>&nbsp;Solve the problem if repeated values on the tree are allowed.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/21/e1.png\" style=\"width: 544px; height: 426px;\" />\n<pre>\n<strong>Input:</strong> tree = [7,4,3,null,null,6,19], target = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> In all examples the original and cloned trees are shown. The target node is a green node from the original tree. The answer is the yellow node from the cloned tree.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/21/e2.png\" style=\"width: 221px; height: 159px;\" />\n<pre>\n<strong>Input:</strong> tree = [7], target =  7\n<strong>Output:</strong> 7\n</pre>\n\n<p><strong>Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/21/e3.png\" style=\"width: 459px; height: 486px;\" />\n<pre>\n<strong>Input:</strong> tree = [8,null,6,null,5,null,4,null,3,null,2,null,1], target = 4\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong>Example 4:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/21/e4.png\" style=\"width: 555px; height: 239px;\" />\n<pre>\n<strong>Input:</strong> tree = [1,2,3,4,5,6,7,8,9,10], target = 5\n<strong>Output:</strong> 5\n</pre>\n\n<p><strong>Example 5:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/21/e5.png\" style=\"width: 427px; height: 345px;\" />\n<pre>\n<strong>Input:</strong> tree = [1,2,null,3], target = 2\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the <code>tree</code> is in the range <code>[1, 10^4]</code>.</li>\n\t<li>The values of the nodes of the <code>tree</code> are unique.</li>\n\t<li><code>target</code> node is a&nbsp;node from the <code>original</code> tree and is not <code>null</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"34K\", \"totalSubmission\": \"40.4K\", \"totalAcceptedRaw\": 34023, \"totalSubmissionRaw\": 40411, \"acRate\": \"84.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "1381", "name": "design-a-stack-with-increment-operation", "content": {"questionId": "1497", "questionFrontendId": "1381", "questionTitle": "Design a Stack With Increment Operation", "questionTitleSlug": "design-a-stack-with-increment-operation", "content": "<p>Design a stack which supports the following operations.</p>\r\n\r\n<p>Implement the <code>CustomStack</code> class:</p>\r\n\r\n<ul>\r\n\t<li><code>CustomStack(int maxSize)</code> Initializes the object with <code>maxSize</code> which is the maximum number of elements in the stack or do nothing if the stack reached the <code>maxSize</code>.</li>\r\n\t<li><code>void push(int x)</code>&nbsp;Adds <code>x</code> to the top of the stack if the stack hasn&#39;t reached the <code>maxSize</code>.</li>\r\n\t<li><code>int pop()</code>&nbsp;Pops and returns the top of stack or <strong>-1</strong> if the stack is empty.</li>\r\n\t<li><code>void inc(int k, int val)</code> Increments the bottom <code>k</code> elements of the stack by <code>val</code>. If there are less than <code>k</code> elements in the stack, just increment all the elements in the stack.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input</strong>\r\n[&quot;CustomStack&quot;,&quot;push&quot;,&quot;push&quot;,&quot;pop&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;increment&quot;,&quot;increment&quot;,&quot;pop&quot;,&quot;pop&quot;,&quot;pop&quot;,&quot;pop&quot;]\r\n[[3],[1],[2],[],[2],[3],[4],[5,100],[2,100],[],[],[],[]]\r\n<strong>Output</strong>\r\n[null,null,null,2,null,null,null,null,null,103,202,201,-1]\r\n<strong>Explanation</strong>\r\nCustomStack customStack = new CustomStack(3); // Stack is Empty []\r\ncustomStack.push(1);                          // stack becomes [1]\r\ncustomStack.push(2);                          // stack becomes [1, 2]\r\ncustomStack.pop();                            // return 2 --&gt; Return top of the stack 2, stack becomes [1]\r\ncustomStack.push(2);                          // stack becomes [1, 2]\r\ncustomStack.push(3);                          // stack becomes [1, 2, 3]\r\ncustomStack.push(4);                          // stack still [1, 2, 3], Don&#39;t add another elements as size is 4\r\ncustomStack.increment(5, 100);                // stack becomes [101, 102, 103]\r\ncustomStack.increment(2, 100);                // stack becomes [201, 202, 103]\r\ncustomStack.pop();                            // return 103 --&gt; Return top of the stack 103, stack becomes [201, 202]\r\ncustomStack.pop();                            // return 202 --&gt; Return top of the stack 102, stack becomes [201]\r\ncustomStack.pop();                            // return 201 --&gt; Return top of the stack 101, stack becomes []\r\ncustomStack.pop();                            // return -1 --&gt; Stack is empty return -1.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= maxSize &lt;= 1000</code></li>\r\n\t<li><code>1 &lt;= x &lt;= 1000</code></li>\r\n\t<li><code>1 &lt;= k &lt;= 1000</code></li>\r\n\t<li><code>0 &lt;= val &lt;= 100</code></li>\r\n\t<li>At most&nbsp;<code>1000</code>&nbsp;calls will be made to each method of <code>increment</code>, <code>push</code> and <code>pop</code> each separately.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"30.7K\", \"totalSubmission\": \"40.5K\", \"totalAcceptedRaw\": 30689, \"totalSubmissionRaw\": 40520, \"acRate\": \"75.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}, {"name": "Design", "slug": "design"}]}}, {"id": "1364", "name": "number-of-trusted-contacts-of-a-customer", "content": {"questionId": "1495", "questionFrontendId": "1364", "questionTitle": "Number of Trusted Contacts of a Customer", "questionTitleSlug": "number-of-trusted-contacts-of-a-customer", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"6K\", \"totalSubmission\": \"7.7K\", \"totalAcceptedRaw\": 6010, \"totalSubmissionRaw\": 7726, \"acRate\": \"77.8%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1355", "name": "activity-participants", "content": {"questionId": "1494", "questionFrontendId": "1355", "questionTitle": "Activity Participants", "questionTitleSlug": "activity-participants", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"9.8K\", \"totalSubmission\": \"13.4K\", \"totalAcceptedRaw\": 9844, \"totalSubmissionRaw\": 13366, \"acRate\": \"73.6%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1376", "name": "time-needed-to-inform-all-employees", "content": {"questionId": "1492", "questionFrontendId": "1376", "questionTitle": "Time Needed to Inform All Employees", "questionTitleSlug": "time-needed-to-inform-all-employees", "content": "<p>A company has <code>n</code> employees with a unique ID for each employee from <code>0</code> to <code>n - 1</code>. The head of the company has is the one with <code>headID</code>.</p>\n\n<p>Each employee has one&nbsp;direct manager given in the <code>manager</code> array where <code>manager[i]</code> is the direct manager of the <code>i-th</code> employee,&nbsp;<code>manager[headID] = -1</code>. Also it&#39;s guaranteed that the subordination relationships have a tree structure.</p>\n\n<p>The head of the company wants to inform all the employees of the company of an urgent piece of news. He will inform his direct subordinates and they will inform their subordinates and so on until all employees know about the urgent news.</p>\n\n<p>The <code>i-th</code> employee needs <code>informTime[i]</code> minutes to inform all of his direct subordinates (i.e After informTime[i] minutes, all his direct subordinates can start spreading the news).</p>\n\n<p>Return <em>the number of minutes</em> needed to inform all the employees about the urgent news.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1, headID = 0, manager = [-1], informTime = [0]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The head of the company is the only employee in the company.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/27/graph.png\" style=\"width: 404px; height: 174px;\" />\n<pre>\n<strong>Input:</strong> n = 6, headID = 2, manager = [2,2,-1,2,2,2], informTime = [0,0,1,0,0,0]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The head of the company with id = 2 is the direct manager of all the employees in the company and needs 1 minute to inform them all.\nThe tree structure of the employees in the company is shown.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/28/1730_example_3_5.PNG\" style=\"width: 568px; height: 432px;\" />\n<pre>\n<strong>Input:</strong> n = 7, headID = 6, manager = [1,2,3,4,5,6,-1], informTime = [0,6,5,4,3,2,1]\n<strong>Output:</strong> 21\n<strong>Explanation:</strong> The head has id = 6. He will inform employee with id = 5 in 1 minute.\nThe employee with id = 5 will inform the employee with id = 4 in 2 minutes.\nThe employee with id = 4 will inform the employee with id = 3 in 3 minutes.\nThe employee with id = 3 will inform the employee with id = 2 in 4 minutes.\nThe employee with id = 2 will inform the employee with id = 1 in 5 minutes.\nThe employee with id = 1 will inform the employee with id = 0 in 6 minutes.\nNeeded time = 1 + 2 + 3 + 4 + 5 + 6 = 21.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 15, headID = 0, manager = [-1,0,0,1,1,2,2,3,3,4,4,5,5,6,6], informTime = [1,1,1,1,1,1,1,0,0,0,0,0,0,0,0]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The first minute the head will inform employees 1 and 2.\nThe second minute they will inform employees 3, 4, 5 and 6.\nThe third minute they will inform the rest of employees.\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, headID = 2, manager = [3,3,-1,2], informTime = [0,0,162,914]\n<strong>Output:</strong> 1076\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10^5</code></li>\n\t<li><code>0 &lt;= headID &lt; n</code></li>\n\t<li><code>manager.length == n</code></li>\n\t<li><code>0 &lt;= manager[i] &lt; n</code></li>\n\t<li><code>manager[headID] == -1</code></li>\n\t<li><code>informTime.length&nbsp;== n</code></li>\n\t<li><code>0 &lt;= informTime[i] &lt;= 1000</code></li>\n\t<li><code>informTime[i] == 0</code> if employee <code>i</code> has&nbsp;no subordinates.</li>\n\t<li>It is <strong>guaranteed</strong> that all the employees can be informed.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"40.2K\", \"totalSubmission\": \"71.5K\", \"totalAcceptedRaw\": 40164, \"totalSubmissionRaw\": 71457, \"acRate\": \"56.2%\"}", "similarQuestions": "[{\"title\": \"Maximum Depth of Binary Tree\", \"titleSlug\": \"maximum-depth-of-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Maximum Path Sum\", \"titleSlug\": \"binary-tree-maximum-path-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1375", "name": "bulb-switcher-iii", "content": {"questionId": "1491", "questionFrontendId": "1375", "questionTitle": "Bulb Switcher III", "questionTitleSlug": "bulb-switcher-iii", "content": "<p>There is a room with <code>n</code> bulbs, numbered from <code>1</code> to <code>n</code>, arranged in a row from left to right. Initially, all the bulbs are turned off.</p>\n\n<p>At moment <em>k</em> (for <em>k</em> from <code>0</code> to <code>n - 1</code>), we turn on the <code>light[k]</code> bulb. A bulb <strong>change&nbsp;color to blue</strong> only if it is on and all the previous bulbs (to the left)&nbsp;are turned on too.</p>\n\n<p>Return the number of moments in&nbsp;which <strong>all&nbsp;turned on</strong> bulbs&nbsp;<strong>are blue.</strong></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/29/sample_2_1725.png\" style=\"width: 575px; height: 300px;\" /></p>\n\n<pre>\n<strong>Input:</strong> light = [2,1,3,5,4]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> All bulbs turned on, are blue at the moment 1, 2 and 4.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> light = [3,2,4,1,5]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> All bulbs turned on, are blue at the moment 3, and 4 (index-0).\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> light = [4,1,2,3]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> All bulbs turned on, are blue at the moment 3 (index-0).\nBulb 4th changes to blue at the moment 3.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> light = [2,1,4,3,6,5]\n<strong>Output:</strong> 3\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> light = [1,2,3,4,5,6]\n<strong>Output:</strong> 6\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n ==&nbsp;light.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 5 * 10^4</code></li>\n\t<li><code>light</code> is a permutation of&nbsp;&nbsp;<code>[1, 2, ..., n]</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23.6K\", \"totalSubmission\": \"36.8K\", \"totalAcceptedRaw\": 23571, \"totalSubmissionRaw\": 36772, \"acRate\": \"64.1%\"}", "similarQuestions": "[{\"title\": \"Bulb Switcher\", \"titleSlug\": \"bulb-switcher\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Bulb Switcher II\", \"titleSlug\": \"bulb-switcher-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "1387", "name": "sort-integers-by-the-power-value", "content": {"questionId": "1488", "questionFrontendId": "1387", "questionTitle": "Sort Integers by The Power Value", "questionTitleSlug": "sort-integers-by-the-power-value", "content": "<p>The power of an integer <code>x</code> is defined as the number of steps needed to transform&nbsp;<code>x</code> into <code>1</code> using the following steps:</p>\r\n\r\n<ul>\r\n\t<li>if <code>x</code> is even then <code>x = x / 2</code></li>\r\n\t<li>if <code>x</code> is odd then <code>x = 3 * x + 1</code></li>\r\n</ul>\r\n\r\n<p>For example, the power of x = 3 is 7 because 3 needs 7 steps to become 1 (3 --&gt; 10 --&gt; 5 --&gt; 16 --&gt; 8 --&gt; 4 --&gt; 2 --&gt; 1).</p>\r\n\r\n<p>Given three integers <code>lo</code>, <code>hi</code> and <code>k</code>. The task is to sort all integers in the interval <code>[lo, hi]</code> by the power value in <strong>ascending order</strong>, if two or more integers have <strong>the same</strong> power value sort them by <strong>ascending order</strong>.</p>\r\n\r\n<p>Return the <code>k-th</code> integer in the range <code>[lo, hi]</code> sorted by the power value.</p>\r\n\r\n<p>Notice that for any&nbsp;integer <code>x</code> <code>(lo &lt;= x &lt;= hi)</code> it is <strong>guaranteed</strong> that <code>x</code> will transform into <code>1</code> using these steps and that the power of <code>x</code> is will <strong>fit</strong> in 32 bit signed integer.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> lo = 12, hi = 15, k = 2\r\n<strong>Output:</strong> 13\r\n<strong>Explanation:</strong> The power of 12 is 9 (12 --&gt; 6 --&gt; 3 --&gt; 10 --&gt; 5 --&gt; 16 --&gt; 8 --&gt; 4 --&gt; 2 --&gt; 1)\r\nThe power of 13 is 9\r\nThe power of 14 is 17\r\nThe power of 15 is 17\r\nThe interval sorted by the power value [12,13,14,15]. For k = 2 answer is the second element which is 13.\r\nNotice that 12 and 13 have the same power value and we sorted them in ascending order. Same for 14 and 15.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> lo = 1, hi = 1, k = 1\r\n<strong>Output:</strong> 1\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> lo = 7, hi = 11, k = 4\r\n<strong>Output:</strong> 7\r\n<strong>Explanation:</strong> The power array corresponding to the interval [7, 8, 9, 10, 11] is [16, 3, 19, 6, 14].\r\nThe interval sorted by power is [8, 10, 11, 7, 9].\r\nThe fourth number in the sorted array is 7.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> lo = 10, hi = 20, k = 5\r\n<strong>Output:</strong> 13\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> lo = 1, hi = 1000, k = 777\r\n<strong>Output:</strong> 570\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= lo &lt;= hi &lt;= 1000</code></li>\r\n\t<li><code>1 &lt;= k &lt;= hi - lo + 1</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"25.3K\", \"totalSubmission\": \"35.9K\", \"totalAcceptedRaw\": 25314, \"totalSubmissionRaw\": 35900, \"acRate\": \"70.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Sort", "slug": "sort"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "1386", "name": "cinema-seat-allocation", "content": {"questionId": "1487", "questionFrontendId": "1386", "questionTitle": "Cinema Seat Allocation", "questionTitleSlug": "cinema-seat-allocation", "content": "<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/14/cinema_seats_1.png\" style=\"width: 400px; height: 149px;\" /></p>\n\n<p>A cinema&nbsp;has <code>n</code>&nbsp;rows of seats, numbered from 1 to <code>n</code>&nbsp;and there are ten&nbsp;seats in each row, labelled from 1&nbsp;to 10&nbsp;as shown in the figure above.</p>\n\n<p>Given the array <code>reservedSeats</code> containing the numbers of seats already reserved, for example, <code>reservedSeats[i] = [3,8]</code>&nbsp;means the seat located in row <strong>3</strong> and labelled with <b>8</b>&nbsp;is already reserved.</p>\n\n<p><em>Return the maximum number of four-person groups&nbsp;you can assign on the cinema&nbsp;seats.</em> A four-person group&nbsp;occupies four&nbsp;adjacent seats <strong>in one single row</strong>. Seats across an aisle (such as [3,3]&nbsp;and [3,4]) are not considered to be adjacent, but there is an exceptional case&nbsp;on which an aisle split&nbsp;a four-person group, in that case, the aisle split&nbsp;a four-person group in the middle,&nbsp;which means to have two people on each side.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/14/cinema_seats_3.png\" style=\"width: 400px; height: 96px;\" /></p>\n\n<pre>\n<strong>Input:</strong> n = 3, reservedSeats = [[1,2],[1,3],[1,8],[2,6],[3,1],[3,10]]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The figure above shows the optimal allocation for four groups, where seats mark with blue are already reserved and contiguous seats mark with orange are for one group.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, reservedSeats = [[2,1],[1,8],[2,6]]\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, reservedSeats = [[4,3],[1,4],[4,6],[1,7]]\n<strong>Output:</strong> 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10^9</code></li>\n\t<li><code>1 &lt;=&nbsp;reservedSeats.length &lt;= min(10*n, 10^4)</code></li>\n\t<li><code>reservedSeats[i].length == 2</code></li>\n\t<li><code>1&nbsp;&lt;=&nbsp;reservedSeats[i][0] &lt;= n</code></li>\n\t<li><code>1 &lt;=&nbsp;reservedSeats[i][1] &lt;= 10</code></li>\n\t<li>All <code>reservedSeats[i]</code> are distinct.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"10.2K\", \"totalSubmission\": \"28.7K\", \"totalAcceptedRaw\": 10158, \"totalSubmissionRaw\": 28671, \"acRate\": \"35.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1367", "name": "linked-list-in-binary-tree", "content": {"questionId": "1484", "questionFrontendId": "1367", "questionTitle": "Linked List in Binary Tree", "questionTitleSlug": "linked-list-in-binary-tree", "content": "<p>Given a binary tree <code>root</code> and a&nbsp;linked list with&nbsp;<code>head</code>&nbsp;as the first node.&nbsp;</p>\n\n<p>Return True if all the elements in the linked list starting from the <code>head</code> correspond to some <em>downward path</em> connected in the binary tree&nbsp;otherwise return False.</p>\n\n<p>In this context downward path means a path that starts at some node and goes downwards.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/12/sample_1_1720.png\" style=\"width: 220px; height: 280px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> head = [4,2,8], root = [1,4,4,null,2,2,null,1,null,6,8,null,null,null,null,1,3]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Nodes in blue form a subpath in the binary Tree.  \n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/12/sample_2_1720.png\" style=\"width: 220px; height: 280px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1,4,2,6], root = [1,4,4,null,2,2,null,1,null,6,8,null,null,null,null,1,3]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1,4,2,6,8], root = [1,4,4,null,2,2,null,1,null,6,8,null,null,null,null,1,3]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There is no path in the binary tree that contains all the elements of the linked list from <code>head</code>.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= node.val&nbsp;&lt;= 100</code>&nbsp;for each node in the linked list and binary tree.</li>\n\t<li>The given linked list will contain between&nbsp;<code>1</code>&nbsp;and <code>100</code>&nbsp;nodes.</li>\n\t<li>The given binary tree will contain between&nbsp;<code>1</code>&nbsp;and&nbsp;<code>2500</code>&nbsp;nodes.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"24.4K\", \"totalSubmission\": \"59.3K\", \"totalAcceptedRaw\": 24353, \"totalSubmissionRaw\": 59339, \"acRate\": \"41.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "1366", "name": "rank-teams-by-votes", "content": {"questionId": "1483", "questionFrontendId": "1366", "questionTitle": "Rank Teams by Votes", "questionTitleSlug": "rank-teams-by-votes", "content": "<p>In a special ranking system,&nbsp;each voter gives a rank from highest to lowest to all teams participated in the competition.</p>\n\n<p>The ordering of teams is decided by who received the most position-one votes. If two or more teams tie in the first position, we consider the second position to resolve the conflict, if they tie again, we continue this process until the ties are resolved. If two or more teams are still tied after considering all positions, we rank them alphabetically based on their team letter.</p>\n\n<p>Given an array of strings <code>votes</code> which is the votes of all voters in the ranking systems. Sort all teams according to the ranking system described above.</p>\n\n<p>Return <em>a string of all teams</em> <strong>sorted</strong> by the ranking system.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> votes = [&quot;ABC&quot;,&quot;ACB&quot;,&quot;ABC&quot;,&quot;ACB&quot;,&quot;ACB&quot;]\n<strong>Output:</strong> &quot;ACB&quot;\n<strong>Explanation:</strong> Team A was ranked first place by 5 voters. No other team was voted as first place so team A is the first team.\nTeam B was ranked second by 2 voters and was ranked third by 3 voters.\nTeam C was ranked second by 3 voters and was ranked third by 2 voters.\nAs most of the voters ranked C second, team C is the second team and team B is the third.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> votes = [&quot;WXYZ&quot;,&quot;XYZW&quot;]\n<strong>Output:</strong> &quot;XWYZ&quot;\n<strong>Explanation:</strong> X is the winner due to tie-breaking rule. X has same votes as W for the first position but X has one vote as second position while W doesn&#39;t have any votes as second position. \n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> votes = [&quot;ZMNAGUEDSJYLBOPHRQICWFXTVK&quot;]\n<strong>Output:</strong> &quot;ZMNAGUEDSJYLBOPHRQICWFXTVK&quot;\n<strong>Explanation:</strong> Only one voter so his votes are used for the ranking.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> votes = [&quot;BCA&quot;,&quot;CAB&quot;,&quot;CBA&quot;,&quot;ABC&quot;,&quot;ACB&quot;,&quot;BAC&quot;]\n<strong>Output:</strong> &quot;ABC&quot;\n<strong>Explanation:</strong> \nTeam A was ranked first by 2 voters, second by 2 voters and third by 2 voters.\nTeam B was ranked first by 2 voters, second by 2 voters and third by 2 voters.\nTeam C was ranked first by 2 voters, second by 2 voters and third by 2 voters.\nThere is a tie and we rank teams ascending by their IDs.\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> votes = [&quot;M&quot;,&quot;M&quot;,&quot;M&quot;,&quot;M&quot;]\n<strong>Output:</strong> &quot;M&quot;\n<strong>Explanation:</strong> Only team M in the competition so it has the first rank.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= votes.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= votes[i].length &lt;= 26</code></li>\n\t<li><code>votes[i].length ==&nbsp;votes[j].length</code> for&nbsp;<code>0 &lt;= i, j &lt; votes.length</code>.</li>\n\t<li><code>votes[i][j]</code> is an English <strong>upper-case</strong> letter.</li>\n\t<li>All characters of <code>votes[i]</code> are unique.</li>\n\t<li>All the characters&nbsp;that occur&nbsp;in <code>votes[0]</code> <strong>also&nbsp;occur</strong>&nbsp;in <code>votes[j]</code> where <code>1 &lt;= j &lt; votes.length</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"16.6K\", \"totalSubmission\": \"30.3K\", \"totalAcceptedRaw\": 16612, \"totalSubmissionRaw\": 30308, \"acRate\": \"54.8%\"}", "similarQuestions": "[{\"title\": \"Online Election\", \"titleSlug\": \"online-election\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "1341", "name": "movie-rating", "content": {"questionId": "1480", "questionFrontendId": "1341", "questionTitle": "Movie Rating", "questionTitleSlug": "movie-rating", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"8.9K\", \"totalSubmission\": \"15.3K\", \"totalAcceptedRaw\": 8888, \"totalSubmissionRaw\": 15331, \"acRate\": \"58.0%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1353", "name": "maximum-number-of-events-that-can-be-attended", "content": {"questionId": "1478", "questionFrontendId": "1353", "questionTitle": "Maximum Number of Events That Can Be Attended", "questionTitleSlug": "maximum-number-of-events-that-can-be-attended", "content": "<p>Given an array of <code>events</code> where <code>events[i] = [startDay<sub>i</sub>, endDay<sub>i</sub>]</code>. Every event <code>i</code> starts at&nbsp;<code>startDay<sub>i</sub></code><sub>&nbsp;</sub>and ends at&nbsp;<code>endDay<sub>i</sub></code>.</p>\n\n<p>You can attend an event <code>i</code>&nbsp;at any day&nbsp;<code>d</code> where&nbsp;<code>startTime<sub>i</sub>&nbsp;&lt;= d &lt;= endTime<sub>i</sub></code>. Notice that you can only attend one event at any time <code>d</code>.</p>\n\n<p>Return <em>the maximum number of events&nbsp;</em>you can attend.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/05/e1.png\" style=\"width: 660px; height: 440px;\" />\n<pre>\n<strong>Input:</strong> events = [[1,2],[2,3],[3,4]]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> You can attend all the three events.\nOne way to attend them all is as shown.\nAttend the first event on day 1.\nAttend the second event on day 2.\nAttend the third event on day 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> events= [[1,2],[2,3],[3,4],[1,2]]\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> events = [[1,4],[4,4],[2,2],[3,4],[1,1]]\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> events = [[1,100000]]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> events = [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7]]\n<strong>Output:</strong> 7\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= events.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>events[i].length == 2</code></li>\n\t<li><code>1 &lt;= startDay<sub>i</sub> &lt;= endDay<sub>i</sub> &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"17.9K\", \"totalSubmission\": \"59.6K\", \"totalAcceptedRaw\": 17888, \"totalSubmissionRaw\": 59595, \"acRate\": \"30.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}, {"name": "Sort", "slug": "sort"}, {"name": "Segment Tree", "slug": "segment-tree"}]}}, {"id": "1352", "name": "product-of-the-last-k-numbers", "content": {"questionId": "1477", "questionFrontendId": "1352", "questionTitle": "Product of the Last K Numbers", "questionTitleSlug": "product-of-the-last-k-numbers", "content": "<p>Implement the class <code>ProductOfNumbers</code>&nbsp;that supports two methods:</p>\n\n<p>1.<code>&nbsp;add(int num)</code></p>\n\n<ul>\n\t<li>Adds the number <code>num</code> to the back of the current list of numbers.</li>\n</ul>\n\n<p>2.<code> getProduct(int k)</code></p>\n\n<ul>\n\t<li>Returns the product of the last <code>k</code> numbers in the current list.</li>\n\t<li>You can assume that always the current list has <strong>at least</strong> <code>k</code> numbers.</li>\n</ul>\n\n<p>At any time, the product of any contiguous sequence of numbers will fit into a single 32-bit integer without overflowing.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;ProductOfNumbers&quot;,&quot;add&quot;,&quot;add&quot;,&quot;add&quot;,&quot;add&quot;,&quot;add&quot;,&quot;getProduct&quot;,&quot;getProduct&quot;,&quot;getProduct&quot;,&quot;add&quot;,&quot;getProduct&quot;]\n[[],[3],[0],[2],[5],[4],[2],[3],[4],[8],[2]]\n\n<strong>Output</strong>\n[null,null,null,null,null,null,20,40,0,null,32]\n\n<strong>Explanation</strong>\nProductOfNumbers productOfNumbers = new ProductOfNumbers();\nproductOfNumbers.add(3);        // [3]\nproductOfNumbers.add(0);        // [3,0]\nproductOfNumbers.add(2);        // [3,0,2]\nproductOfNumbers.add(5);        // [3,0,2,5]\nproductOfNumbers.add(4);        // [3,0,2,5,4]\nproductOfNumbers.getProduct(2); // return 20. The product of the last 2 numbers is 5 * 4 = 20\nproductOfNumbers.getProduct(3); // return 40. The product of the last 3 numbers is 2 * 5 * 4 = 40\nproductOfNumbers.getProduct(4); // return 0. The product of the last 4 numbers is 0 * 2 * 5 * 4 = 0\nproductOfNumbers.add(8);        // [3,0,2,5,4,8]\nproductOfNumbers.getProduct(2); // return 32. The product of the last 2 numbers is 4 * 8 = 32 \n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>There will be at most <code>40000</code>&nbsp;operations considering both <code>add</code> and <code>getProduct</code>.</li>\n\t<li><code>0 &lt;= num&nbsp;&lt;=&nbsp;100</code></li>\n\t<li><code>1 &lt;= k &lt;= 40000</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23.2K\", \"totalSubmission\": \"53.8K\", \"totalAcceptedRaw\": 23247, \"totalSubmissionRaw\": 53764, \"acRate\": \"43.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Design", "slug": "design"}]}}, {"id": "1372", "name": "longest-zigzag-path-in-a-binary-tree", "content": {"questionId": "1474", "questionFrontendId": "1372", "questionTitle": "Longest ZigZag Path in a Binary Tree", "questionTitleSlug": "longest-zigzag-path-in-a-binary-tree", "content": "<p>Given a binary tree <code>root</code>, a&nbsp;ZigZag path for a binary tree is defined as follow:</p>\r\n\r\n<ul>\r\n\t<li>Choose <strong>any </strong>node in the binary tree and a direction (right or left).</li>\r\n\t<li>If the current direction is right then move to the right child of the current node otherwise move to the left child.</li>\r\n\t<li>Change the direction from right to left or right to left.</li>\r\n\t<li>Repeat the second and third step until you can&#39;t move in the tree.</li>\r\n</ul>\r\n\r\n<p>Zigzag length is defined as the number of nodes visited - 1. (A single node has a length of 0).</p>\r\n\r\n<p>Return&nbsp;the longest <strong>ZigZag</strong> path contained in that tree.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/22/sample_1_1702.png\" style=\"width: 151px; height: 283px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [1,null,1,1,1,null,null,1,1,null,1,null,null,null,1,null,1]\r\n<strong>Output:</strong> 3\r\n<strong>Explanation:</strong> Longest ZigZag path in blue nodes (right -&gt; left -&gt; right).\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/22/sample_2_1702.png\" style=\"width: 120px; height: 253px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [1,1,1,null,1,null,null,1,1,null,1]\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> Longest ZigZag path in blue nodes (left -&gt; right -&gt; left -&gt; right).\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [1]\r\n<strong>Output:</strong> 0\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li>Each tree has at most <code>50000</code> nodes..</li>\r\n\t<li>Each node&#39;s value is between <code>[1, 100]</code>.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"15.7K\", \"totalSubmission\": \"28.9K\", \"totalAcceptedRaw\": 15727, \"totalSubmissionRaw\": 28864, \"acRate\": \"54.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "1371", "name": "find-the-longest-substring-containing-vowels-in-even-counts", "content": {"questionId": "1473", "questionFrontendId": "1371", "questionTitle": "Find the Longest Substring Containing Vowels in Even Counts", "questionTitleSlug": "find-the-longest-substring-containing-vowels-in-even-counts", "content": "<p>Given the string <code>s</code>, return the size of the longest substring containing each vowel an even number of times. That is, &#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, and &#39;u&#39; must appear an even number of times.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;eleetminicoworoep&quot;\n<strong>Output:</strong> 13\n<strong>Explanation: </strong>The longest substring is &quot;leetminicowor&quot; which contains two each of the vowels: <strong>e</strong>, <strong>i</strong> and <strong>o</strong> and zero of the vowels: <strong>a</strong> and <strong>u</strong>.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;leetcodeisgreat&quot;\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The longest substring is &quot;leetc&quot; which contains two e&#39;s.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;bcbcbc&quot;\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> In this case, the given string &quot;bcbcbc&quot; is the longest because all vowels: <strong>a</strong>, <strong>e</strong>, <strong>i</strong>, <strong>o</strong> and <strong>u</strong> appear zero times.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 5 x 10^5</code></li>\n\t<li><code>s</code>&nbsp;contains only lowercase English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"10.7K\", \"totalSubmission\": \"17.4K\", \"totalAcceptedRaw\": 10686, \"totalSubmissionRaw\": 17424, \"acRate\": \"61.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "1348", "name": "tweet-counts-per-frequency", "content": {"questionId": "1470", "questionFrontendId": "1348", "questionTitle": "Tweet Counts Per Frequency", "questionTitleSlug": "tweet-counts-per-frequency", "content": "<p>Implement the class <code>TweetCounts</code> that supports two methods:</p>\n\n<p>1.<code> recordTweet(string tweetName, int time)</code></p>\n\n<ul>\n\t<li>Stores the <code>tweetName</code> at the recorded <code>time</code> (in <strong>seconds</strong>).</li>\n</ul>\n\n<p>2.<code> getTweetCountsPerFrequency(string freq, string tweetName, int startTime, int endTime)</code></p>\n\n<ul>\n\t<li>Returns the total number of occurrences for the given <code>tweetName</code> per <strong>minute</strong>, <strong>hour</strong>, or <strong>day</strong> (depending on <code>freq</code>) starting from the <code>startTime</code> (in <strong>seconds</strong>) and ending at the <code>endTime</code> (in <strong>seconds</strong>).</li>\n\t<li><code>freq</code> is always <strong>minute</strong><em>, </em><strong>hour</strong><em>&nbsp;or <strong>day</strong></em>, representing the time interval to get the total number of occurrences for the given&nbsp;<code>tweetName</code>.</li>\n\t<li>The first time interval always starts from the <code>startTime</code>, so the time intervals are <code>[startTime, startTime + delta*1&gt;, &nbsp;[startTime + delta*1, startTime + delta*2&gt;, [startTime + delta*2, startTime + delta*3&gt;, ... , [startTime + delta*i, <strong>min</strong>(startTime + delta*(i+1), endTime + 1)&gt;</code> for some non-negative number <code>i</code> and <code>delta</code> (which depends on <code>freq</code>).&nbsp;&nbsp;</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;TweetCounts&quot;,&quot;recordTweet&quot;,&quot;recordTweet&quot;,&quot;recordTweet&quot;,&quot;getTweetCountsPerFrequency&quot;,&quot;getTweetCountsPerFrequency&quot;,&quot;recordTweet&quot;,&quot;getTweetCountsPerFrequency&quot;]\n[[],[&quot;tweet3&quot;,0],[&quot;tweet3&quot;,60],[&quot;tweet3&quot;,10],[&quot;minute&quot;,&quot;tweet3&quot;,0,59],[&quot;minute&quot;,&quot;tweet3&quot;,0,60],[&quot;tweet3&quot;,120],[&quot;hour&quot;,&quot;tweet3&quot;,0,210]]\n\n<strong>Output</strong>\n[null,null,null,null,[2],[2,1],null,[4]]\n\n<strong>Explanation</strong>\nTweetCounts tweetCounts = new TweetCounts();\ntweetCounts.recordTweet(&quot;tweet3&quot;, 0);\ntweetCounts.recordTweet(&quot;tweet3&quot;, 60);\ntweetCounts.recordTweet(&quot;tweet3&quot;, 10);                             // All tweets correspond to &quot;tweet3&quot; with recorded times at 0, 10 and 60.\ntweetCounts.getTweetCountsPerFrequency(&quot;minute&quot;, &quot;tweet3&quot;, 0, 59); // return [2]. The frequency is per minute (60 seconds), so there is one interval of time: 1) [0, 60&gt; - &gt; 2 tweets.\ntweetCounts.getTweetCountsPerFrequency(&quot;minute&quot;, &quot;tweet3&quot;, 0, 60); // return [2, 1]. The frequency is per minute (60 seconds), so there are two intervals of time: 1) [0, 60&gt; - &gt; 2 tweets, and 2) [60,61&gt; - &gt; 1 tweet.\ntweetCounts.recordTweet(&quot;tweet3&quot;, 120);                            // All tweets correspond to &quot;tweet3&quot; with recorded times at 0, 10, 60 and 120.\ntweetCounts.getTweetCountsPerFrequency(&quot;hour&quot;, &quot;tweet3&quot;, 0, 210);  // return [4]. The frequency is per hour (3600 seconds), so there is one interval of time: 1) [0, 211&gt; - &gt; 4 tweets.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>There will be at most <code>10000</code>&nbsp;operations considering both <code>recordTweet</code> and <code>getTweetCountsPerFrequency</code>.</li>\n\t<li><code>0 &lt;= time, startTime, endTime &lt;=&nbsp;10^9</code></li>\n\t<li><code>0 &lt;= endTime - startTime &lt;= 10^4</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"9.3K\", \"totalSubmission\": \"28.4K\", \"totalAcceptedRaw\": 9326, \"totalSubmissionRaw\": 28421, \"acRate\": \"32.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}]}}, {"id": "1347", "name": "minimum-number-of-steps-to-make-two-strings-anagram", "content": {"questionId": "1469", "questionFrontendId": "1347", "questionTitle": "Minimum Number of Steps to Make Two Strings Anagram", "questionTitleSlug": "minimum-number-of-steps-to-make-two-strings-anagram", "content": "<p>Given two equal-size strings <code>s</code> and <code>t</code>. In one step you can choose <strong>any character</strong> of <code>t</code> and replace it with <strong>another character</strong>.</p>\n\n<p>Return <em>the minimum number of steps</em> to make <code>t</code>&nbsp;an anagram of <code>s</code>.</p>\n\n<p>An&nbsp;<strong>Anagram</strong>&nbsp;of a&nbsp;string&nbsp;is a string that contains the same characters with a different (or the same) ordering.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;bab&quot;, t = &quot;aba&quot;\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> Replace the first &#39;a&#39; in t with b, t = &quot;bba&quot; which is anagram of s.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;leetcode&quot;, t = &quot;practice&quot;\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> Replace &#39;p&#39;, &#39;r&#39;, &#39;a&#39;, &#39;i&#39; and &#39;c&#39; from t with proper characters to make t anagram of s.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;anagram&quot;, t = &quot;mangaar&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> &quot;anagram&quot; and &quot;mangaar&quot; are anagrams. \n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;xxyyzz&quot;, t = &quot;xxyyzz&quot;\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;friend&quot;, t = &quot;family&quot;\n<strong>Output:</strong> 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 50000</code></li>\n\t<li><code>s.length == t.length</code></li>\n\t<li><code>s</code> and <code>t</code> contain lower-case English letters only.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"40.5K\", \"totalSubmission\": \"53.7K\", \"totalAcceptedRaw\": 40494, \"totalSubmissionRaw\": 53737, \"acRate\": \"75.4%\"}", "similarQuestions": "[{\"title\": \"Determine if Two Strings Are Close\", \"titleSlug\": \"determine-if-two-strings-are-close\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "1339", "name": "maximum-product-of-splitted-binary-tree", "content": {"questionId": "1465", "questionFrontendId": "1339", "questionTitle": "Maximum Product of Splitted Binary Tree", "questionTitleSlug": "maximum-product-of-splitted-binary-tree", "content": "<p>Given a binary tree <code>root</code>.&nbsp;Split the binary tree into two subtrees by removing&nbsp;1 edge such that the product of the sums of the subtrees are maximized.</p>\r\n\r\n<p>Since the answer&nbsp;may be too large,&nbsp;return it modulo&nbsp;10^9 + 7.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/21/sample_1_1699.png\" style=\"width: 495px; height: 200px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [1,2,3,4,5,6]\r\n<strong>Output:</strong> 110\r\n<strong>Explanation:</strong> Remove the red edge and get 2 binary trees with sum 11 and 10. Their product is 110 (11*10)\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/21/sample_2_1699.png\" style=\"width: 495px; height: 200px;\" /></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [1,null,2,3,4,null,null,5,6]\r\n<strong>Output:</strong> 90\r\n<strong>Explanation:</strong>  Remove the red edge and get 2 binary trees with sum 15 and 6.Their product is 90 (15*6)\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [2,3,9,10,7,8,6,5,4,11,1]\r\n<strong>Output:</strong> 1025\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [1,1]\r\n<strong>Output:</strong> 1\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li>Each tree has at most <code>50000</code> nodes and at least <code>2</code> nodes.</li>\r\n\t<li>Each node&#39;s value is between <code>[1, 10000]</code>.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"20.6K\", \"totalSubmission\": \"54.7K\", \"totalAcceptedRaw\": 20619, \"totalSubmissionRaw\": 54660, \"acRate\": \"37.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1338", "name": "reduce-array-size-to-the-half", "content": {"questionId": "1464", "questionFrontendId": "1338", "questionTitle": "Reduce Array Size to The Half", "questionTitleSlug": "reduce-array-size-to-the-half", "content": "<p>Given an array <code>arr</code>.&nbsp; You can choose a set of integers and remove all the occurrences of these integers in the array.</p>\r\n\r\n<p>Return <em>the minimum size of the set</em> so that <strong>at least</strong> half of the integers of the array are removed.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [3,3,3,3,5,5,5,2,2,7]\r\n<strong>Output:</strong> 2\r\n<strong>Explanation:</strong> Choosing {3,7} will make the new array [5,5,5,2,2] which has size 5 (i.e equal to half of the size of the old array).\r\nPossible sets of size 2 are {3,5},{3,2},{5,2}.\r\nChoosing set {2,7} is not possible as it will make the new array [3,3,3,3,5,5,5] which has size greater than half of the size of the old array.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [7,7,7,7,7,7]\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong> The only possible set you can choose is {7}. This will make the new array empty.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [1,9]\r\n<strong>Output:</strong> 1\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [1000,1000,3,7]\r\n<strong>Output:</strong> 1\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [1,2,3,4,5,6,7,8,9,10]\r\n<strong>Output:</strong> 5\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= arr.length &lt;= 10^5</code></li>\r\n\t<li><code>arr.length</code> is even.</li>\r\n\t<li><code>1 &lt;= arr[i] &lt;= 10^5</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"28.7K\", \"totalSubmission\": \"43.1K\", \"totalAcceptedRaw\": 28739, \"totalSubmissionRaw\": 43111, \"acRate\": \"66.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1358", "name": "number-of-substrings-containing-all-three-characters", "content": {"questionId": "1460", "questionFrontendId": "1358", "questionTitle": "Number of Substrings Containing All Three Characters", "questionTitleSlug": "number-of-substrings-containing-all-three-characters", "content": "<p>Given a string <code>s</code>&nbsp;consisting only of characters <em>a</em>, <em>b</em> and <em>c</em>.</p>\n\n<p>Return the number of substrings containing <b>at least</b>&nbsp;one occurrence of all these characters <em>a</em>, <em>b</em> and <em>c</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcabc&quot;\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> The substrings containing&nbsp;at least&nbsp;one occurrence of the characters&nbsp;<em>a</em>,&nbsp;<em>b</em>&nbsp;and&nbsp;<em>c are &quot;</em>abc<em>&quot;, &quot;</em>abca<em>&quot;, &quot;</em>abcab<em>&quot;, &quot;</em>abcabc<em>&quot;, &quot;</em>bca<em>&quot;, &quot;</em>bcab<em>&quot;, &quot;</em>bcabc<em>&quot;, &quot;</em>cab<em>&quot;, &quot;</em>cabc<em>&quot; </em>and<em> &quot;</em>abc<em>&quot; </em>(<strong>again</strong>)<em>. </em>\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aaacb&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The substrings containing&nbsp;at least&nbsp;one occurrence of the characters&nbsp;<em>a</em>,&nbsp;<em>b</em>&nbsp;and&nbsp;<em>c are &quot;</em>aaacb<em>&quot;, &quot;</em>aacb<em>&quot; </em>and<em> &quot;</em>acb<em>&quot;.</em><em> </em>\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abc&quot;\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= s.length &lt;= 5 x 10^4</code></li>\n\t<li><code>s</code>&nbsp;only consists of&nbsp;<em>a</em>, <em>b</em> or <em>c&nbsp;</em>characters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"17.9K\", \"totalSubmission\": \"29.7K\", \"totalAcceptedRaw\": 17904, \"totalSubmissionRaw\": 29705, \"acRate\": \"60.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "1357", "name": "apply-discount-every-n-orders", "content": {"questionId": "1459", "questionFrontendId": "1357", "questionTitle": "Apply Discount Every n Orders", "questionTitleSlug": "apply-discount-every-n-orders", "content": "<p>There is&nbsp;a sale in a supermarket, there will be a <code>discount</code> every <code>n</code> customer.<br />\r\nThere are some products in the supermarket where the id of the <code>i-th</code> product is <code>products[i]</code> and the price per unit of this product is&nbsp;<code>prices[i]</code>.<br />\r\nThe system will count the number of customers and when the <code>n-th</code> customer arrive he/she will have a <code>discount</code> on the bill. (i.e if the cost is <code>x</code> the new cost is <code>x - (discount * x) / 100</code>). Then the system will start counting customers again.<br />\r\nThe customer orders a certain amount of each product where <code>product[i]</code> is the id of the <code>i-th</code> product the customer ordered and <code>amount[i]</code> is the number of units the customer ordered of that product.</p>\r\n\r\n<p>Implement the <code>Cashier</code> class:</p>\r\n\r\n<ul>\r\n\t<li><code>Cashier(int n, int discount, int[] products, int[] prices)</code> Initializes the object with <code>n</code>, the <code>discount</code>, the <code>products</code>&nbsp;and their <code>prices</code>.</li>\r\n\t<li><code>double&nbsp;getBill(int[] product, int[] amount)</code>&nbsp;returns the value of the bill and apply the discount if needed. Answers within <code>10^-5</code> of the actual value will be accepted as correct.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input</strong>\r\n[&quot;Cashier&quot;,&quot;getBill&quot;,&quot;getBill&quot;,&quot;getBill&quot;,&quot;getBill&quot;,&quot;getBill&quot;,&quot;getBill&quot;,&quot;getBill&quot;]\r\n[[3,50,[1,2,3,4,5,6,7],[100,200,300,400,300,200,100]],[[1,2],[1,2]],[[3,7],[10,10]],[[1,2,3,4,5,6,7],[1,1,1,1,1,1,1]],[[4],[10]],[[7,3],[10,10]],[[7,5,3,1,6,4,2],[10,10,10,9,9,9,7]],[[2,3,5],[5,3,2]]]\r\n<strong>Output</strong>\r\n[null,500.0,4000.0,800.0,4000.0,4000.0,7350.0,2500.0]\r\n<strong>Explanation</strong>\r\nCashier cashier = new Cashier(3,50,[1,2,3,4,5,6,7],[100,200,300,400,300,200,100]);\r\ncashier.getBill([1,2],[1,2]);                        // return 500.0, bill = 1 * 100 + 2 * 200 = 500.\r\ncashier.getBill([3,7],[10,10]);                      // return 4000.0\r\ncashier.getBill([1,2,3,4,5,6,7],[1,1,1,1,1,1,1]);    // return 800.0, The bill was 1600.0 but as this is the third customer, he has a discount of 50% which means his bill is only 1600 - 1600 * (50 / 100) = 800.\r\ncashier.getBill([4],[10]);                           // return 4000.0\r\ncashier.getBill([7,3],[10,10]);                      // return 4000.0\r\ncashier.getBill([7,5,3,1,6,4,2],[10,10,10,9,9,9,7]); // return 7350.0, Bill was 14700.0 but as the system counted three more customers, he will have a 50% discount and the bill becomes 7350.0\r\ncashier.getBill([2,3,5],[5,3,2]);                    // return 2500.0\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= n &lt;= 10^4</code></li>\r\n\t<li><code>0 &lt;= discount &lt;= 100</code></li>\r\n\t<li><code>1 &lt;= products.length &lt;= 200</code></li>\r\n\t<li><code>1 &lt;= products[i] &lt;= 200</code></li>\r\n\t<li>There are <strong>not</strong> repeated elements in the array <code>products</code>.</li>\r\n\t<li><code>prices.length == products.length</code></li>\r\n\t<li><code>1 &lt;= prices[i] &lt;= 1000</code></li>\r\n\t<li><code>1 &lt;= product.length &lt;= products.length</code></li>\r\n\t<li><code>product[i]</code> exists in <code>products</code>.</li>\r\n\t<li><code>amount.length == product.length</code></li>\r\n\t<li><code>1 &lt;= amount[i] &lt;= 1000</code></li>\r\n\t<li>At most <code>1000</code> calls will be made to <code>getBill</code>.</li>\r\n\t<li>Answers within&nbsp;<code>10^-5</code>&nbsp;of the actual value will be accepted as correct.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"9.1K\", \"totalSubmission\": \"13.7K\", \"totalAcceptedRaw\": 9112, \"totalSubmissionRaw\": 13686, \"acRate\": \"66.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}]}}, {"id": "1334", "name": "find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance", "content": {"questionId": "1456", "questionFrontendId": "1334", "questionTitle": "Find the City With the Smallest Number of Neighbors at a Threshold Distance", "questionTitleSlug": "find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance", "content": "<p>There are <code>n</code> cities numbered from <code>0</code> to <code>n-1</code>. Given the array <code>edges</code>&nbsp;where <code>edges[i] = [from<sub>i</sub>, to<sub>i</sub>, weight<sub>i</sub>]</code> represents a bidirectional and weighted edge between cities <code>from<sub>i</sub></code>&nbsp;and <code>to<sub>i</sub></code>, and given the integer <code>distanceThreshold</code>.</p>\n\n<p>Return the city with the smallest number<strong> </strong>of&nbsp;cities that are reachable through some path and whose distance is <strong>at most</strong> <code>distanceThreshold</code>, If there are multiple such cities, return the city with the greatest number.</p>\n\n<p>Notice that the distance of a path connecting cities <em><strong>i</strong></em> and <em><strong>j</strong></em> is equal to the sum of the edges&#39; weights along that path.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/16/find_the_city_01.png\" style=\"width: 300px; height: 225px;\" /></p>\n\n<pre>\n<strong>Input:</strong> n = 4, edges = [[0,1,3],[1,2,1],[1,3,4],[2,3,1]], distanceThreshold = 4\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>The figure above describes the graph.&nbsp;\nThe neighboring cities at a distanceThreshold = 4 for each city are:\nCity 0 -&gt; [City 1, City 2]&nbsp;\nCity 1 -&gt; [City 0, City 2, City 3]&nbsp;\nCity 2 -&gt; [City 0, City 1, City 3]&nbsp;\nCity 3 -&gt; [City 1, City 2]&nbsp;\nCities 0 and 3 have 2 neighboring cities at a distanceThreshold = 4, but we have to return city 3 since it has the greatest number.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/16/find_the_city_02.png\" style=\"width: 300px; height: 225px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5, edges = [[0,1,2],[0,4,8],[1,2,3],[1,4,2],[2,3,1],[3,4,1]], distanceThreshold = 2\n<strong>Output:</strong> 0\n<strong>Explanation: </strong>The figure above describes the graph.&nbsp;\nThe neighboring cities at a distanceThreshold = 2 for each city are:\nCity 0 -&gt; [City 1]&nbsp;\nCity 1 -&gt; [City 0, City 4]&nbsp;\nCity 2 -&gt; [City 3, City 4]&nbsp;\nCity 3 -&gt; [City 2, City 4]\nCity 4 -&gt; [City 1, City 2, City 3]&nbsp;\nThe city 0 has 1 neighboring city at a distanceThreshold = 2.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 100</code></li>\n\t<li><code>1 &lt;= edges.length &lt;= n * (n - 1) / 2</code></li>\n\t<li><code>edges[i].length == 3</code></li>\n\t<li><code>0 &lt;= from<sub>i</sub> &lt; to<sub>i</sub> &lt; n</code></li>\n\t<li><code>1 &lt;= weight<sub>i</sub>,&nbsp;distanceThreshold &lt;= 10^4</code></li>\n\t<li>All pairs <code>(from<sub>i</sub>, to<sub>i</sub>)</code> are distinct.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"17.5K\", \"totalSubmission\": \"37.8K\", \"totalAcceptedRaw\": 17513, \"totalSubmissionRaw\": 37775, \"acRate\": \"46.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Graph", "slug": "graph"}]}}, {"id": "1333", "name": "filter-restaurants-by-vegan-friendly-price-and-distance", "content": {"questionId": "1455", "questionFrontendId": "1333", "questionTitle": "Filter Restaurants by Vegan-Friendly, Price and Distance", "questionTitleSlug": "filter-restaurants-by-vegan-friendly-price-and-distance", "content": "<p>Given the array <code>restaurants</code> where &nbsp;<code>restaurants[i] = [id<sub>i</sub>, rating<sub>i</sub>, veganFriendly<sub>i</sub>, price<sub>i</sub>, distance<sub>i</sub>]</code>. You have to filter the restaurants using three filters.</p>\n\n<p>The <code>veganFriendly</code> filter will be either <em>true</em> (meaning you should only include restaurants with <code>veganFriendly<sub>i</sub></code> set to true)&nbsp;or <em>false</em>&nbsp;(meaning you can include any restaurant). In addition, you have the filters&nbsp;<code>maxPrice</code> and <code>maxDistance</code>&nbsp;which&nbsp;are the maximum value for price and distance of restaurants you should consider respectively.</p>\n\n<p>Return the array of restaurant <em><strong>IDs</strong></em> after filtering, ordered by <strong>rating</strong> from highest to lowest. For restaurants with the same rating, order them by <em><strong>id</strong></em> from highest to lowest. For simplicity <code>veganFriendly<sub>i</sub></code> and <code>veganFriendly</code> take value <em>1</em> when it is <em>true</em>, and <em>0</em> when it is <em>false</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> restaurants = [[1,4,1,40,10],[2,8,0,50,5],[3,8,1,30,4],[4,10,0,10,3],[5,1,1,15,1]], veganFriendly = 1, maxPrice = 50, maxDistance = 10\n<strong>Output:</strong> [3,1,5] \n<strong>Explanation: \n</strong>The restaurants are:\nRestaurant 1 [id=1, rating=4, veganFriendly=1, price=40, distance=10]\nRestaurant 2 [id=2, rating=8, veganFriendly=0, price=50, distance=5]\nRestaurant 3 [id=3, rating=8, veganFriendly=1, price=30, distance=4]\nRestaurant 4 [id=4, rating=10, veganFriendly=0, price=10, distance=3]\nRestaurant 5 [id=5, rating=1, veganFriendly=1, price=15, distance=1] \nAfter filter restaurants with veganFriendly = 1, maxPrice = 50 and maxDistance = 10 we have restaurant 3, restaurant 1 and restaurant 5 (ordered by rating from highest to lowest). \n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> restaurants = [[1,4,1,40,10],[2,8,0,50,5],[3,8,1,30,4],[4,10,0,10,3],[5,1,1,15,1]], veganFriendly = 0, maxPrice = 50, maxDistance = 10\n<strong>Output:</strong> [4,3,2,1,5]\n<strong>Explanation:</strong> The restaurants are the same as in example 1, but in this case the filter veganFriendly = 0, therefore all restaurants are considered.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> restaurants = [[1,4,1,40,10],[2,8,0,50,5],[3,8,1,30,4],[4,10,0,10,3],[5,1,1,15,1]], veganFriendly = 0, maxPrice = 30, maxDistance = 3\n<strong>Output:</strong> [4,5]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;=&nbsp;restaurants.length &lt;= 10^4</code></li>\n\t<li><code>restaurants[i].length == 5</code></li>\n\t<li><code>1 &lt;=&nbsp;id<sub>i</sub>, rating<sub>i</sub>, price<sub>i</sub>, distance<sub>i </sub>&lt;= 10^5</code></li>\n\t<li><code>1 &lt;=&nbsp;maxPrice,&nbsp;maxDistance &lt;= 10^5</code></li>\n\t<li><code>veganFriendly<sub>i</sub></code> and&nbsp;<code>veganFriendly</code>&nbsp;are&nbsp;0 or 1.</li>\n\t<li>All <code>id<sub>i</sub></code> are distinct.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13.7K\", \"totalSubmission\": \"24K\", \"totalAcceptedRaw\": 13713, \"totalSubmissionRaw\": 24025, \"acRate\": \"57.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "1321", "name": "restaurant-growth", "content": {"questionId": "1452", "questionFrontendId": "1321", "questionTitle": "Restaurant Growth", "questionTitleSlug": "restaurant-growth", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"8.2K\", \"totalSubmission\": \"11.6K\", \"totalAcceptedRaw\": 8165, \"totalSubmissionRaw\": 11640, \"acRate\": \"70.1%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1325", "name": "delete-leaves-with-a-given-value", "content": {"questionId": "1450", "questionFrontendId": "1325", "questionTitle": "Delete Leaves With a Given Value", "questionTitleSlug": "delete-leaves-with-a-given-value", "content": "<p>Given a binary tree&nbsp;<code>root</code>&nbsp;and an integer&nbsp;<code>target</code>, delete all the&nbsp;<strong>leaf nodes</strong>&nbsp;with value <code>target</code>.</p>\n\n<p>Note&nbsp;that once you delete a leaf node with value <code>target</code><strong>,&nbsp;</strong>if it&#39;s parent node becomes a leaf node and has the value <code><font face=\"monospace\">target</font></code>, it should also be deleted (you need to continue doing that until you can&#39;t).</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/09/sample_1_1684.png\" style=\"width: 550px; height: 120px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,2,3,2,null,2,4], target = 2\n<strong>Output:</strong> [1,null,3,null,4]\n<strong>Explanation:</strong> Leaf nodes in green with value (target = 2) are removed (Picture in left). \nAfter removing, new nodes become leaf nodes with value (target = 2) (Picture in center).\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/09/sample_2_1684.png\" style=\"width: 300px; height: 120px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,3,3,3,2], target = 3\n<strong>Output:</strong> [1,3,null,null,2]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/15/sample_3_1684.png\" style=\"width: 420px; height: 150px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,2,null,2,null,2], target = 2\n<strong>Output:</strong> [1]\n<strong>Explanation:</strong> Leaf nodes in green with value (target = 2) are removed at each step.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,1,1], target = 1\n<strong>Output:</strong> []\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,2,3], target = 1\n<strong>Output:</strong> [1,2,3]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= target&nbsp;&lt;= 1000</code></li>\n\t<li>The&nbsp;given binary tree will have between&nbsp;<code>1</code>&nbsp;and&nbsp;<code>3000</code>&nbsp;nodes.</li>\n\t<li>Each node&#39;s value is between <code>[1, 1000]</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"31.6K\", \"totalSubmission\": \"43K\", \"totalAcceptedRaw\": 31608, \"totalSubmissionRaw\": 43018, \"acRate\": \"73.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "1324", "name": "print-words-vertically", "content": {"questionId": "1449", "questionFrontendId": "1324", "questionTitle": "Print Words Vertically", "questionTitleSlug": "print-words-vertically", "content": "<p>Given a string <code>s</code>.&nbsp;Return&nbsp;all the words vertically in the same order in which they appear in <code>s</code>.<br />\r\nWords are returned as a list of strings, complete with&nbsp;spaces when is necessary. (Trailing spaces are not allowed).<br />\r\nEach word would be put on only one column and that in one column there will be only one word.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;HOW ARE YOU&quot;\r\n<strong>Output:</strong> [&quot;HAY&quot;,&quot;ORO&quot;,&quot;WEU&quot;]\r\n<strong>Explanation: </strong>Each word is printed vertically. \r\n &quot;HAY&quot;\r\n&nbsp;&quot;ORO&quot;\r\n&nbsp;&quot;WEU&quot;\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;TO BE OR NOT TO BE&quot;\r\n<strong>Output:</strong> [&quot;TBONTB&quot;,&quot;OEROOE&quot;,&quot;   T&quot;]\r\n<strong>Explanation: </strong>Trailing spaces is not allowed. \r\n&quot;TBONTB&quot;\r\n&quot;OEROOE&quot;\r\n&quot;   T&quot;\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;CONTEST IS COMING&quot;\r\n<strong>Output:</strong> [&quot;CIC&quot;,&quot;OSO&quot;,&quot;N M&quot;,&quot;T I&quot;,&quot;E N&quot;,&quot;S G&quot;,&quot;T&quot;]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= s.length &lt;= 200</code></li>\r\n\t<li><code>s</code>&nbsp;contains only upper case English letters.</li>\r\n\t<li>It&#39;s guaranteed that there is only one&nbsp;space between 2 words.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"17.2K\", \"totalSubmission\": \"29.3K\", \"totalAcceptedRaw\": 17194, \"totalSubmissionRaw\": 29299, \"acRate\": \"58.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "1344", "name": "angle-between-hands-of-a-clock", "content": {"questionId": "1446", "questionFrontendId": "1344", "questionTitle": "Angle Between Hands of a Clock", "questionTitleSlug": "angle-between-hands-of-a-clock", "content": "<p>Given two numbers, <code>hour</code> and <code>minutes</code>. Return the smaller angle (in degrees) formed between the <code>hour</code> and the <code>minute</code> hand.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/26/sample_1_1673.png\" style=\"width: 230px; height: 225px;\" /></p>\n\n<pre>\n<strong>Input:</strong> hour = 12, minutes = 30\n<strong>Output:</strong> 165\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/26/sample_2_1673.png\" style=\"width: 230px; height: 225px;\" /></p>\n\n<pre>\n<strong>Input:</strong> hour = 3, minutes = 30\n<strong>Output:</strong> 75\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/26/sample_3_1673.png\" style=\"width: 230px; height: 225px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> hour = 3, minutes = 15\n<strong>Output:</strong> 7.5\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> hour = 4, minutes = 50\n<strong>Output:</strong> 155\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> hour = 12, minutes = 0\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= hour &lt;= 12</code></li>\n\t<li><code>0 &lt;= minutes &lt;= 59</code></li>\n\t<li>Answers within&nbsp;<code>10^-5</code>&nbsp;of the actual value will be accepted as correct.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"48.1K\", \"totalSubmission\": \"78.6K\", \"totalAcceptedRaw\": 48120, \"totalSubmissionRaw\": 78581, \"acRate\": \"61.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "1343", "name": "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold", "content": {"questionId": "1445", "questionFrontendId": "1343", "questionTitle": "Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold", "questionTitleSlug": "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold", "content": "<p>Given an array of integers <code>arr</code> and two integers <code>k</code> and <code>threshold</code>.</p>\n\n<p>Return <em>the number of sub-arrays</em> of size <code>k</code> and average greater than or equal to <code>threshold</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [2,2,2,2,5,5,5,8], k = 3, threshold = 4\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Sub-arrays [2,5,5],[5,5,5] and [5,5,8] have averages 4, 5 and 6 respectively. All other sub-arrays of size 3 have averages less than 4 (the threshold).\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,1,1,1,1], k = 1, threshold = 0\n<strong>Output:</strong> 5\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [11,13,17,23,29,31,7,5,2,3], k = 3, threshold = 5\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The first 6 sub-arrays of size 3 have averages greater than 5. Note that averages are not integers.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [7,7,7,7,7,7,7], k = 7, threshold = 7\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [4,4,4,4], k = 4, threshold = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= arr[i] &lt;= 10^4</code></li>\n\t<li><code>1 &lt;= k &lt;= arr.length</code></li>\n\t<li><code>0 &lt;= threshold &lt;= 10^4</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.6K\", \"totalSubmission\": \"22.6K\", \"totalAcceptedRaw\": 14570, \"totalSubmissionRaw\": 22591, \"acRate\": \"64.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "1319", "name": "number-of-operations-to-make-network-connected", "content": {"questionId": "1442", "questionFrontendId": "1319", "questionTitle": "Number of Operations to Make Network Connected", "questionTitleSlug": "number-of-operations-to-make-network-connected", "content": "<p>There are&nbsp;<code>n</code>&nbsp;computers numbered from&nbsp;<code>0</code>&nbsp;to&nbsp;<code>n-1</code>&nbsp;connected by&nbsp;ethernet cables&nbsp;<code>connections</code>&nbsp;forming a network where&nbsp;<code>connections[i] = [a, b]</code>&nbsp;represents a connection between computers&nbsp;<code>a</code>&nbsp;and&nbsp;<code>b</code>. Any computer&nbsp;can reach any other computer directly or indirectly through the network.</p>\n\n<p>Given an initial computer network <code>connections</code>. You can extract certain cables between two directly connected computers, and place them between any pair of disconnected computers to make them directly connected. Return the <em>minimum number of times</em> you need to do this in order to make all the computers connected. If it&#39;s not possible, return -1.&nbsp;</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/02/sample_1_1677.png\" style=\"width: 570px; height: 167px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, connections = [[0,1],[0,2],[1,2]]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> Remove cable between computer 1 and 2 and place between computers 1 and 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/02/sample_2_1677.png\" style=\"width: 660px; height: 167px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 6, connections = [[0,1],[0,2],[0,3],[1,2],[1,3]]\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 6, connections = [[0,1],[0,2],[0,3],[1,2]]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> There are not enough cables.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5, connections = [[0,1],[0,2],[3,4],[2,3]]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= connections.length &lt;= min(n*(n-1)/2, 10^5)</code></li>\n\t<li><code>connections[i].length == 2</code></li>\n\t<li><code>0 &lt;= connections[i][0], connections[i][1]&nbsp;&lt; n</code></li>\n\t<li><code>connections[i][0] != connections[i][1]</code></li>\n\t<li>There are no repeated connections.</li>\n\t<li>No two computers are connected by more than one cable.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"25.7K\", \"totalSubmission\": \"47K\", \"totalAcceptedRaw\": 25657, \"totalSubmissionRaw\": 46979, \"acRate\": \"54.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}, {"name": "Union Find", "slug": "union-find"}]}}, {"id": "1318", "name": "minimum-flips-to-make-a-or-b-equal-to-c", "content": {"questionId": "1441", "questionFrontendId": "1318", "questionTitle": "Minimum Flips to Make a OR b Equal to c", "questionTitleSlug": "minimum-flips-to-make-a-or-b-equal-to-c", "content": "<p>Given 3 positives numbers <code>a</code>, <code>b</code> and <code>c</code>. Return the minimum flips required in some bits of <code>a</code> and <code>b</code> to make (&nbsp;<code>a</code> OR <code>b</code> == <code>c</code>&nbsp;). (bitwise OR operation).<br />\r\nFlip operation&nbsp;consists of change&nbsp;<strong>any</strong>&nbsp;single bit 1 to 0 or change the bit 0 to 1&nbsp;in their binary representation.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/06/sample_3_1676.png\" style=\"width: 260px; height: 87px;\" /></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> a = 2, b = 6, c = 5\r\n<strong>Output:</strong> 3\r\n<strong>Explanation: </strong>After flips a = 1 , b = 4 , c = 5 such that (<code>a</code> OR <code>b</code> == <code>c</code>)</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> a = 4, b = 2, c = 7\r\n<strong>Output:</strong> 1\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> a = 1, b = 2, c = 3\r\n<strong>Output:</strong> 0\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= a &lt;= 10^9</code></li>\r\n\t<li><code>1 &lt;= b&nbsp;&lt;= 10^9</code></li>\r\n\t<li><code>1 &lt;= c&nbsp;&lt;= 10^9</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.5K\", \"totalSubmission\": \"22.8K\", \"totalAcceptedRaw\": 14508, \"totalSubmissionRaw\": 22823, \"acRate\": \"63.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "1308", "name": "running-total-for-different-genders", "content": {"questionId": "1439", "questionFrontendId": "1308", "questionTitle": "Running Total for Different Genders", "questionTitleSlug": "running-total-for-different-genders", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"10.2K\", \"totalSubmission\": \"11.7K\", \"totalAcceptedRaw\": 10155, \"totalSubmissionRaw\": 11710, \"acRate\": \"86.7%\"}", "similarQuestions": "[{\"title\": \"Last Person to Fit in the Elevator\", \"titleSlug\": \"last-person-to-fit-in-the-elevator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1311", "name": "get-watched-videos-by-your-friends", "content": {"questionId": "1436", "questionFrontendId": "1311", "questionTitle": "Get Watched Videos by Your Friends", "questionTitleSlug": "get-watched-videos-by-your-friends", "content": "<p>There are <code>n</code> people, each person has a unique <em>id</em> between <code>0</code> and <code>n-1</code>. Given the arrays <code>watchedVideos</code> and <code>friends</code>, where <code>watchedVideos[i]</code> and <code>friends[i]</code> contain the list of watched videos and the list of friends respectively for the person with <code>id = i</code>.</p>\n\n<p>Level <strong>1</strong> of videos are all watched videos by your&nbsp;friends, level <strong>2</strong> of videos are all watched videos by the friends of your&nbsp;friends and so on. In general, the level <code>k</code> of videos are all&nbsp;watched videos by people&nbsp;with the shortest path <strong>exactly</strong> equal&nbsp;to&nbsp;<code>k</code> with you. Given your&nbsp;<code>id</code> and the <code>level</code> of videos, return the list of videos ordered by their frequencies (increasing). For videos with the same frequency order them alphabetically from least to greatest.&nbsp;</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/02/leetcode_friends_1.png\" style=\"width: 144px; height: 200px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> watchedVideos = [[&quot;A&quot;,&quot;B&quot;],[&quot;C&quot;],[&quot;B&quot;,&quot;C&quot;],[&quot;D&quot;]], friends = [[1,2],[0,3],[0,3],[1,2]], id = 0, level = 1\n<strong>Output:</strong> [&quot;B&quot;,&quot;C&quot;] \n<strong>Explanation:</strong> \nYou have id = 0 (green color in the figure) and your friends are (yellow color in the figure):\nPerson with id = 1 -&gt; watchedVideos = [&quot;C&quot;]&nbsp;\nPerson with id = 2 -&gt; watchedVideos = [&quot;B&quot;,&quot;C&quot;]&nbsp;\nThe frequencies of watchedVideos by your friends are:&nbsp;\nB -&gt; 1&nbsp;\nC -&gt; 2\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/02/leetcode_friends_2.png\" style=\"width: 144px; height: 200px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> watchedVideos = [[&quot;A&quot;,&quot;B&quot;],[&quot;C&quot;],[&quot;B&quot;,&quot;C&quot;],[&quot;D&quot;]], friends = [[1,2],[0,3],[0,3],[1,2]], id = 0, level = 2\n<strong>Output:</strong> [&quot;D&quot;]\n<strong>Explanation:</strong> \nYou have id = 0 (green color in the figure) and the only friend of your friends is the person with id = 3 (yellow color in the figure).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == watchedVideos.length ==&nbsp;friends.length</code></li>\n\t<li><code>2 &lt;= n&nbsp;&lt;= 100</code></li>\n\t<li><code>1 &lt;=&nbsp;watchedVideos[i].length &lt;= 100</code></li>\n\t<li><code>1 &lt;=&nbsp;watchedVideos[i][j].length &lt;= 8</code></li>\n\t<li><code>0 &lt;= friends[i].length &lt; n</code></li>\n\t<li><code>0 &lt;= friends[i][j]&nbsp;&lt; n</code></li>\n\t<li><code>0 &lt;= id &lt; n</code></li>\n\t<li><code>1 &lt;= level &lt; n</code></li>\n\t<li>if&nbsp;<code>friends[i]</code> contains <code>j</code>, then <code>friends[j]</code> contains <code>i</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11K\", \"totalSubmission\": \"25.1K\", \"totalAcceptedRaw\": 10996, \"totalSubmissionRaw\": 25054, \"acRate\": \"43.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "String", "slug": "string"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1310", "name": "xor-queries-of-a-subarray", "content": {"questionId": "1435", "questionFrontendId": "1310", "questionTitle": "XOR Queries of a Subarray", "questionTitleSlug": "xor-queries-of-a-subarray", "content": "Given the array <code>arr</code> of positive integers and the array <code>queries</code> where <code>queries[i] = [L<sub>i,&nbsp;</sub>R<sub>i</sub>]</code>,&nbsp;for each query <code>i</code> compute the <strong>XOR</strong> of elements from <code>L<sub>i</sub></code> to <code>Ri</code> (that is, <code>arr[L<sub>i</sub>] <strong>xor</strong> arr[L<sub>i+1</sub>] <strong>xor</strong> ... <strong>xor</strong> arr[R<sub>i</sub>]</code> ). Return an array containing the result for the given <code>queries</code>.\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [1,3,4,8], queries = [[0,1],[1,2],[0,3],[3,3]]\r\n<strong>Output:</strong> [2,7,14,8] \r\n<strong>Explanation:</strong> \r\nThe binary representation of the elements in the array are:\r\n1 = 0001 \r\n3 = 0011 \r\n4 = 0100 \r\n8 = 1000 \r\nThe XOR values for queries are:\r\n[0,1] = 1 xor 3 = 2 \r\n[1,2] = 3 xor 4 = 7 \r\n[0,3] = 1 xor 3 xor 4 xor 8 = 14 \r\n[3,3] = 8\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [4,8,2,10], queries = [[2,3],[1,3],[0,0],[0,3]]\r\n<strong>Output:</strong> [8,0,4,4]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= arr.length &lt;= 3 *&nbsp;10^4</code></li>\r\n\t<li><code>1 &lt;= arr[i] &lt;= 10^9</code></li>\r\n\t<li><code>1 &lt;= queries.length &lt;= 3 * 10^4</code></li>\r\n\t<li><code>queries[i].length == 2</code></li>\r\n\t<li><code>0 &lt;= queries[i][0] &lt;= queries[i][1] &lt; arr.length</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"19.7K\", \"totalSubmission\": \"28.5K\", \"totalAcceptedRaw\": 19695, \"totalSubmissionRaw\": 28522, \"acRate\": \"69.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "1430", "name": "check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree", "content": {"questionId": "1432", "questionFrontendId": "1430", "questionTitle": "Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree", "questionTitleSlug": "check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"35.7K\", \"totalSubmission\": \"79.3K\", \"totalAcceptedRaw\": 35676, \"totalSubmissionRaw\": 79251, \"acRate\": \"45.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "1306", "name": "jump-game-iii", "content": {"questionId": "1428", "questionFrontendId": "1306", "questionTitle": "Jump Game III", "questionTitleSlug": "jump-game-iii", "content": "<p>Given an array of non-negative integers <code>arr</code>, you are initially positioned at <code>start</code>&nbsp;index of the array. When you are at index <code>i</code>, you can jump&nbsp;to <code>i + arr[i]</code> or <code>i - arr[i]</code>, check if you can reach to <strong>any</strong> index with value 0.</p>\n\n<p>Notice that you can not jump outside of the array at any time.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [4,2,3,0,3,1,2], start = 5\n<strong>Output:</strong> true\n<strong>Explanation:</strong> \nAll possible ways to reach at index 3 with value 0 are: \nindex 5 -&gt; index 4 -&gt; index 1 -&gt; index 3 \nindex 5 -&gt; index 6 -&gt; index 4 -&gt; index 1 -&gt; index 3 \n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [4,2,3,0,3,1,2], start = 0\n<strong>Output:</strong> true \n<strong>Explanation: \n</strong>One possible way to reach at index 3 with value 0 is: \nindex 0 -&gt; index 4 -&gt; index 1 -&gt; index 3\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [3,0,2,1,2], start = 2\n<strong>Output:</strong> false\n<strong>Explanation: </strong>There is no way to reach at index 1 with value 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= arr[i] &lt;&nbsp;arr.length</code></li>\n\t<li><code>0 &lt;= start &lt; arr.length</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"57.1K\", \"totalSubmission\": \"91.4K\", \"totalAcceptedRaw\": 57128, \"totalSubmissionRaw\": 91352, \"acRate\": \"62.5%\"}", "similarQuestions": "[{\"title\": \"Jump Game II\", \"titleSlug\": \"jump-game-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Jump Game\", \"titleSlug\": \"jump-game\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}, {"name": "Recursion", "slug": "recursion"}]}}, {"id": "1305", "name": "all-elements-in-two-binary-search-trees", "content": {"questionId": "1427", "questionFrontendId": "1305", "questionTitle": "All Elements in Two Binary Search Trees", "questionTitleSlug": "all-elements-in-two-binary-search-trees", "content": "<p>Given two binary search trees <code>root1</code> and <code>root2</code>.</p>\n\n<p>Return a list containing <em>all the integers</em> from <em>both trees</em> sorted in <strong>ascending</strong> order.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/18/q2-e1.png\" style=\"width: 457px; height: 207px;\" />\n<pre>\n<strong>Input:</strong> root1 = [2,1,4], root2 = [1,0,3]\n<strong>Output:</strong> [0,1,1,2,3,4]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root1 = [0,-10,10], root2 = [5,1,7,0,2]\n<strong>Output:</strong> [-10,0,0,1,2,5,7,10]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root1 = [], root2 = [5,1,7,0,2]\n<strong>Output:</strong> [0,1,2,5,7]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> root1 = [0,-10,10], root2 = []\n<strong>Output:</strong> [-10,0,10]\n</pre>\n\n<p><strong>Example 5:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/18/q2-e5-.png\" style=\"width: 352px; height: 197px;\" />\n<pre>\n<strong>Input:</strong> root1 = [1,null,8], root2 = [8,1]\n<strong>Output:</strong> [1,1,8,8]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>Each tree has at most <code>5000</code> nodes.</li>\n\t<li>Each node&#39;s value is between <code>[-10^5, 10^5]</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"72.4K\", \"totalSubmission\": \"93.1K\", \"totalAcceptedRaw\": 72382, \"totalSubmissionRaw\": 93119, \"acRate\": \"77.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Sort", "slug": "sort"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "1297", "name": "maximum-number-of-occurrences-of-a-substring", "content": {"questionId": "1423", "questionFrontendId": "1297", "questionTitle": "Maximum Number of Occurrences of a Substring", "questionTitleSlug": "maximum-number-of-occurrences-of-a-substring", "content": "<p>Given a string <code>s</code>, return the maximum number of ocurrences of <strong>any</strong> substring&nbsp;under the following rules:</p>\r\n\r\n<ul>\r\n\t<li>The number of unique characters in the substring must be less than or equal to <code>maxLetters</code>.</li>\r\n\t<li>The substring size must be between <code>minSize</code> and <code>maxSize</code>&nbsp;inclusive.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;aababcaab&quot;, maxLetters = 2, minSize = 3, maxSize = 4\r\n<strong>Output:</strong> 2\r\n<strong>Explanation:</strong> Substring &quot;aab&quot; has 2 ocurrences in the original string.\r\nIt satisfies the conditions, 2 unique letters and size 3 (between minSize and maxSize).\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;aaaa&quot;, maxLetters = 1, minSize = 3, maxSize = 3\r\n<strong>Output:</strong> 2\r\n<strong>Explanation:</strong> Substring &quot;aaa&quot; occur 2 times in the string. It can overlap.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;aabcabcab&quot;, maxLetters = 2, minSize = 2, maxSize = 3\r\n<strong>Output:</strong> 3\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;abcde&quot;, maxLetters = 2, minSize = 3, maxSize = 3\r\n<strong>Output:</strong> 0\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= s.length &lt;= 10^5</code></li>\r\n\t<li><code>1 &lt;= maxLetters &lt;= 26</code></li>\r\n\t<li><code>1 &lt;= minSize &lt;= maxSize &lt;= min(26, s.length)</code></li>\r\n\t<li><code>s</code> only contains lowercase English letters.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"15.7K\", \"totalSubmission\": \"32.1K\", \"totalAcceptedRaw\": 15735, \"totalSubmissionRaw\": 32087, \"acRate\": \"49.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "1296", "name": "divide-array-in-sets-of-k-consecutive-numbers", "content": {"questionId": "1422", "questionFrontendId": "1296", "questionTitle": "Divide Array in Sets of K Consecutive Numbers", "questionTitleSlug": "divide-array-in-sets-of-k-consecutive-numbers", "content": "<p>Given an array of integers&nbsp;<code>nums</code>&nbsp;and a positive integer&nbsp;<code>k</code>, find whether it&#39;s possible to divide this array into&nbsp;sets of <code>k</code> consecutive numbers<br />\nReturn&nbsp;<code>True</code>&nbsp;if its possible<strong>&nbsp;</strong>otherwise&nbsp;return&nbsp;<code>False</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,3,4,4,5,6], k = 4\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Array can be divided into [1,2,3,4] and [3,4,5,6].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,1,2,3,4,3,4,5,9,10,11], k = 3\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Array can be divided into [1,2,3] , [2,3,4] , [3,4,5] and [9,10,11].\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,3,2,2,1,1], k = 3\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4], k = 3\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Each array should be divided in subarrays of size 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10^9</code></li>\n\t<li><code>1 &lt;= k &lt;= nums.length</code></li>\n</ul>\n<strong>Note:</strong> This question is the same as&nbsp;846:&nbsp;<a href=\"https://leetcode.com/problems/hand-of-straights/\">https://leetcode.com/problems/hand-of-straights/</a>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"35.6K\", \"totalSubmission\": \"64.6K\", \"totalAcceptedRaw\": 35635, \"totalSubmissionRaw\": 64603, \"acRate\": \"55.2%\"}", "similarQuestions": "[{\"title\": \"Split Array into Consecutive Subsequences\", \"titleSlug\": \"split-array-into-consecutive-subsequences\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1285", "name": "find-the-start-and-end-number-of-continuous-ranges", "content": {"questionId": "1420", "questionFrontendId": "1285", "questionTitle": "Find the Start and End Number of Continuous Ranges", "questionTitleSlug": "find-the-start-and-end-number-of-continuous-ranges", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"7.9K\", \"totalSubmission\": \"9.1K\", \"totalAcceptedRaw\": 7898, \"totalSubmissionRaw\": 9145, \"acRate\": \"86.4%\"}", "similarQuestions": "[{\"title\": \"Report Contiguous Dates\", \"titleSlug\": \"report-contiguous-dates\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find the Missing IDs\", \"titleSlug\": \"find-the-missing-ids\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1292", "name": "maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold", "content": {"questionId": "1413", "questionFrontendId": "1292", "questionTitle": "Maximum Side Length of a Square with Sum Less than or Equal to Threshold", "questionTitleSlug": "maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold", "content": "<p>Given a <code>m x n</code>&nbsp;matrix <code>mat</code> and an integer <code>threshold</code>. Return the maximum side-length of a square with a sum less than or equal to <code>threshold</code> or return <strong>0</strong> if there is no such square.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/05/e1.png\" style=\"width: 335px; height: 186px;\" />\n<pre>\n<strong>Input:</strong> mat = [[1,1,3,2,4,3,2],[1,1,3,2,4,3,2],[1,1,3,2,4,3,2]], threshold = 4\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The maximum side length of square with sum less than 4 is 2 as shown.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> mat = [[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2]], threshold = 1\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> mat = [[1,1,1,1],[1,0,0,0],[1,0,0,0],[1,0,0,0]], threshold = 6\n<strong>Output:</strong> 3\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> mat = [[18,70],[61,1],[25,85],[14,40],[11,96],[97,96],[63,45]], threshold = 40184\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= m, n &lt;= 300</code></li>\n\t<li><code>m == mat.length</code></li>\n\t<li><code>n == mat[i].length</code></li>\n\t<li><code>0 &lt;= mat[i][j] &lt;= 10000</code></li>\n\t<li><code>0 &lt;= threshold&nbsp;&lt;= 10^5</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"15.7K\", \"totalSubmission\": \"31.2K\", \"totalAcceptedRaw\": 15687, \"totalSubmissionRaw\": 31209, \"acRate\": \"50.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "1283", "name": "find-the-smallest-divisor-given-a-threshold", "content": {"questionId": "1408", "questionFrontendId": "1283", "questionTitle": "Find the Smallest Divisor Given a Threshold", "questionTitleSlug": "find-the-smallest-divisor-given-a-threshold", "content": "<p>Given an array of integers <code>nums</code> and an integer <code>threshold</code>, we will choose a positive integer divisor and&nbsp;divide&nbsp;all the array by it and sum the result of the division. Find the <strong>smallest</strong> divisor such that the result mentioned above is less than&nbsp;or equal to <code>threshold</code>.</p>\n\n<p>Each&nbsp;result of&nbsp;division is rounded&nbsp;to the nearest integer greater than or equal to that element.&nbsp;(For example: 7/3 = 3 and 10/2 = 5).</p>\n\n<p>It is guaranteed that there will be an answer.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,5,9], threshold = 6\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> We can get a sum to 17 (1+2+5+9) if the divisor is 1. \nIf the divisor is 4 we can get a sum to 7 (1+1+2+3) and if the divisor is 5 the sum will be 5 (1+1+1+2). \n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,5,7,11], threshold = 11\n<strong>Output:</strong> 3\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [19], threshold = 5\n<strong>Output:</strong> 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>6</sup></code></li>\n\t<li><code>nums.length &lt;=&nbsp;threshold &lt;= 10<sup>6</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"47.7K\", \"totalSubmission\": \"97.5K\", \"totalAcceptedRaw\": 47713, \"totalSubmissionRaw\": 97513, \"acRate\": \"48.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "1282", "name": "group-the-people-given-the-group-size-they-belong-to", "content": {"questionId": "1407", "questionFrontendId": "1282", "questionTitle": "Group the People Given the Group Size They Belong To", "questionTitleSlug": "group-the-people-given-the-group-size-they-belong-to", "content": "<p>There are <code>n</code> people&nbsp;that are split into some unknown number of groups. Each person is labeled with a&nbsp;<strong>unique ID</strong>&nbsp;from&nbsp;<code>0</code>&nbsp;to&nbsp;<code>n - 1</code>.</p>\n\n<p>You are given an integer array&nbsp;<code>groupSizes</code>, where <code>groupSizes[i]</code>&nbsp;is the size of the group that person&nbsp;<code>i</code>&nbsp;is in. For example, if&nbsp;<code>groupSizes[1] = 3</code>, then&nbsp;person&nbsp;<code>1</code>&nbsp;must be in a&nbsp;group of size&nbsp;<code>3</code>.</p>\n\n<p>Return&nbsp;<em>a list of groups&nbsp;such that&nbsp;each person&nbsp;<code>i</code>&nbsp;is in a group of size&nbsp;<code>groupSizes[i]</code></em>.</p>\n\n<p>Each person should&nbsp;appear in&nbsp;<strong>exactly one group</strong>,&nbsp;and every person must be in a group. If there are&nbsp;multiple answers, <strong>return any of them</strong>. It is <strong>guaranteed</strong> that there will be <strong>at least one</strong> valid solution for the given input.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> groupSizes = [3,3,3,3,3,1,3]\n<strong>Output:</strong> [[5],[0,1,2],[3,4,6]]\n<b>Explanation:</b> \nThe first group is [5]. The size is 1, and groupSizes[5] = 1.\nThe second group is [0,1,2]. The size is 3, and groupSizes[0] = groupSizes[1] = groupSizes[2] = 3.\nThe third group is [3,4,6]. The size is 3, and groupSizes[3] = groupSizes[4] = groupSizes[6] = 3.\nOther possible solutions are [[2,1,6],[5],[0,4,3]] and [[5],[0,6,2],[4,3,1]].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> groupSizes = [2,1,3,3,3,2]\n<strong>Output:</strong> [[1],[0,5],[2,3,4]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>groupSizes.length == n</code></li>\n\t<li><code>1 &lt;= n&nbsp;&lt;= 500</code></li>\n\t<li><code>1 &lt;=&nbsp;groupSizes[i] &lt;= n</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"47.3K\", \"totalSubmission\": \"56.2K\", \"totalAcceptedRaw\": 47321, \"totalSubmissionRaw\": 56155, \"acRate\": \"84.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1270", "name": "all-people-report-to-the-given-manager", "content": {"questionId": "1405", "questionFrontendId": "1270", "questionTitle": "All People Report to the Given Manager", "questionTitleSlug": "all-people-report-to-the-given-manager", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"15.6K\", \"totalSubmission\": \"17.6K\", \"totalAcceptedRaw\": 15561, \"totalSubmissionRaw\": 17647, \"acRate\": \"88.2%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1265", "name": "print-immutable-linked-list-in-reverse", "content": {"questionId": "1404", "questionFrontendId": "1265", "questionTitle": "Print Immutable Linked List in Reverse", "questionTitleSlug": "print-immutable-linked-list-in-reverse", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"19.3K\", \"totalSubmission\": \"20.4K\", \"totalAcceptedRaw\": 19312, \"totalSubmissionRaw\": 20425, \"acRate\": \"94.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "1277", "name": "count-square-submatrices-with-all-ones", "content": {"questionId": "1402", "questionFrontendId": "1277", "questionTitle": "Count Square Submatrices with All Ones", "questionTitleSlug": "count-square-submatrices-with-all-ones", "content": "<p>Given a <code>m * n</code> matrix of ones and zeros, return how many <strong>square</strong> submatrices have all ones.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix =\n[\n&nbsp; [0,1,1,1],\n&nbsp; [1,1,1,1],\n&nbsp; [0,1,1,1]\n]\n<strong>Output:</strong> 15\n<strong>Explanation:</strong> \nThere are <strong>10</strong> squares of side 1.\nThere are <strong>4</strong> squares of side 2.\nThere is  <strong>1</strong> square of side 3.\nTotal number of squares = 10 + 4 + 1 = <strong>15</strong>.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix = \n[\n  [1,0,1],\n  [1,1,0],\n  [1,1,0]\n]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> \nThere are <b>6</b> squares of side 1.  \nThere is <strong>1</strong> square of side 2. \nTotal number of squares = 6 + 1 = <b>7</b>.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length&nbsp;&lt;= 300</code></li>\n\t<li><code>1 &lt;= arr[0].length&nbsp;&lt;= 300</code></li>\n\t<li><code>0 &lt;= arr[i][j] &lt;= 1</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"81.8K\", \"totalSubmission\": \"112.1K\", \"totalAcceptedRaw\": 81752, \"totalSubmissionRaw\": 112075, \"acRate\": \"72.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1276", "name": "number-of-burgers-with-no-waste-of-ingredients", "content": {"questionId": "1401", "questionFrontendId": "1276", "questionTitle": "Number of Burgers with No Waste of Ingredients", "questionTitleSlug": "number-of-burgers-with-no-waste-of-ingredients", "content": "<p>Given two integers <code>tomatoSlices</code>&nbsp;and <code>cheeseSlices</code>. The ingredients of different burgers are as follows:</p>\r\n\r\n<ul>\r\n\t<li><strong>Jumbo Burger:</strong> 4 tomato slices&nbsp;and 1 cheese slice.</li>\r\n\t<li><strong>Small Burger:</strong> 2 Tomato slices&nbsp;and 1 cheese slice.</li>\r\n</ul>\r\n\r\n<p>Return <code>[total_jumbo, total_small]</code> so that the number of remaining <code>tomatoSlices</code>&nbsp;equal to 0 and the number of remaining <code>cheeseSlices</code> equal to 0. If it is not possible to make the remaining <code>tomatoSlices</code>&nbsp;and <code>cheeseSlices</code> equal to 0 return <code>[]</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> tomatoSlices = 16, cheeseSlices = 7\r\n<strong>Output:</strong> [1,6]\r\n<strong>Explantion:</strong> To make one jumbo burger and 6 small burgers we need 4*1 + 2*6 = 16 tomato and 1 + 6 = 7 cheese. There will be no remaining ingredients.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> tomatoSlices = 17, cheeseSlices = 4\r\n<strong>Output:</strong> []\r\n<strong>Explantion:</strong> There will be no way to use all ingredients to make small and jumbo burgers.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> tomatoSlices = 4, cheeseSlices = 17\r\n<strong>Output:</strong> []\r\n<strong>Explantion:</strong> Making 1 jumbo burger there will be 16 cheese remaining and making 2 small burgers there will be 15 cheese remaining.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> tomatoSlices = 0, cheeseSlices = 0\r\n<strong>Output:</strong> [0,0]\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> tomatoSlices = 2, cheeseSlices = 1\r\n<strong>Output:</strong> [0,1]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= tomatoSlices &lt;= 10^7</code></li>\r\n\t<li><code>0 &lt;= cheeseSlices &lt;= 10^7</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"12.4K\", \"totalSubmission\": \"24.8K\", \"totalAcceptedRaw\": 12395, \"totalSubmissionRaw\": 24799, \"acRate\": \"50.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1264", "name": "page-recommendations", "content": {"questionId": "1399", "questionFrontendId": "1264", "questionTitle": "Page Recommendations", "questionTitleSlug": "page-recommendations", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"9.8K\", \"totalSubmission\": \"14.3K\", \"totalAcceptedRaw\": 9838, \"totalSubmissionRaw\": 14301, \"acRate\": \"68.8%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1268", "name": "search-suggestions-system", "content": {"questionId": "1397", "questionFrontendId": "1268", "questionTitle": "Search Suggestions System", "questionTitleSlug": "search-suggestions-system", "content": "<p>Given an array of strings <code>products</code> and a string <code>searchWord</code>. We want to design a system that suggests at most three product names from <code>products</code>&nbsp;after each character of&nbsp;<code>searchWord</code> is typed. Suggested products should have common prefix with the searchWord. If there are&nbsp;more than three products with a common prefix&nbsp;return the three lexicographically minimums products.</p>\n\n<p>Return <em>list of lists</em> of the suggested <code>products</code> after each character of&nbsp;<code>searchWord</code> is typed.&nbsp;</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> products = [&quot;mobile&quot;,&quot;mouse&quot;,&quot;moneypot&quot;,&quot;monitor&quot;,&quot;mousepad&quot;], searchWord = &quot;mouse&quot;\n<strong>Output:</strong> [\n[&quot;mobile&quot;,&quot;moneypot&quot;,&quot;monitor&quot;],\n[&quot;mobile&quot;,&quot;moneypot&quot;,&quot;monitor&quot;],\n[&quot;mouse&quot;,&quot;mousepad&quot;],\n[&quot;mouse&quot;,&quot;mousepad&quot;],\n[&quot;mouse&quot;,&quot;mousepad&quot;]\n]\n<strong>Explanation:</strong> products sorted lexicographically = [&quot;mobile&quot;,&quot;moneypot&quot;,&quot;monitor&quot;,&quot;mouse&quot;,&quot;mousepad&quot;]\nAfter typing m and mo all products match and we show user [&quot;mobile&quot;,&quot;moneypot&quot;,&quot;monitor&quot;]\nAfter typing mou, mous and mouse the system suggests [&quot;mouse&quot;,&quot;mousepad&quot;]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> products = [&quot;havana&quot;], searchWord = &quot;havana&quot;\n<strong>Output:</strong> [[&quot;havana&quot;],[&quot;havana&quot;],[&quot;havana&quot;],[&quot;havana&quot;],[&quot;havana&quot;],[&quot;havana&quot;]]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> products = [&quot;bags&quot;,&quot;baggage&quot;,&quot;banner&quot;,&quot;box&quot;,&quot;cloths&quot;], searchWord = &quot;bags&quot;\n<strong>Output:</strong> [[&quot;baggage&quot;,&quot;bags&quot;,&quot;banner&quot;],[&quot;baggage&quot;,&quot;bags&quot;,&quot;banner&quot;],[&quot;baggage&quot;,&quot;bags&quot;],[&quot;bags&quot;]]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> products = [&quot;havana&quot;], searchWord = &quot;tatiana&quot;\n<strong>Output:</strong> [[],[],[],[],[],[],[]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= products.length &lt;= 1000</code></li>\n\t<li>There are no&nbsp;repeated elements in&nbsp;<code>products</code>.</li>\n\t<li><code>1 &lt;= &Sigma; products[i].length &lt;= 2 * 10^4</code></li>\n\t<li>All characters of <code>products[i]</code> are lower-case English letters.</li>\n\t<li><code>1 &lt;= searchWord.length &lt;= 1000</code></li>\n\t<li>All characters of <code>searchWord</code>&nbsp;are lower-case English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"65.2K\", \"totalSubmission\": \"101.2K\", \"totalAcceptedRaw\": 65243, \"totalSubmissionRaw\": 101223, \"acRate\": \"64.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "1267", "name": "count-servers-that-communicate", "content": {"questionId": "1396", "questionFrontendId": "1267", "questionTitle": "Count Servers that Communicate", "questionTitleSlug": "count-servers-that-communicate", "content": "<p>You are given a map of a server center, represented as a <code>m * n</code> integer matrix&nbsp;<code>grid</code>, where 1 means that on that cell there is a server and 0 means that it is no server. Two servers are said to communicate if they are on the same row or on the same column.<br />\n<br />\nReturn the number of servers&nbsp;that communicate with any other server.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/14/untitled-diagram-6.jpg\" style=\"width: 202px; height: 203px;\" /></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,0],[0,1]]\n<strong>Output:</strong> 0\n<b>Explanation:</b>&nbsp;No servers can communicate with others.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/13/untitled-diagram-4.jpg\" style=\"width: 203px; height: 203px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,0],[1,1]]\n<strong>Output:</strong> 3\n<b>Explanation:</b>&nbsp;All three servers can communicate with at least one other server.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/14/untitled-diagram-1-3.jpg\" style=\"width: 443px; height: 443px;\" /></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,1,0,0],[0,0,1,0],[0,0,1,0],[0,0,0,1]]\n<strong>Output:</strong> 4\n<b>Explanation:</b>&nbsp;The two servers in the first row can communicate with each other. The two servers in the third column can communicate with each other. The server at right bottom corner can&#39;t communicate with any other server.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m &lt;= 250</code></li>\n\t<li><code>1 &lt;= n &lt;= 250</code></li>\n\t<li><code>grid[i][j] == 0 or 1</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"25.2K\", \"totalSubmission\": \"43.7K\", \"totalAcceptedRaw\": 25230, \"totalSubmissionRaw\": 43718, \"acRate\": \"57.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "1262", "name": "greatest-sum-divisible-by-three", "content": {"questionId": "1388", "questionFrontendId": "1262", "questionTitle": "Greatest Sum Divisible by Three", "questionTitleSlug": "greatest-sum-divisible-by-three", "content": "<p>Given an array&nbsp;<code>nums</code>&nbsp;of integers, we need to find the maximum possible sum of elements of the array such that it is divisible by three.</p>\n\n<ol>\n</ol>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,6,5,1,8]\n<strong>Output:</strong> 18\n<strong>Explanation:</strong> Pick numbers 3, 6, 1 and 8 their sum is 18 (maximum sum divisible by 3).</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Since 4 is not divisible by 3, do not pick any number.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,4]\n<strong>Output:</strong> 12\n<strong>Explanation:</strong> Pick numbers 1, 3, 4 and 4 their sum is 12 (maximum sum divisible by 3).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 4 * 10^4</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10^4</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"22.5K\", \"totalSubmission\": \"45.9K\", \"totalAcceptedRaw\": 22524, \"totalSubmissionRaw\": 45936, \"acRate\": \"49.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1261", "name": "find-elements-in-a-contaminated-binary-tree", "content": {"questionId": "1387", "questionFrontendId": "1261", "questionTitle": "Find Elements in a Contaminated Binary Tree", "questionTitleSlug": "find-elements-in-a-contaminated-binary-tree", "content": "<p>Given a&nbsp;binary tree with the following rules:</p>\n\n<ol>\n\t<li><code>root.val == 0</code></li>\n\t<li>If <code>treeNode.val == x</code> and <code>treeNode.left != null</code>, then <code>treeNode.left.val == 2 * x + 1</code></li>\n\t<li>If <code>treeNode.val == x</code> and <code>treeNode.right != null</code>, then <code>treeNode.right.val == 2 * x + 2</code></li>\n</ol>\n\n<p>Now the binary tree is contaminated, which means all&nbsp;<code>treeNode.val</code>&nbsp;have&nbsp;been changed to <code>-1</code>.</p>\n\n<p>You need to first recover the binary tree and then implement the <code>FindElements</code> class:</p>\n\n<ul>\n\t<li><code>FindElements(TreeNode* root)</code>&nbsp;Initializes the object with a&nbsp;contamined binary tree, you need to recover it first.</li>\n\t<li><code>bool find(int target)</code>&nbsp;Return if the <code>target</code> value exists in the recovered binary tree.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/06/untitled-diagram-4-1.jpg\" style=\"width: 320px; height: 119px;\" /></strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;FindElements&quot;,&quot;find&quot;,&quot;find&quot;]\n[[[-1,null,-1]],[1],[2]]\n<strong>Output</strong>\n[null,false,true]\n<strong>Explanation</strong>\nFindElements findElements = new FindElements([-1,null,-1]); \nfindElements.find(1); // return False \nfindElements.find(2); // return True </pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/06/untitled-diagram-4.jpg\" style=\"width: 400px; height: 198px;\" /></strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;FindElements&quot;,&quot;find&quot;,&quot;find&quot;,&quot;find&quot;]\n[[[-1,-1,-1,-1,-1]],[1],[3],[5]]\n<strong>Output</strong>\n[null,true,true,false]\n<strong>Explanation</strong>\nFindElements findElements = new FindElements([-1,-1,-1,-1,-1]);\nfindElements.find(1); // return True\nfindElements.find(3); // return True\nfindElements.find(5); // return False</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/07/untitled-diagram-4-1-1.jpg\" style=\"width: 306px; height: 274px;\" /></strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;FindElements&quot;,&quot;find&quot;,&quot;find&quot;,&quot;find&quot;,&quot;find&quot;]\n[[[-1,null,-1,-1,null,-1]],[2],[3],[4],[5]]\n<strong>Output</strong>\n[null,true,false,false,true]\n<strong>Explanation</strong>\nFindElements findElements = new FindElements([-1,null,-1,-1,null,-1]);\nfindElements.find(2); // return True\nfindElements.find(3); // return False\nfindElements.find(4); // return False\nfindElements.find(5); // return True\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>TreeNode.val == -1</code></li>\n\t<li>The height of the binary tree is less than or equal to <code>20</code></li>\n\t<li>The total number of nodes is between <code>[1,&nbsp;10^4]</code></li>\n\t<li>Total calls of <code>find()</code> is between <code>[1,&nbsp;10^4]</code></li>\n\t<li><code>0 &lt;= target &lt;= 10^6</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"25.9K\", \"totalSubmission\": \"34.7K\", \"totalAcceptedRaw\": 25868, \"totalSubmissionRaw\": 34711, \"acRate\": \"74.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "1618", "name": "maximum-font-to-fit-a-sentence-in-a-screen", "content": {"questionId": "1384", "questionFrontendId": "1618", "questionTitle": "Maximum Font to Fit a Sentence in a Screen", "questionTitleSlug": "maximum-font-to-fit-a-sentence-in-a-screen", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"942\", \"totalSubmission\": \"1.6K\", \"totalAcceptedRaw\": 942, \"totalSubmissionRaw\": 1627, \"acRate\": \"57.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "1254", "name": "number-of-closed-islands", "content": {"questionId": "1380", "questionFrontendId": "1254", "questionTitle": "Number of Closed Islands", "questionTitleSlug": "number-of-closed-islands", "content": "<p>Given a 2D&nbsp;<code>grid</code> consists of <code>0s</code> (land)&nbsp;and <code>1s</code> (water).&nbsp; An <em>island</em> is a maximal 4-directionally connected group of <code><font face=\"monospace\">0</font>s</code> and a <em>closed island</em>&nbsp;is an island <strong>totally</strong>&nbsp;(all left, top, right, bottom) surrounded by <code>1s.</code></p>\n\n<p>Return the number of <em>closed islands</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/31/sample_3_1610.png\" style=\"width: 240px; height: 120px;\" /></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,1,1,1,1,1,1,0],[1,0,0,0,0,1,1,0],[1,0,1,0,1,1,1,0],[1,0,0,0,0,1,0,1],[1,1,1,1,1,1,1,0]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \nIslands in gray are closed because they are completely surrounded by water (group of 1s).</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/31/sample_4_1610.png\" style=\"width: 160px; height: 80px;\" /></p>\n\n<pre>\n<strong>Input:</strong> grid = [[0,0,1,0,0],[0,1,0,1,0],[0,1,1,1,0]]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,1,1,1,1,1,1],\n&nbsp;              [1,0,0,0,0,0,1],\n&nbsp;              [1,0,1,1,1,0,1],\n&nbsp;              [1,0,1,0,1,0,1],\n&nbsp;              [1,0,1,1,1,0,1],\n&nbsp;              [1,0,0,0,0,0,1],\n               [1,1,1,1,1,1,1]]\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= grid.length, grid[0].length &lt;= 100</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;=1</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"30.9K\", \"totalSubmission\": \"50.5K\", \"totalAcceptedRaw\": 30937, \"totalSubmissionRaw\": 50502, \"acRate\": \"61.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1253", "name": "reconstruct-a-2-row-binary-matrix", "content": {"questionId": "1379", "questionFrontendId": "1253", "questionTitle": "Reconstruct a 2-Row Binary Matrix", "questionTitleSlug": "reconstruct-a-2-row-binary-matrix", "content": "<p>Given the following details of a matrix with <code>n</code> columns and <code>2</code> rows :</p>\n\n<ul>\n\t<li>The matrix is a binary matrix, which means each element in the matrix can be <code>0</code> or <code>1</code>.</li>\n\t<li>The sum of elements of the 0-th(upper) row is given as <code>upper</code>.</li>\n\t<li>The sum of elements of the 1-st(lower) row is given as <code>lower</code>.</li>\n\t<li>The sum of elements in the i-th column(0-indexed) is <code>colsum[i]</code>, where <code>colsum</code> is given as an integer array with length <code>n</code>.</li>\n</ul>\n\n<p>Your task is to reconstruct the matrix with <code>upper</code>, <code>lower</code> and <code>colsum</code>.</p>\n\n<p>Return it as a 2-D integer array.</p>\n\n<p>If there are more than one valid solution, any of them will be accepted.</p>\n\n<p>If no valid solution exists, return an empty 2-D array.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> upper = 2, lower = 1, colsum = [1,1,1]\n<strong>Output:</strong> [[1,1,0],[0,0,1]]\n<strong>Explanation: </strong>[[1,0,1],[0,1,0]], and [[0,1,1],[1,0,0]] are also correct answers.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> upper = 2, lower = 3, colsum = [2,2,1,1]\n<strong>Output:</strong> []\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> upper = 5, lower = 5, colsum = [2,1,2,0,1,0,1,2,0,1]\n<strong>Output:</strong> [[1,1,1,0,1,0,0,1,0,0],[1,0,1,0,0,0,1,1,0,1]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= colsum.length &lt;= 10^5</code></li>\n\t<li><code>0 &lt;= upper, lower &lt;= colsum.length</code></li>\n\t<li><code>0 &lt;= colsum[i] &lt;= 2</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13K\", \"totalSubmission\": \"31.5K\", \"totalAcceptedRaw\": 12981, \"totalSubmissionRaw\": 31471, \"acRate\": \"41.2%\"}", "similarQuestions": "[{\"title\": \"Find Valid Matrix Given Row and Column Sums\", \"titleSlug\": \"find-valid-matrix-given-row-and-column-sums\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1428", "name": "leftmost-column-with-at-least-a-one", "content": {"questionId": "1374", "questionFrontendId": "1428", "questionTitle": "Leftmost Column with at Least a One", "questionTitleSlug": "leftmost-column-with-at-least-a-one", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"71.7K\", \"totalSubmission\": \"147.7K\", \"totalAcceptedRaw\": 71682, \"totalSubmissionRaw\": 147732, \"acRate\": \"48.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "1249", "name": "minimum-remove-to-make-valid-parentheses", "content": {"questionId": "1371", "questionFrontendId": "1249", "questionTitle": "Minimum Remove to Make Valid Parentheses", "questionTitleSlug": "minimum-remove-to-make-valid-parentheses", "content": "<p>Given a string <font face=\"monospace\">s</font>&nbsp;of&nbsp;<code>&#39;(&#39;</code>&nbsp;,&nbsp;<code>&#39;)&#39;</code>&nbsp;and lowercase English characters.&nbsp;</p>\r\n\r\n<p>Your task is to remove the minimum number of parentheses (&nbsp;<code>&#39;(&#39;</code>&nbsp;or&nbsp;<code>&#39;)&#39;</code>,&nbsp;in any positions ) so that the resulting <em>parentheses string</em> is valid and return <strong>any</strong> valid string.</p>\r\n\r\n<p>Formally, a <em>parentheses string</em> is valid if and only if:</p>\r\n\r\n<ul>\r\n\t<li>It is the empty string, contains only lowercase characters, or</li>\r\n\t<li>It can be written as&nbsp;<code>AB</code>&nbsp;(<code>A</code>&nbsp;concatenated with&nbsp;<code>B</code>), where&nbsp;<code>A</code>&nbsp;and&nbsp;<code>B</code>&nbsp;are valid strings, or</li>\r\n\t<li>It can be written as&nbsp;<code>(A)</code>, where&nbsp;<code>A</code>&nbsp;is a valid string.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;lee(t(c)o)de)&quot;\r\n<strong>Output:</strong> &quot;lee(t(c)o)de&quot;\r\n<strong>Explanation:</strong> &quot;lee(t(co)de)&quot; , &quot;lee(t(c)ode)&quot; would also be accepted.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;a)b(c)d&quot;\r\n<strong>Output:</strong> &quot;ab(c)d&quot;\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;))((&quot;\r\n<strong>Output:</strong> &quot;&quot;\r\n<strong>Explanation:</strong> An empty string is also valid.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;(a(b(c)d)&quot;\r\n<strong>Output:</strong> &quot;a(b(c)d)&quot;\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= s.length &lt;= 10^5</code></li>\r\n\t<li><code>s[i]</code>&nbsp;is one&nbsp;of&nbsp;&nbsp;<code>&#39;(&#39;</code> , <code>&#39;)&#39;</code> and&nbsp;lowercase English letters<code>.</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"128.9K\", \"totalSubmission\": \"203.4K\", \"totalAcceptedRaw\": 128902, \"totalSubmissionRaw\": 203401, \"acRate\": \"63.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Stack", "slug": "stack"}]}}, {"id": "1248", "name": "count-number-of-nice-subarrays", "content": {"questionId": "1370", "questionFrontendId": "1248", "questionTitle": "Count Number of Nice Subarrays", "questionTitleSlug": "count-number-of-nice-subarrays", "content": "<p>Given an array of integers <code>nums</code> and an integer <code>k</code>. A continuous subarray is called <strong>nice</strong> if there are <code>k</code> odd numbers on it.</p>\n\n<p>Return <em>the number of <strong>nice</strong> sub-arrays</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,2,1,1], k = 3\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The only sub-arrays with 3 odd numbers are [1,1,2,1] and [1,2,1,1].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,4,6], k = 1\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There is no odd numbers in the array.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,2,2,1,2,2,1,2,2,2], k = 2\n<strong>Output:</strong> 16\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 50000</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= k &lt;= nums.length</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"24.8K\", \"totalSubmission\": \"43.9K\", \"totalAcceptedRaw\": 24775, \"totalSubmissionRaw\": 43888, \"acRate\": \"56.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "1247", "name": "minimum-swaps-to-make-strings-equal", "content": {"questionId": "1369", "questionFrontendId": "1247", "questionTitle": "Minimum Swaps to Make Strings Equal", "questionTitleSlug": "minimum-swaps-to-make-strings-equal", "content": "<p>You are given two strings&nbsp;<code>s1</code>&nbsp;and&nbsp;<code>s2</code>&nbsp;of equal length&nbsp;consisting of letters <code>&quot;x&quot;</code> and <code>&quot;y&quot;</code> <strong>only</strong>. Your task is to&nbsp;make these two strings equal to each other. You can swap any two characters that belong to <strong>different</strong> strings,&nbsp;which means: swap <code>s1[i]</code> and <code>s2[j]</code>.</p>\r\n\r\n<p>Return&nbsp;the minimum number of swaps required&nbsp;to make&nbsp;<code>s1</code>&nbsp;and <code>s2</code> equal, or return&nbsp;<code>-1</code>&nbsp;if it is&nbsp;impossible to do so.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s1 = &quot;xx&quot;, s2 = &quot;yy&quot;\r\n<strong>Output:</strong> 1\r\n<strong>Explanation: \r\n</strong>Swap s1[0] and s2[1], s1 = &quot;yx&quot;, s2 = &quot;yx&quot;.</pre>\r\n\r\n<p><strong>Example 2:&nbsp;</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s1 = &quot;xy&quot;, s2 = &quot;yx&quot;\r\n<strong>Output:</strong> 2\r\n<strong>Explanation: \r\n</strong>Swap s1[0] and s2[0], s1 = &quot;yy&quot;, s2 = &quot;xx&quot;.\r\nSwap s1[0] and s2[1], s1 = &quot;xy&quot;, s2 = &quot;xy&quot;.\r\nNote that you can&#39;t swap s1[0] and s1[1] to make s1 equal to &quot;yx&quot;, cause we can only swap chars in different strings.</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s1 = &quot;xx&quot;, s2 = &quot;xy&quot;\r\n<strong>Output:</strong> -1\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s1 = &quot;xxyyxyxyxx&quot;, s2 = &quot;xyyxyxxxyx&quot;\r\n<strong>Output:</strong> 4\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= s1.length, s2.length &lt;= 1000</code></li>\r\n\t<li><code>s1, s2</code>&nbsp;only contain <code>&#39;x&#39;</code> or <code>&#39;y&#39;</code>.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"17.2K\", \"totalSubmission\": \"27.6K\", \"totalAcceptedRaw\": 17178, \"totalSubmissionRaw\": 27565, \"acRate\": \"62.3%\"}", "similarQuestions": "[{\"title\": \"Determine if Two Strings Are Close\", \"titleSlug\": \"determine-if-two-strings-are-close\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1242", "name": "web-crawler-multithreaded", "content": {"questionId": "1368", "questionFrontendId": "1242", "questionTitle": "Web Crawler Multithreaded", "questionTitleSlug": "web-crawler-multithreaded", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.4K\", \"totalSubmission\": \"30.4K\", \"totalAcceptedRaw\": 14431, \"totalSubmissionRaw\": 30392, \"acRate\": \"47.5%\"}", "similarQuestions": "[{\"title\": \"Web Crawler\", \"titleSlug\": \"web-crawler\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Concurrency", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1429", "name": "first-unique-number", "content": {"questionId": "1366", "questionFrontendId": "1429", "questionTitle": "First Unique Number", "questionTitleSlug": "first-unique-number", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"48.6K\", \"totalSubmission\": \"99.5K\", \"totalAcceptedRaw\": 48621, \"totalSubmissionRaw\": 99526, \"acRate\": \"48.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Design", "slug": "design"}]}}, {"id": "1227", "name": "airplane-seat-assignment-probability", "content": {"questionId": "1362", "questionFrontendId": "1227", "questionTitle": "Airplane Seat Assignment Probability", "questionTitleSlug": "airplane-seat-assignment-probability", "content": "<p><code data-stringify-type=\"code\">n</code>&nbsp;passengers board an airplane with exactly&nbsp;<code data-stringify-type=\"code\">n</code>&nbsp;seats. The first passenger has lost the ticket and picks a seat randomly. But after that, the rest of passengers will:</p>\r\n\r\n<ul>\r\n\t<li>Take their own seat if it is still available,&nbsp;</li>\r\n\t<li>Pick other seats randomly when they find their seat occupied&nbsp;</li>\r\n</ul>\r\n\r\n<p>What is the probability that the n-th person can get his own seat?</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 1\r\n<strong>Output:</strong> 1.00000\r\n<strong>Explanation: </strong>The first person can only get the first seat.</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 2\r\n<strong>Output:</strong> 0.50000\r\n<strong>Explanation: </strong>The second person has a probability of 0.5 to get the second seat (when first person gets the first seat).\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= n &lt;= 10^5</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.2K\", \"totalSubmission\": \"22.9K\", \"totalAcceptedRaw\": 14157, \"totalSubmissionRaw\": 22866, \"acRate\": \"61.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Brainteaser", "slug": "brainteaser"}]}}, {"id": "1239", "name": "maximum-length-of-a-concatenated-string-with-unique-characters", "content": {"questionId": "1360", "questionFrontendId": "1239", "questionTitle": "Maximum Length of a Concatenated String with Unique Characters", "questionTitleSlug": "maximum-length-of-a-concatenated-string-with-unique-characters", "content": "<p>Given an array of strings <code>arr</code>. String <code>s</code> is a concatenation of a sub-sequence of <code>arr</code> which have <strong>unique characters</strong>.</p>\n\n<p>Return <em>the maximum possible length</em> of <code>s</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [&quot;un&quot;,&quot;iq&quot;,&quot;ue&quot;]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> All possible concatenations are &quot;&quot;,&quot;un&quot;,&quot;iq&quot;,&quot;ue&quot;,&quot;uniq&quot; and &quot;ique&quot;.\nMaximum length is 4.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [&quot;cha&quot;,&quot;r&quot;,&quot;act&quot;,&quot;ers&quot;]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> Possible solutions are &quot;chaers&quot; and &quot;acters&quot;.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [&quot;abcdefghijklmnopqrstuvwxyz&quot;]\n<strong>Output:</strong> 26\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 16</code></li>\n\t<li><code>1 &lt;= arr[i].length &lt;= 26</code></li>\n\t<li><code>arr[i]</code> contains only lower case English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"41.6K\", \"totalSubmission\": \"84.9K\", \"totalAcceptedRaw\": 41635, \"totalSubmissionRaw\": 84937, \"acRate\": \"49.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "1238", "name": "circular-permutation-in-binary-representation", "content": {"questionId": "1359", "questionFrontendId": "1238", "questionTitle": "Circular Permutation in Binary Representation", "questionTitleSlug": "circular-permutation-in-binary-representation", "content": "<p>Given 2 integers <code>n</code> and <code>start</code>. Your task is return <strong>any</strong> permutation <code>p</code>&nbsp;of <code>(0,1,2.....,2^n -1) </code>such that :</p>\r\n\r\n<ul>\r\n\t<li><code>p[0] = start</code></li>\r\n\t<li><code>p[i]</code> and <code>p[i+1]</code>&nbsp;differ by only one bit in their binary representation.</li>\r\n\t<li><code>p[0]</code> and <code>p[2^n -1]</code>&nbsp;must also differ by only one bit in their binary representation.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 2, start = 3\r\n<strong>Output:</strong> [3,2,0,1]\r\n<strong>Explanation:</strong> The binary representation of the permutation is (11,10,00,01). \r\nAll the adjacent element differ by one bit. Another valid permutation is [3,1,0,2]\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 3, start = 2\r\n<strong>Output:</strong> [2,6,7,5,4,0,1,3]\r\n<strong>Explanation:</strong> The binary representation of the permutation is (010,110,111,101,100,000,001,011).\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= n &lt;= 16</code></li>\r\n\t<li><code>0 &lt;= start&nbsp;&lt;&nbsp;2 ^ n</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"8.3K\", \"totalSubmission\": \"12.6K\", \"totalAcceptedRaw\": 8295, \"totalSubmissionRaw\": 12628, \"acRate\": \"65.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "1234", "name": "replace-the-substring-for-balanced-string", "content": {"questionId": "1351", "questionFrontendId": "1234", "questionTitle": "Replace the Substring for Balanced String", "questionTitleSlug": "replace-the-substring-for-balanced-string", "content": "<p>You are given a string containing only 4&nbsp;kinds of characters <code>&#39;Q&#39;,</code> <code>&#39;W&#39;, &#39;E&#39;</code> and&nbsp;<code>&#39;R&#39;</code>.</p>\n\n<p>A string is said to be&nbsp;<strong>balanced</strong><em>&nbsp;</em>if each of its characters appears&nbsp;<code>n/4</code> times where <code>n</code> is the length of the string.</p>\n\n<p>Return the minimum length of the substring that can be replaced with <strong>any</strong> other string of the same length to make the original string <code>s</code>&nbsp;<strong>balanced</strong>.</p>\n\n<p>Return 0 if the string is already <strong>balanced</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;QWER&quot;\n<strong>Output:</strong> 0\n<strong>Explanation: </strong>s is already balanced.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;QQWE&quot;\n<strong>Output:</strong> 1\n<strong>Explanation: </strong>We need to replace a &#39;Q&#39; to &#39;R&#39;, so that &quot;RQWE&quot; (or &quot;QRWE&quot;) is balanced.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;QQQW&quot;\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>We can replace the first &quot;QQ&quot; to &quot;ER&quot;. \n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;QQQQ&quot;\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>We can replace the last 3 &#39;Q&#39; to make s = &quot;QWER&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10^5</code></li>\n\t<li><code>s.length</code> is a multiple of <code>4</code></li>\n\t<li><code>s&nbsp;</code>contains only <code>&#39;Q&#39;</code>, <code>&#39;W&#39;</code>, <code>&#39;E&#39;</code> and&nbsp;<code>&#39;R&#39;</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.2K\", \"totalSubmission\": \"41.4K\", \"totalAcceptedRaw\": 14188, \"totalSubmissionRaw\": 41420, \"acRate\": \"34.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}, {"name": "String", "slug": "string"}]}}, {"id": "1233", "name": "remove-sub-folders-from-the-filesystem", "content": {"questionId": "1350", "questionFrontendId": "1233", "questionTitle": "Remove Sub-Folders from the Filesystem", "questionTitleSlug": "remove-sub-folders-from-the-filesystem", "content": "<p>Given a list of folders, remove all sub-folders in those folders and return in <strong>any order</strong> the folders after removing.</p>\n\n<p>If a <code>folder[i]</code> is located within&nbsp;another <code>folder[j]</code>, it is called a&nbsp;sub-folder&nbsp;of it.</p>\n\n<p>The format of a path is&nbsp;one or more concatenated strings of the form:&nbsp;<code>/</code>&nbsp;followed by one or more lowercase English letters. For example,&nbsp;<code>/leetcode</code>&nbsp;and&nbsp;<code>/leetcode/problems</code>&nbsp;are valid paths while an empty string and&nbsp;<code>/</code>&nbsp;are not.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> folder = [&quot;/a&quot;,&quot;/a/b&quot;,&quot;/c/d&quot;,&quot;/c/d/e&quot;,&quot;/c/f&quot;]\n<strong>Output:</strong> [&quot;/a&quot;,&quot;/c/d&quot;,&quot;/c/f&quot;]\n<strong>Explanation:</strong> Folders &quot;/a/b/&quot; is a subfolder of &quot;/a&quot; and &quot;/c/d/e&quot; is inside of folder &quot;/c/d&quot; in our filesystem.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> folder = [&quot;/a&quot;,&quot;/a/b/c&quot;,&quot;/a/b/d&quot;]\n<strong>Output:</strong> [&quot;/a&quot;]\n<strong>Explanation:</strong> Folders &quot;/a/b/c&quot; and &quot;/a/b/d/&quot; will be removed because they are subfolders of &quot;/a&quot;.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> folder = [&quot;/a/b/c&quot;,&quot;/a/b/ca&quot;,&quot;/a/b/d&quot;]\n<strong>Output:</strong> [&quot;/a/b/c&quot;,&quot;/a/b/ca&quot;,&quot;/a/b/d&quot;]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= folder.length&nbsp;&lt;= 4 * 10^4</code></li>\n\t<li><code>2 &lt;= folder[i].length &lt;= 100</code></li>\n\t<li><code>folder[i]</code> contains only&nbsp;lowercase letters and &#39;/&#39;</li>\n\t<li><code>folder[i]</code> always starts with character &#39;/&#39;</li>\n\t<li>Each folder name is unique.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"24.3K\", \"totalSubmission\": \"39.4K\", \"totalAcceptedRaw\": 24263, \"totalSubmissionRaw\": 39444, \"acRate\": \"61.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "String", "slug": "string"}]}}, {"id": "1223", "name": "dice-roll-simulation", "content": {"questionId": "1343", "questionFrontendId": "1223", "questionTitle": "Dice Roll Simulation", "questionTitleSlug": "dice-roll-simulation", "content": "<p>A die simulator generates a random number from 1 to 6 for each roll.&nbsp;You introduced a constraint to the generator such that it cannot roll the number <code>i</code> more than <code>rollMax[i]</code> (1-indexed) <strong>consecutive</strong> times.&nbsp;</p>\n\n<p>Given an array of integers&nbsp;<code>rollMax</code>&nbsp;and an integer&nbsp;<code>n</code>, return the number of distinct sequences that can be obtained with exact <code>n</code> rolls.</p>\n\n<p>Two sequences are considered different if at least one element differs from each other. Since the answer&nbsp;may be too large,&nbsp;return it modulo <code>10^9 + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, rollMax = [1,1,2,2,2,3]\n<strong>Output:</strong> 34\n<strong>Explanation:</strong> There will be 2 rolls of die, if there are no constraints on the die, there are 6 * 6 = 36 possible combinations. In this case, looking at rollMax array, the numbers 1 and 2 appear at most once consecutively, therefore sequences (1,1) and (2,2) cannot occur, so the final answer is 36-2 = 34.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, rollMax = [1,1,1,1,1,1]\n<strong>Output:</strong> 30\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3, rollMax = [1,1,1,2,2,3]\n<strong>Output:</strong> 181\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 5000</code></li>\n\t<li><code>rollMax.length == 6</code></li>\n\t<li><code>1 &lt;= rollMax[i] &lt;= 15</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"15.3K\", \"totalSubmission\": \"32.9K\", \"totalAcceptedRaw\": 15336, \"totalSubmissionRaw\": 32878, \"acRate\": \"46.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1222", "name": "queens-that-can-attack-the-king", "content": {"questionId": "1342", "questionFrontendId": "1222", "questionTitle": "Queens That Can Attack the King", "questionTitleSlug": "queens-that-can-attack-the-king", "content": "<p>On an <strong>8x8</strong> chessboard, there can be multiple Black Queens and one White King.</p>\n\n<p>Given an array of integer coordinates <code>queens</code> that represents the positions of the Black Queens, and a pair of coordinates <code>king</code> that represent the position of the White King, return the coordinates of all the queens (in any order) that can attack the King.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/01/untitled-diagram.jpg\" style=\"width: 321px; height: 321px;\" /></p>\n\n<pre>\n<strong>Input:</strong> queens = [[0,1],[1,0],[4,0],[0,4],[3,3],[2,4]], king = [0,0]\n<strong>Output:</strong> [[0,1],[1,0],[3,3]]\n<strong>Explanation:</strong>&nbsp; \nThe queen at [0,1] can attack the king cause they&#39;re in the same row. \nThe queen at [1,0] can attack the king cause they&#39;re in the same column. \nThe queen at [3,3] can attack the king cause they&#39;re in the same diagnal. \nThe queen at [0,4] can&#39;t attack the king cause it&#39;s blocked by the queen at [0,1]. \nThe queen at [4,0] can&#39;t attack the king cause it&#39;s blocked by the queen at [1,0]. \nThe queen at [2,4] can&#39;t attack the king cause it&#39;s not in the same row/column/diagnal as the king.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/01/untitled-diagram-1.jpg\" style=\"width: 321px; height: 321px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> queens = [[0,0],[1,1],[2,2],[3,4],[3,5],[4,4],[4,5]], king = [3,3]\n<strong>Output:</strong> [[2,2],[3,4],[4,4]]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/01/untitled-diagram-2.jpg\" style=\"width: 321px; height: 321px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> queens = [[5,6],[7,7],[2,1],[0,7],[1,6],[5,1],[3,7],[0,3],[4,0],[1,2],[6,3],[5,0],[0,4],[2,2],[1,1],[6,4],[5,4],[0,0],[2,6],[4,5],[5,2],[1,4],[7,5],[2,3],[0,5],[4,2],[1,0],[2,7],[0,1],[4,6],[6,1],[0,6],[4,3],[1,7]], king = [3,4]\n<strong>Output:</strong> [[2,3],[1,4],[1,6],[3,7],[4,3],[5,4],[4,5]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= queens.length&nbsp;&lt;= 63</code></li>\n\t<li><code>queens[0].length == 2</code></li>\n\t<li><code>0 &lt;= queens[i][j] &lt;&nbsp;8</code></li>\n\t<li><code>king.length == 2</code></li>\n\t<li><code>0 &lt;= king[0], king[1] &lt; 8</code></li>\n\t<li>At most one piece is allowed in a cell.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"21.2K\", \"totalSubmission\": \"30.6K\", \"totalAcceptedRaw\": 21168, \"totalSubmissionRaw\": 30575, \"acRate\": \"69.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "1226", "name": "the-dining-philosophers", "content": {"questionId": "1340", "questionFrontendId": "1226", "questionTitle": "The Dining Philosophers", "questionTitleSlug": "the-dining-philosophers", "content": "<p>Five silent philosophers&nbsp;sit at a round table with bowls of spaghetti. Forks are placed between each pair of adjacent philosophers.</p>\n\n<p>Each philosopher must alternately think and eat. However, a philosopher can only eat spaghetti when they have both left and right forks. Each fork can be held by only one philosopher and so a philosopher can use the fork only if it is not being used by another philosopher. After an individual philosopher finishes eating, they need to put down both forks so that the forks become available to others. A philosopher can take the fork on their right or the one on their left as they become available, but cannot start eating before getting both forks.</p>\n\n<p>Eating is not limited by the remaining amounts of spaghetti or stomach space; an infinite supply and an infinite demand are assumed.</p>\n\n<p>Design a discipline of behaviour (a concurrent algorithm) such that no philosopher will starve;&nbsp;<i>i.e.</i>, each can forever continue to alternate between eating and thinking, assuming that no philosopher can know when others may want to eat or think.</p>\n\n<p style=\"text-align: center\"><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/09/24/an_illustration_of_the_dining_philosophers_problem.png\" style=\"width: 400px; height: 415px;\" /></p>\n\n<p style=\"text-align: center\"><em>The problem statement and the image above are taken from <a href=\"https://en.wikipedia.org/wiki/Dining_philosophers_problem\" target=\"_blank\">wikipedia.org</a></em></p>\n\n<p>&nbsp;</p>\n\n<p>The philosophers&#39; ids are numbered from <strong>0</strong> to <strong>4</strong> in a <strong>clockwise</strong> order. Implement the function&nbsp;<code>void wantsToEat(philosopher, pickLeftFork, pickRightFork, eat, putLeftFork, putRightFork)</code> where:</p>\n\n<ul>\n\t<li><code>philosopher</code>&nbsp;is the id of the philosopher who wants to eat.</li>\n\t<li><code>pickLeftFork</code>&nbsp;and&nbsp;<code>pickRightFork</code>&nbsp;are functions you can call to pick the corresponding forks of that philosopher.</li>\n\t<li><code>eat</code>&nbsp;is a function you can call to let the philosopher eat once he has picked&nbsp;both forks.</li>\n\t<li><code>putLeftFork</code>&nbsp;and&nbsp;<code>putRightFork</code>&nbsp;are functions you can call to put down the corresponding forks of that philosopher.</li>\n\t<li>The philosophers are assumed to be thinking as long as they are not asking to eat (the function is not being called with their number).</li>\n</ul>\n\n<p>Five threads, each representing a philosopher, will&nbsp;simultaneously use one object of your class to simulate the process. The function may be called for the same philosopher more than once, even before the last call ends.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> [[4,2,1],[4,1,1],[0,1,1],[2,2,1],[2,1,1],[2,0,3],[2,1,2],[2,2,2],[4,0,3],[4,1,2],[0,2,1],[4,2,2],[3,2,1],[3,1,1],[0,0,3],[0,1,2],[0,2,2],[1,2,1],[1,1,1],[3,0,3],[3,1,2],[3,2,2],[1,0,3],[1,1,2],[1,2,2]]\n<strong>Explanation:</strong>\nn is the number of times each philosopher will call the function.\nThe output array describes the calls you made to the functions controlling the forks and the eat function, its format is:\noutput[i] = [a, b, c] (three integers)\n- a is the id of a philosopher.\n- b specifies the fork: {1 : left, 2 : right}.\n- c specifies the operation: {1 : pick, 2 : put, 3 : eat}.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 60</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"7.9K\", \"totalSubmission\": \"13.4K\", \"totalAcceptedRaw\": 7886, \"totalSubmissionRaw\": 13393, \"acRate\": \"58.9%\"}", "similarQuestions": "[]", "categoryTitle": "Concurrency", "topicTags": []}}, {"id": "1212", "name": "team-scores-in-football-tournament", "content": {"questionId": "1339", "questionFrontendId": "1212", "questionTitle": "Team Scores in Football Tournament", "questionTitleSlug": "team-scores-in-football-tournament", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"12.7K\", \"totalSubmission\": \"22.4K\", \"totalAcceptedRaw\": 12685, \"totalSubmissionRaw\": 22382, \"acRate\": \"56.7%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1219", "name": "path-with-maximum-gold", "content": {"questionId": "1331", "questionFrontendId": "1219", "questionTitle": "Path with Maximum Gold", "questionTitleSlug": "path-with-maximum-gold", "content": "<p>In a gold mine <code>grid</code>&nbsp;of size <code>m * n</code>,&nbsp;each cell in this mine has an integer representing the amount of gold&nbsp;in that cell,&nbsp;<code>0</code> if it is empty.</p>\n\n<p>Return the maximum amount of gold you&nbsp;can collect under the conditions:</p>\n\n<ul>\n\t<li>Every time you are located in a cell you will collect all the gold in that cell.</li>\n\t<li>From your position you can walk one step to the left, right, up or down.</li>\n\t<li>You can&#39;t visit the same cell more than once.</li>\n\t<li>Never visit a cell with&nbsp;<code>0</code> gold.</li>\n\t<li>You can start and stop collecting gold from&nbsp;<strong>any </strong>position in the grid that has some gold.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[0,6,0],[5,8,7],[0,9,0]]\n<strong>Output:</strong> 24\n<strong>Explanation:</strong>\n[[0,6,0],\n [5,8,7],\n [0,9,0]]\nPath to get the maximum gold, 9 -&gt; 8 -&gt; 7.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,0,7],[2,0,6],[3,4,5],[0,3,0],[9,0,20]]\n<strong>Output:</strong> 28\n<strong>Explanation:</strong>\n[[1,0,7],\n [2,0,6],\n [3,4,5],\n [0,3,0],\n [9,0,20]]\nPath to get the maximum gold, 1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 7.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= grid.length,&nbsp;grid[i].length &lt;= 15</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 100</code></li>\n\t<li>There are at most <strong>25&nbsp;</strong>cells containing gold.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"40.9K\", \"totalSubmission\": \"62.4K\", \"totalAcceptedRaw\": 40886, \"totalSubmissionRaw\": 62388, \"acRate\": \"65.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "1218", "name": "longest-arithmetic-subsequence-of-given-difference", "content": {"questionId": "1330", "questionFrontendId": "1218", "questionTitle": "Longest Arithmetic Subsequence of Given Difference", "questionTitleSlug": "longest-arithmetic-subsequence-of-given-difference", "content": "<p>Given an integer array <code>arr</code>&nbsp;and an integer <code><font face=\"monospace\">difference</font></code>, return the length of the longest subsequence in <font face=\"monospace\"><code>arr</code>&nbsp;</font>which is an arithmetic sequence such that the difference between adjacent elements in the subsequence equals&nbsp;<code>difference</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,3,4], difference = 1\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>The longest arithmetic subsequence is [1,2,3,4].</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,3,5,7], difference = 1\n<strong>Output:</strong> 1\n<strong>Explanation: </strong>The longest arithmetic subsequence is any single element.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,5,7,8,5,3,4,2,1], difference = -2\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>The longest arithmetic subsequence is [7,5,3,1].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 10^5</code></li>\n\t<li><code>-10^4 &lt;= arr[i], difference &lt;= 10^4</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"21.7K\", \"totalSubmission\": \"46.8K\", \"totalAcceptedRaw\": 21673, \"totalSubmissionRaw\": 46845, \"acRate\": \"46.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1205", "name": "monthly-transactions-ii", "content": {"questionId": "1328", "questionFrontendId": "1205", "questionTitle": "Monthly Transactions II", "questionTitleSlug": "monthly-transactions-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"6.9K\", \"totalSubmission\": \"15K\", \"totalAcceptedRaw\": 6944, \"totalSubmissionRaw\": 15010, \"acRate\": \"46.3%\"}", "similarQuestions": "[{\"title\": \"Monthly Transactions I\", \"titleSlug\": \"monthly-transactions-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1204", "name": "last-person-to-fit-in-the-elevator", "content": {"questionId": "1327", "questionFrontendId": "1204", "questionTitle": "Last Person to Fit in the Elevator", "questionTitleSlug": "last-person-to-fit-in-the-elevator", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13.3K\", \"totalSubmission\": \"18.7K\", \"totalAcceptedRaw\": 13332, \"totalSubmissionRaw\": 18702, \"acRate\": \"71.3%\"}", "similarQuestions": "[{\"title\": \"Running Total for Different Genders\", \"titleSlug\": \"running-total-for-different-genders\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1514", "name": "path-with-maximum-probability", "content": {"questionId": "1325", "questionFrontendId": "1514", "questionTitle": "Path with Maximum Probability", "questionTitleSlug": "path-with-maximum-probability", "content": "<p>You are given an undirected weighted graph of&nbsp;<code>n</code>&nbsp;nodes (0-indexed), represented by an edge list where&nbsp;<code>edges[i] = [a, b]</code>&nbsp;is an undirected edge connecting the nodes&nbsp;<code>a</code>&nbsp;and&nbsp;<code>b</code>&nbsp;with a probability of success of traversing that edge&nbsp;<code>succProb[i]</code>.</p>\r\n\r\n<p>Given two nodes&nbsp;<code>start</code>&nbsp;and&nbsp;<code>end</code>, find the path with the maximum probability of success to go from&nbsp;<code>start</code>&nbsp;to&nbsp;<code>end</code>&nbsp;and return its success probability.</p>\r\n\r\n<p>If there is no path from&nbsp;<code>start</code>&nbsp;to&nbsp;<code>end</code>, <strong>return&nbsp;0</strong>. Your answer will be accepted if it differs from the correct answer by at most <strong>1e-5</strong>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/09/20/1558_ex1.png\" style=\"width: 187px; height: 186px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 3, edges = [[0,1],[1,2],[0,2]], succProb = [0.5,0.5,0.2], start = 0, end = 2\r\n<strong>Output:</strong> 0.25000\r\n<strong>Explanation:</strong>&nbsp;There are two paths from start to end, one having a probability of success = 0.2 and the other has 0.5 * 0.5 = 0.25.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/09/20/1558_ex2.png\" style=\"width: 189px; height: 186px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 3, edges = [[0,1],[1,2],[0,2]], succProb = [0.5,0.5,0.3], start = 0, end = 2\r\n<strong>Output:</strong> 0.30000\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/09/20/1558_ex3.png\" style=\"width: 215px; height: 191px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 3, edges = [[0,1]], succProb = [0.5], start = 0, end = 2\r\n<strong>Output:</strong> 0.00000\r\n<strong>Explanation:</strong>&nbsp;There is no path between 0 and 2.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>2 &lt;= n &lt;= 10^4</code></li>\r\n\t<li><code>0 &lt;= start, end &lt; n</code></li>\r\n\t<li><code>start != end</code></li>\r\n\t<li><code>0 &lt;= a, b &lt; n</code></li>\r\n\t<li><code>a != b</code></li>\r\n\t<li><code>0 &lt;= succProb.length == edges.length &lt;= 2*10^4</code></li>\r\n\t<li><code>0 &lt;= succProb[i] &lt;= 1</code></li>\r\n\t<li>There is at most one edge between every two nodes.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"15.1K\", \"totalSubmission\": \"38.7K\", \"totalAcceptedRaw\": 15083, \"totalSubmissionRaw\": 38689, \"acRate\": \"39.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Graph", "slug": "graph"}]}}, {"id": "1208", "name": "get-equal-substrings-within-budget", "content": {"questionId": "1321", "questionFrontendId": "1208", "questionTitle": "Get Equal Substrings Within Budget", "questionTitleSlug": "get-equal-substrings-within-budget", "content": "<p>You are given two strings <code>s</code> and <code>t</code> of the same length. You want to change <code>s</code> to <code>t</code>. Changing the <code>i</code>-th character of <code>s</code> to <code>i</code>-th character of <code>t</code> costs <code>|s[i] - t[i]|</code> that is, the absolute difference between the ASCII values of the characters.</p>\n\n<p>You are also given an integer <code>maxCost</code>.</p>\n\n<p>Return the maximum length of a substring of <code>s</code> that can be changed to be the same as the corresponding substring of <code>t</code>with a cost less than or equal to <code>maxCost</code>.</p>\n\n<p>If there is no substring from&nbsp;<code>s</code> that can be changed to its corresponding substring from <code>t</code>, return <code>0</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcd&quot;, t = &quot;bcdf&quot;, maxCost = 3\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>&quot;abc&quot; of s can change to &quot;bcd&quot;. That costs 3, so the maximum length is 3.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcd&quot;, t = &quot;cdef&quot;, maxCost = 3\n<strong>Output:</strong> 1\n<strong>Explanation: </strong>Each character in s costs 2 to change to charactor in <code>t, so the maximum length is 1.</code>\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcd&quot;, t = &quot;acde&quot;, maxCost = 0\n<strong>Output:</strong> 1\n<strong>Explanation: </strong>You can&#39;t make any change, so the maximum length is 1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length, t.length &lt;= 10^5</code></li>\n\t<li><code>0 &lt;= maxCost &lt;= 10^6</code></li>\n\t<li><code>s</code> and&nbsp;<code>t</code> only contain lower case English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"18.5K\", \"totalSubmission\": \"42.7K\", \"totalAcceptedRaw\": 18522, \"totalSubmissionRaw\": 42718, \"acRate\": \"43.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "1209", "name": "remove-all-adjacent-duplicates-in-string-ii", "content": {"questionId": "1320", "questionFrontendId": "1209", "questionTitle": "Remove All Adjacent Duplicates in String II", "questionTitleSlug": "remove-all-adjacent-duplicates-in-string-ii", "content": "<p>Given a string&nbsp;<code>s</code>, a <em>k</em>&nbsp;<em>duplicate removal</em>&nbsp;consists of choosing <code>k</code>&nbsp;adjacent and equal letters from&nbsp;<code>s</code> and removing&nbsp;them causing the left and the right side of the deleted substring to concatenate together.</p>\n\n<p>We repeatedly make <code>k</code> duplicate removals on <code>s</code> until we no longer can.</p>\n\n<p>Return the final string after all such duplicate removals have been made.</p>\n\n<p>It is guaranteed that the answer is unique.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcd&quot;, k = 2\n<strong>Output:</strong> &quot;abcd&quot;\n<strong>Explanation: </strong>There&#39;s nothing to delete.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;deeedbbcccbdaa&quot;, k = 3\n<strong>Output:</strong> &quot;aa&quot;\n<strong>Explanation: \n</strong>First delete &quot;eee&quot; and &quot;ccc&quot;, get &quot;ddbbbdaa&quot;\nThen delete &quot;bbb&quot;, get &quot;dddaa&quot;\nFinally delete &quot;ddd&quot;, get &quot;aa&quot;</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;pbbcggttciiippooaais&quot;, k = 2\n<strong>Output:</strong> &quot;ps&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10^5</code></li>\n\t<li><code>2 &lt;= k &lt;= 10^4</code></li>\n\t<li><code>s</code> only contains lower case English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"55.4K\", \"totalSubmission\": \"96.5K\", \"totalAcceptedRaw\": 55449, \"totalSubmissionRaw\": 96472, \"acRate\": \"57.5%\"}", "similarQuestions": "[{\"title\": \"Remove All Adjacent Duplicates In String\", \"titleSlug\": \"remove-all-adjacent-duplicates-in-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}]}}, {"id": "1193", "name": "monthly-transactions-i", "content": {"questionId": "1317", "questionFrontendId": "1193", "questionTitle": "Monthly Transactions I", "questionTitleSlug": "monthly-transactions-i", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"10K\", \"totalSubmission\": \"14.5K\", \"totalAcceptedRaw\": 10015, \"totalSubmissionRaw\": 14481, \"acRate\": \"69.2%\"}", "similarQuestions": "[{\"title\": \"Monthly Transactions II\", \"titleSlug\": \"monthly-transactions-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1195", "name": "fizz-buzz-multithreaded", "content": {"questionId": "1316", "questionFrontendId": "1195", "questionTitle": "Fizz Buzz Multithreaded", "questionTitleSlug": "fizz-buzz-multithreaded", "content": "<p>Write a program that outputs the string representation of numbers from 1 to&nbsp;<i>n</i>, however:</p>\n\n<ul>\n\t<li>If the number is divisible by 3, output &quot;fizz&quot;.</li>\n\t<li>If the number is divisible by 5, output&nbsp;&quot;buzz&quot;.</li>\n\t<li>If the number is divisible by both 3 and 5, output&nbsp;&quot;fizzbuzz&quot;.</li>\n</ul>\n\n<p>For example, for&nbsp;<code>n = 15</code>, we output:&nbsp;<code>1, 2, fizz, 4, buzz, fizz, 7, 8, fizz, buzz, 11, fizz, 13, 14, fizzbuzz</code>.</p>\n\n<p>Suppose you are given the following code:</p>\n\n<pre>\nclass FizzBuzz {\n&nbsp; public FizzBuzz(int n) { ... }&nbsp;              // constructor\n  public void fizz(printFizz) { ... }          // only output &quot;fizz&quot;\n  public void buzz(printBuzz) { ... }          // only output &quot;buzz&quot;\n  public void fizzbuzz(printFizzBuzz) { ... }  // only output &quot;fizzbuzz&quot;\n  public void number(printNumber) { ... }      // only output the numbers\n}</pre>\n\n<p>Implement a multithreaded version of <code>FizzBuzz</code> with <strong>four</strong> threads. The same instance of <code>FizzBuzz</code> will be passed to four different threads:</p>\n\n<ol>\n\t<li>Thread A will call&nbsp;<code>fizz()</code>&nbsp;to check for divisibility of 3 and outputs&nbsp;<code>fizz</code>.</li>\n\t<li>Thread B will call&nbsp;<code>buzz()</code>&nbsp;to check for divisibility of 5 and outputs&nbsp;<code>buzz</code>.</li>\n\t<li>Thread C will call <code>fizzbuzz()</code>&nbsp;to check for divisibility of 3 and 5 and outputs&nbsp;<code>fizzbuzz</code>.</li>\n\t<li>Thread D will call <code>number()</code> which should only output the numbers.</li>\n</ol>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"15.1K\", \"totalSubmission\": \"21.5K\", \"totalAcceptedRaw\": 15100, \"totalSubmissionRaw\": 21541, \"acRate\": \"70.1%\"}", "similarQuestions": "[{\"title\": \"Fizz Buzz\", \"titleSlug\": \"fizz-buzz\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Print Zero Even Odd\", \"titleSlug\": \"print-zero-even-odd\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Concurrency", "topicTags": []}}, {"id": "1202", "name": "smallest-string-with-swaps", "content": {"questionId": "1308", "questionFrontendId": "1202", "questionTitle": "Smallest String With Swaps", "questionTitleSlug": "smallest-string-with-swaps", "content": "<p>You are given a string <code>s</code>, and an array of pairs of indices in the string&nbsp;<code>pairs</code>&nbsp;where&nbsp;<code>pairs[i] =&nbsp;[a, b]</code>&nbsp;indicates 2 indices(0-indexed) of the string.</p>\n\n<p>You can&nbsp;swap the characters at any pair of indices in the given&nbsp;<code>pairs</code>&nbsp;<strong>any number of times</strong>.</p>\n\n<p>Return the&nbsp;lexicographically smallest string that <code>s</code>&nbsp;can be changed to after using the swaps.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;dcab&quot;, pairs = [[0,3],[1,2]]\n<strong>Output:</strong> &quot;bacd&quot;\n<strong>Explaination:</strong> \nSwap s[0] and s[3], s = &quot;bcad&quot;\nSwap s[1] and s[2], s = &quot;bacd&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;dcab&quot;, pairs = [[0,3],[1,2],[0,2]]\n<strong>Output:</strong> &quot;abcd&quot;\n<strong>Explaination: </strong>\nSwap s[0] and s[3], s = &quot;bcad&quot;\nSwap s[0] and s[2], s = &quot;acbd&quot;\nSwap s[1] and s[2], s = &quot;abcd&quot;</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;cba&quot;, pairs = [[0,1],[1,2]]\n<strong>Output:</strong> &quot;abc&quot;\n<strong>Explaination: </strong>\nSwap s[0] and s[1], s = &quot;bca&quot;\nSwap s[1] and s[2], s = &quot;bac&quot;\nSwap s[0] and s[1], s = &quot;abc&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10^5</code></li>\n\t<li><code>0 &lt;= pairs.length &lt;= 10^5</code></li>\n\t<li><code>0 &lt;= pairs[i][0], pairs[i][1] &lt;&nbsp;s.length</code></li>\n\t<li><code>s</code>&nbsp;only contains lower case English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"19.6K\", \"totalSubmission\": \"41K\", \"totalAcceptedRaw\": 19572, \"totalSubmissionRaw\": 41015, \"acRate\": \"47.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Union Find", "slug": "union-find"}]}}, {"id": "1201", "name": "ugly-number-iii", "content": {"questionId": "1307", "questionFrontendId": "1201", "questionTitle": "Ugly Number III", "questionTitleSlug": "ugly-number-iii", "content": "<p>Write a program to find the&nbsp;<code>n</code>-th ugly number.</p>\n\n<p>Ugly numbers are<strong>&nbsp;positive integers</strong>&nbsp;which are divisible by&nbsp;<code>a</code>&nbsp;<strong>or</strong>&nbsp;<code>b</code>&nbsp;<strong>or</strong> <code>c</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3, a = 2, b = 3, c = 5\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>The ugly numbers are 2, 3, 4, 5, 6, 8, 9, 10... The 3rd is 4.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, a = 2, b = 3, c = 4\n<strong>Output:</strong> 6\n<strong>Explanation: </strong>The ugly numbers are 2, 3, 4, 6, 8, 9, 10, 12... The 4th is 6.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5, a = 2, b = 11, c = 13\n<strong>Output:</strong> 10\n<strong>Explanation: </strong>The ugly numbers are 2, 4, 6, 8, 10, 11, 12, 13... The 5th is 10.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1000000000, a = 2, b = 217983653, c = 336916467\n<strong>Output:</strong> 1999999984\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n, a, b, c &lt;= 10^9</code></li>\n\t<li><code>1 &lt;= a * b * c &lt;= 10^18</code></li>\n\t<li>It&#39;s guaranteed that the result will be in range&nbsp;<code>[1,&nbsp;2 * 10^9]</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11.8K\", \"totalSubmission\": \"45K\", \"totalAcceptedRaw\": 11833, \"totalSubmissionRaw\": 44996, \"acRate\": \"26.3%\"}", "similarQuestions": "[{\"title\": \"Ugly Number II\", \"titleSlug\": \"ugly-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "1405", "name": "longest-happy-string", "content": {"questionId": "1304", "questionFrontendId": "1405", "questionTitle": "Longest Happy String", "questionTitleSlug": "longest-happy-string", "content": "<p>A string is called <em>happy</em> if it does&nbsp;not have any of the strings <code>&#39;aaa&#39;</code>, <code>&#39;bbb&#39;</code>&nbsp;or <code>&#39;ccc&#39;</code>&nbsp;as a substring.</p>\n\n<p>Given three integers <code>a</code>, <code>b</code> and <code>c</code>, return <strong>any</strong> string <code>s</code>,&nbsp;which satisfies following conditions:</p>\n\n<ul>\n\t<li><code>s</code> is <em>happy&nbsp;</em>and longest possible.</li>\n\t<li><code>s</code> contains <strong>at most</strong> <code>a</code>&nbsp;occurrences of the letter&nbsp;<code>&#39;a&#39;</code>, <strong>at most</strong> <code>b</code>&nbsp;occurrences of the letter <code>&#39;b&#39;</code> and <strong>at most</strong> <code>c</code> occurrences of the letter <code>&#39;c&#39;</code>.</li>\n\t<li><code>s&nbsp;</code>will only contain <code>&#39;a&#39;</code>, <code>&#39;b&#39;</code> and <code>&#39;c&#39;</code>&nbsp;letters.</li>\n</ul>\n\n<p>If there is no such string <code>s</code>&nbsp;return the empty string <code>&quot;&quot;</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = 1, b = 1, c = 7\n<strong>Output:</strong> &quot;ccaccbcc&quot;\n<strong>Explanation:</strong> &quot;ccbccacc&quot; would also be a correct answer.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = 2, b = 2, c = 1\n<strong>Output:</strong> &quot;aabbc&quot;\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = 7, b = 1, c = 0\n<strong>Output:</strong> &quot;aabaa&quot;\n<strong>Explanation:</strong> It&#39;s the only correct answer in this case.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= a, b, c &lt;= 100</code></li>\n\t<li><code>a + b + c &gt; 0</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"15.6K\", \"totalSubmission\": \"29.9K\", \"totalAcceptedRaw\": 15578, \"totalSubmissionRaw\": 29908, \"acRate\": \"52.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1191", "name": "k-concatenation-maximum-sum", "content": {"questionId": "1299", "questionFrontendId": "1191", "questionTitle": "K-Concatenation Maximum Sum", "questionTitleSlug": "k-concatenation-maximum-sum", "content": "<p>Given an integer array <code>arr</code>&nbsp;and an integer <code>k</code>, modify the array by repeating it <code>k</code> times.</p>\n\n<p>For example, if <code>arr&nbsp;= [1, 2]</code> and <code>k = 3 </code>then the modified array will be <code>[1, 2, 1, 2, 1, 2]</code>.</p>\n\n<p>Return the maximum sub-array sum in the modified array. Note that the length of the sub-array can be <code>0</code>&nbsp;and its sum in that case is <code>0</code>.</p>\n\n<p>As the answer can be very large, return the answer&nbsp;<strong>modulo</strong>&nbsp;<code>10^9 + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2], k = 3\n<strong>Output:</strong> 9\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,-2,1], k = 5\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [-1,-2], k = 7\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= k &lt;= 10^5</code></li>\n\t<li><code>-10^4 &lt;= arr[i] &lt;= 10^4</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.6K\", \"totalSubmission\": \"57.5K\", \"totalAcceptedRaw\": 14636, \"totalSubmissionRaw\": 57488, \"acRate\": \"25.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1190", "name": "reverse-substrings-between-each-pair-of-parentheses", "content": {"questionId": "1298", "questionFrontendId": "1190", "questionTitle": "Reverse Substrings Between Each Pair of Parentheses", "questionTitleSlug": "reverse-substrings-between-each-pair-of-parentheses", "content": "<p>You are given a string <code>s</code> that consists of lower case English letters and brackets.&nbsp;</p>\n\n<p>Reverse the strings&nbsp;in each&nbsp;pair of matching parentheses, starting&nbsp;from the innermost one.</p>\n\n<p>Your result should <strong>not</strong> contain any brackets.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;(abcd)&quot;\n<strong>Output:</strong> &quot;dcba&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;(u(love)i)&quot;\n<strong>Output:</strong> &quot;iloveu&quot;\n<strong>Explanation:</strong>&nbsp;The substring &quot;love&quot; is reversed first, then the whole string is reversed.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;(ed(et(oc))el)&quot;\n<strong>Output:</strong> &quot;leetcode&quot;\n<strong>Explanation:</strong>&nbsp;First, we reverse the substring &quot;oc&quot;, then &quot;etco&quot;, and finally, the whole string.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;a(bcdefghijkl(mno)p)q&quot;\n<strong>Output:</strong> &quot;apmnolkjihgfedcbq&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 2000</code></li>\n\t<li><code>s</code> only contains lower case English characters and parentheses.</li>\n\t<li>It&#39;s guaranteed that all parentheses are balanced.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"26.6K\", \"totalSubmission\": \"41.6K\", \"totalAcceptedRaw\": 26631, \"totalSubmissionRaw\": 41636, \"acRate\": \"64.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}]}}, {"id": "1174", "name": "immediate-food-delivery-ii", "content": {"questionId": "1292", "questionFrontendId": "1174", "questionTitle": "Immediate Food Delivery II", "questionTitleSlug": "immediate-food-delivery-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"10.8K\", \"totalSubmission\": \"17.9K\", \"totalAcceptedRaw\": 10816, \"totalSubmissionRaw\": 17891, \"acRate\": \"60.5%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1186", "name": "maximum-subarray-sum-with-one-deletion", "content": {"questionId": "1288", "questionFrontendId": "1186", "questionTitle": "Maximum Subarray Sum with One Deletion", "questionTitleSlug": "maximum-subarray-sum-with-one-deletion", "content": "<p>Given an array of integers, return the maximum sum for a <strong>non-empty</strong>&nbsp;subarray (contiguous elements) with at most one element deletion.&nbsp;In other words, you want to choose a subarray and optionally delete one element from it so that there is still at least one element left and the&nbsp;sum of the remaining elements is maximum possible.</p>\n\n<p>Note that the subarray needs to be <strong>non-empty</strong> after deleting one element.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,-2,0,3]\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>Because we can choose [1, -2, 0, 3] and drop -2, thus the subarray [1, 0, 3] becomes the maximum value.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,-2,-2,3]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>We just choose [3] and it&#39;s the maximum sum.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [-1,-1,-1,-1]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong>&nbsp;The final subarray needs to be non-empty. You can&#39;t choose [-1] and delete -1 from it, then get an empty subarray to make the sum equals to 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= arr[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"18.9K\", \"totalSubmission\": \"49.1K\", \"totalAcceptedRaw\": 18850, \"totalSubmissionRaw\": 49092, \"acRate\": \"38.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1382", "name": "balance-a-binary-search-tree", "content": {"questionId": "1285", "questionFrontendId": "1382", "questionTitle": "Balance a Binary Search Tree", "questionTitleSlug": "balance-a-binary-search-tree", "content": "<p>Given a binary search tree, return a <strong>balanced</strong> binary search tree with the same node values.</p>\r\n\r\n<p>A binary search tree is <em>balanced</em> if and only if&nbsp;the depth of the two subtrees of&nbsp;every&nbsp;node never differ by more than 1.</p>\r\n\r\n<p>If there is more than one answer, return any of them.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/08/22/1515_ex1.png\" style=\"width: 250px; height: 248px;\" /><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/08/22/1515_ex1_out.png\" style=\"width: 200px; height: 200px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [1,null,2,null,3,null,4,null,null]\r\n<strong>Output:</strong> [2,1,3,null,null,null,4]\r\n<b>Explanation:</b> This is not the only correct answer, [3,1,4,null,2,null,null] is also correct.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li>The number of nodes in the tree is between&nbsp;<code>1</code>&nbsp;and&nbsp;<code>10^4</code>.</li>\r\n\t<li>The tree nodes will have distinct values between&nbsp;<code>1</code>&nbsp;and&nbsp;<code>10^5</code>.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"24.8K\", \"totalSubmission\": \"32.7K\", \"totalAcceptedRaw\": 24821, \"totalSubmissionRaw\": 32670, \"acRate\": \"76.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search Tree", "slug": "binary-search-tree"}]}}, {"id": "1390", "name": "four-divisors", "content": {"questionId": "1284", "questionFrontendId": "1390", "questionTitle": "Four Divisors", "questionTitleSlug": "four-divisors", "content": "<p>Given an integer array <code>nums</code>, return the sum of divisors of the integers in that array that have exactly four divisors.</p>\n\n<p>If there is no such integer in the array, return <code>0</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [21,4,7]\n<strong>Output:</strong> 32\n<b>Explanation:</b>\n21 has 4 divisors: 1, 3, 7, 21\n4 has 3 divisors: 1, 2, 4\n7 has 2 divisors: 1, 7\nThe answer is the sum of divisors of 21 only.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10^4</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10^5</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13.5K\", \"totalSubmission\": \"34.7K\", \"totalAcceptedRaw\": 13491, \"totalSubmissionRaw\": 34668, \"acRate\": \"38.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "1177", "name": "can-make-palindrome-from-substring", "content": {"questionId": "1281", "questionFrontendId": "1177", "questionTitle": "Can Make Palindrome from Substring", "questionTitleSlug": "can-make-palindrome-from-substring", "content": "<p>Given a string <code>s</code>, we make queries on substrings of <code>s</code>.</p>\n\n<p>For each query <code>queries[i] = [left, right, k]</code>, we may <strong>rearrange</strong>&nbsp;the substring <code>s[left], ..., s[right]</code>, and then choose <strong>up to</strong> <code>k</code> of them to replace with any lowercase English letter.&nbsp;</p>\n\n<p>If the substring&nbsp;is possible to be a&nbsp;palindrome string after the operations above, the result of the query is <code>true</code>.&nbsp;Otherwise, the result&nbsp;is <code>false</code>.</p>\n\n<p>Return an array <code>answer[]</code>, where <code>answer[i]</code> is the result of the <code>i</code>-th query <code>queries[i]</code>.</p>\n\n<p>Note that: Each letter is counted <strong>individually</strong> for replacement so&nbsp;if for example&nbsp;<code>s[left..right] = &quot;aaa&quot;</code>, and <code>k = 2</code>, we can only replace two of the letters.&nbsp; (Also, note that the initial string <code>s</code>&nbsp;is never modified by any query.)</p>\n\n<p>&nbsp;</p>\n<p><strong>Example :</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcda&quot;, queries = [[3,3,0],[1,2,0],[0,3,1],[0,3,2],[0,4,1]]\n<strong>Output:</strong> [true,false,false,true,true]\n<strong>Explanation:</strong>\nqueries[0] : substring = &quot;d&quot;, is palidrome.\nqueries[1] :&nbsp;substring = &quot;bc&quot;, is not palidrome.\nqueries[2] :&nbsp;substring = &quot;abcd&quot;, is not palidrome after replacing only 1 character.\nqueries[3] :&nbsp;substring = &quot;abcd&quot;, could be changed to &quot;abba&quot; which is palidrome. Also this can be changed to &quot;baab&quot; first rearrange it &quot;bacd&quot; then replace &quot;cd&quot; with &quot;ab&quot;.\nqueries[4] :&nbsp;substring = &quot;abcda&quot;,&nbsp;could be changed to &quot;abcba&quot; which is palidrome.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length,&nbsp;queries.length&nbsp;&lt;= 10^5</code></li>\n\t<li><code>0 &lt;= queries[i][0] &lt;= queries[i][1] &lt;&nbsp;s.length</code></li>\n\t<li><code>0 &lt;= queries[i][2] &lt;= s.length</code></li>\n\t<li><code>s</code> only contains lowercase English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13.9K\", \"totalSubmission\": \"38.8K\", \"totalAcceptedRaw\": 13920, \"totalSubmissionRaw\": 38766, \"acRate\": \"35.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "String", "slug": "string"}]}}, {"id": "1164", "name": "product-price-at-a-given-date", "content": {"questionId": "1278", "questionFrontendId": "1164", "questionTitle": "Product Price at a Given Date", "questionTitleSlug": "product-price-at-a-given-date", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11.3K\", \"totalSubmission\": \"16.7K\", \"totalAcceptedRaw\": 11340, \"totalSubmissionRaw\": 16731, \"acRate\": \"67.8%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1362", "name": "closest-divisors", "content": {"questionId": "1276", "questionFrontendId": "1362", "questionTitle": "Closest Divisors", "questionTitleSlug": "closest-divisors", "content": "<p>Given an integer <code>num</code>, find the closest two integers in absolute difference whose product equals&nbsp;<code>num + 1</code>&nbsp;or <code>num + 2</code>.</p>\n\n<p>Return the two integers in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 8\n<strong>Output:</strong> [3,3]\n<strong>Explanation:</strong> For num + 1 = 9, the closest divisors are 3 &amp; 3, for num + 2 = 10, the closest divisors are 2 &amp; 5, hence 3 &amp; 3 is chosen.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 123\n<strong>Output:</strong> [5,25]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 999\n<strong>Output:</strong> [40,25]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num &lt;= 10^9</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11K\", \"totalSubmission\": \"19.2K\", \"totalAcceptedRaw\": 10992, \"totalSubmissionRaw\": 19158, \"acRate\": \"57.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "1361", "name": "validate-binary-tree-nodes", "content": {"questionId": "1275", "questionFrontendId": "1361", "questionTitle": "Validate Binary Tree Nodes", "questionTitleSlug": "validate-binary-tree-nodes", "content": "<p>You have&nbsp;<code>n</code> binary tree nodes&nbsp;numbered from <code>0</code>&nbsp;to <code>n - 1</code> where node&nbsp;<code>i</code>&nbsp;has two children&nbsp;<code>leftChild[i]</code>&nbsp;and&nbsp;<code>rightChild[i]</code>, return&nbsp;<code>true</code>&nbsp;if and only if <strong>all</strong> the given nodes form <strong>exactly one</strong> valid binary tree.</p>\n\n<p>If node&nbsp;<code>i</code>&nbsp;has no left child then&nbsp;<code>leftChild[i]</code>&nbsp;will equal&nbsp;<code>-1</code>, similarly for the right child.</p>\n\n<p>Note that the nodes have no values and that we only use the node numbers in this problem.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/08/23/1503_ex1.png\" style=\"width: 195px; height: 287px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, leftChild = [1,-1,3,-1], rightChild = [2,-1,-1,-1]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/08/23/1503_ex2.png\" style=\"width: 183px; height: 272px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, leftChild = [1,-1,3,-1], rightChild = [2,3,-1,-1]\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/08/23/1503_ex3.png\" style=\"width: 82px; height: 174px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, leftChild = [1,0], rightChild = [-1,-1]\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/08/23/1503_ex4.png\" style=\"width: 470px; height: 191px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 6, leftChild = [1,-1,-1,4,-1,-1], rightChild = [2,-1,-1,5,-1,-1]\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10^4</code></li>\n\t<li><code>leftChild.length == rightChild.length == n</code></li>\n\t<li><code>-1 &lt;= leftChild[i], rightChild[i] &lt;= n - 1</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"16.7K\", \"totalSubmission\": \"37.5K\", \"totalAcceptedRaw\": 16678, \"totalSubmissionRaw\": 37497, \"acRate\": \"44.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Graph", "slug": "graph"}]}}, {"id": "1169", "name": "invalid-transactions", "content": {"questionId": "1272", "questionFrontendId": "1169", "questionTitle": "Invalid Transactions", "questionTitleSlug": "invalid-transactions", "content": "<p>A transaction is <em>possibly invalid</em> if:</p>\n\n<ul>\n\t<li>the amount exceeds $1000, or;</li>\n\t<li>if it occurs within (and including) 60 minutes of another transaction with the same name in a different city.</li>\n</ul>\n\n<p>Each transaction string <code>transactions[i]</code>&nbsp;consists of&nbsp;comma separated values representing&nbsp;the name, time (in minutes), amount, and city of the transaction.</p>\n\n<p>Given a list of <code>transactions</code>,&nbsp;return a list of transactions that are possibly invalid.&nbsp; You may return the answer in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> transactions = [&quot;alice,20,800,mtv&quot;,&quot;alice,50,100,beijing&quot;]\n<strong>Output:</strong> [&quot;alice,20,800,mtv&quot;,&quot;alice,50,100,beijing&quot;]\n<strong>Explanation:</strong> The first transaction is invalid because the second transaction occurs within a difference of 60 minutes, have the same name and is in a different city. Similarly the second one is invalid too.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> transactions = [&quot;alice,20,800,mtv&quot;,&quot;alice,50,1200,mtv&quot;]\n<strong>Output:</strong> [&quot;alice,50,1200,mtv&quot;]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> transactions = [&quot;alice,20,800,mtv&quot;,&quot;bob,50,1200,mtv&quot;]\n<strong>Output:</strong> [&quot;bob,50,1200,mtv&quot;]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>transactions.length &lt;= 1000</code></li>\n\t<li>Each <code>transactions[i]</code> takes the form <code>&quot;{name},{time},{amount},{city}&quot;</code></li>\n\t<li>Each <code>{name}</code> and <code>{city}</code>&nbsp;consist of&nbsp;lowercase English letters, and have lengths between <code>1</code> and <code>10</code>.</li>\n\t<li>Each <code>{time}</code> consist of&nbsp;digits, and represent an integer between <code>0</code> and <code>1000</code>.</li>\n\t<li>Each <code>{amount}</code>&nbsp;consist of&nbsp;digits, and represent an integer between <code>0</code> and <code>2000</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"22.2K\", \"totalSubmission\": \"70.3K\", \"totalAcceptedRaw\": 22182, \"totalSubmissionRaw\": 70324, \"acRate\": \"31.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "String", "slug": "string"}]}}, {"id": "1236", "name": "web-crawler", "content": {"questionId": "1271", "questionFrontendId": "1236", "questionTitle": "Web Crawler", "questionTitleSlug": "web-crawler", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13.3K\", \"totalSubmission\": \"20.7K\", \"totalAcceptedRaw\": 13327, \"totalSubmissionRaw\": 20670, \"acRate\": \"64.5%\"}", "similarQuestions": "[{\"title\": \"Web Crawler Multithreaded\", \"titleSlug\": \"web-crawler-multithreaded\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1158", "name": "market-analysis-i", "content": {"questionId": "1268", "questionFrontendId": "1158", "questionTitle": "Market Analysis I", "questionTitleSlug": "market-analysis-i", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"12.2K\", \"totalSubmission\": \"19.3K\", \"totalAcceptedRaw\": 12227, \"totalSubmissionRaw\": 19336, \"acRate\": \"63.2%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1171", "name": "remove-zero-sum-consecutive-nodes-from-linked-list", "content": {"questionId": "1267", "questionFrontendId": "1171", "questionTitle": "Remove Zero Sum Consecutive Nodes from Linked List", "questionTitleSlug": "remove-zero-sum-consecutive-nodes-from-linked-list", "content": "<p>Given the <code>head</code> of a linked list, we repeatedly delete consecutive sequences of nodes that sum to <code>0</code> until there are no such sequences.</p>\r\n\r\n<p>After doing so, return the head of the final linked list.&nbsp; You may return any such answer.</p>\r\n\n<p>&nbsp;</p>\n<p>(Note that in the examples below, all sequences are serializations of <code>ListNode</code> objects.)</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1,2,-3,3,1]\n<strong>Output:</strong> [3,1]\n<strong>Note:</strong> The answer [1,2,1] would also be accepted.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1,2,3,-3,4]\n<strong>Output:</strong> [1,2,4]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1,2,3,-3,-2]\n<strong>Output:</strong> [1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The given linked list will contain between <code>1</code> and <code>1000</code> nodes.</li>\n\t<li>Each node in the linked list has <code>-1000 &lt;= node.val &lt;= 1000</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"21.2K\", \"totalSubmission\": \"51.3K\", \"totalAcceptedRaw\": 21219, \"totalSubmissionRaw\": 51283, \"acRate\": \"41.4%\"}", "similarQuestions": "[{\"title\": \"Delete N Nodes After M Nodes of a Linked List\", \"titleSlug\": \"delete-n-nodes-after-m-nodes-of-a-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}]}}, {"id": "1155", "name": "number-of-dice-rolls-with-target-sum", "content": {"questionId": "1263", "questionFrontendId": "1155", "questionTitle": "Number of Dice Rolls With Target Sum", "questionTitleSlug": "number-of-dice-rolls-with-target-sum", "content": "<p>You have <code>d</code> dice, and each die has <code>f</code> faces numbered <code>1, 2, ..., f</code>.</p>\r\n\r\n<p>Return the number of possible ways (out of <code>f<sup>d</sup></code>&nbsp;total ways) <strong>modulo <code>10^9 + 7</code></strong> to roll the dice so the sum of the face up numbers equals <code>target</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> d = 1, f = 6, target = 3\r\n<strong>Output:</strong> 1\r\n<strong>Explanation: </strong>\r\nYou throw one die with 6 faces.  There is only one way to get a sum of 3.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> d = 2, f = 6, target = 7\r\n<strong>Output:</strong> 6\r\n<strong>Explanation: </strong>\r\nYou throw two dice, each with 6 faces.  There are 6 ways to get a sum of 7:\r\n1+6, 2+5, 3+4, 4+3, 5+2, 6+1.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> d = 2, f = 5, target = 10\r\n<strong>Output:</strong> 1\r\n<strong>Explanation: </strong>\r\nYou throw two dice, each with 5 faces.  There is only one way to get a sum of 10: 5+5.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> d = 1, f = 2, target = 3\r\n<strong>Output:</strong> 0\r\n<strong>Explanation: </strong>\r\nYou throw one die with 2 faces.  There is no way to get a sum of 3.\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> d = 30, f = 30, target = 500\r\n<strong>Output:</strong> 222616187\r\n<strong>Explanation: </strong>\r\nThe answer must be returned modulo 10^9 + 7.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= d, f &lt;= 30</code></li>\r\n\t<li><code>1 &lt;= target &lt;= 1000</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"58.2K\", \"totalSubmission\": \"122.4K\", \"totalAcceptedRaw\": 58217, \"totalSubmissionRaw\": 122407, \"acRate\": \"47.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1156", "name": "swap-for-longest-repeated-character-substring", "content": {"questionId": "1261", "questionFrontendId": "1156", "questionTitle": "Swap For Longest Repeated Character Substring", "questionTitleSlug": "swap-for-longest-repeated-character-substring", "content": "<p>Given a string <code>text</code>, we are allowed to swap two of the characters in the string. Find the length of the longest substring with repeated characters.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;ababa&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> We can swap the first &#39;b&#39; with the last &#39;a&#39;, or the last &#39;b&#39; with the first &#39;a&#39;. Then, the longest repeated character substring is &quot;aaa&quot;, which its length is 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;aaabaaa&quot;\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> Swap &#39;b&#39; with the last &#39;a&#39; (or the first &#39;a&#39;), and we get longest repeated character substring &quot;aaaaaa&quot;, which its length is 6.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;aaabbaaa&quot;\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;aaaaa&quot;\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> No need to swap, longest repeated character substring is &quot;aaaaa&quot;, length is 5.\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;abcdef&quot;\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= text.length &lt;= 20000</code></li>\n\t<li><code>text</code> consist of lowercase English characters only.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.4K\", \"totalSubmission\": \"30.2K\", \"totalAcceptedRaw\": 14365, \"totalSubmissionRaw\": 30204, \"acRate\": \"47.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "1149", "name": "article-views-ii", "content": {"questionId": "1259", "questionFrontendId": "1149", "questionTitle": "Article Views II", "questionTitleSlug": "article-views-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11K\", \"totalSubmission\": \"22.9K\", \"totalAcceptedRaw\": 11046, \"totalSubmissionRaw\": 22854, \"acRate\": \"48.3%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1302", "name": "deepest-leaves-sum", "content": {"questionId": "1254", "questionFrontendId": "1302", "questionTitle": "Deepest Leaves Sum", "questionTitleSlug": "deepest-leaves-sum", "content": "Given a binary tree, return the sum of values of its deepest leaves.\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/07/31/1483_ex1.png\" style=\"width: 273px; height: 265px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [1,2,3,4,5,null,6,7,null,null,null,null,8]\r\n<strong>Output:</strong> 15\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li>The number of nodes in the tree is between&nbsp;<code>1</code>&nbsp;and&nbsp;<code>10^4</code>.</li>\r\n\t<li>The value of nodes is between&nbsp;<code>1</code>&nbsp;and&nbsp;<code>100</code>.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"67.5K\", \"totalSubmission\": \"80.4K\", \"totalAcceptedRaw\": 67529, \"totalSubmissionRaw\": 80437, \"acRate\": \"84.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1329", "name": "sort-the-matrix-diagonally", "content": {"questionId": "1253", "questionFrontendId": "1329", "questionTitle": "Sort the Matrix Diagonally", "questionTitleSlug": "sort-the-matrix-diagonally", "content": "<p>A <strong>matrix diagonal</strong> is a diagonal line of cells starting from some cell in either the topmost row or leftmost column and going in the bottom-right direction until reaching the matrix&#39;s end. For example, the <strong>matrix diagonal</strong> starting from <code>mat[2][0]</code>, where <code>mat</code> is a <code>6 x 3</code> matrix, includes cells <code>mat[2][0]</code>, <code>mat[3][1]</code>, and <code>mat[4][2]</code>.</p>\n\n<p>Given an <code>m x n</code> matrix <code>mat</code> of integers, sort each <strong>matrix diagonal</strong> in ascending order and return <em>the resulting matrix</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/21/1482_example_1_2.png\" style=\"width: 500px; height: 198px;\" />\n<pre>\n<strong>Input:</strong> mat = [[3,3,1,1],[2,2,1,2],[1,1,1,2]]\n<strong>Output:</strong> [[1,1,1,1],[1,2,2,2],[1,2,3,3]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m ==&nbsp;mat.length</code></li>\n\t<li><code>n ==&nbsp;mat[i].length</code></li>\n\t<li><code>1 &lt;= m, n&nbsp;&lt;= 100</code></li>\n\t<li><code>1 &lt;= mat[i][j] &lt;= 100</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"28K\", \"totalSubmission\": \"35.4K\", \"totalAcceptedRaw\": 27962, \"totalSubmissionRaw\": 35360, \"acRate\": \"79.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "1328", "name": "break-a-palindrome", "content": {"questionId": "1252", "questionFrontendId": "1328", "questionTitle": "Break a Palindrome", "questionTitleSlug": "break-a-palindrome", "content": "<p>Given a palindromic string <code>palindrome</code>, replace <strong>exactly one</strong> character by any lowercase English letter so that the string becomes the lexicographically smallest possible string that <strong>isn&#39;t</strong> a palindrome.</p>\r\n\r\n<p>After doing so, return the final string.&nbsp; If there is no way to do so, return the empty string.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> palindrome = &quot;abccba&quot;\r\n<strong>Output:</strong> &quot;aaccba&quot;\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> palindrome = &quot;a&quot;\r\n<strong>Output:</strong> &quot;&quot;\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= palindrome.length &lt;= 1000</code></li>\r\n\t<li><code>palindrome</code>&nbsp;consists of only lowercase English letters.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"20.2K\", \"totalSubmission\": \"44.8K\", \"totalAcceptedRaw\": 20237, \"totalSubmissionRaw\": 44811, \"acRate\": \"45.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "1143", "name": "longest-common-subsequence", "content": {"questionId": "1250", "questionFrontendId": "1143", "questionTitle": "Longest Common Subsequence", "questionTitleSlug": "longest-common-subsequence", "content": "<p>Given two strings <code>text1</code> and <code>text2</code>, return the length of their longest common subsequence.</p>\n\n<p>A <em>subsequence</em> of a string is a new string generated from the original string with some characters(can be none) deleted without changing the relative order of the remaining characters. (eg, &quot;ace&quot; is a subsequence of &quot;abcde&quot; while &quot;aec&quot; is not).&nbsp;A <em>common subsequence</em>&nbsp;of two strings is a subsequence that is common to both strings.</p>\n\n<p>&nbsp;</p>\n\n<p>If there is no common subsequence, return 0.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> text1 = &quot;abcde&quot;, text2 = &quot;ace&quot; \n<strong>Output:</strong> 3  \n<strong>Explanation:</strong> The longest common subsequence is &quot;ace&quot; and its length is 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> text1 = &quot;abc&quot;, text2 = &quot;abc&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The longest common subsequence is &quot;abc&quot; and its length is 3.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> text1 = &quot;abc&quot;, text2 = &quot;def&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There is no such common subsequence, so the result is 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= text1.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= text2.length &lt;= 1000</code></li>\n\t<li>The input strings consist of lowercase English characters only.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"162.8K\", \"totalSubmission\": \"278.1K\", \"totalAcceptedRaw\": 162822, \"totalSubmissionRaw\": 278056, \"acRate\": \"58.6%\"}", "similarQuestions": "[{\"title\": \"Longest Palindromic Subsequence\", \"titleSlug\": \"longest-palindromic-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Delete Operation for Two Strings\", \"titleSlug\": \"delete-operation-for-two-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Shortest Common Supersequence \", \"titleSlug\": \"shortest-common-supersequence\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1146", "name": "snapshot-array", "content": {"questionId": "1249", "questionFrontendId": "1146", "questionTitle": "Snapshot Array", "questionTitleSlug": "snapshot-array", "content": "<p>Implement a SnapshotArray that supports the following interface:</p>\n\n<ul>\n\t<li><code>SnapshotArray(int length)</code> initializes an array-like data structure with the given length.&nbsp; <strong>Initially, each element equals 0</strong>.</li>\n\t<li><code>void set(index, val)</code> sets the element at the given <code>index</code> to be equal to <code>val</code>.</li>\n\t<li><code>int snap()</code>&nbsp;takes a snapshot of the array and returns the <code>snap_id</code>: the total number of times we called <code>snap()</code> minus <code>1</code>.</li>\n\t<li><code>int get(index, snap_id)</code>&nbsp;returns the value at the given <code>index</code>, at the time we took the snapshot with the given <code>snap_id</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [&quot;SnapshotArray&quot;,&quot;set&quot;,&quot;snap&quot;,&quot;set&quot;,&quot;get&quot;]\n[[3],[0,5],[],[0,6],[0,0]]\n<strong>Output:</strong> [null,null,0,null,5]\n<strong>Explanation: </strong>\nSnapshotArray snapshotArr = new SnapshotArray(3); // set the length to be 3\nsnapshotArr.set(0,5);  // Set array[0] = 5\nsnapshotArr.snap();  // Take a snapshot, return snap_id = 0\nsnapshotArr.set(0,6);\nsnapshotArr.get(0,0);  // Get the value of array[0] with snap_id = 0, return 5</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= length&nbsp;&lt;= 50000</code></li>\n\t<li>At most <code>50000</code>&nbsp;calls will be made to <code>set</code>, <code>snap</code>, and <code>get</code>.</li>\n\t<li><code>0 &lt;= index&nbsp;&lt;&nbsp;length</code></li>\n\t<li><code>0 &lt;=&nbsp;snap_id &lt;&nbsp;</code>(the total number of times we call <code>snap()</code>)</li>\n\t<li><code>0 &lt;=&nbsp;val &lt;= 10^9</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"41.9K\", \"totalSubmission\": \"113.9K\", \"totalAcceptedRaw\": 41947, \"totalSubmissionRaw\": 113941, \"acRate\": \"36.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "1145", "name": "binary-tree-coloring-game", "content": {"questionId": "1248", "questionFrontendId": "1145", "questionTitle": "Binary Tree Coloring Game", "questionTitleSlug": "binary-tree-coloring-game", "content": "<p>Two players play a turn based game on a binary tree.&nbsp; We are given&nbsp;the <code>root</code> of this binary tree, and the number of nodes <code>n</code>&nbsp;in the tree.&nbsp; <code>n</code> is odd, and&nbsp;each node has a distinct value from <code>1</code> to <code>n</code>.</p>\n\n<p>Initially, the first player names a value <code>x</code> with <code>1 &lt;= x &lt;= n</code>, and the second player names a value <code>y</code> with <code>1 &lt;= y &lt;= n</code> and <code>y != x</code>.&nbsp; The first player colors the node with value <code>x</code> red, and the second player colors the node with value <code>y</code> blue.</p>\n\n<p>Then, the players take turns starting with the first player.&nbsp; In each turn, that player chooses a node of their color (red if player 1, blue if player 2) and colors an <strong>uncolored</strong> neighbor of the chosen node (either the left child, right child, or parent of the chosen node.)</p>\n\n<p>If (and only if)&nbsp;a player cannot choose such a node in this way, they must pass their turn.&nbsp; If both players pass their turn, the game ends, and the winner is the player that colored more nodes.</p>\n\n<p>You are the second player.&nbsp; If it is possible to choose such a <code>y</code>&nbsp;to ensure you win the game, return <code>true</code>.&nbsp; If it is not possible, return <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/08/01/1480-binary-tree-coloring-game.png\" style=\"width: 300px; height: 186px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,5,6,7,8,9,10,11], n = 11, x = 3\n<strong>Output:</strong> true\n<strong>Explanation: </strong>The second player can choose the node with value 2.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>root</code> is the root of a binary tree with <code>n</code> nodes and distinct node values from <code>1</code> to <code>n</code>.</li>\n\t<li><code>n</code> is odd.</li>\n\t<li><code>1 &lt;= x &lt;= n&nbsp;&lt;= 100</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23.3K\", \"totalSubmission\": \"45.3K\", \"totalAcceptedRaw\": 23280, \"totalSubmissionRaw\": 45305, \"acRate\": \"51.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1144", "name": "decrease-elements-to-make-array-zigzag", "content": {"questionId": "1247", "questionFrontendId": "1144", "questionTitle": "Decrease Elements To Make Array Zigzag", "questionTitleSlug": "decrease-elements-to-make-array-zigzag", "content": "<p>Given an array <code>nums</code> of integers, a <em>move</em>&nbsp;consists of choosing any element and <strong>decreasing it by 1</strong>.</p>\n\n<p>An array <code>A</code> is a&nbsp;<em>zigzag array</em>&nbsp;if either:</p>\n\n<ul>\n\t<li>Every even-indexed element is greater than adjacent elements, ie.&nbsp;<code>A[0] &gt; A[1] &lt; A[2] &gt; A[3] &lt; A[4] &gt; ...</code></li>\n\t<li>OR, every odd-indexed element is greater than adjacent elements, ie.&nbsp;<code>A[0] &lt; A[1] &gt; A[2] &lt; A[3] &gt; A[4] &lt; ...</code></li>\n</ul>\n\n<p>Return the minimum number of moves to transform the given array <code>nums</code> into a zigzag array.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> We can decrease 2 to 0 or 3 to 1.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [9,6,1,6,2]\n<strong>Output:</strong> 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 1000</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"10.2K\", \"totalSubmission\": \"22.3K\", \"totalAcceptedRaw\": 10235, \"totalSubmissionRaw\": 22330, \"acRate\": \"45.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "1315", "name": "sum-of-nodes-with-even-valued-grandparent", "content": {"questionId": "1243", "questionFrontendId": "1315", "questionTitle": "Sum of Nodes with Even-Valued Grandparent", "questionTitleSlug": "sum-of-nodes-with-even-valued-grandparent", "content": "<p>Given a binary tree, return the sum of values of nodes with even-valued grandparent.&nbsp; (A <em>grandparent</em> of a node is the parent of its parent, if it exists.)</p>\r\n\r\n<p>If there are no nodes with an even-valued grandparent, return&nbsp;<code>0</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/07/24/1473_ex1.png\" style=\"width: 350px; height: 214px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [6,7,8,2,7,1,3,9,null,1,4,null,null,null,5]\r\n<strong>Output:</strong> 18\r\n<b>Explanation:</b> The red nodes are the nodes with even-value grandparent while the blue nodes are the even-value grandparents.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li>The number of nodes in the tree is between&nbsp;<code>1</code>&nbsp;and&nbsp;<code>10^4</code>.</li>\r\n\t<li>The value of nodes is between&nbsp;<code>1</code>&nbsp;and&nbsp;<code>100</code>.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"51.9K\", \"totalSubmission\": \"61.7K\", \"totalAcceptedRaw\": 51851, \"totalSubmissionRaw\": 61703, \"acRate\": \"84.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1314", "name": "matrix-block-sum", "content": {"questionId": "1242", "questionFrontendId": "1314", "questionTitle": "Matrix Block Sum", "questionTitleSlug": "matrix-block-sum", "content": "Given a <code>m * n</code> matrix&nbsp;<code>mat</code>&nbsp;and an integer <code>K</code>, return a matrix <code>answer</code> where each <code>answer[i][j]</code>&nbsp;is the sum of all elements <code>mat[r][c]</code> for <code>i - K &lt;= r &lt;= i + K, j - K &lt;= c &lt;= j + K</code>, and <code>(r, c)</code> is a valid position in the matrix.\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> mat = [[1,2,3],[4,5,6],[7,8,9]], K = 1\r\n<strong>Output:</strong> [[12,21,16],[27,45,33],[24,39,28]]\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> mat = [[1,2,3],[4,5,6],[7,8,9]], K = 2\r\n<strong>Output:</strong> [[45,45,45],[45,45,45],[45,45,45]]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>m ==&nbsp;mat.length</code></li>\r\n\t<li><code>n ==&nbsp;mat[i].length</code></li>\r\n\t<li><code>1 &lt;= m, n, K &lt;= 100</code></li>\r\n\t<li><code>1 &lt;= mat[i][j] &lt;= 100</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"26K\", \"totalSubmission\": \"35.3K\", \"totalAcceptedRaw\": 26009, \"totalSubmissionRaw\": 35345, \"acRate\": \"73.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1140", "name": "stone-game-ii", "content": {"questionId": "1240", "questionFrontendId": "1140", "questionTitle": "Stone Game II", "questionTitleSlug": "stone-game-ii", "content": "<p>Alice and Bob continue their&nbsp;games with piles of stones.&nbsp; There are a number of&nbsp;piles&nbsp;<strong>arranged in a row</strong>, and each pile has a positive integer number of stones&nbsp;<code>piles[i]</code>.&nbsp; The objective of the game is to end with the most&nbsp;stones.&nbsp;</p>\n\n<p>Alice&nbsp;and Bob take turns, with Alice starting first.&nbsp; Initially, <code>M = 1</code>.</p>\n\n<p>On each player&#39;s turn, that player&nbsp;can take <strong>all the stones</strong> in the <strong>first</strong> <code>X</code> remaining piles, where <code>1 &lt;= X &lt;= 2M</code>.&nbsp; Then, we set&nbsp;<code>M = max(M, X)</code>.</p>\n\n<p>The game continues until all the stones have been taken.</p>\n\n<p>Assuming Alice and Bob play optimally, return the maximum number of stones Alice&nbsp;can get.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> piles = [2,7,9,4,4]\n<strong>Output:</strong> 10\n<strong>Explanation:</strong>  If Alice takes one pile at the beginning, Bob takes two piles, then Alice takes 2 piles again. Alice can get 2 + 4 + 4 = 10 piles in total. If Alice takes two piles at the beginning, then Bob can take all three piles left. In this case, Alice get 2 + 7 = 9 piles in total. So we return 10 since it&#39;s larger. \n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> piles = [1,2,3,4,5,100]\n<strong>Output:</strong> 104\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= piles.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= piles[i]&nbsp;&lt;= 10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"22.5K\", \"totalSubmission\": \"34.7K\", \"totalAcceptedRaw\": 22451, \"totalSubmissionRaw\": 34658, \"acRate\": \"64.8%\"}", "similarQuestions": "[{\"title\": \"Stone Game V\", \"titleSlug\": \"stone-game-v\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game VI\", \"titleSlug\": \"stone-game-vi\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stone Game VII\", \"titleSlug\": \"stone-game-vii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1139", "name": "largest-1-bordered-square", "content": {"questionId": "1239", "questionFrontendId": "1139", "questionTitle": "Largest 1-Bordered Square", "questionTitleSlug": "largest-1-bordered-square", "content": "<p>Given a 2D <code>grid</code> of <code>0</code>s and <code>1</code>s, return the number of elements in&nbsp;the largest <strong>square</strong>&nbsp;subgrid that has all <code>1</code>s on its <strong>border</strong>, or <code>0</code> if such a subgrid&nbsp;doesn&#39;t exist in the <code>grid</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> grid = [[1,1,1],[1,0,1],[1,1,1]]\r\n<strong>Output:</strong> 9\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> grid = [[1,1,0,0]]\r\n<strong>Output:</strong> 1\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= grid.length &lt;= 100</code></li>\r\n\t<li><code>1 &lt;= grid[0].length &lt;= 100</code></li>\r\n\t<li><code>grid[i][j]</code> is <code>0</code> or <code>1</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"12.1K\", \"totalSubmission\": \"25.1K\", \"totalAcceptedRaw\": 12083, \"totalSubmissionRaw\": 25068, \"acRate\": \"48.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1138", "name": "alphabet-board-path", "content": {"questionId": "1238", "questionFrontendId": "1138", "questionTitle": "Alphabet Board Path", "questionTitleSlug": "alphabet-board-path", "content": "<p>On an alphabet board, we start at position <code>(0, 0)</code>, corresponding to character&nbsp;<code>board[0][0]</code>.</p>\r\n\r\n<p>Here, <code>board = [&quot;abcde&quot;, &quot;fghij&quot;, &quot;klmno&quot;, &quot;pqrst&quot;, &quot;uvwxy&quot;, &quot;z&quot;]</code>, as shown in the diagram below.</p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/07/28/azboard.png\" style=\"width: 250px; height: 317px;\" /></p>\r\n\r\n<p>We may make the following moves:</p>\r\n\r\n<ul>\r\n\t<li><code>&#39;U&#39;</code> moves our position up one row, if the position exists on the board;</li>\r\n\t<li><code>&#39;D&#39;</code> moves our position down one row, if the position exists on the board;</li>\r\n\t<li><code>&#39;L&#39;</code> moves our position left one column, if the position exists on the board;</li>\r\n\t<li><code>&#39;R&#39;</code> moves our position right one column, if the position exists on the board;</li>\r\n\t<li><code>&#39;!&#39;</code>&nbsp;adds the character <code>board[r][c]</code> at our current position <code>(r, c)</code>&nbsp;to the&nbsp;answer.</li>\r\n</ul>\r\n\r\n<p>(Here, the only positions that exist on the board are positions with letters on them.)</p>\r\n\r\n<p>Return a sequence of moves that makes our answer equal to <code>target</code>&nbsp;in the minimum number of moves.&nbsp; You may return any path that does so.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n<pre><strong>Input:</strong> target = \"leet\"\r\n<strong>Output:</strong> \"DDR!UURRR!!DDD!\"\r\n</pre><p><strong>Example 2:</strong></p>\r\n<pre><strong>Input:</strong> target = \"code\"\r\n<strong>Output:</strong> \"RR!DDRR!UUL!R!\"\r\n</pre>\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= target.length &lt;= 100</code></li>\r\n\t<li><code>target</code> consists only of English lowercase letters.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"20.6K\", \"totalSubmission\": \"41.1K\", \"totalAcceptedRaw\": 20638, \"totalSubmissionRaw\": 41110, \"acRate\": \"50.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "String", "slug": "string"}]}}, {"id": "1132", "name": "reported-posts-ii", "content": {"questionId": "1237", "questionFrontendId": "1132", "questionTitle": "Reported Posts II", "questionTitleSlug": "reported-posts-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"12.8K\", \"totalSubmission\": \"37.1K\", \"totalAcceptedRaw\": 12788, \"totalSubmissionRaw\": 37142, \"acRate\": \"34.4%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1300", "name": "sum-of-mutated-array-closest-to-target", "content": {"questionId": "1232", "questionFrontendId": "1300", "questionTitle": "Sum of Mutated Array Closest to Target", "questionTitleSlug": "sum-of-mutated-array-closest-to-target", "content": "<p>Given an integer array&nbsp;<code>arr</code> and a target value <code>target</code>, return&nbsp;the integer&nbsp;<code>value</code>&nbsp;such that when we change all the integers&nbsp;larger than <code>value</code>&nbsp;in the given array to be equal to&nbsp;<code>value</code>,&nbsp;the sum of the array gets&nbsp;as close as possible (in absolute difference) to&nbsp;<code>target</code>.</p>\n\n<p>In case of a tie, return the minimum such integer.</p>\n\n<p>Notice that the answer is not neccesarilly a number from <code>arr</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [4,9,3], target = 10\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> When using 3 arr converts to [3, 3, 3] which sums 9 and that&#39;s the optimal answer.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [2,3,5], target = 10\n<strong>Output:</strong> 5\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [60864,25176,27249,21296,20204], target = 56803\n<strong>Output:</strong> 11361\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 10^4</code></li>\n\t<li><code>1 &lt;= arr[i], target &lt;= 10^5</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.6K\", \"totalSubmission\": \"33.8K\", \"totalAcceptedRaw\": 14635, \"totalSubmissionRaw\": 33843, \"acRate\": \"43.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "1131", "name": "maximum-of-absolute-value-expression", "content": {"questionId": "1230", "questionFrontendId": "1131", "questionTitle": "Maximum of Absolute Value Expression", "questionTitleSlug": "maximum-of-absolute-value-expression", "content": "<p>Given two arrays of integers with equal lengths, return the maximum value of:</p>\r\n\r\n<p><code>|arr1[i] - arr1[j]| + |arr2[i] - arr2[j]| + |i - j|</code></p>\r\n\r\n<p>where the maximum is taken over all <code>0 &lt;= i, j &lt; arr1.length</code>.</p>\r\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr1 = [1,2,3,4], arr2 = [-1,4,5,6]\n<strong>Output:</strong> 13\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr1 = [1,-2,-5,0,10], arr2 = [0,-2,-1,-7,-4]\n<strong>Output:</strong> 20\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= arr1.length == arr2.length &lt;= 40000</code></li>\n\t<li><code>-10^6 &lt;= arr1[i], arr2[i] &lt;= 10^6</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"10.3K\", \"totalSubmission\": \"19.8K\", \"totalAcceptedRaw\": 10297, \"totalSubmissionRaw\": 19764, \"acRate\": \"52.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "1129", "name": "shortest-path-with-alternating-colors", "content": {"questionId": "1229", "questionFrontendId": "1129", "questionTitle": "Shortest Path with Alternating Colors", "questionTitleSlug": "shortest-path-with-alternating-colors", "content": "<p>Consider a directed graph, with nodes labelled <code>0, 1, ..., n-1</code>.&nbsp; In this graph, each edge is either red or blue, and there could&nbsp;be self-edges or parallel edges.</p>\r\n\r\n<p>Each <code>[i, j]</code> in <code>red_edges</code> denotes a red directed edge from node <code>i</code> to node <code>j</code>.&nbsp; Similarly, each <code>[i, j]</code> in <code>blue_edges</code> denotes a blue directed edge from node <code>i</code> to node <code>j</code>.</p>\r\n\r\n<p>Return an array <code>answer</code>&nbsp;of length <code>n</code>,&nbsp;where each&nbsp;<code>answer[X]</code>&nbsp;is&nbsp;the length of the shortest path from node <code>0</code>&nbsp;to node <code>X</code>&nbsp;such that the edge colors alternate along the path (or <code>-1</code> if such a path doesn&#39;t exist).</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n<pre><strong>Input:</strong> n = 3, red_edges = [[0,1],[1,2]], blue_edges = []\r\n<strong>Output:</strong> [0,1,-1]\r\n</pre><p><strong>Example 2:</strong></p>\r\n<pre><strong>Input:</strong> n = 3, red_edges = [[0,1]], blue_edges = [[2,1]]\r\n<strong>Output:</strong> [0,1,-1]\r\n</pre><p><strong>Example 3:</strong></p>\r\n<pre><strong>Input:</strong> n = 3, red_edges = [[1,0]], blue_edges = [[2,1]]\r\n<strong>Output:</strong> [0,-1,-1]\r\n</pre><p><strong>Example 4:</strong></p>\r\n<pre><strong>Input:</strong> n = 3, red_edges = [[0,1]], blue_edges = [[1,2]]\r\n<strong>Output:</strong> [0,1,2]\r\n</pre><p><strong>Example 5:</strong></p>\r\n<pre><strong>Input:</strong> n = 3, red_edges = [[0,1],[0,2]], blue_edges = [[1,0]]\r\n<strong>Output:</strong> [0,1,1]\r\n</pre>\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\r\n\t<li><code>red_edges.length &lt;= 400</code></li>\r\n\t<li><code>blue_edges.length &lt;= 400</code></li>\r\n\t<li><code>red_edges[i].length == blue_edges[i].length == 2</code></li>\r\n\t<li><code>0 &lt;= red_edges[i][j], blue_edges[i][j] &lt; n</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"18.7K\", \"totalSubmission\": \"46.9K\", \"totalAcceptedRaw\": 18661, \"totalSubmissionRaw\": 46871, \"acRate\": \"39.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "1130", "name": "minimum-cost-tree-from-leaf-values", "content": {"questionId": "1228", "questionFrontendId": "1130", "questionTitle": "Minimum Cost Tree From Leaf Values", "questionTitleSlug": "minimum-cost-tree-from-leaf-values", "content": "<p>Given an array <code>arr</code> of positive integers, consider all binary trees such that:</p>\r\n\r\n<ul>\r\n\t<li>Each node has either 0 or 2 children;</li>\r\n\t<li>The values of <code>arr</code> correspond to the values of each&nbsp;<strong>leaf</strong> in an in-order traversal of the tree.&nbsp; <em>(Recall that a node is a leaf if and only if it has 0 children.)</em></li>\r\n\t<li>The value&nbsp;of each non-leaf node is equal to the product of the largest leaf value in its left and right subtree respectively.</li>\r\n</ul>\r\n\r\n<p>Among all possible binary trees considered,&nbsp;return the smallest possible sum of the values of each non-leaf node.&nbsp; It is guaranteed this sum fits into a 32-bit integer.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [6,2,4]\r\n<strong>Output:</strong> 32\r\n<strong>Explanation:</strong>\r\nThere are two possible trees.  The first has non-leaf node sum 36, and the second has non-leaf node sum 32.\r\n\r\n    24            24\r\n   /  \\          /  \\\r\n  12   4        6    8\r\n /  \\               / \\\r\n6    2             2   4\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>2 &lt;= arr.length &lt;= 40</code></li>\r\n\t<li><code>1 &lt;= arr[i] &lt;= 15</code></li>\r\n\t<li>It is guaranteed that the answer fits into a 32-bit signed integer (ie.&nbsp;it is less than <code>2^31</code>).</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"44.4K\", \"totalSubmission\": \"66.1K\", \"totalAcceptedRaw\": 44372, \"totalSubmissionRaw\": 66135, \"acRate\": \"67.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Stack", "slug": "stack"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "1126", "name": "active-businesses", "content": {"questionId": "1225", "questionFrontendId": "1126", "questionTitle": "Active Businesses", "questionTitleSlug": "active-businesses", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.2K\", \"totalSubmission\": \"20.8K\", \"totalAcceptedRaw\": 14246, \"totalSubmissionRaw\": 20786, \"acRate\": \"68.5%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1288", "name": "remove-covered-intervals", "content": {"questionId": "1222", "questionFrontendId": "1288", "questionTitle": "Remove Covered Intervals", "questionTitleSlug": "remove-covered-intervals", "content": "<p>Given a list of <code>intervals</code>, remove all intervals that are covered by another interval in the list.</p>\r\n\r\n<p>Interval <code>[a,b)</code> is covered by&nbsp;interval <code>[c,d)</code> if and only if <code>c &lt;= a</code> and <code>b &lt;= d</code>.</p>\r\n\r\n<p>After doing so, return <em>the number of remaining intervals</em>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> intervals = [[1,4],[3,6],[2,8]]\r\n<strong>Output:</strong> 2\r\n<b>Explanation: </b>Interval [3,6] is covered by [2,8], therefore it is removed.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> intervals = [[1,4],[2,3]]\r\n<strong>Output:</strong> 1\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> intervals = [[0,10],[5,12]]\r\n<strong>Output:</strong> 2\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> intervals = [[3,10],[4,10],[5,11]]\r\n<strong>Output:</strong> 2\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> intervals = [[1,2],[1,4],[3,4]]\r\n<strong>Output:</strong> 1\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= intervals.length &lt;= 1000</code></li>\r\n\t<li><code>intervals[i].length == 2</code></li>\r\n\t<li><code>0 &lt;= intervals[i][0] &lt;&nbsp;intervals[i][1] &lt;= 10^5</code></li>\r\n\t<li>All the intervals are <strong>unique</strong>.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"42.1K\", \"totalSubmission\": \"73.8K\", \"totalAcceptedRaw\": 42139, \"totalSubmissionRaw\": 73831, \"acRate\": \"57.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}, {"name": "Sort", "slug": "sort"}, {"name": "Line Sweep", "slug": "line-sweep"}]}}, {"id": "1124", "name": "longest-well-performing-interval", "content": {"questionId": "1219", "questionFrontendId": "1124", "questionTitle": "Longest Well-Performing Interval", "questionTitleSlug": "longest-well-performing-interval", "content": "<p>We are given <code>hours</code>, a list of the number of hours&nbsp;worked per day for a given employee.</p>\n\n<p>A day is considered to be a <em>tiring day</em> if and only if the number of hours worked is (strictly) greater than <code>8</code>.</p>\n\n<p>A <em>well-performing interval</em> is an interval of days for which the number of tiring days is strictly larger than the number of non-tiring days.</p>\n\n<p>Return the length of the longest well-performing interval.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> hours = [9,9,6,0,6,6,9]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>The longest well-performing interval is [9,9,6].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= hours.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= hours[i] &lt;= 16</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13.9K\", \"totalSubmission\": \"41.8K\", \"totalAcceptedRaw\": 13861, \"totalSubmissionRaw\": 41839, \"acRate\": \"33.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}]}}, {"id": "1123", "name": "lowest-common-ancestor-of-deepest-leaves", "content": {"questionId": "1218", "questionFrontendId": "1123", "questionTitle": "Lowest Common Ancestor of Deepest Leaves", "questionTitleSlug": "lowest-common-ancestor-of-deepest-leaves", "content": "<p>Given the <code>root</code> of a&nbsp;binary tree, return <em>the lowest common ancestor of its deepest leaves</em>.</p>\n\n<p>Recall that:</p>\n\n<ul>\n\t<li>The node of a binary tree is a leaf if and only if it has no children</li>\n\t<li>The depth of the root of the tree is <code>0</code>. if the depth of a node is <code>d</code>, the depth of each of its children&nbsp;is&nbsp;<code>d + 1</code>.</li>\n\t<li>The lowest common ancestor of a set <code>S</code> of nodes, is the node <code>A</code> with the largest depth such that every node in <code>S</code> is in the subtree with root <code>A</code>.</li>\n</ul>\n\n<p><strong>Note:</strong> This question is the same as 865: <a href=\"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes/\" target=\"_blank\">https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes/</a></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/07/01/sketch1.png\" style=\"width: 600px; height: 510px;\" />\n<pre>\n<strong>Input:</strong> root = [3,5,1,6,2,0,8,null,null,7,4]\n<strong>Output:</strong> [2,7,4]\n<strong>Explanation:</strong> We return the node with value 2, colored in yellow in the diagram.\nThe nodes coloured in blue are the deepest leaf-nodes of the tree.\nNote that nodes 6, 0, and 8 are also leaf nodes, but the depth of them is 2, but the depth of nodes 7 and 4 is 3.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1]\n<strong>Output:</strong> [1]\n<strong>Explanation:</strong> The root is the deepest node in the tree, and it&#39;s the lca of itself.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [0,1,3,null,2]\n<strong>Output:</strong> [2]\n<strong>Explanation:</strong> The deepest leaf node in the tree is 2, the lca of one node is itself.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree will be in the range <code>[1, 1000]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 1000</code></li>\n\t<li>The values of the nodes in the tree&nbsp;are <strong>unique</strong>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"42.3K\", \"totalSubmission\": \"62.4K\", \"totalAcceptedRaw\": 42329, \"totalSubmissionRaw\": 62425, \"acRate\": \"67.8%\"}", "similarQuestions": "[{\"title\": \"Lowest Common Ancestor of a Binary Tree IV\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1116", "name": "print-zero-even-odd", "content": {"questionId": "1216", "questionFrontendId": "1116", "questionTitle": "Print Zero Even Odd", "questionTitleSlug": "print-zero-even-odd", "content": "<p>Suppose you are given the following code:</p>\n\n<pre>\nclass ZeroEvenOdd {\n&nbsp; public ZeroEvenOdd(int n) { ... }&nbsp;     // constructor\n  public void zero(printNumber) { ... }  // only output 0&#39;s\n  public void even(printNumber) { ... }  // only output even numbers\n  public void odd(printNumber) { ... }   // only output odd numbers\n}\n</pre>\n\n<p>The same instance of <code>ZeroEvenOdd</code> will be passed to three different threads:</p>\n\n<ol>\n\t<li>Thread A will call&nbsp;<code>zero()</code>&nbsp;which should only output 0&#39;s.</li>\n\t<li>Thread B will call&nbsp;<code>even()</code>&nbsp;which should only ouput even numbers.</li>\n\t<li>Thread C will call <code>odd()</code>&nbsp;which should only output odd numbers.</li>\n</ol>\n\n<p>Each of the threads is given a&nbsp;<code>printNumber</code> method to output&nbsp;an integer. Modify the given program to output the series&nbsp;<code>010203040506</code>... where the length of the series must be 2<em>n</em>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<b>Input:</b> n = 2\n<b>Output:</b> &quot;0102&quot;\n<strong>Explanation:</strong> There are three threads being fired asynchronously. One of them calls zero(), the other calls even(), and the last one calls odd(). &quot;0102&quot; is the correct output.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<b>Input:</b> n = 5\n<b>Output:</b> &quot;0102030405&quot;\n</pre>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"18.7K\", \"totalSubmission\": \"32.5K\", \"totalAcceptedRaw\": 18668, \"totalSubmissionRaw\": 32463, \"acRate\": \"57.5%\"}", "similarQuestions": "[{\"title\": \"Print FooBar Alternately\", \"titleSlug\": \"print-foobar-alternately\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Fizz Buzz Multithreaded\", \"titleSlug\": \"fizz-buzz-multithreaded\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Concurrency", "topicTags": []}}, {"id": "1112", "name": "highest-grade-for-each-student", "content": {"questionId": "1214", "questionFrontendId": "1112", "questionTitle": "Highest Grade For Each Student", "questionTitleSlug": "highest-grade-for-each-student", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"16.3K\", \"totalSubmission\": \"22.8K\", \"totalAcceptedRaw\": 16320, \"totalSubmissionRaw\": 22822, \"acRate\": \"71.5%\"}", "similarQuestions": "[{\"title\": \"Department Highest Salary\", \"titleSlug\": \"department-highest-salary\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1291", "name": "sequential-digits", "content": {"questionId": "1212", "questionFrontendId": "1291", "questionTitle": "Sequential Digits", "questionTitleSlug": "sequential-digits", "content": "<p>An&nbsp;integer has <em>sequential digits</em> if and only if each digit in the number is one more than the previous digit.</p>\n\n<p>Return a <strong>sorted</strong> list of all the integers&nbsp;in the range <code>[low, high]</code>&nbsp;inclusive that have sequential digits.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> low = 100, high = 300\n<strong>Output:</strong> [123,234]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> low = 1000, high = 13000\n<strong>Output:</strong> [1234,2345,3456,4567,5678,6789,12345]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>10 &lt;= low &lt;= high &lt;= 10^9</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"34.8K\", \"totalSubmission\": \"60.6K\", \"totalAcceptedRaw\": 34779, \"totalSubmissionRaw\": 60554, \"acRate\": \"57.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "1286", "name": "iterator-for-combination", "content": {"questionId": "1211", "questionFrontendId": "1286", "questionTitle": "Iterator for Combination", "questionTitleSlug": "iterator-for-combination", "content": "<p>Design the <code>CombinationIterator</code> class:</p>\n\n<ul>\n\t<li><code>CombinationIterator(string characters, int combinationLength)</code>&nbsp;Initializes the object with&nbsp;a string&nbsp;<code>characters</code>&nbsp;of <strong>sorted distinct</strong> lowercase English letters and a number&nbsp;<code>combinationLength</code> as arguments.</li>\n\t<li><code>next()</code>&nbsp;Returns the next combination of length <code>combinationLength</code>&nbsp;in <strong>lexicographical order</strong>.</li>\n\t<li><code>hasNext()</code>&nbsp;Returns <code>true</code>&nbsp;if and only if&nbsp;there exists a next combination.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;CombinationIterator&quot;, &quot;next&quot;, &quot;hasNext&quot;, &quot;next&quot;, &quot;hasNext&quot;, &quot;next&quot;, &quot;hasNext&quot;]\n[[&quot;abc&quot;, 2], [], [], [], [], [], []]\n<strong>Output</strong>\n[null, &quot;ab&quot;, true, &quot;ac&quot;, true, &quot;bc&quot;, false]\n\n<strong>Explanation</strong>\nCombinationIterator itr = new CombinationIterator(&quot;abc&quot;, 2);\nitr.next();    // return &quot;ab&quot;\nitr.hasNext(); // return True\nitr.next();    // return &quot;ac&quot;\nitr.hasNext(); // return True\nitr.next();    // return &quot;bc&quot;\nitr.hasNext(); // return False\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= combinationLength &lt;=&nbsp;characters.length &lt;= 15</code></li>\n\t<li>All the characters of <code>characters</code> are <strong>unique</strong>.</li>\n\t<li>At most <code>10<sup>4</sup></code>&nbsp;calls will be made to <code>next</code> and <code>hasNext</code>.</li>\n\t<li>It&#39;s guaranteed that all&nbsp;calls&nbsp;of the function <code>next</code>&nbsp;are valid.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"37K\", \"totalSubmission\": \"52.3K\", \"totalAcceptedRaw\": 37020, \"totalSubmissionRaw\": 52287, \"acRate\": \"70.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}, {"name": "Design", "slug": "design"}]}}, {"id": "1188", "name": "design-bounded-blocking-queue", "content": {"questionId": "1209", "questionFrontendId": "1188", "questionTitle": "Design Bounded Blocking Queue", "questionTitleSlug": "design-bounded-blocking-queue", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"15.4K\", \"totalSubmission\": \"21.2K\", \"totalAcceptedRaw\": 15358, \"totalSubmissionRaw\": 21220, \"acRate\": \"72.4%\"}", "similarQuestions": "[]", "categoryTitle": "Concurrency", "topicTags": []}}, {"id": "1111", "name": "maximum-nesting-depth-of-two-valid-parentheses-strings", "content": {"questionId": "1208", "questionFrontendId": "1111", "questionTitle": "Maximum Nesting Depth of Two Valid Parentheses Strings", "questionTitleSlug": "maximum-nesting-depth-of-two-valid-parentheses-strings", "content": "<p>A string is a <em>valid parentheses string</em>&nbsp;(denoted VPS) if and only if it consists of <code>&quot;(&quot;</code> and <code>&quot;)&quot;</code> characters only, and:</p>\r\n\r\n<ul>\r\n\t<li>It is the empty string, or</li>\r\n\t<li>It can be written as&nbsp;<code>AB</code>&nbsp;(<code>A</code>&nbsp;concatenated with&nbsp;<code>B</code>), where&nbsp;<code>A</code>&nbsp;and&nbsp;<code>B</code>&nbsp;are VPS&#39;s, or</li>\r\n\t<li>It can be written as&nbsp;<code>(A)</code>, where&nbsp;<code>A</code>&nbsp;is a VPS.</li>\r\n</ul>\r\n\r\n<p>We can&nbsp;similarly define the <em>nesting depth</em> <code>depth(S)</code> of any VPS <code>S</code> as follows:</p>\r\n\r\n<ul>\r\n\t<li><code>depth(&quot;&quot;) = 0</code></li>\r\n\t<li><code>depth(A + B) = max(depth(A), depth(B))</code>, where <code>A</code> and <code>B</code> are VPS&#39;s</li>\r\n\t<li><code>depth(&quot;(&quot; + A + &quot;)&quot;) = 1 + depth(A)</code>, where <code>A</code> is a VPS.</li>\r\n</ul>\r\n\r\n<p>For example,&nbsp; <code>&quot;&quot;</code>,&nbsp;<code>&quot;()()&quot;</code>, and&nbsp;<code>&quot;()(()())&quot;</code>&nbsp;are VPS&#39;s (with nesting depths 0, 1, and 2), and <code>&quot;)(&quot;</code> and <code>&quot;(()&quot;</code> are not VPS&#39;s.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Given a VPS <font face=\"monospace\">seq</font>, split it into two disjoint subsequences <code>A</code> and <code>B</code>, such that&nbsp;<code>A</code> and <code>B</code> are VPS&#39;s (and&nbsp;<code>A.length + B.length = seq.length</code>).</p>\r\n\r\n<p>Now choose <strong>any</strong> such <code>A</code> and <code>B</code> such that&nbsp;<code>max(depth(A), depth(B))</code> is the minimum possible value.</p>\r\n\r\n<p>Return an <code>answer</code> array (of length <code>seq.length</code>) that encodes such a&nbsp;choice of <code>A</code> and <code>B</code>:&nbsp; <code>answer[i] = 0</code> if <code>seq[i]</code> is part of <code>A</code>, else <code>answer[i] = 1</code>.&nbsp; Note that even though multiple answers may exist, you may return any of them.</p>\r\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> seq = &quot;(()())&quot;\n<strong>Output:</strong> [0,1,1,1,1,0]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> seq = &quot;()(())()&quot;\n<strong>Output:</strong> [0,0,0,1,1,0,1,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= seq.size &lt;= 10000</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"12.2K\", \"totalSubmission\": \"16.9K\", \"totalAcceptedRaw\": 12197, \"totalSubmissionRaw\": 16859, \"acRate\": \"72.3%\"}", "similarQuestions": "[{\"title\": \"Maximum Nesting Depth of the Parentheses\", \"titleSlug\": \"maximum-nesting-depth-of-the-parentheses\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1110", "name": "delete-nodes-and-return-forest", "content": {"questionId": "1207", "questionFrontendId": "1110", "questionTitle": "Delete Nodes And Return Forest", "questionTitleSlug": "delete-nodes-and-return-forest", "content": "<p>Given the <code>root</code>&nbsp;of a binary tree, each node in the tree has a distinct value.</p>\r\n\r\n<p>After deleting&nbsp;all nodes with a value in <code>to_delete</code>, we are left with a forest (a&nbsp;disjoint union of trees).</p>\r\n\r\n<p>Return the roots of the trees in the remaining forest.&nbsp; You may return the result in any order.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/07/01/screen-shot-2019-07-01-at-53836-pm.png\" style=\"width: 237px; height: 150px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [1,2,3,4,5,6,7], to_delete = [3,5]\r\n<strong>Output:</strong> [[1,2,null,4],[6],[7]]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li>The number of nodes in the given tree is at most <code>1000</code>.</li>\r\n\t<li>Each node has a distinct value between <code>1</code> and <code>1000</code>.</li>\r\n\t<li><code>to_delete.length &lt;= 1000</code></li>\r\n\t<li><code>to_delete</code> contains distinct values between <code>1</code> and <code>1000</code>.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"82.5K\", \"totalSubmission\": \"122.2K\", \"totalAcceptedRaw\": 82491, \"totalSubmissionRaw\": 122189, \"acRate\": \"67.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1109", "name": "corporate-flight-bookings", "content": {"questionId": "1206", "questionFrontendId": "1109", "questionTitle": "Corporate Flight Bookings", "questionTitleSlug": "corporate-flight-bookings", "content": "<p>There are <code>n</code> flights, and they are labeled&nbsp;from <code>1</code> to <code>n</code>.</p>\r\n\r\n<p>We have a list of flight bookings.&nbsp; The <code>i</code>-th booking&nbsp;<code>bookings[i] = [i, j, k]</code>&nbsp;means that we booked <code>k</code> seats from flights labeled <code>i</code> to <code>j</code> inclusive.</p>\r\n\r\n<p>Return an array <code>answer</code> of length <code>n</code>, representing the number of seats booked on each flight in order of their label.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> bookings = [[1,2,10],[2,3,20],[2,5,25]], n = 5\r\n<strong>Output:</strong> [10,55,45,25,25]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= bookings.length &lt;= 20000</code></li>\r\n\t<li><code>1 &lt;= bookings[i][0] &lt;= bookings[i][1] &lt;= n &lt;= 20000</code></li>\r\n\t<li><code>1 &lt;= bookings[i][2] &lt;= 10000</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"22.2K\", \"totalSubmission\": \"41.1K\", \"totalAcceptedRaw\": 22174, \"totalSubmissionRaw\": 41062, \"acRate\": \"54.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Math", "slug": "math"}]}}, {"id": "1107", "name": "new-users-daily-count", "content": {"questionId": "1204", "questionFrontendId": "1107", "questionTitle": "New Users Daily Count", "questionTitleSlug": "new-users-daily-count", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11.8K\", \"totalSubmission\": \"25.7K\", \"totalAcceptedRaw\": 11761, \"totalSubmissionRaw\": 25741, \"acRate\": \"45.7%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1273", "name": "delete-tree-nodes", "content": {"questionId": "1201", "questionFrontendId": "1273", "questionTitle": "Delete Tree Nodes", "questionTitleSlug": "delete-tree-nodes", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"6.2K\", \"totalSubmission\": \"9.9K\", \"totalAcceptedRaw\": 6226, \"totalSubmissionRaw\": 9907, \"acRate\": \"62.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1272", "name": "remove-interval", "content": {"questionId": "1200", "questionFrontendId": "1272", "questionTitle": "Remove Interval", "questionTitleSlug": "remove-interval", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11.5K\", \"totalSubmission\": \"19.9K\", \"totalAcceptedRaw\": 11483, \"totalSubmissionRaw\": 19907, \"acRate\": \"57.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Line Sweep", "slug": "line-sweep"}]}}, {"id": "1098", "name": "unpopular-books", "content": {"questionId": "1198", "questionFrontendId": "1098", "questionTitle": "Unpopular Books", "questionTitleSlug": "unpopular-books", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13.1K\", \"totalSubmission\": \"28.9K\", \"totalAcceptedRaw\": 13133, \"totalSubmissionRaw\": 28882, \"acRate\": \"45.5%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1105", "name": "filling-bookcase-shelves", "content": {"questionId": "1196", "questionFrontendId": "1105", "questionTitle": "Filling Bookcase Shelves", "questionTitleSlug": "filling-bookcase-shelves", "content": "<p>We have a sequence of <code>books</code>: the <code>i</code>-th book has thickness <code>books[i][0]</code> and height <code>books[i][1]</code>.</p>\n\n<p>We want to place these books <strong>in order</strong>&nbsp;onto bookcase shelves that have total width <code>shelf_width</code>.</p>\n\n<p>We choose&nbsp;some of the books to place on this shelf (such that the sum of their thickness is <code>&lt;= shelf_width</code>), then build another level of shelf of the bookcase so that the total height of the bookcase has increased by the maximum height of the books we just put down.&nbsp; We repeat this process until there are no more books to place.</p>\n\n<p>Note again that at each step of the above&nbsp;process, <u>the order of the books we place is the same order as the given sequence of books</u>.&nbsp; For example, if we have an ordered list of 5&nbsp;books, we might place the first and second book onto the first shelf, the third book on the second shelf, and the fourth and fifth book on the last shelf.</p>\n\n<p>Return the minimum possible height that the total bookshelf can be after placing shelves in this manner.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/06/24/shelves.png\" style=\"width: 250px; height: 370px;\" />\n<pre>\n<strong>Input:</strong> books = [[1,1],[2,3],[2,3],[1,1],[1,1],[1,1],[1,2]], shelf_width = 4\n<strong>Output:</strong> 6\n<strong>Explanation:</strong>\nThe sum of the heights of the 3 shelves are 1 + 3 + 2 = 6.\nNotice that book number 2 does not have to be on the first shelf.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= books.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= books[i][0] &lt;= shelf_width &lt;= 1000</code></li>\n\t<li><code>1 &lt;= books[i][1] &lt;= 1000</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"20.3K\", \"totalSubmission\": \"35.1K\", \"totalAcceptedRaw\": 20283, \"totalSubmissionRaw\": 35124, \"acRate\": \"57.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1104", "name": "path-in-zigzag-labelled-binary-tree", "content": {"questionId": "1194", "questionFrontendId": "1104", "questionTitle": "Path In Zigzag Labelled Binary Tree", "questionTitleSlug": "path-in-zigzag-labelled-binary-tree", "content": "<p>In an infinite binary tree where every node has two children, the nodes are labelled in row order.</p>\n\n<p>In the odd numbered rows (ie., the first, third, fifth,...), the labelling is left to right, while in the even numbered rows (second, fourth, sixth,...), the labelling is right to left.</p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/06/24/tree.png\" style=\"width: 300px; height: 138px;\" /></p>\n\n<p>Given the <code>label</code> of a node in this tree, return the labels in the path from the root of the tree to the&nbsp;node with that <code>label</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> label = 14\n<strong>Output:</strong> [1,3,4,14]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> label = 26\n<strong>Output:</strong> [1,2,6,10,26]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= label &lt;= 10^6</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"21.7K\", \"totalSubmission\": \"29.7K\", \"totalAcceptedRaw\": 21657, \"totalSubmissionRaw\": 29725, \"acRate\": \"72.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "1258", "name": "synonymous-sentences", "content": {"questionId": "1191", "questionFrontendId": "1258", "questionTitle": "Synonymous Sentences", "questionTitleSlug": "synonymous-sentences", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"5.5K\", \"totalSubmission\": \"8.2K\", \"totalAcceptedRaw\": 5494, \"totalSubmissionRaw\": 8177, \"acRate\": \"67.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "1257", "name": "smallest-common-region", "content": {"questionId": "1190", "questionFrontendId": "1257", "questionTitle": "Smallest Common Region", "questionTitleSlug": "smallest-common-region", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"6.9K\", \"totalSubmission\": \"11.5K\", \"totalAcceptedRaw\": 6928, \"totalSubmissionRaw\": 11507, \"acRate\": \"60.2%\"}", "similarQuestions": "[{\"title\": \"Lowest Common Ancestor of a Binary Search Tree\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-search-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "1256", "name": "encode-number", "content": {"questionId": "1189", "questionFrontendId": "1256", "questionTitle": "Encode Number", "questionTitleSlug": "encode-number", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"4.1K\", \"totalSubmission\": \"6.1K\", \"totalAcceptedRaw\": 4094, \"totalSubmissionRaw\": 6078, \"acRate\": \"67.4%\"}", "similarQuestions": "[{\"title\": \"Convert to Base -2\", \"titleSlug\": \"convert-to-base-2\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "1115", "name": "print-foobar-alternately", "content": {"questionId": "1187", "questionFrontendId": "1115", "questionTitle": "Print FooBar Alternately", "questionTitleSlug": "print-foobar-alternately", "content": "<p>Suppose you are given the following code:</p>\n\n<pre>\nclass FooBar {\n  public void foo() {\n&nbsp; &nbsp; for (int i = 0; i &lt; n; i++) {\n&nbsp; &nbsp; &nbsp; print(&quot;foo&quot;);\n&nbsp;   }\n  }\n\n  public void bar() {\n&nbsp; &nbsp; for (int i = 0; i &lt; n; i++) {\n&nbsp; &nbsp; &nbsp; print(&quot;bar&quot;);\n&nbsp; &nbsp; }\n  }\n}\n</pre>\n\n<p>The same instance of <code>FooBar</code> will be passed to two different threads. Thread A will call&nbsp;<code>foo()</code> while thread B will call&nbsp;<code>bar()</code>.&nbsp;Modify the given program to output &quot;foobar&quot; <em>n</em> times.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<b>Input:</b> n = 1\n<b>Output:</b> &quot;foobar&quot;\n<strong>Explanation:</strong> There are two threads being fired asynchronously. One of them calls foo(), while the other calls bar(). &quot;foobar&quot; is being output 1 time.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<b>Input:</b> n = 2\n<b>Output:</b> &quot;foobarfoobar&quot;\n<strong>Explanation:</strong> &quot;foobar&quot; is being output 2 times.\n</pre>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"32.2K\", \"totalSubmission\": \"54.5K\", \"totalAcceptedRaw\": 32197, \"totalSubmissionRaw\": 54547, \"acRate\": \"59.0%\"}", "similarQuestions": "[{\"title\": \"Print in Order\", \"titleSlug\": \"print-in-order\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Print Zero Even Odd\", \"titleSlug\": \"print-zero-even-odd\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Concurrency", "topicTags": []}}, {"id": "1117", "name": "building-h2o", "content": {"questionId": "1186", "questionFrontendId": "1117", "questionTitle": "Building H2O", "questionTitleSlug": "building-h2o", "content": "<p>There are two kinds of threads, <code>oxygen</code> and <code>hydrogen</code>. Your goal is to group these threads to form water molecules.&nbsp;There is a barrier where each thread has to&nbsp;wait until a complete molecule can be formed. Hydrogen and oxygen threads will be given <code>releaseHydrogen</code>&nbsp;and <code>releaseOxygen</code>&nbsp;methods respectively, which will allow them to pass the barrier. These threads should pass the barrier in groups of three, and they must be able to immediately bond with each other to form a water molecule.&nbsp;You must guarantee that all the threads from one molecule bond <em>before</em> any other threads from the next molecule do.</p>\n\n<p>In other words:</p>\n\n<ul>\n\t<li>If an oxygen thread arrives at the barrier when no hydrogen threads are present, it has to wait for two hydrogen threads.</li>\n\t<li>If a hydrogen thread arrives at the barrier when no other threads are present, it has to wait for an oxygen thread and another hydrogen thread.</li>\n</ul>\n\n<p>We don&rsquo;t have to worry about matching the threads up explicitly; that is, the threads do not necessarily know which other threads they are paired up with. The key is just that threads pass the barrier in complete sets; thus, if we examine the sequence of threads that bond and divide them into groups of three, each group should contain one oxygen and two hydrogen threads.</p>\n\n<p>Write synchronization code for oxygen and hydrogen molecules that enforces these constraints.</p>\n\n<div>\n<p>&nbsp;</p>\n</div>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;HOH&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;HHO&quot;\n<strong>Explanation:</strong> &quot;HOH&quot; and &quot;OHH&quot; are also valid answers.</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;OOHHHH&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;HHOHHO&quot;\n<strong>Explanation:</strong> &quot;HOHHHO&quot;, &quot;OHHHHO&quot;, &quot;HHOHOH&quot;, &quot;HOHHOH&quot;, &quot;OHHHOH&quot;, &quot;HHOOHH&quot;, &quot;HOHOHH&quot; and &quot;OHHOHH&quot; are also valid answers.</span>\n</pre>\n</div>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>Total length of input string will be 3<em>n</em>, where 1 &le;&nbsp;<em>n</em>&nbsp;&le; 20.</li>\n\t<li>Total number of <code>H</code> will be 2<em>n</em>&nbsp;in the input string.</li>\n\t<li>Total number of <code>O</code> will&nbsp;be <em>n</em>&nbsp;in the input&nbsp;string.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"17K\", \"totalSubmission\": \"32.1K\", \"totalAcceptedRaw\": 17048, \"totalSubmissionRaw\": 32124, \"acRate\": \"53.1%\"}", "similarQuestions": "[]", "categoryTitle": "Concurrency", "topicTags": []}}, {"id": "1094", "name": "car-pooling", "content": {"questionId": "1184", "questionFrontendId": "1094", "questionTitle": "Car Pooling", "questionTitleSlug": "car-pooling", "content": "<p>You are driving a vehicle that&nbsp;has <code>capacity</code> empty seats initially available for passengers.&nbsp; The vehicle <strong>only</strong> drives east (ie. it <strong>cannot</strong> turn around and drive west.)</p>\n\n<p>Given a list of <code>trips</code>, <code>trip[i] = [num_passengers, start_location, end_location]</code>&nbsp;contains information about the <code>i</code>-th trip: the number of passengers that must be picked up, and the locations to pick them up and drop them off.&nbsp; The locations are given as the number of kilometers&nbsp;due east from your vehicle&#39;s initial location.</p>\n\n<p>Return <code>true</code> if and only if&nbsp;it is possible to pick up and drop off all passengers for all the given trips.&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>trips = <span id=\"example-input-1-1\">[[2,1,5],[3,3,7]]</span>, capacity = <span id=\"example-input-1-2\">4</span>\n<strong>Output: </strong><span id=\"example-output-1\">false</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>trips = <span id=\"example-input-2-1\">[[2,1,5],[3,3,7]]</span>, capacity = <span id=\"example-input-2-2\">5</span>\n<strong>Output: </strong><span id=\"example-output-2\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>trips = <span id=\"example-input-3-1\">[[2,1,5],[3,5,7]]</span>, capacity = <span id=\"example-input-3-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-3\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong>trips = <span id=\"example-input-4-1\">[[3,2,7],[3,7,9],[8,3,9]]</span>, capacity = <span id=\"example-input-4-2\">11</span>\n<strong>Output: </strong><span id=\"example-output-4\">true</span>\n</pre>\n</div>\n</div>\n</div>\n\n<div>\n<div>\n<div>\n<div>&nbsp;</div>\n</div>\n</div>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ol>\n\t<li><code>trips.length &lt;= 1000</code></li>\n\t<li><code>trips[i].length == 3</code></li>\n\t<li><code>1 &lt;= trips[i][0] &lt;= 100</code></li>\n\t<li><code>0 &lt;= trips[i][1] &lt; trips[i][2] &lt;= 1000</code></li>\n\t<li><code>1 &lt;=&nbsp;capacity &lt;= 100000</code></li>\n</ol>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"62.6K\", \"totalSubmission\": \"106.1K\", \"totalAcceptedRaw\": 62587, \"totalSubmissionRaw\": 106093, \"acRate\": \"59.0%\"}", "similarQuestions": "[{\"title\": \"Meeting Rooms II\", \"titleSlug\": \"meeting-rooms-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1093", "name": "statistics-from-a-large-sample", "content": {"questionId": "1183", "questionFrontendId": "1093", "questionTitle": "Statistics from a Large Sample", "questionTitleSlug": "statistics-from-a-large-sample", "content": "<p>We sampled integers between <code>0</code> and <code>255</code>, and stored the results in an array <code>count</code>:&nbsp; <code>count[k]</code> is the number of integers we sampled equal to <code>k</code>.</p>\n\n<p>Return the minimum, maximum, mean, median, and mode of the sample respectively, as an array of <strong>floating point numbers</strong>.&nbsp; The mode is guaranteed to be unique.</p>\n\n<p><em>(Recall that the median of a sample is:</em></p>\n\n<ul>\n\t<li><em>The middle element, if the elements of the sample were sorted and the number of elements is odd;</em></li>\n\t<li><em>The average of the middle two elements, if the elements of the sample were sorted and the number of elements is even.)</em></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> count = [0,1,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n<strong>Output:</strong> [1.00000,3.00000,2.37500,2.50000,3.00000]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> count = [0,4,3,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n<strong>Output:</strong> [1.00000,4.00000,2.18182,2.00000,1.00000]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ol>\n\t<li><code>count.length == 256</code></li>\n\t<li><code>1 &lt;= sum(count) &lt;= 10^9</code></li>\n\t<li>The mode of the sample that count represents is unique.</li>\n\t<li>Answers within <code>10^-5</code> of the true value will be accepted as correct.</li>\n</ol>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"9.5K\", \"totalSubmission\": \"19.4K\", \"totalAcceptedRaw\": 9547, \"totalSubmissionRaw\": 19387, \"acRate\": \"49.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "550", "name": "game-play-analysis-iv", "content": {"questionId": "1182", "questionFrontendId": "550", "questionTitle": "Game Play Analysis IV", "questionTitleSlug": "game-play-analysis-iv", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"15.2K\", \"totalSubmission\": \"33.1K\", \"totalAcceptedRaw\": 15232, \"totalSubmissionRaw\": 33094, \"acRate\": \"46.0%\"}", "similarQuestions": "[{\"title\": \"Game Play Analysis III\", \"titleSlug\": \"game-play-analysis-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Game Play Analysis V\", \"titleSlug\": \"game-play-analysis-v\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "534", "name": "game-play-analysis-iii", "content": {"questionId": "1181", "questionFrontendId": "534", "questionTitle": "Game Play Analysis III", "questionTitleSlug": "game-play-analysis-iii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"18.8K\", \"totalSubmission\": \"24K\", \"totalAcceptedRaw\": 18765, \"totalSubmissionRaw\": 23972, \"acRate\": \"78.3%\"}", "similarQuestions": "[{\"title\": \"Game Play Analysis II\", \"titleSlug\": \"game-play-analysis-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Game Play Analysis IV\", \"titleSlug\": \"game-play-analysis-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1245", "name": "tree-diameter", "content": {"questionId": "1177", "questionFrontendId": "1245", "questionTitle": "Tree Diameter", "questionTitleSlug": "tree-diameter", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"16.2K\", \"totalSubmission\": \"26.6K\", \"totalAcceptedRaw\": 16210, \"totalSubmissionRaw\": 26573, \"acRate\": \"61.0%\"}", "similarQuestions": "[{\"title\": \"Count Subtrees With Max Distance Between Cities\", \"titleSlug\": \"count-subtrees-with-max-distance-between-cities\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1244", "name": "design-a-leaderboard", "content": {"questionId": "1176", "questionFrontendId": "1244", "questionTitle": "Design A Leaderboard", "questionTitleSlug": "design-a-leaderboard", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13.9K\", \"totalSubmission\": \"21.2K\", \"totalAcceptedRaw\": 13886, \"totalSubmissionRaw\": 21221, \"acRate\": \"65.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Sort", "slug": "sort"}, {"name": "Design", "slug": "design"}]}}, {"id": "1091", "name": "shortest-path-in-binary-matrix", "content": {"questionId": "1171", "questionFrontendId": "1091", "questionTitle": "Shortest Path in Binary Matrix", "questionTitleSlug": "shortest-path-in-binary-matrix", "content": "<p>In an N by N square grid, each cell is either empty (0) or blocked (1).</p>\n\n<p>A&nbsp;<em>clear&nbsp;path from top-left to bottom-right</em>&nbsp;has length <code>k</code> if and only if it is composed of cells <code>C_1, C_2, ..., C_k</code>&nbsp;such that:</p>\n\n<ul>\n\t<li>Adjacent cells <code>C_i</code> and <code>C_{i+1}</code> are connected 8-directionally (ie., they are different and&nbsp;share an edge or corner)</li>\n\t<li><code>C_1</code> is at location <code>(0, 0)</code> (ie. has value <code>grid[0][0]</code>)</li>\n\t<li><code>C_k</code>&nbsp;is at location <code>(N-1, N-1)</code> (ie. has value <code>grid[N-1][N-1]</code>)</li>\n\t<li>If <code>C_i</code> is located at&nbsp;<code>(r, c)</code>, then <code>grid[r][c]</code> is empty (ie.&nbsp;<code>grid[r][c] ==&nbsp;0</code>).</li>\n</ul>\n\n<p>Return the length of the shortest such clear path from top-left to bottom-right.&nbsp; If such a path does not exist, return -1.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[0,1],[1,0]]\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/08/04/example1_1.png\" style=\"width: 151px; height: 152px;\" />\n</span>\n<strong>Output: </strong>2\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/08/04/example1_2.png\" style=\"width: 151px; height: 152px;\" />\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[[0,0,0],[1,1,0],[1,1,0]]\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/08/04/example2_1.png\" style=\"width: 151px; height: 152px;\" />\n</span>\n<strong>Output:</strong> 4\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/08/04/example2_2.png\" style=\"width: 151px; height: 152px;\" />\n</pre>\n\n<p>&nbsp;</p>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= grid.length == grid[0].length &lt;= 100</code></li>\n\t<li><code>grid[r][c]</code> is <code>0</code> or <code>1</code></li>\n</ol>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"50.5K\", \"totalSubmission\": \"130K\", \"totalAcceptedRaw\": 50511, \"totalSubmissionRaw\": 130025, \"acRate\": \"38.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1090", "name": "largest-values-from-labels", "content": {"questionId": "1169", "questionFrontendId": "1090", "questionTitle": "Largest Values From Labels", "questionTitleSlug": "largest-values-from-labels", "content": "<p>We have a set of items: the <code>i</code>-th item has value <code>values[i]</code> and label <code>labels[i]</code>.</p>\r\n\r\n<p>Then, we choose&nbsp;a subset <code>S</code> of these items, such that:</p>\r\n\r\n<ul>\r\n\t<li><code>|S| &lt;= num_wanted</code></li>\r\n\t<li>For every label <code>L</code>, the number of items in <code>S</code> with&nbsp;label <code>L</code> is <code>&lt;= use_limit</code>.</li>\r\n</ul>\r\n\r\n<p>Return the largest possible sum of the subset <code>S</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>values = <span id=\"example-input-1-1\">[5,4,3,2,1]</span>, labels = <span id=\"example-input-1-2\">[1,1,2,2,3]</span>, <code>num_wanted </code>= <span id=\"example-input-1-3\">3</span>, use_limit = <span id=\"example-input-1-4\">1</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">9</span>\r\n<strong>Explanation: </strong>The subset chosen is the first, third, and fifth item.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>values = <span id=\"example-input-2-1\">[5,4,3,2,1]</span>, labels = <span id=\"example-input-2-2\">[1,3,3,3,2]</span>, <code>num_wanted </code>= <span id=\"example-input-2-3\">3</span>, use_limit = <span id=\"example-input-2-4\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">12</span>\r\n<strong>Explanation: </strong>The subset chosen is the first, second, and third item.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>values = <span id=\"example-input-3-1\">[9,8,8,7,6]</span>, labels = <span id=\"example-input-3-2\">[0,0,0,1,1]</span>, <code>num_wanted </code>= <span id=\"example-input-3-3\">3</span>, use_limit = <span id=\"example-input-3-4\">1</span>\r\n<strong>Output:</strong>&nbsp;16\r\n<strong>Explanation: </strong>The subset chosen is the first and fourth item.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>values = <span id=\"example-input-4-1\">[9,8,8,7,6]</span>, labels = <span id=\"example-input-4-2\">[0,0,0,1,1]</span>, <code>num_wanted </code>= <span id=\"example-input-4-3\">3</span>, use_limit = <span id=\"example-input-4-4\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-4\">24</span>\r\n<strong>Explanation: </strong>The subset chosen is the first, second, and fourth item.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= values.length == labels.length &lt;= 20000</code></li>\r\n\t<li><code>0 &lt;= values[i], labels[i]&nbsp;&lt;= 20000</code></li>\r\n\t<li><code>1 &lt;= num_wanted, use_limit&nbsp;&lt;= values.length</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n</div>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"17.8K\", \"totalSubmission\": \"29.6K\", \"totalAcceptedRaw\": 17771, \"totalSubmissionRaw\": 29584, \"acRate\": \"60.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1230", "name": "toss-strange-coins", "content": {"questionId": "1166", "questionFrontendId": "1230", "questionTitle": "Toss Strange Coins", "questionTitleSlug": "toss-strange-coins", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"5.2K\", \"totalSubmission\": \"10.5K\", \"totalAcceptedRaw\": 5222, \"totalSubmissionRaw\": 10506, \"acRate\": \"49.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1229", "name": "meeting-scheduler", "content": {"questionId": "1165", "questionFrontendId": "1229", "questionTitle": "Meeting Scheduler", "questionTitleSlug": "meeting-scheduler", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"21.4K\", \"totalSubmission\": \"39.5K\", \"totalAcceptedRaw\": 21358, \"totalSubmissionRaw\": 39546, \"acRate\": \"54.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Line Sweep", "slug": "line-sweep"}]}}, {"id": "1077", "name": "project-employees-iii", "content": {"questionId": "1163", "questionFrontendId": "1077", "questionTitle": "Project Employees III", "questionTitleSlug": "project-employees-iii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"16K\", \"totalSubmission\": \"20.8K\", \"totalAcceptedRaw\": 16010, \"totalSubmissionRaw\": 20781, \"acRate\": \"77.0%\"}", "similarQuestions": "[{\"title\": \"Project Employees II\", \"titleSlug\": \"project-employees-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1079", "name": "letter-tile-possibilities", "content": {"questionId": "1160", "questionFrontendId": "1079", "questionTitle": "Letter Tile Possibilities", "questionTitleSlug": "letter-tile-possibilities", "content": "<p>You have <code>n</code>&nbsp;&nbsp;<code>tiles</code>, where each tile has one letter <code>tiles[i]</code> printed on it.</p>\n\n<p>Return <em>the number of possible non-empty sequences of letters</em> you can make using the letters printed on those <code>tiles</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> tiles = &quot;AAB&quot;\n<strong>Output:</strong> 8\n<strong>Explanation: </strong>The possible sequences are &quot;A&quot;, &quot;B&quot;, &quot;AA&quot;, &quot;AB&quot;, &quot;BA&quot;, &quot;AAB&quot;, &quot;ABA&quot;, &quot;BAA&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> tiles = &quot;AAABBC&quot;\n<strong>Output:</strong> 188\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> tiles = &quot;V&quot;\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= tiles.length &lt;= 7</code></li>\n\t<li><code>tiles</code> consists of uppercase English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"41.1K\", \"totalSubmission\": \"54.2K\", \"totalAcceptedRaw\": 41074, \"totalSubmissionRaw\": 54245, \"acRate\": \"75.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "1081", "name": "smallest-subsequence-of-distinct-characters", "content": {"questionId": "1159", "questionFrontendId": "1081", "questionTitle": "Smallest Subsequence of Distinct Characters", "questionTitleSlug": "smallest-subsequence-of-distinct-characters", "content": "<p>Return the lexicographically smallest subsequence of <code>s</code> that contains all the distinct characters of <code>s</code> exactly once.</p>\n\n<p><strong>Note:</strong> This question is the same as 316:&nbsp;<a href=\"https://leetcode.com/problems/remove-duplicate-letters/\" target=\"_blank\">https://leetcode.com/problems/remove-duplicate-letters/</a></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;bcabc&quot;\n<strong>Output:</strong> &quot;abc&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;cbacdcbc&quot;\n<strong>Output:</strong> &quot;acdb&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"18.2K\", \"totalSubmission\": \"34.2K\", \"totalAcceptedRaw\": 18234, \"totalSubmissionRaw\": 34194, \"acRate\": \"53.3%\"}", "similarQuestions": "[{\"title\": \"Find the Most Competitive Subsequence\", \"titleSlug\": \"find-the-most-competitive-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Stack", "slug": "stack"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1080", "name": "insufficient-nodes-in-root-to-leaf-paths", "content": {"questionId": "1157", "questionFrontendId": "1080", "questionTitle": "Insufficient Nodes in Root to Leaf Paths", "questionTitleSlug": "insufficient-nodes-in-root-to-leaf-paths", "content": "<p>Given the <code>root</code>&nbsp;of a binary tree, consider all <em>root to leaf paths</em>: paths from the root&nbsp;to any leaf.&nbsp; (A leaf is a node with no children.)</p>\r\n\r\n<p>A <code>node</code> is <em>insufficient</em> if&nbsp;<strong>every</strong> such root to leaf path intersecting this <code>node</code> has sum strictly less than&nbsp;<code>limit</code>.</p>\r\n\r\n<p>Delete all insufficient nodes simultaneously, and return the root of the resulting&nbsp;binary tree.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/06/05/insufficient-11.png\" style=\"width: 482px; height: 200px;\" />\r\nInput: </strong>root = <span id=\"example-input-1-1\">[1,2,3,4,-99,-99,7,8,9,-99,-99,12,13,-99,14]</span>, limit = <span id=\"example-input-1-2\">1</span>\r\n<strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/06/05/insufficient-2.png\" style=\"width: 258px; height: 200px;\" />\r\nOutput: </strong><span id=\"example-output-1\">[1,2,3,4,null,null,7,8,9,null,14]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/06/05/insufficient-3.png\" style=\"width: 292px; height: 200px;\" />\r\nInput: </strong>root = <span id=\"example-input-2-1\">[5,4,8,11,null,17,4,7,1,null,null,5,3]</span>, limit = <span id=\"example-input-2-2\">22</span>\r\n<strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/06/05/insufficient-4.png\" style=\"width: 264px; height: 200px;\" />\r\nOutput: </strong><span id=\"example-output-2\">[5,4,8,11,null,17,4,7,null,null,null,5]</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/06/11/screen-shot-2019-06-11-at-83301-pm.png\" style=\"width: 188px; height: 150px;\" />\r\nInput: </strong>root = <span>[1,2,-3,-5,null,4,null]</span>, limit = -1\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/06/11/screen-shot-2019-06-11-at-83517-pm.png\" style=\"width: 122px; height: 150px;\" /><strong>\r\nOutput: </strong><span>[1,null,-3,4]</span></pre>\r\n</div>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li>The given tree will have between <code>1</code> and <code>5000</code> nodes.</li>\r\n\t<li><code>-10^5&nbsp;&lt;= node.val &lt;= 10^5</code></li>\r\n\t<li><code>-10^9 &lt;= limit&nbsp;&lt;= 10^9</code></li>\r\n</ol>\r\n\r\n<div>\r\n<div>&nbsp;</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"16.4K\", \"totalSubmission\": \"33.1K\", \"totalAcceptedRaw\": 16450, \"totalSubmissionRaw\": 33090, \"acRate\": \"49.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1070", "name": "product-sales-analysis-iii", "content": {"questionId": "1155", "questionFrontendId": "1070", "questionTitle": "Product Sales Analysis III", "questionTitleSlug": "product-sales-analysis-iii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"15.6K\", \"totalSubmission\": \"31.5K\", \"totalAcceptedRaw\": 15593, \"totalSubmissionRaw\": 31467, \"acRate\": \"49.6%\"}", "similarQuestions": "[{\"title\": \"Product Sales Analysis II\", \"titleSlug\": \"product-sales-analysis-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1215", "name": "stepping-numbers", "content": {"questionId": "1151", "questionFrontendId": "1215", "questionTitle": "Stepping Numbers", "questionTitleSlug": "stepping-numbers", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"5.6K\", \"totalSubmission\": \"13.1K\", \"totalAcceptedRaw\": 5617, \"totalSubmissionRaw\": 13096, \"acRate\": \"42.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "1214", "name": "two-sum-bsts", "content": {"questionId": "1150", "questionFrontendId": "1214", "questionTitle": "Two Sum BSTs", "questionTitleSlug": "two-sum-bsts", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"17.7K\", \"totalSubmission\": \"26.1K\", \"totalAcceptedRaw\": 17696, \"totalSubmissionRaw\": 26089, \"acRate\": \"67.8%\"}", "similarQuestions": "[{\"title\": \"Two Sum IV - Input is a BST\", \"titleSlug\": \"two-sum-iv-input-is-a-bst\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search Tree", "slug": "binary-search-tree"}]}}, {"id": "1073", "name": "adding-two-negabinary-numbers", "content": {"questionId": "1148", "questionFrontendId": "1073", "questionTitle": "Adding Two Negabinary Numbers", "questionTitleSlug": "adding-two-negabinary-numbers", "content": "<p>Given two numbers <code>arr1</code> and <code>arr2</code> in base <strong>-2</strong>, return the result of adding them together.</p>\n\n<p>Each number is given in <em>array format</em>:&nbsp; as an array of 0s and 1s, from most significant bit to least significant bit.&nbsp; For example, <code>arr = [1,1,0,1]</code> represents the number <code>(-2)^3&nbsp;+ (-2)^2 + (-2)^0 = -3</code>.&nbsp; A number <code>arr</code> in <em>array, format</em> is also guaranteed to have no leading zeros: either&nbsp;<code>arr == [0]</code> or <code>arr[0] == 1</code>.</p>\n\n<p>Return the result of adding <code>arr1</code> and <code>arr2</code> in the same format: as an array of 0s and 1s with no leading zeros.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr1 = [1,1,1,1,1], arr2 = [1,0,1]\n<strong>Output:</strong> [1,0,0,0,0]\n<strong>Explanation: </strong>arr1 represents 11, arr2 represents 5, the output represents 16.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr1 = [0], arr2 = [0]\n<strong>Output:</strong> [0]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr1 = [0], arr2 = [1]\n<strong>Output:</strong> [1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr1.length,&nbsp;arr2.length &lt;= 1000</code></li>\n\t<li><code>arr1[i]</code>&nbsp;and <code>arr2[i]</code> are&nbsp;<code>0</code> or <code>1</code></li>\n\t<li><code>arr1</code> and <code>arr2</code> have no leading zeros</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"8.1K\", \"totalSubmission\": \"23.5K\", \"totalAcceptedRaw\": 8135, \"totalSubmissionRaw\": 23533, \"acRate\": \"34.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "1072", "name": "flip-columns-for-maximum-number-of-equal-rows", "content": {"questionId": "1147", "questionFrontendId": "1072", "questionTitle": "Flip Columns For Maximum Number of Equal Rows", "questionTitleSlug": "flip-columns-for-maximum-number-of-equal-rows", "content": "<p>Given a <code>matrix</code> consisting of 0s and 1s, we may choose any number of columns in the matrix and flip <strong>every</strong>&nbsp;cell in that column.&nbsp; Flipping a cell changes the value of that cell from 0 to 1 or from 1 to 0.</p>\r\n\r\n<p>Return the maximum number of rows that have all values equal after some number of flips.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[[0,1],[1,1]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\r\n<strong>Explanation: </strong>After flipping no values, 1 row has all values equal.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[[0,1],[1,0]]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">2</span>\r\n<strong>Explanation: </strong>After flipping values in the first column, both rows have equal values.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[[0,0,0],[0,0,1],[1,1,0]]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">2</span>\r\n<strong>Explanation: </strong>After flipping values in the first two columns, the last two rows have equal values.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= matrix.length &lt;= 300</code></li>\r\n\t<li><code>1 &lt;= matrix[i].length &lt;= 300</code></li>\r\n\t<li>All <code>matrix[i].length</code>&#39;s are equal</li>\r\n\t<li><code>matrix[i][j]</code> is&nbsp;<code>0</code> or <code>1</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"12.1K\", \"totalSubmission\": \"19.8K\", \"totalAcceptedRaw\": 12073, \"totalSubmissionRaw\": 19753, \"acRate\": \"61.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}]}}, {"id": "1198", "name": "find-smallest-common-element-in-all-rows", "content": {"questionId": "1143", "questionFrontendId": "1198", "questionTitle": "Find Smallest Common Element in All Rows", "questionTitleSlug": "find-smallest-common-element-in-all-rows", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11.9K\", \"totalSubmission\": \"15.8K\", \"totalAcceptedRaw\": 11892, \"totalSubmissionRaw\": 15833, \"acRate\": \"75.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "1197", "name": "minimum-knight-moves", "content": {"questionId": "1142", "questionFrontendId": "1197", "questionTitle": "Minimum Knight Moves", "questionTitleSlug": "minimum-knight-moves", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"47.5K\", \"totalSubmission\": \"128.8K\", \"totalAcceptedRaw\": 47459, \"totalSubmissionRaw\": 128776, \"acRate\": \"36.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1054", "name": "distant-barcodes", "content": {"questionId": "1140", "questionFrontendId": "1054", "questionTitle": "Distant Barcodes", "questionTitleSlug": "distant-barcodes", "content": "<p>In a warehouse, there is a row of barcodes, where the <code>i<sup>th</sup></code> barcode is <code>barcodes[i]</code>.</p>\n\n<p>Rearrange the barcodes so that no two adjacent barcodes are equal. You may return any answer, and it is guaranteed an answer exists.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> barcodes = [1,1,1,2,2,2]\n<strong>Output:</strong> [2,1,2,1,2,1]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> barcodes = [1,1,1,1,2,2,3,3]\n<strong>Output:</strong> [1,3,1,3,1,2,1,2]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= barcodes.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= barcodes[i] &lt;= 10000</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"20.1K\", \"totalSubmission\": \"45.6K\", \"totalAcceptedRaw\": 20137, \"totalSubmissionRaw\": 45646, \"acRate\": \"44.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Heap", "slug": "heap"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "1053", "name": "previous-permutation-with-one-swap", "content": {"questionId": "1139", "questionFrontendId": "1053", "questionTitle": "Previous Permutation With One Swap", "questionTitleSlug": "previous-permutation-with-one-swap", "content": "<p>Given an array&nbsp;of positive integers <code>arr</code> (not necessarily distinct), return <em>the lexicographically largest permutation that is smaller than</em> <code>arr</code>, that can be <strong>made with exactly one swap</strong> (A <em>swap</em> exchanges the positions of two numbers <code>arr[i]</code> and <code>arr[j]</code>). If it cannot be done, then return the same array.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [3,2,1]\n<strong>Output:</strong> [3,1,2]\n<strong>Explanation:</strong> Swapping 2 and 1.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,1,5]\n<strong>Output:</strong> [1,1,5]\n<strong>Explanation:</strong> This is already the smallest permutation.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,9,4,6,7]\n<strong>Output:</strong> [1,7,4,6,9]\n<strong>Explanation:</strong> Swapping 9 and 7.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [3,1,1,3]\n<strong>Output:</strong> [1,3,1,3]\n<strong>Explanation:</strong> Swapping 1 and 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= arr[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"17.1K\", \"totalSubmission\": \"33.7K\", \"totalAcceptedRaw\": 17079, \"totalSubmissionRaw\": 33667, \"acRate\": \"50.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1052", "name": "grumpy-bookstore-owner", "content": {"questionId": "1138", "questionFrontendId": "1052", "questionTitle": "Grumpy Bookstore Owner", "questionTitleSlug": "grumpy-bookstore-owner", "content": "<p>Today, the bookstore owner has a store open for <code>customers.length</code> minutes.&nbsp; Every minute, some number of customers (<code>customers[i]</code>) enter the store, and all those customers leave after the end of that minute.</p>\r\n\r\n<p>On some minutes, the bookstore owner is grumpy.&nbsp; If the bookstore owner is grumpy on the i-th minute, <code>grumpy[i] = 1</code>, otherwise <code>grumpy[i] = 0</code>.&nbsp; When the bookstore owner is grumpy, the customers of that minute are not satisfied, otherwise they are satisfied.</p>\r\n\r\n<p>The bookstore owner knows a secret technique to keep themselves&nbsp;not grumpy for <code>X</code>&nbsp;minutes straight, but can only use it once.</p>\r\n\r\n<p>Return the maximum number of customers that can be satisfied throughout the day.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>customers = [1,0,1,2,1,1,7,5], grumpy = [0,1,0,1,0,1,0,1], X = 3\r\n<strong>Output: </strong>16\r\n<strong>Explanation:</strong>&nbsp;The bookstore owner keeps themselves&nbsp;not grumpy for the last 3 minutes. \r\nThe maximum number of customers that can be satisfied = 1 + 1 + 1 + 1 + 7 + 5 = 16.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= X &lt;=&nbsp;customers.length ==&nbsp;grumpy.length &lt;= 20000</code></li>\r\n\t<li><code>0 &lt;=&nbsp;customers[i] &lt;= 1000</code></li>\r\n\t<li><code>0 &lt;=&nbsp;grumpy[i] &lt;= 1</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"32.3K\", \"totalSubmission\": \"58.2K\", \"totalAcceptedRaw\": 32331, \"totalSubmissionRaw\": 58162, \"acRate\": \"55.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "1045", "name": "customers-who-bought-all-products", "content": {"questionId": "1135", "questionFrontendId": "1045", "questionTitle": "Customers Who Bought All Products", "questionTitleSlug": "customers-who-bought-all-products", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"16.7K\", \"totalSubmission\": \"24.4K\", \"totalAcceptedRaw\": 16666, \"totalSubmissionRaw\": 24413, \"acRate\": \"68.3%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1182", "name": "shortest-distance-to-target-color", "content": {"questionId": "1134", "questionFrontendId": "1182", "questionTitle": "Shortest Distance to Target Color", "questionTitleSlug": "shortest-distance-to-target-color", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"7.9K\", \"totalSubmission\": \"14.9K\", \"totalAcceptedRaw\": 7944, \"totalSubmissionRaw\": 14885, \"acRate\": \"53.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "1181", "name": "before-and-after-puzzle", "content": {"questionId": "1132", "questionFrontendId": "1181", "questionTitle": "Before and After Puzzle", "questionTitleSlug": "before-and-after-puzzle", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"8K\", \"totalSubmission\": \"18.1K\", \"totalAcceptedRaw\": 8047, \"totalSubmissionRaw\": 18094, \"acRate\": \"44.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "1049", "name": "last-stone-weight-ii", "content": {"questionId": "1130", "questionFrontendId": "1049", "questionTitle": "Last Stone Weight II", "questionTitleSlug": "last-stone-weight-ii", "content": "<p>We have a collection of rocks, each rock has a positive integer weight.</p>\r\n\r\n<p>Each turn, we choose <strong>any two rocks</strong>&nbsp;and smash them together.&nbsp; Suppose the stones have weights <code>x</code> and <code>y</code> with <code>x &lt;= y</code>.&nbsp; The result of this smash is:</p>\r\n\r\n<ul>\r\n\t<li>If <code>x == y</code>, both stones are totally destroyed;</li>\r\n\t<li>If <code>x != y</code>, the stone of weight <code>x</code> is totally destroyed, and the stone of weight <code>y</code> has new weight <code>y-x</code>.</li>\r\n</ul>\r\n\r\n<p>At the end, there is at most 1 stone left.&nbsp; Return the <strong>smallest possible</strong> weight of this stone (the weight is&nbsp;0 if there are no stones left.)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[2,7,4,1,8,1]\r\n<strong>Output: </strong>1\r\n<strong>Explanation: </strong>\r\nWe can combine 2 and 4 to get 2 so the array converts to [2,7,1,8,1] then,\r\nwe can combine 7 and 8 to get 1 so the array converts to [2,1,1,1] then,\r\nwe can combine 2 and 1 to get 1 so the array converts to [1,1,1] then,\r\nwe can combine 1 and 1 to get 0 so the array converts to [1] then that&#39;s the optimal value.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= stones.length &lt;= 30</code></li>\r\n\t<li><code>1 &lt;= stones[i] &lt;= 100</code></li>\r\n</ol>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"25.2K\", \"totalSubmission\": \"56.4K\", \"totalAcceptedRaw\": 25190, \"totalSubmissionRaw\": 56387, \"acRate\": \"44.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1048", "name": "longest-string-chain", "content": {"questionId": "1129", "questionFrontendId": "1048", "questionTitle": "Longest String Chain", "questionTitleSlug": "longest-string-chain", "content": "<p>Given a list of words, each word consists of English lowercase letters.</p>\n\n<p>Let&#39;s say <code>word1</code> is a predecessor of <code>word2</code>&nbsp;if and only if we can add exactly one letter anywhere in <code>word1</code> to make it equal to <code>word2</code>.&nbsp; For example,&nbsp;<code>&quot;abc&quot;</code>&nbsp;is a predecessor of <code>&quot;abac&quot;</code>.</p>\n\n<p>A <em>word chain&nbsp;</em>is a sequence of words <code>[word_1, word_2, ..., word_k]</code>&nbsp;with <code>k &gt;= 1</code>,&nbsp;where <code>word_1</code> is a predecessor of <code>word_2</code>, <code>word_2</code> is a predecessor of <code>word_3</code>, and so on.</p>\n\n<p>Return the longest possible length of a word chain with words chosen from the given list of <code>words</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;a&quot;,&quot;b&quot;,&quot;ba&quot;,&quot;bca&quot;,&quot;bda&quot;,&quot;bdca&quot;]\n<strong>Output:</strong> 4\n<strong>Explanation</strong>: One of the longest word chain is &quot;a&quot;,&quot;ba&quot;,&quot;bda&quot;,&quot;bdca&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;xbc&quot;,&quot;pcxbcf&quot;,&quot;xb&quot;,&quot;cxbc&quot;,&quot;pcxbc&quot;]\n<strong>Output:</strong> 5\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 16</code></li>\n\t<li><code>words[i]</code> only consists of English lowercase letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"84.5K\", \"totalSubmission\": \"153K\", \"totalAcceptedRaw\": 84498, \"totalSubmissionRaw\": 153027, \"acRate\": \"55.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1167", "name": "minimum-cost-to-connect-sticks", "content": {"questionId": "1126", "questionFrontendId": "1167", "questionTitle": "Minimum Cost to Connect Sticks", "questionTitleSlug": "minimum-cost-to-connect-sticks", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"37.9K\", \"totalSubmission\": \"59.2K\", \"totalAcceptedRaw\": 37869, \"totalSubmissionRaw\": 59197, \"acRate\": \"64.0%\"}", "similarQuestions": "[{\"title\": \"Minimum Cost to Merge Stones\", \"titleSlug\": \"minimum-cost-to-merge-stones\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1166", "name": "design-file-system", "content": {"questionId": "1125", "questionFrontendId": "1166", "questionTitle": "Design File System", "questionTitleSlug": "design-file-system", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"8.8K\", \"totalSubmission\": \"15.2K\", \"totalAcceptedRaw\": 8808, \"totalSubmissionRaw\": 15217, \"acRate\": \"57.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Design", "slug": "design"}]}}, {"id": "1043", "name": "partition-array-for-maximum-sum", "content": {"questionId": "1121", "questionFrontendId": "1043", "questionTitle": "Partition Array for Maximum Sum", "questionTitleSlug": "partition-array-for-maximum-sum", "content": "<p>Given an integer array <code>arr</code>, you should partition the array into (contiguous) subarrays of length at most <code>k</code>. After partitioning, each subarray has their values changed to become the maximum value of that subarray.</p>\n\n<p>Return <em>the largest sum of the given array after partitioning.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,15,7,9,2,5,10], k = 3\n<strong>Output:</strong> 84\n<strong>Explanation:</strong> arr becomes [15,15,15,9,10,10,10]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,4,1,5,7,3,6,1,9,9,3], k = 4\n<strong>Output:</strong> 83\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1], k = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 500</code></li>\n\t<li><code>0 &lt;= arr[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= arr.length</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"24.7K\", \"totalSubmission\": \"37.1K\", \"totalAcceptedRaw\": 24704, \"totalSubmissionRaw\": 37071, \"acRate\": \"66.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1042", "name": "flower-planting-with-no-adjacent", "content": {"questionId": "1120", "questionFrontendId": "1042", "questionTitle": "Flower Planting With No Adjacent", "questionTitleSlug": "flower-planting-with-no-adjacent", "content": "<p>You have <code>n</code> gardens, labeled from <code>1</code> to <code>n</code>, and an array <code>paths</code> where <code>paths[i] = [x<sub>i</sub>, y<sub>i</sub>]</code> describes a bidirectional path between garden <code>x<sub>i</sub></code> to garden <code>y<sub>i</sub></code>. In each garden, you want to plant one of 4 types of flowers.</p>\n\n<p>All gardens have <strong>at most 3</strong> paths coming into or leaving it.</p>\n\n<p>Your task is to choose a flower type for each garden such that, for any two gardens connected by a path, they have different types of flowers.</p>\n\n<p>Return <em><strong>any</strong> such a choice as an array </em><code>answer</code><em>, where </em><code>answer[i]</code><em> is the type of flower planted in the </em><code>(i+1)<sup>th</sup></code><em> garden. The flower types are denoted </em><code>1</code><em>, </em><code>2</code><em>, </em><code>3</code><em>, or </em><code>4</code><em>. It is guaranteed an answer exists.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3, paths = [[1,2],[2,3],[3,1]]\n<strong>Output:</strong> [1,2,3]\n<strong>Explanation:</strong>\nGardens 1 and 2 have different types.\nGardens 2 and 3 have different types.\nGardens 3 and 1 have different types.\nHence, [1,2,3] is a valid answer. Other valid answers include [1,2,4], [1,4,2], and [3,2,1].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, paths = [[1,2],[3,4]]\n<strong>Output:</strong> [1,2,1,2]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, paths = [[1,2],[2,3],[3,4],[4,1],[1,3],[2,4]]\n<strong>Output:</strong> [1,2,3,4]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= paths.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>paths[i].length == 2</code></li>\n\t<li><code>1 &lt;= x<sub>i</sub>, y<sub>i</sub> &lt;= n</code></li>\n\t<li><code>x<sub>i</sub> != y<sub>i</sub></code></li>\n\t<li>Every garden has <strong>at most 3</strong> paths coming into or leaving it.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"36.4K\", \"totalSubmission\": \"74.9K\", \"totalAcceptedRaw\": 36366, \"totalSubmissionRaw\": 74946, \"acRate\": \"48.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Graph", "slug": "graph"}]}}, {"id": "1041", "name": "robot-bounded-in-circle", "content": {"questionId": "1119", "questionFrontendId": "1041", "questionTitle": "Robot Bounded In Circle", "questionTitleSlug": "robot-bounded-in-circle", "content": "<p>On an infinite plane, a&nbsp;robot initially stands at <code>(0, 0)</code> and faces north.&nbsp;&nbsp;The robot can receive one of three instructions:</p>\n\n<ul>\n\t<li><code>&quot;G&quot;</code>: go straight 1 unit;</li>\n\t<li><code>&quot;L&quot;</code>: turn 90 degrees to the left;</li>\n\t<li><code>&quot;R&quot;</code>: turn 90 degress to the right.</li>\n</ul>\n\n<p>The robot performs the <code>instructions</code> given in order, and repeats them forever.</p>\n\n<p>Return <code>true</code> if and only if there exists a circle in the plane such that the robot never leaves the circle.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;GGLLGG&quot;\n<strong>Output: </strong>true\n<strong>Explanation: </strong>\nThe robot moves from (0,0) to (0,2), turns 180 degrees, and then returns to (0,0).\nWhen repeating these instructions, the robot remains in the circle of radius 2 centered at the origin.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;GG&quot;\n<strong>Output: </strong>false\n<strong>Explanation: </strong>\nThe robot moves north indefinitely.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;GL&quot;\n<strong>Output: </strong>true\n<strong>Explanation: </strong>\nThe robot moves from (0, 0) -&gt; (0, 1) -&gt; (-1, 1) -&gt; (-1, 0) -&gt; (0, 0) -&gt; ...\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= instructions.length &lt;= 100</code></li>\n\t<li><code>instructions[i]</code> is in <code>{&#39;G&#39;, &#39;L&#39;, &#39;R&#39;}</code></li>\n</ol>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"46.6K\", \"totalSubmission\": \"85.4K\", \"totalAcceptedRaw\": 46570, \"totalSubmissionRaw\": 85351, \"acRate\": \"54.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "1162", "name": "as-far-from-land-as-possible", "content": {"questionId": "1117", "questionFrontendId": "1162", "questionTitle": "As Far from Land as Possible", "questionTitleSlug": "as-far-from-land-as-possible", "content": "<p>Given an <code>n x n</code> <code>grid</code>&nbsp;containing only values <code>0</code> and <code>1</code>, where&nbsp;<code>0</code> represents water&nbsp;and <code>1</code> represents land, find a water cell such that its distance to the nearest land cell is maximized, and return the distance.&nbsp;If no land or water exists in the grid, return <code>-1</code>.</p>\n\n<p>The distance used in this problem is the Manhattan distance:&nbsp;the distance between two cells <code>(x0, y0)</code> and <code>(x1, y1)</code> is <code>|x0 - x1| + |y0 - y1|</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/05/03/1336_ex1.JPG\" style=\"width: 185px; height: 87px;\" />\n<pre>\n<strong>Input:</strong> grid = [[1,0,1],[0,0,0],[1,0,1]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The cell (1, 1) is as far as possible from all the land with distance 2.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/05/03/1336_ex2.JPG\" style=\"width: 184px; height: 87px;\" />\n<pre>\n<strong>Input:</strong> grid = [[1,0,0],[0,0,0],[0,0,0]]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The cell (2, 2) is as far as possible from all the land with distance 4.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= n&nbsp;&lt;= 100</code></li>\n\t<li><code>grid[i][j]</code>&nbsp;is <code>0</code> or <code>1</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"27.6K\", \"totalSubmission\": \"61.8K\", \"totalAcceptedRaw\": 27584, \"totalSubmissionRaw\": 61809, \"acRate\": \"44.6%\"}", "similarQuestions": "[{\"title\": \"Shortest Distance from All Buildings\", \"titleSlug\": \"shortest-distance-from-all-buildings\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "1161", "name": "maximum-level-sum-of-a-binary-tree", "content": {"questionId": "1116", "questionFrontendId": "1161", "questionTitle": "Maximum Level Sum of a Binary Tree", "questionTitleSlug": "maximum-level-sum-of-a-binary-tree", "content": "<p>Given the <code>root</code> of a binary tree, the level of its root is <code>1</code>,&nbsp;the level of its children is <code>2</code>,&nbsp;and so on.</p>\n\n<p>Return the <strong>smallest</strong> level <code>X</code> such that the sum of all the values of nodes at level <code>X</code> is <strong>maximal</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/05/03/capture.JPG\" style=\"width: 200px; height: 175px;\" />\n<pre>\n<strong>Input:</strong> root = [1,7,0,7,-8,null,null]\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>\nLevel 1 sum = 1.\nLevel 2 sum = 7 + 0 = 7.\nLevel 3 sum = 7 + -8 = -1.\nSo we return the level with the maximum sum which is level 2.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [989,null,10250,98693,-89388,null,null,null,-32127]\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>5</sup> &lt;= Node.val &lt;=&nbsp;10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"56.7K\", \"totalSubmission\": \"80.5K\", \"totalAcceptedRaw\": 56703, \"totalSubmissionRaw\": 80517, \"acRate\": \"70.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1038", "name": "binary-search-tree-to-greater-sum-tree", "content": {"questionId": "1114", "questionFrontendId": "1038", "questionTitle": "Binary Search Tree to Greater Sum Tree", "questionTitleSlug": "binary-search-tree-to-greater-sum-tree", "content": "<p>Given the <code>root</code> of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus sum of all keys greater than the original key in BST.</p>\n\n<p>As a reminder, a <em>binary search tree</em> is a tree that satisfies these constraints:</p>\n\n<ul>\n\t<li>The left subtree of a node contains only nodes with keys&nbsp;<strong>less than</strong>&nbsp;the node&#39;s key.</li>\n\t<li>The right subtree of a node contains only nodes with keys&nbsp;<strong>greater than</strong>&nbsp;the node&#39;s key.</li>\n\t<li>Both the left and right subtrees must also be binary search trees.</li>\n</ul>\n\n<p><strong>Note:</strong> This question is the same as 538:&nbsp;<a href=\"https://leetcode.com/problems/convert-bst-to-greater-tree/\">https://leetcode.com/problems/convert-bst-to-greater-tree/</a></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/05/02/tree.png\" style=\"width: 550px; height: 375px;\" />\n<pre>\n<strong>Input:</strong> root = [4,1,6,0,2,5,7,null,null,null,3,null,null,null,8]\n<strong>Output:</strong> [30,36,21,36,35,26,15,null,null,null,33,null,null,null,8]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [0,null,1]\n<strong>Output:</strong> [1,null,1]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,0,2]\n<strong>Output:</strong> [3,3,2]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [3,2,4,1]\n<strong>Output:</strong> [7,9,4,10]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 100]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 100</code></li>\n\t<li>All the values in the tree are <strong>unique</strong>.</li>\n\t<li><code>root</code> is guaranteed to be a valid binary search tree.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"62.7K\", \"totalSubmission\": \"76.7K\", \"totalAcceptedRaw\": 62723, \"totalSubmissionRaw\": 76662, \"acRate\": \"81.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search Tree", "slug": "binary-search-tree"}]}}, {"id": "1040", "name": "moving-stones-until-consecutive-ii", "content": {"questionId": "1113", "questionFrontendId": "1040", "questionTitle": "Moving Stones Until Consecutive II", "questionTitleSlug": "moving-stones-until-consecutive-ii", "content": "<p>On an <strong>infinite</strong> number line, the position of the i-th stone is given by&nbsp;<code>stones[i]</code>.&nbsp; Call a stone an <em>endpoint stone</em> if it has the smallest or largest position.</p>\r\n\r\n<p>Each turn, you pick up an endpoint stone and move it to an unoccupied position so that it is no longer an endpoint stone.</p>\r\n\r\n<p>In particular,&nbsp;if the stones are at say, <code>stones = [1,2,5]</code>, you <strong>cannot</strong> move the endpoint stone at position 5, since moving it to any position (such as 0, or 3) will still keep that stone as an endpoint stone.</p>\r\n\r\n<p>The game ends when you cannot make any more moves, ie. the stones are in consecutive positions.</p>\r\n\r\n<p>When the game ends, what is the minimum and maximum number of moves that you could have made?&nbsp; Return the answer as an length 2 array:&nbsp;<code>answer = [minimum_moves, maximum_moves]</code></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[7,4,9]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[1,2]</span>\r\n<strong>Explanation: </strong>\r\nWe can move 4 -&gt; 8 for one move to finish the game.\r\nOr, we can move 9 -&gt; 5, 4 -&gt; 6 for two moves to finish the game.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[6,5,4,3,10]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[2,3]</span>\r\nWe can move 3 -&gt; 8 then 10 -&gt; 7 to finish the game.\r\nOr, we can move 3 -&gt; 7, 4 -&gt; 8, 5 -&gt; 9 to finish the game.\r\nNotice we cannot move 10 -&gt; 2 to finish the game, because that would be an illegal move.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[100,101,104,102,103]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">[0,0]</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>3 &lt;= stones.length &lt;= 10^4</code></li>\r\n\t<li><code>1 &lt;= stones[i] &lt;= 10^9</code></li>\r\n\t<li><code>stones[i]</code> have distinct values.</li>\r\n</ol>\r\n\r\n<div>\r\n<div>\r\n<div>&nbsp;</div>\r\n</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"5.9K\", \"totalSubmission\": \"11K\", \"totalAcceptedRaw\": 5894, \"totalSubmissionRaw\": 10970, \"acRate\": \"53.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "1039", "name": "minimum-score-triangulation-of-polygon", "content": {"questionId": "1111", "questionFrontendId": "1039", "questionTitle": "Minimum Score Triangulation of Polygon", "questionTitleSlug": "minimum-score-triangulation-of-polygon", "content": "<p>Given <code>N</code>, consider a convex <code>N</code>-sided polygon with vertices labelled <code>A[0], A[i], ..., A[N-1]</code>&nbsp;in clockwise order.</p>\r\n\r\n<p>Suppose you triangulate the polygon into <code>N-2</code> triangles.&nbsp; For each triangle, the value of that triangle is the <strong>product</strong>&nbsp;of the labels of the vertices, and the <em>total score</em> of the triangulation is the sum of these values over all <code>N-2</code> triangles in the triangulation.</p>\r\n\r\n<p>Return the smallest possible total score that you can achieve with some triangulation of the polygon.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,3]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">6</span>\r\n<strong>Explanation: </strong>The polygon is already triangulated, and the score of the only triangle is 6.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/05/01/minimum-score-triangulation-of-polygon-1.png\" style=\"width: 253px; height: 150px;\" /></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[3,7,4,5]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">144</span>\r\n<strong>Explanation: </strong>There are two triangulations, with possible scores: 3*7*5 + 4*5*7 = 245, or 3*4*5 + 3*4*7 = 144.  The minimum score is 144.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[1,3,1,4,1,5]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">13</span>\r\n<strong>Explanation: </strong>The minimum score triangulation has score 1*1*3 + 1*1*4 + 1*1*5 + 1*1*1 = 13.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>3 &lt;= A.length &lt;= 50</code></li>\r\n\t<li><code>1 &lt;= A[i] &lt;= 100</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"12.9K\", \"totalSubmission\": \"25.9K\", \"totalAcceptedRaw\": 12949, \"totalSubmissionRaw\": 25875, \"acRate\": \"50.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1152", "name": "analyze-user-website-visit-pattern", "content": {"questionId": "1108", "questionFrontendId": "1152", "questionTitle": "Analyze User Website Visit Pattern", "questionTitleSlug": "analyze-user-website-visit-pattern", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"21.7K\", \"totalSubmission\": \"50.1K\", \"totalAcceptedRaw\": 21663, \"totalSubmissionRaw\": 50130, \"acRate\": \"43.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Hash Table", "slug": "hash-table"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "1151", "name": "minimum-swaps-to-group-all-1s-together", "content": {"questionId": "1107", "questionFrontendId": "1151", "questionTitle": "Minimum Swaps to Group All 1's Together", "questionTitleSlug": "minimum-swaps-to-group-all-1s-together", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"8K\", \"totalSubmission\": \"13.8K\", \"totalAcceptedRaw\": 8010, \"totalSubmissionRaw\": 13754, \"acRate\": \"58.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "1035", "name": "uncrossed-lines", "content": {"questionId": "1105", "questionFrontendId": "1035", "questionTitle": "Uncrossed Lines", "questionTitleSlug": "uncrossed-lines", "content": "<p>We write the integers of <code>A</code> and <code>B</code>&nbsp;(in the order they are given) on two separate horizontal lines.</p>\r\n\r\n<p>Now, we may draw <em>connecting lines</em>: a straight line connecting two numbers <code>A[i]</code> and <code>B[j]</code>&nbsp;such that:</p>\r\n\r\n<ul>\r\n\t<li><code>A[i] == B[j]</code>;</li>\r\n\t<li>The line we draw does not intersect any other connecting (non-horizontal) line.</li>\r\n</ul>\r\n\r\n<p>Note that a connecting lines cannot intersect even at the endpoints:&nbsp;each number can only belong to one connecting line.</p>\r\n\r\n<p>Return the maximum number of connecting lines we can draw in this way.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/04/26/142.png\" style=\"width: 100px; height: 72px;\" />\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[1,4,2]</span>, B = <span id=\"example-input-1-2\">[1,2,4]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\r\n<strong>Explanation: </strong>We can draw 2 uncrossed lines as in the diagram.\r\nWe cannot draw 3 uncrossed lines, because the line from A[1]=4 to B[2]=4 will intersect the line from A[2]=2 to B[1]=2.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[2,5,1,2,5]</span>, B = <span id=\"example-input-2-2\">[10,5,2,1,5,2]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">3</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">[1,3,7,1,7,5]</span>, B = <span id=\"example-input-3-2\">[1,9,2,5,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">2</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 500</code></li>\r\n\t<li><code>1 &lt;= B.length &lt;= 500</code></li>\r\n\t<li><code><font face=\"monospace\">1 &lt;= A[i], B[i] &lt;= 2000</font></code></li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"49.8K\", \"totalSubmission\": \"88.9K\", \"totalAcceptedRaw\": 49772, \"totalSubmissionRaw\": 88938, \"acRate\": \"56.0%\"}", "similarQuestions": "[{\"title\": \"Edit Distance\", \"titleSlug\": \"edit-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "1034", "name": "coloring-a-border", "content": {"questionId": "1104", "questionFrontendId": "1034", "questionTitle": "Coloring A Border", "questionTitleSlug": "coloring-a-border", "content": "<p>Given a 2-dimensional&nbsp;<code>grid</code> of integers, each value in the grid represents the color of the grid square at that location.</p>\r\n\r\n<p>Two squares belong to the same <em>connected component</em> if and only if they have the same color and are next to each other in any of the 4 directions.</p>\r\n\r\n<p>The&nbsp;<em>border</em> of a connected component is&nbsp;all the squares in the connected component that are&nbsp;either 4-directionally adjacent to&nbsp;a square not in the component, or on the boundary of the grid (the first or last row or column).</p>\r\n\r\n<p>Given a square at location&nbsp;<code>(r0, c0)</code>&nbsp;in the grid and a <code>color</code>, color the&nbsp;border of the connected component of that square with the given <code>color</code>, and return the final <code>grid</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>grid = <span id=\"example-input-1-1\">[[1,1],[1,2]]</span>, r0 = <span id=\"example-input-1-2\">0</span>, c0 = <span id=\"example-input-1-3\">0</span>, color = <span id=\"example-input-1-4\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[[3, 3], [3, 2]]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>grid = <span id=\"example-input-2-1\">[[1,2,2],[2,3,2]]</span>, r0 = <span id=\"example-input-2-2\">0</span>, c0 = <span id=\"example-input-2-3\">1</span>, color = <span id=\"example-input-2-4\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[[1, 3, 3], [2, 3, 3]]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>grid = <span id=\"example-input-3-1\">[[1,1,1],[1,1,1],[1,1,1]]</span>, r0 = <span id=\"example-input-3-2\">1</span>, c0 = <span id=\"example-input-3-3\">1</span>, color = <span id=\"example-input-3-4\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">[[2, 2, 2], [2, 1, 2], [2, 2, 2]]</span></pre>\r\n</div>\r\n</div>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= grid.length &lt;= 50</code></li>\r\n\t<li><code>1 &lt;= grid[0].length &lt;= 50</code></li>\r\n\t<li><code>1 &lt;= grid[i][j] &lt;= 1000</code></li>\r\n\t<li><code>0 &lt;= r0 &lt; grid.length</code></li>\r\n\t<li><code>0 &lt;= c0 &lt; grid[0].length</code></li>\r\n\t<li><code>1 &lt;= color &lt;= 1000</code></li>\r\n</ol>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"12.2K\", \"totalSubmission\": \"27K\", \"totalAcceptedRaw\": 12209, \"totalSubmissionRaw\": 26975, \"acRate\": \"45.3%\"}", "similarQuestions": "[{\"title\": \"Island Perimeter\", \"titleSlug\": \"island-perimeter\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1135", "name": "connecting-cities-with-minimum-cost", "content": {"questionId": "1100", "questionFrontendId": "1135", "questionTitle": "Connecting Cities With Minimum Cost", "questionTitleSlug": "connecting-cities-with-minimum-cost", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"21K\", \"totalSubmission\": \"35.8K\", \"totalAcceptedRaw\": 21041, \"totalSubmissionRaw\": 35755, \"acRate\": \"58.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Union Find", "slug": "union-find"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "1102", "name": "path-with-maximum-minimum-value", "content": {"questionId": "1099", "questionFrontendId": "1102", "questionTitle": "Path With Maximum Minimum Value", "questionTitleSlug": "path-with-maximum-minimum-value", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"25.9K\", \"totalSubmission\": \"51.8K\", \"totalAcceptedRaw\": 25898, \"totalSubmissionRaw\": 51797, \"acRate\": \"50.0%\"}", "similarQuestions": "[{\"title\": \"Path With Minimum Effort\", \"titleSlug\": \"path-with-minimum-effort\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Union Find", "slug": "union-find"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "1031", "name": "maximum-sum-of-two-non-overlapping-subarrays", "content": {"questionId": "1096", "questionFrontendId": "1031", "questionTitle": "Maximum Sum of Two Non-Overlapping Subarrays", "questionTitleSlug": "maximum-sum-of-two-non-overlapping-subarrays", "content": "<p>Given an array <code>A</code> of non-negative integers, return the maximum sum of elements in two non-overlapping (contiguous) subarrays, which have lengths&nbsp;<code>L</code> and <code>M</code>.&nbsp; (For clarification, the <code>L</code>-length subarray could occur before or after the <code>M</code>-length subarray.)</p>\r\n\r\n<p>Formally,&nbsp;return the largest <code>V</code> for which&nbsp;<code>V = (A[i] + A[i+1] + ... + A[i+L-1]) + (A[j] + A[j+1] + ... + A[j+M-1])</code> and either:</p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= i &lt; i + L - 1 &lt; j &lt; j + M - 1 &lt; A.length</code>, <strong>or</strong></li>\r\n\t<li><code>0 &lt;= j &lt; j + M - 1 &lt; i &lt; i + L - 1 &lt; A.length</code>.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[0,6,5,2,2,5,1,9,4]</span>, L = <span id=\"example-input-1-2\">1</span>, M = <span id=\"example-input-1-3\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">20\r\n<strong>Explanation:</strong> One choice of subarrays is [9] with length 1, and [6,5] with length 2.</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[3,8,1,3,2,1,8,9,0]</span>, L = <span id=\"example-input-2-2\">3</span>, M = <span id=\"example-input-2-3\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">29\r\n</span><span id=\"example-output-1\"><strong>Explanation:</strong> One choice of subarrays is</span><span> [3,8,1] with length 3, and [8,9] with length 2.</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">[2,1,5,6,0,9,5,0,3,8]</span>, L = <span id=\"example-input-3-2\">4</span>, M = <span id=\"example-input-3-3\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">31\r\n</span><span id=\"example-output-1\"><strong>Explanation:</strong> One choice of subarrays is</span><span> [5,6,0,9] with length 4, and [3,8] with length 3.</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>L &gt;= 1</code></li>\r\n\t<li><code>M &gt;= 1</code></li>\r\n\t<li><code>L + M &lt;= A.length &lt;= 1000</code></li>\r\n\t<li><code>0 &lt;= A[i] &lt;= 1000</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"32.1K\", \"totalSubmission\": \"54.7K\", \"totalAcceptedRaw\": 32125, \"totalSubmissionRaw\": 54656, \"acRate\": \"58.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "1029", "name": "two-city-scheduling", "content": {"questionId": "1095", "questionFrontendId": "1029", "questionTitle": "Two City Scheduling", "questionTitleSlug": "two-city-scheduling", "content": "<p>A company is planning to interview <code>2n</code> people. Given the array <code>costs</code> where <code>costs[i] = [aCost<sub>i</sub>, bCost<sub>i</sub>]</code>,&nbsp;the cost of flying the <code>i<sup>th</sup></code> person to city <code>a</code> is <code>aCost<sub>i</sub></code>, and the cost of flying the <code>i<sup>th</sup></code> person to city <code>b</code> is <code>bCost<sub>i</sub></code>.</p>\n\n<p>Return <em>the minimum cost to fly every person to a city</em> such that exactly <code>n</code> people arrive in each city.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> costs = [[10,20],[30,200],[400,50],[30,20]]\n<strong>Output:</strong> 110\n<strong>Explanation: </strong>\nThe first person goes to city A for a cost of 10.\nThe second person goes to city A for a cost of 30.\nThe third person goes to city B for a cost of 50.\nThe fourth person goes to city B for a cost of 20.\n\nThe total minimum cost is 10 + 30 + 50 + 20 = 110 to have half the people interviewing in each city.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> costs = [[259,770],[448,54],[926,667],[184,139],[840,118],[577,469]]\n<strong>Output:</strong> 1859\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> costs = [[515,563],[451,713],[537,709],[343,819],[855,779],[457,60],[650,359],[631,42]]\n<strong>Output:</strong> 3086\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 * n == costs.length</code></li>\n\t<li><code>2 &lt;= costs.length &lt;= 100</code></li>\n\t<li><code>costs.length</code> is even.</li>\n\t<li><code>1 &lt;= aCost<sub>i</sub>, bCost<sub>i</sub> &lt;= 1000</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"103.1K\", \"totalSubmission\": \"179.6K\", \"totalAcceptedRaw\": 103093, \"totalSubmissionRaw\": 179602, \"acRate\": \"57.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1026", "name": "maximum-difference-between-node-and-ancestor", "content": {"questionId": "1092", "questionFrontendId": "1026", "questionTitle": "Maximum Difference Between Node and Ancestor", "questionTitleSlug": "maximum-difference-between-node-and-ancestor", "content": "<p>Given the <code>root</code> of a binary tree, find the maximum value <code>V</code> for which there exist <strong>different</strong> nodes <code>A</code> and <code>B</code> where <code>V = |A.val - B.val|</code>&nbsp;and <code>A</code> is an ancestor of <code>B</code>.</p>\n\n<p>A node <code>A</code> is an ancestor of <code>B</code> if either: any child of <code>A</code> is equal to <code>B</code>, or any child of <code>A</code> is an ancestor of <code>B</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/09/tmp-tree.jpg\" style=\"width: 400px; height: 390px;\" />\n<pre>\n<strong>Input:</strong> root = [8,3,10,1,6,null,14,null,null,4,7,13]\n<strong>Output:</strong> 7\n<strong>Explanation: </strong>We have various ancestor-node differences, some of which are given below :\n|8 - 3| = 5\n|3 - 7| = 4\n|8 - 1| = 7\n|10 - 13| = 3\nAmong all possible differences, the maximum value of 7 is obtained by |8 - 1| = 7.</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/09/tmp-tree-1.jpg\" style=\"width: 250px; height: 349px;\" />\n<pre>\n<strong>Input:</strong> root = [1,null,2,null,0,3]\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree&nbsp;is in the range <code>[2, 5000]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"71.9K\", \"totalSubmission\": \"104.3K\", \"totalAcceptedRaw\": 71931, \"totalSubmissionRaw\": 104310, \"acRate\": \"69.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1120", "name": "maximum-average-subtree", "content": {"questionId": "1091", "questionFrontendId": "1120", "questionTitle": "Maximum Average Subtree", "questionTitleSlug": "maximum-average-subtree", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"22.2K\", \"totalSubmission\": \"35K\", \"totalAcceptedRaw\": 22182, \"totalSubmissionRaw\": 34964, \"acRate\": \"63.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "1027", "name": "longest-arithmetic-subsequence", "content": {"questionId": "1087", "questionFrontendId": "1027", "questionTitle": "Longest Arithmetic Subsequence", "questionTitleSlug": "longest-arithmetic-subsequence", "content": "<p>Given an array <code>A</code> of integers, return the <strong>length</strong> of the longest arithmetic subsequence in <code>A</code>.</p>\n\n<p>Recall that a <em>subsequence</em> of <code>A</code> is a list <code>A[i_1], A[i_2], ..., A[i_k]</code> with <code>0 &lt;= i_1 &lt; i_2 &lt; ... &lt; i_k &lt;= A.length - 1</code>, and that a sequence <code>B</code>&nbsp;is <em>arithmetic</em> if <code>B[i+1] - B[i]</code> are all the same value (for <code>0 &lt;= i &lt; B.length - 1</code>).</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> A = [3,6,9,12]\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>\nThe whole array is an arithmetic sequence with steps of length = 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> A = [9,4,7,2,10]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>\nThe longest arithmetic subsequence is [4,7,10].\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> A = [20,1,15,3,10,5,8]\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>\nThe longest arithmetic subsequence is [20,15,10,5].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= A.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 500</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"51.8K\", \"totalSubmission\": \"103.5K\", \"totalAcceptedRaw\": 51804, \"totalSubmissionRaw\": 103531, \"acRate\": \"50.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1101", "name": "the-earliest-moment-when-everyone-become-friends", "content": {"questionId": "1085", "questionFrontendId": "1101", "questionTitle": "The Earliest Moment When Everyone Become Friends", "questionTitleSlug": "the-earliest-moment-when-everyone-become-friends", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"7.5K\", \"totalSubmission\": \"11.2K\", \"totalAcceptedRaw\": 7516, \"totalSubmissionRaw\": 11187, \"acRate\": \"67.2%\"}", "similarQuestions": "[{\"title\": \"Friend Circles\", \"titleSlug\": \"friend-circles\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Union Find", "slug": "union-find"}]}}, {"id": "1100", "name": "find-k-length-substrings-with-no-repeated-characters", "content": {"questionId": "1084", "questionFrontendId": "1100", "questionTitle": "Find K-Length Substrings With No Repeated Characters", "questionTitleSlug": "find-k-length-substrings-with-no-repeated-characters", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.9K\", \"totalSubmission\": \"20.3K\", \"totalAcceptedRaw\": 14924, \"totalSubmissionRaw\": 20340, \"acRate\": \"73.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "1024", "name": "video-stitching", "content": {"questionId": "1081", "questionFrontendId": "1024", "questionTitle": "Video Stitching", "questionTitleSlug": "video-stitching", "content": "<p>You are given a series of video clips from a sporting event that lasted <code>T</code> seconds.&nbsp;&nbsp;These video clips can be overlapping with each other and have varied lengths.</p>\n\n<p>Each video clip <code>clips[i]</code>&nbsp;is an interval: it starts at time <code>clips[i][0]</code> and ends at time <code>clips[i][1]</code>.&nbsp; We can cut these clips into segments freely: for example, a clip <code>[0, 7]</code> can be cut into segments&nbsp;<code>[0, 1] +&nbsp;[1, 3] + [3, 7]</code>.</p>\n\n<p>Return the minimum number of clips needed so that we can cut the clips into segments that cover the entire sporting event (<code>[0, T]</code>).&nbsp; If the task is impossible, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>clips = <span id=\"example-input-1-1\">[[0,2],[4,6],[8,10],[1,9],[1,5],[5,9]]</span>, T = <span id=\"example-input-1-2\">10</span>\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\n<strong>Explanation: </strong>\nWe take the clips [0,2], [8,10], [1,9]; a total of 3 clips.\nThen, we can reconstruct the sporting event as follows:\nWe cut [1,9] into segments [1,2] + [2,8] + [8,9].\nNow we have segments [0,2] + [2,8] + [8,10] which cover the sporting event [0, 10].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>clips = <span id=\"example-input-2-1\">[[0,1],[1,2]]</span>, T = <span id=\"example-input-2-2\">5</span>\n<strong>Output: </strong><span id=\"example-output-2\">-1</span>\n<strong>Explanation: </strong>\nWe can&#39;t cover [0,5] with only [0,1] and [1,2].\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>clips = <span id=\"example-input-3-1\">[[0,1],[6,8],[0,2],[5,6],[0,4],[0,3],[6,7],[1,3],[4,7],[1,4],[2,5],[2,6],[3,4],[4,5],[5,7],[6,9]]</span>, T = <span id=\"example-input-3-2\">9</span>\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\n<strong>Explanation: </strong>\nWe can take clips [0,4], [4,7], and [6,9].\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong>clips = <span id=\"example-input-4-1\">[[0,4],[2,8]]</span>, T = <span id=\"example-input-4-2\">5</span>\n<strong>Output: </strong><span id=\"example-output-4\">2</span>\n<strong>Explanation: </strong>\nNotice you can have extra video after the event ends.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= clips.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= clips[i][0] &lt;=&nbsp;clips[i][1] &lt;= 100</code></li>\n\t<li><code>0 &lt;= T &lt;= 100</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"28.3K\", \"totalSubmission\": \"57.3K\", \"totalAcceptedRaw\": 28273, \"totalSubmissionRaw\": 57347, \"acRate\": \"49.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1023", "name": "camelcase-matching", "content": {"questionId": "1080", "questionFrontendId": "1023", "questionTitle": "Camelcase Matching", "questionTitleSlug": "camelcase-matching", "content": "<p>A query word matches a given <code>pattern</code> if we can insert <strong>lowercase</strong> letters to the pattern word so that it equals the <code>query</code>. (We may insert each character at any position, and may insert 0 characters.)</p>\r\n\r\n<p>Given a list of <code>queries</code>, and a <code>pattern</code>, return an <code>answer</code> list of booleans, where <code>answer[i]</code> is true if and only if <code>queries[i]</code> matches the <code>pattern</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>queries = <span id=\"example-input-1-1\">[&quot;FooBar&quot;,&quot;FooBarTest&quot;,&quot;FootBall&quot;,&quot;FrameBuffer&quot;,&quot;ForceFeedBack&quot;]</span>, pattern = <span id=\"example-input-1-2\">&quot;FB&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[true,false,true,true,false]</span>\r\n<strong>Explanation: </strong>\r\n&quot;FooBar&quot; can be generated like this &quot;F&quot; + &quot;oo&quot; + &quot;B&quot; + &quot;ar&quot;.\r\n&quot;FootBall&quot; can be generated like this &quot;F&quot; + &quot;oot&quot; + &quot;B&quot; + &quot;all&quot;.\r\n&quot;FrameBuffer&quot; can be generated like this &quot;F&quot; + &quot;rame&quot; + &quot;B&quot; + &quot;uffer&quot;.</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>queries = <span id=\"example-input-2-1\">[&quot;FooBar&quot;,&quot;FooBarTest&quot;,&quot;FootBall&quot;,&quot;FrameBuffer&quot;,&quot;ForceFeedBack&quot;]</span>, pattern = <span id=\"example-input-2-2\">&quot;FoBa&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[true,false,true,false,false]</span>\r\n<strong>Explanation: </strong>\r\n&quot;FooBar&quot; can be generated like this &quot;Fo&quot; + &quot;o&quot; + &quot;Ba&quot; + &quot;r&quot;.\r\n&quot;FootBall&quot; can be generated like this &quot;Fo&quot; + &quot;ot&quot; + &quot;Ba&quot; + &quot;ll&quot;.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>queries = <span id=\"example-input-3-1\">[&quot;FooBar&quot;,&quot;FooBarTest&quot;,&quot;FootBall&quot;,&quot;FrameBuffer&quot;,&quot;ForceFeedBack&quot;]</span>, pattern = <span id=\"example-input-3-2\">&quot;FoBaT&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">[false,true,false,false,false]</span>\r\n<strong>Explanation: </strong>\r\n&quot;FooBarTest&quot; can be generated like this &quot;Fo&quot; + &quot;o&quot; + &quot;Ba&quot; + &quot;r&quot; + &quot;T&quot; + &quot;est&quot;.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= queries.length &lt;= 100</code></li>\r\n\t<li><code>1 &lt;= queries[i].length &lt;= 100</code></li>\r\n\t<li><code>1 &lt;= pattern.length &lt;= 100</code></li>\r\n\t<li>All strings consists only of lower and upper case English letters.</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"20.7K\", \"totalSubmission\": \"36.2K\", \"totalAcceptedRaw\": 20699, \"totalSubmissionRaw\": 36159, \"acRate\": \"57.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Trie", "slug": "trie"}]}}, {"id": "1087", "name": "brace-expansion", "content": {"questionId": "1076", "questionFrontendId": "1087", "questionTitle": "Brace Expansion", "questionTitleSlug": "brace-expansion", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"24.4K\", \"totalSubmission\": \"38.8K\", \"totalAcceptedRaw\": 24446, \"totalSubmissionRaw\": 38784, \"acRate\": \"63.0%\"}", "similarQuestions": "[{\"title\": \"Decode String\", \"titleSlug\": \"decode-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Letter Case Permutation\", \"titleSlug\": \"letter-case-permutation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Brace Expansion II\", \"titleSlug\": \"brace-expansion-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "1020", "name": "number-of-enclaves", "content": {"questionId": "1073", "questionFrontendId": "1020", "questionTitle": "Number of Enclaves", "questionTitleSlug": "number-of-enclaves", "content": "<p>Given a 2D array <code>A</code>, each cell is 0 (representing sea) or 1 (representing land)</p>\r\n\r\n<p>A move consists of walking from one land square 4-directionally to another land square, or off the boundary of the grid.</p>\r\n\r\n<p>Return the number of land squares in the grid for which we <strong>cannot</strong> walk off the boundary of the grid in any number of moves.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[[0,0,0,0],[1,0,1,0],[0,1,1,0],[0,0,0,0]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\r\n<strong>Explanation: </strong>\r\nThere are three 1s that are enclosed by 0s, and one 1 that isn&#39;t enclosed because its on the boundary.</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[[0,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,0,0]]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">0</span>\r\n<strong>Explanation: </strong>\r\nAll 1s are either on the boundary or can reach the boundary.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 500</code></li>\r\n\t<li><code>1 &lt;= A[i].length &lt;= 500</code></li>\r\n\t<li><code>0 &lt;= A[i][j] &lt;= 1</code></li>\r\n\t<li>All rows have the same size.</li>\r\n</ol>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"22.9K\", \"totalSubmission\": \"39.1K\", \"totalAcceptedRaw\": 22942, \"totalSubmissionRaw\": 39080, \"acRate\": \"58.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1019", "name": "next-greater-node-in-linked-list", "content": {"questionId": "1072", "questionFrontendId": "1019", "questionTitle": "Next Greater Node In Linked List", "questionTitleSlug": "next-greater-node-in-linked-list", "content": "<p>We are given a linked list with&nbsp;<code>head</code>&nbsp;as the first node.&nbsp; Let&#39;s number the&nbsp;nodes in the list: <code>node_1, node_2, node_3, ...</code> etc.</p>\r\n\r\n<p>Each node may have a <em>next larger</em> <strong>value</strong>: for <code>node_i</code>,&nbsp;<code>next_larger(node_i)</code>&nbsp;is the <code>node_j.val</code> such that <code>j &gt; i</code>, <code>node_j.val &gt; node_i.val</code>, and <code>j</code> is the smallest possible choice.&nbsp; If such a <code>j</code>&nbsp;does not exist, the next larger value is <code>0</code>.</p>\r\n\r\n<p>Return an array of integers&nbsp;<code>answer</code>, where <code>answer[i] = next_larger(node_{i+1})</code>.</p>\r\n\r\n<p>Note that in the example <strong>inputs</strong>&nbsp;(not outputs) below, arrays such as <code>[2,1,5]</code>&nbsp;represent the serialization of a linked list with a head node value of 2, second node value of 1, and third node value of 5.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[2,1,5]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[5,5,0]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[2,7,4,3,5]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[7,0,5,5,0]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[1,7,5,1,9,2,5,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">[7,9,9,9,0,5,0,0]</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span>Note:</span></strong></p>\r\n\r\n<ol>\r\n\t<li><code><span>1 &lt;= node.val&nbsp;&lt;= 10^9</span></code><span>&nbsp;for each node in the linked list.</span></li>\r\n\t<li>The given list has length in the range <code>[0, 10000]</code>.</li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"60.5K\", \"totalSubmission\": \"103.9K\", \"totalAcceptedRaw\": 60454, \"totalSubmissionRaw\": 103920, \"acRate\": \"58.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}, {"name": "Stack", "slug": "stack"}]}}, {"id": "1017", "name": "convert-to-base-2", "content": {"questionId": "1070", "questionFrontendId": "1017", "questionTitle": "Convert to Base -2", "questionTitleSlug": "convert-to-base-2", "content": "<p>Given a number <code>N</code>, return a string consisting of <code>&quot;0&quot;</code>s and <code>&quot;1&quot;</code>s&nbsp;that represents its value in base <code><strong>-2</strong></code>&nbsp;(negative two).</p>\r\n\r\n<p>The returned string must have no leading zeroes, unless the string is <code>&quot;0&quot;</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">&quot;110&quot;\r\n<strong>Explantion:</strong> (-2) ^ 2 + (-2) ^ 1 = 2</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">&quot;111&quot;\r\n</span><span id=\"example-output-1\"><strong>Explantion:</strong> (-2) ^ 2 + (-2) ^ 1 + (-2) ^ 0</span><span> = 3</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">4</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">&quot;100&quot;\r\n</span><span id=\"example-output-1\"><strong>Explantion:</strong> (-2) ^ 2 = 4</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span>Note:</span></strong></p>\r\n\r\n<ol>\r\n\t<li><span><code>0 &lt;= N &lt;= 10^9</code></span></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13K\", \"totalSubmission\": \"21.8K\", \"totalAcceptedRaw\": 12978, \"totalSubmissionRaw\": 21794, \"acRate\": \"59.5%\"}", "similarQuestions": "[{\"title\": \"Encode Number\", \"titleSlug\": \"encode-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "1066", "name": "campus-bikes-ii", "content": {"questionId": "1067", "questionFrontendId": "1066", "questionTitle": "Campus Bikes II", "questionTitleSlug": "campus-bikes-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"25.4K\", \"totalSubmission\": \"47.1K\", \"totalAcceptedRaw\": 25427, \"totalSubmissionRaw\": 47134, \"acRate\": \"53.9%\"}", "similarQuestions": "[{\"title\": \"Campus Bikes\", \"titleSlug\": \"campus-bikes\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "1016", "name": "binary-string-with-substrings-representing-1-to-n", "content": {"questionId": "1065", "questionFrontendId": "1016", "questionTitle": "Binary String With Substrings Representing 1 To N", "questionTitleSlug": "binary-string-with-substrings-representing-1-to-n", "content": "<p>Given a binary string <code>S</code> (a string consisting only of &#39;0&#39; and &#39;1&#39;s) and a positive integer <code>N</code>, return true if and only if for every integer X from 1 to N, the binary representation of X is a substring of S.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>S = <span id=\"example-input-1-1\">&quot;0110&quot;</span>, N = <span id=\"example-input-1-2\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>S = <span id=\"example-input-2-1\">&quot;0110&quot;</span>, N = <span id=\"example-input-2-2\">4</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= S.length &lt;= 1000</code></li>\r\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"19.9K\", \"totalSubmission\": \"33.5K\", \"totalAcceptedRaw\": 19863, \"totalSubmissionRaw\": 33531, \"acRate\": \"59.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "1015", "name": "smallest-integer-divisible-by-k", "content": {"questionId": "1064", "questionFrontendId": "1015", "questionTitle": "Smallest Integer Divisible by K", "questionTitleSlug": "smallest-integer-divisible-by-k", "content": "<p>Given a positive integer <code>K</code>, you need to find the <strong>length</strong> of the <strong>smallest</strong> positive integer <code>N</code> such that <code>N</code> is divisible by <code>K</code>, and <code>N</code> only contains the digit <code>1</code>.</p>\n\n<p>Return <em>the <strong>length</strong> of </em><code>N</code>. If there is no such <code>N</code>, return -1.</p>\n\n<p><strong>Note:</strong> <code>N</code> may not fit in a 64-bit signed integer.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> K = 1\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The smallest answer is N = 1, which has length 1.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> K = 2\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> There is no such positive integer N divisible by 2.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> K = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The smallest answer is N = 111, which has length 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= K &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"26.4K\", \"totalSubmission\": \"63.2K\", \"totalAcceptedRaw\": 26388, \"totalSubmissionRaw\": 63164, \"acRate\": \"41.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "1014", "name": "best-sightseeing-pair", "content": {"questionId": "1063", "questionFrontendId": "1014", "questionTitle": "Best Sightseeing Pair", "questionTitleSlug": "best-sightseeing-pair", "content": "<p>Given an array <code>A</code> of positive integers, <code>A[i]</code> represents the value of the <code>i</code>-th sightseeing spot, and two&nbsp;sightseeing spots <code>i</code> and <code>j</code>&nbsp;have distance <code>j - i</code>&nbsp;between them.</p>\r\n\r\n<p>The <em>score</em>&nbsp;of a pair (<code>i &lt; j</code>) of sightseeing spots is (<code>A[i] + A[j] + i&nbsp;- j)</code> : the sum of the values of the sightseeing spots, <strong>minus</strong> the distance between them.</p>\r\n\r\n<p>Return the maximum score of a pair of sightseeing spots.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[8,1,5,2,6]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">11\r\n<strong>Explanation:</strong> i = 0, j = 2, </span><code>A[i] + A[j] + i - j = 8 + 5 + 0 - 2 = 11</code>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>2 &lt;= A.length &lt;= 50000</code></li>\r\n\t<li><code>1 &lt;= A[i] &lt;= 1000</code></li>\r\n</ol>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"20.2K\", \"totalSubmission\": \"38.3K\", \"totalAcceptedRaw\": 20201, \"totalSubmissionRaw\": 38265, \"acRate\": \"52.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "1062", "name": "longest-repeating-substring", "content": {"questionId": "1060", "questionFrontendId": "1062", "questionTitle": "Longest Repeating Substring", "questionTitleSlug": "longest-repeating-substring", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"16.1K\", \"totalSubmission\": \"27.9K\", \"totalAcceptedRaw\": 16140, \"totalSubmissionRaw\": 27893, \"acRate\": \"57.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "1060", "name": "missing-element-in-sorted-array", "content": {"questionId": "1059", "questionFrontendId": "1060", "questionTitle": "Missing Element in Sorted Array", "questionTitleSlug": "missing-element-in-sorted-array", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"54K\", \"totalSubmission\": \"99K\", \"totalAcceptedRaw\": 54032, \"totalSubmissionRaw\": 98976, \"acRate\": \"54.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "1061", "name": "lexicographically-smallest-equivalent-string", "content": {"questionId": "1058", "questionFrontendId": "1061", "questionTitle": "Lexicographically Smallest Equivalent String", "questionTitleSlug": "lexicographically-smallest-equivalent-string", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"4.7K\", \"totalSubmission\": \"7.1K\", \"totalAcceptedRaw\": 4699, \"totalSubmissionRaw\": 7091, \"acRate\": \"66.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Union Find", "slug": "union-find"}]}}, {"id": "1011", "name": "capacity-to-ship-packages-within-d-days", "content": {"questionId": "1056", "questionFrontendId": "1011", "questionTitle": "Capacity To Ship Packages Within D Days", "questionTitleSlug": "capacity-to-ship-packages-within-d-days", "content": "<p>A conveyor belt has packages that must be shipped from one port to another within <code>D</code> days.</p>\n\n<p>The <code>i</code>-th package on the conveyor belt has a weight of <code>weights[i]</code>.&nbsp; Each day, we load the ship with packages on the conveyor belt (in the order given by <code>weights</code>). We may not load more weight than the maximum weight capacity of the ship.</p>\n\n<p>Return the least weight capacity of the ship that will result in all the packages on the conveyor belt being shipped within <code>D</code> days.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>weights = <span id=\"example-input-1-1\">[1,2,3,4,5,6,7,8,9,10]</span>, D = <span id=\"example-input-1-2\">5</span>\n<strong>Output: </strong><span id=\"example-output-1\">15</span>\n<strong>Explanation: </strong>\nA ship capacity of 15 is the minimum to ship all the packages in 5 days like this:\n1st day: 1, 2, 3, 4, 5\n2nd day: 6, 7\n3rd day: 8\n4th day: 9\n5th day: 10\n\nNote that the cargo must be shipped in the order given, so using a ship of capacity 14 and splitting the packages into parts like (2, 3, 4, 5), (1, 6, 7), (8), (9), (10) is not allowed. \n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>weights = <span id=\"example-input-2-1\">[3,2,2,4,1,4]</span>, D = <span id=\"example-input-2-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-2\">6</span>\n<strong>Explanation: </strong>\nA ship capacity of 6 is the minimum to ship all the packages in 3 days like this:\n1st day: 3, 2\n2nd day: 2, 4\n3rd day: 1, 4\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>weights = <span id=\"example-input-3-1\">[1,2,3,1,1]</span>, D = 4\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\n<strong>Explanation: </strong>\n1st day: 1\n2nd day: 2\n3rd day: 3\n4th day: 1, 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= D &lt;= weights.length &lt;= 50000</code></li>\n\t<li><code>1 &lt;= weights[i] &lt;= 500</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"60.2K\", \"totalSubmission\": \"101.4K\", \"totalAcceptedRaw\": 60238, \"totalSubmissionRaw\": 101424, \"acRate\": \"59.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "1010", "name": "pairs-of-songs-with-total-durations-divisible-by-60", "content": {"questionId": "1055", "questionFrontendId": "1010", "questionTitle": "Pairs of Songs With Total Durations Divisible by 60", "questionTitleSlug": "pairs-of-songs-with-total-durations-divisible-by-60", "content": "<p>You are given a list of songs where the i<sup>th</sup> song has a duration of <code>time[i]</code> seconds.</p>\n\n<p>Return <em>the number of pairs of songs for which their total duration in seconds is divisible by</em> <code>60</code>. Formally, we want the number of indices <code>i</code>, <code>j</code> such that <code>i &lt; j</code> with <code>(time[i] + time[j]) % 60 == 0</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> time = [30,20,150,100,40]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Three pairs have a total duration divisible by 60:\n(time[0] = 30, time[2] = 150): total duration 180\n(time[1] = 20, time[3] = 100): total duration 120\n(time[1] = 20, time[4] = 40): total duration 60\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> time = [60,60,60]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> All three pairs have a total duration of 120, which is divisible by 60.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= time.length &lt;= 6 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= time[i] &lt;= 500</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"71.9K\", \"totalSubmission\": \"145.1K\", \"totalAcceptedRaw\": 71890, \"totalSubmissionRaw\": 145099, \"acRate\": \"49.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "1058", "name": "minimize-rounding-error-to-meet-target", "content": {"questionId": "1053", "questionFrontendId": "1058", "questionTitle": "Minimize Rounding Error to Meet Target", "questionTitleSlug": "minimize-rounding-error-to-meet-target", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"4K\", \"totalSubmission\": \"9.3K\", \"totalAcceptedRaw\": 4033, \"totalSubmissionRaw\": 9341, \"acRate\": \"43.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1057", "name": "campus-bikes", "content": {"questionId": "1052", "questionFrontendId": "1057", "questionTitle": "Campus Bikes", "questionTitleSlug": "campus-bikes", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"43K\", \"totalSubmission\": \"74.6K\", \"totalAcceptedRaw\": 43011, \"totalSubmissionRaw\": 74646, \"acRate\": \"57.6%\"}", "similarQuestions": "[{\"title\": \"Campus Bikes II\", \"titleSlug\": \"campus-bikes-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "1055", "name": "shortest-way-to-form-string", "content": {"questionId": "1051", "questionFrontendId": "1055", "questionTitle": "Shortest Way to Form String", "questionTitleSlug": "shortest-way-to-form-string", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"39K\", \"totalSubmission\": \"68.3K\", \"totalAcceptedRaw\": 38974, \"totalSubmissionRaw\": 68311, \"acRate\": \"57.1%\"}", "similarQuestions": "[{\"title\": \"Is Subsequence\", \"titleSlug\": \"is-subsequence\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Matching Subsequences\", \"titleSlug\": \"number-of-matching-subsequences\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1008", "name": "construct-binary-search-tree-from-preorder-traversal", "content": {"questionId": "1050", "questionFrontendId": "1008", "questionTitle": "Construct Binary Search Tree from Preorder Traversal", "questionTitleSlug": "construct-binary-search-tree-from-preorder-traversal", "content": "<p>Return the root node of a binary <strong>search</strong> tree that matches the given <code>preorder</code> traversal.</p>\n\n<p><em>(Recall that a binary search tree&nbsp;is a binary tree where for every <font face=\"monospace\">node</font>, any descendant of <code>node.left</code> has a value <code>&lt;</code>&nbsp;<code>node.val</code>, and any descendant of <code>node.right</code> has a value <code>&gt;</code>&nbsp;<code>node.val</code>.&nbsp; Also recall that a preorder traversal&nbsp;displays the value of the&nbsp;<code>node</code> first, then traverses <code>node.left</code>, then traverses <code>node.right</code>.)</em></p>\n\n<p>It&#39;s guaranteed that for the given test cases there is always possible to find a binary search tree with the given requirements.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[8,5,1,7,10,12]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[8,5,10,1,7,null,12]\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/03/06/1266.png\" style=\"height: 200px; width: 306px;\" /></span>\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= preorder.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= preorder[i]&nbsp;&lt;= 10^8</code></li>\n\t<li>The values of <code>preorder</code> are distinct.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"148.1K\", \"totalSubmission\": \"188.2K\", \"totalAcceptedRaw\": 148127, \"totalSubmissionRaw\": 188191, \"acRate\": \"78.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "1007", "name": "minimum-domino-rotations-for-equal-row", "content": {"questionId": "1049", "questionFrontendId": "1007", "questionTitle": "Minimum Domino Rotations For Equal Row", "questionTitleSlug": "minimum-domino-rotations-for-equal-row", "content": "<p>In a row of dominoes, <code>A[i]</code> and <code>B[i]</code> represent the top and bottom halves of the <code>i<sup>th</sup></code> domino.&nbsp; (A domino is a tile with two numbers from 1 to 6 - one on each half of the tile.)</p>\n\n<p>We may rotate the <code>i<sup>th</sup></code> domino, so that <code>A[i]</code> and <code>B[i]</code> swap values.</p>\n\n<p>Return the minimum number of rotations so that all the values in <code>A</code> are the same, or all the values in <code>B</code>&nbsp;are the same.</p>\n\n<p>If it cannot be done, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/03/08/domino.png\" style=\"height: 161px; width: 200px;\" />\n<pre>\n<strong>Input:</strong> A = [2,1,2,4,2,2], B = [5,2,6,2,3,2]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \nThe first figure represents the dominoes as given by A and B: before we do any rotations.\nIf we rotate the second and fourth dominoes, we can make every value in the top row equal to 2, as indicated by the second figure.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> A = [3,5,1,2,3], B = [3,6,3,3,4]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> \nIn this case, it is not possible to rotate the dominoes to make one row of values equal.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= A.length == B.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= A[i], B[i] &lt;= 6</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"112.5K\", \"totalSubmission\": \"220.8K\", \"totalAcceptedRaw\": 112467, \"totalSubmissionRaw\": 220811, \"acRate\": \"50.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1006", "name": "clumsy-factorial", "content": {"questionId": "1048", "questionFrontendId": "1006", "questionTitle": "Clumsy Factorial", "questionTitleSlug": "clumsy-factorial", "content": "<p>Normally, the factorial of a positive integer <code>n</code>&nbsp;is the product of all positive integers less than or equal to <code>n</code>.&nbsp; For example, <code>factorial(10) = 10 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1</code>.</p>\r\n\r\n<p>We instead make a <em>clumsy factorial:</em>&nbsp;using the integers in decreasing order, we&nbsp;swap out the multiply operations for a fixed rotation of operations:&nbsp;multiply (*), divide (/), add (+) and subtract (-) in this order.</p>\r\n\r\n<p>For example, <code>clumsy(10) = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1</code>.&nbsp; However, these operations are still applied using the usual order of operations of arithmetic: we do all multiplication and division steps before any addition or subtraction steps, and multiplication and division steps are processed left to right.</p>\r\n\r\n<p>Additionally, the division that we use is <em>floor division</em>&nbsp;such that&nbsp;<code>10 * 9 / 8</code>&nbsp;equals&nbsp;<code>11</code>.&nbsp; This guarantees the result is&nbsp;an integer.</p>\r\n\r\n<p><code><font face=\"sans-serif, Arial, Verdana, Trebuchet MS\">Implement the&nbsp;</font>clumsy</code>&nbsp;function&nbsp;as defined above: given an integer <code>N</code>, it returns the clumsy factorial of <code>N</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>4\r\n<strong>Output:</strong>&nbsp;7\r\n<strong>Explanation:</strong> 7 = 4 * 3 / 2 + 1\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">10\r\n</span><strong>Output: </strong><span id=\"example-output-1\">12\r\n</span><strong>Explanation: </strong>12 = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= N &lt;= 10000</code></li>\r\n\t<li><code>-2^31 &lt;= answer &lt;= 2^31 - 1</code>&nbsp; (The answer is guaranteed to fit within a 32-bit integer.)</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.3K\", \"totalSubmission\": \"26.7K\", \"totalAcceptedRaw\": 14349, \"totalSubmissionRaw\": 26747, \"acRate\": \"53.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "1004", "name": "max-consecutive-ones-iii", "content": {"questionId": "1046", "questionFrontendId": "1004", "questionTitle": "Max Consecutive Ones III", "questionTitleSlug": "max-consecutive-ones-iii", "content": "<p>Given an array <code>A</code>&nbsp;of 0s and 1s, we may change up to <code>K</code>&nbsp;values from 0 to 1.</p>\r\n\r\n<p>Return the length of the longest (contiguous) subarray that contains only 1s.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[1,1,1,0,0,0,1,1,1,1,0]</span>, K = <span id=\"example-input-1-2\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">6</span>\r\n<strong>Explanation: </strong>\r\n[1,1,1,0,0,<u><strong>1</strong>,1,1,1,1,<strong>1</strong></u>]\r\nBolded numbers were flipped from 0 to 1.  The longest subarray is underlined.</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1]</span>, K = <span id=\"example-input-2-2\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">10</span>\r\n<strong>Explanation: </strong>\r\n[0,0,<u>1,1,<b>1</b>,<strong>1</strong>,1,1,1,<strong>1</strong>,1,1</u>,0,0,0,1,1,1,1]\r\nBolded numbers were flipped from 0 to 1.  The longest subarray is underlined.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span>Note:</span></strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 20000</code></li>\r\n\t<li><code>0 &lt;= K &lt;= A.length</code></li>\r\n\t<li><code>A[i]</code> is <code>0</code> or <code>1</code>&nbsp;</li>\r\n</ol>\r\n</div>\r\n</div>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"80K\", \"totalSubmission\": \"132.6K\", \"totalAcceptedRaw\": 80027, \"totalSubmissionRaw\": 132598, \"acRate\": \"60.4%\"}", "similarQuestions": "[{\"title\": \"Longest Substring with At Most K Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-k-distinct-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Repeating Character Replacement\", \"titleSlug\": \"longest-repeating-character-replacement\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Max Consecutive Ones\", \"titleSlug\": \"max-consecutive-ones\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Max Consecutive Ones II\", \"titleSlug\": \"max-consecutive-ones-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "1003", "name": "check-if-word-is-valid-after-substitutions", "content": {"questionId": "1045", "questionFrontendId": "1003", "questionTitle": "Check If Word Is Valid After Substitutions", "questionTitleSlug": "check-if-word-is-valid-after-substitutions", "content": "<p>Given a string <code>s</code>, determine if it is <strong>valid</strong>.</p>\n\n<p>A string <code>s</code> is <strong>valid</strong> if, starting with an empty string <code>t = &quot;&quot;</code>, you can <strong>transform </strong><code>t</code><strong> into </strong><code>s</code> after performing the following operation <strong>any number of times</strong>:</p>\n\n<ul>\n\t<li>Insert string <code>&quot;abc&quot;</code> into any position in <code>t</code>. More formally, <code>t</code> becomes <code>t<sub>left</sub> + &quot;abc&quot; + t<sub>right</sub></code>, where <code>t == t<sub>left</sub> + t<sub>right</sub></code>. Note that <code>t<sub>left</sub></code> and <code>t<sub>right</sub></code> may be <strong>empty</strong>.</li>\n</ul>\n\n<p>Return <code>true</code> <em>if </em><code>s</code><em> is a <strong>valid</strong> string, otherwise, return</em> <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aabcbc&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong>\n&quot;&quot; -&gt; &quot;<u>abc</u>&quot; -&gt; &quot;a<u>abc</u>bc&quot;\nThus, &quot;aabcbc&quot; is valid.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcabcababcc&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong>\n&quot;&quot; -&gt; &quot;<u>abc</u>&quot; -&gt; &quot;abc<u>abc</u>&quot; -&gt; &quot;abcabc<u>abc</u>&quot; -&gt; &quot;abcabcab<u>abc</u>c&quot;\nThus, &quot;abcabcababcc&quot; is valid.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abccba&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong> It is impossible to get &quot;abccba&quot; using the operation.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;cababc&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong> It is impossible to get &quot;cababc&quot; using the operation.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of letters <code>&#39;a&#39;</code>, <code>&#39;b&#39;</code>, and <code>&#39;c&#39;</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"26K\", \"totalSubmission\": \"46.6K\", \"totalAcceptedRaw\": 26037, \"totalSubmissionRaw\": 46615, \"acRate\": \"55.9%\"}", "similarQuestions": "[{\"title\": \"Valid Parentheses\", \"titleSlug\": \"valid-parentheses\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Stack", "slug": "stack"}]}}, {"id": "998", "name": "maximum-binary-tree-ii", "content": {"questionId": "1040", "questionFrontendId": "998", "questionTitle": "Maximum Binary Tree II", "questionTitleSlug": "maximum-binary-tree-ii", "content": "<p>We are given the <code>root</code>&nbsp;node of a <em>maximum tree:</em> a tree where every node has a value greater than any other value in its subtree.</p>\n\n<p>Just as in the <a href=\"https://leetcode.com/problems/maximum-binary-tree/\">previous problem</a>, the given tree&nbsp;was constructed from an list&nbsp;<code>A</code>&nbsp;(<code>root = Construct(A)</code>) recursively with the following&nbsp;<code>Construct(A)</code> routine:</p>\n\n<ul>\n\t<li>If <code>A</code> is empty, return <code>null</code>.</li>\n\t<li>Otherwise, let <code>A[i]</code> be the largest element of <code>A</code>.&nbsp; Create a <code>root</code> node with value <code>A[i]</code>.</li>\n\t<li>The left child of <code>root</code> will be <code>Construct([A[0], A[1], ..., A[i-1]])</code></li>\n\t<li>The right child of <code>root</code>&nbsp;will be <code>Construct([A[i+1], A[i+2], ..., A[A.length - 1]])</code></li>\n\t<li>Return <code>root</code>.</li>\n</ul>\n\n<p>Note that we were not given A directly, only a root node <code>root = Construct(A)</code>.</p>\n\n<p>Suppose <code>B</code> is a copy of <code>A</code> with the value <code>val</code> appended to it.&nbsp; It is guaranteed that <code>B</code> has unique values.</p>\n\n<p>Return <code>Construct(B)</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/21/maximum-binary-tree-1-1.png\" style=\"width: 159px; height: 160px;\" /><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/21/maximum-binary-tree-1-2.png\" style=\"width: 169px; height: 160px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong>root = <span id=\"example-input-1-1\">[4,1,3,null,null,2]</span>, val = <span id=\"example-input-1-2\">5</span>\n<strong>Output: </strong><span id=\"example-output-1\">[5,4,null,1,3,null,null,2]\n<strong>Explanation:</strong> A = </span><span>[1,4,2,3], B = </span><span>[1,4,2,3,5]</span>\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/21/maximum-binary-tree-2-1.png\" style=\"width: 180px; height: 160px;\" /><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/21/maximum-binary-tree-2-2.png\" style=\"width: 214px; height: 160px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong>root = <span id=\"example-input-2-1\">[5,2,4,null,1]</span>, val = <span id=\"example-input-2-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-2\">[5,2,4,null,1,null,3]\n</span><span id=\"example-output-1\"><strong>Explanation:</strong> A = </span><span>[2,1,5,4], B = </span><span>[2,1,5,4,3]</span>\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/21/maximum-binary-tree-3-1.png\" style=\"width: 180px; height: 160px;\" /><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/21/maximum-binary-tree-3-2.png\" style=\"width: 201px; height: 160px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong>root = <span id=\"example-input-3-1\">[5,2,3,null,1]</span>, val = <span id=\"example-input-3-2\">4</span>\n<strong>Output: </strong><span id=\"example-output-3\">[5,2,4,null,1,3]\n</span><span id=\"example-output-1\"><strong>Explanation:</strong> A = </span><span>[2,1,5,3], B = </span><span>[2,1,5,3,4]</span>\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= B.length &lt;= 100</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"18.8K\", \"totalSubmission\": \"29.5K\", \"totalAcceptedRaw\": 18789, \"totalSubmissionRaw\": 29493, \"acRate\": \"63.7%\"}", "similarQuestions": "[{\"title\": \"Maximum Binary Tree\", \"titleSlug\": \"maximum-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "994", "name": "rotting-oranges", "content": {"questionId": "1036", "questionFrontendId": "994", "questionTitle": "Rotting Oranges", "questionTitleSlug": "rotting-oranges", "content": "<p>In a given grid, each cell can have one of three&nbsp;values:</p>\r\n\r\n<ul>\r\n\t<li>the value <code>0</code> representing an empty cell;</li>\r\n\t<li>the value <code>1</code> representing a fresh orange;</li>\r\n\t<li>the value <code>2</code> representing a rotten orange.</li>\r\n</ul>\r\n\r\n<p>Every minute, any fresh orange that is adjacent (4-directionally) to a rotten orange becomes rotten.</p>\r\n\r\n<p>Return the minimum number of minutes that must elapse until no cell has a fresh orange.&nbsp; If this is impossible, return <code>-1</code> instead.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/16/oranges.png\" style=\"width: 712px; height: 150px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[[2,1,1],[1,1,0],[0,1,1]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">4</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[[2,1,1],[0,1,1],[1,0,1]]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">-1</span>\r\n<strong>Explanation: </strong> The orange in the bottom left corner (row 2, column 0) is never rotten, because rotting only happens 4-directionally.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[[0,2]]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">0</span>\r\n<strong>Explanation: </strong> Since there are already no fresh oranges at minute 0, the answer is just 0.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= grid.length &lt;= 10</code></li>\r\n\t<li><code>1 &lt;= grid[0].length &lt;= 10</code></li>\r\n\t<li><code>grid[i][j]</code> is only <code>0</code>, <code>1</code>, or <code>2</code>.</li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"181.9K\", \"totalSubmission\": \"367.6K\", \"totalAcceptedRaw\": 181913, \"totalSubmissionRaw\": 367625, \"acRate\": \"49.5%\"}", "similarQuestions": "[{\"title\": \"Walls and Gates\", \"titleSlug\": \"walls-and-gates\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "991", "name": "broken-calculator", "content": {"questionId": "1033", "questionFrontendId": "991", "questionTitle": "Broken Calculator", "questionTitleSlug": "broken-calculator", "content": "<p>On a broken calculator that has a number showing on its display, we can perform two operations:</p>\r\n\r\n<ul>\r\n\t<li><strong>Double</strong>: Multiply the number on the display by 2, or;</li>\r\n\t<li><strong>Decrement</strong>: Subtract 1 from the number on the display.</li>\r\n</ul>\r\n\r\n<p>Initially, the calculator is displaying the number <code>X</code>.</p>\r\n\r\n<p>Return the minimum number of operations needed to display the number <code>Y</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>X = <span id=\"example-input-1-1\">2</span>, Y = <span id=\"example-input-1-2\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\r\n<strong>Explanation: </strong>Use double operation and then decrement operation {2 -&gt; 4 -&gt; 3}.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>X = <span id=\"example-input-2-1\">5</span>, Y = <span id=\"example-input-2-2\">8</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">2</span>\r\n<strong>Explanation: </strong>Use decrement and then double {5 -&gt; 4 -&gt; 8}.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>X = <span id=\"example-input-3-1\">3</span>, Y = <span id=\"example-input-3-2\">10</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\r\n<strong>Explanation: </strong> Use double, decrement and double {3 -&gt; 6 -&gt; 5 -&gt; 10}.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>X = <span id=\"example-input-4-1\">1024</span>, Y = <span id=\"example-input-4-2\">1</span>\r\n<strong>Output: </strong><span id=\"example-output-4\">1023</span>\r\n<strong>Explanation: </strong>Use decrement operations 1023 times.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= X &lt;= 10^9</code></li>\r\n\t<li><code>1 &lt;= Y &lt;= 10^9</code></li>\r\n</ol>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"22K\", \"totalSubmission\": \"47.5K\", \"totalAcceptedRaw\": 21973, \"totalSubmissionRaw\": 47478, \"acRate\": \"46.3%\"}", "similarQuestions": "[{\"title\": \"2 Keys Keyboard\", \"titleSlug\": \"2-keys-keyboard\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "990", "name": "satisfiability-of-equality-equations", "content": {"questionId": "1032", "questionFrontendId": "990", "questionTitle": "Satisfiability of Equality Equations", "questionTitleSlug": "satisfiability-of-equality-equations", "content": "<p>Given an array <font face=\"monospace\">equations</font>&nbsp;of strings that represent relationships between variables, each string <code>equations[i]</code>&nbsp;has length <code>4</code> and takes one of two different forms: <code>&quot;a==b&quot;</code> or <code>&quot;a!=b&quot;</code>.&nbsp; Here, <code>a</code> and <code>b</code> are lowercase letters (not necessarily different) that represent one-letter variable names.</p>\r\n\r\n<p>Return <code>true</code>&nbsp;if and only if it is possible to assign integers to variable names&nbsp;so as to satisfy all the given equations.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;a==b&quot;,&quot;b!=a&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">false</span>\r\n<strong>Explanation: </strong>If we assign say, a = 1 and b = 1, then the first equation is satisfied, but not the second.  There is no way to assign the variables to satisfy both equations.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[&quot;b==a&quot;,&quot;a==b&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">true</span>\r\n<strong>Explanation: </strong>We could assign a = 1 and b = 1 to satisfy both equations.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[&quot;a==b&quot;,&quot;b==c&quot;,&quot;a==c&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">true</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-4-1\">[&quot;a==b&quot;,&quot;b!=c&quot;,&quot;c==a&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-4\">false</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-5-1\">[&quot;c==c&quot;,&quot;b==d&quot;,&quot;x!=z&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-5\">true</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= equations.length &lt;= 500</code></li>\r\n\t<li><code>equations[i].length == 4</code></li>\r\n\t<li><code>equations[i][0]</code> and <code>equations[i][3]</code> are lowercase letters</li>\r\n\t<li><code>equations[i][1]</code> is either <code>&#39;=&#39;</code> or <code>&#39;!&#39;</code></li>\r\n\t<li><code>equations[i][2]</code> is&nbsp;<code>&#39;=&#39;</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"24.3K\", \"totalSubmission\": \"52.6K\", \"totalAcceptedRaw\": 24313, \"totalSubmissionRaw\": 52607, \"acRate\": \"46.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Union Find", "slug": "union-find"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "988", "name": "smallest-string-starting-from-leaf", "content": {"questionId": "1030", "questionFrontendId": "988", "questionTitle": "Smallest String Starting From Leaf", "questionTitleSlug": "smallest-string-starting-from-leaf", "content": "<p>Given the <code>root</code> of a binary tree, each node has a value from <code>0</code> to <code>25</code> representing the letters <code>&#39;a&#39;</code> to <code>&#39;z&#39;</code>: a value of <code>0</code> represents <code>&#39;a&#39;</code>, a value of <code>1</code> represents <code>&#39;b&#39;</code>, and so on.</p>\r\n\r\n<p>Find the lexicographically smallest string that starts at a leaf of this tree and ends at the root.</p>\r\n\r\n<p><em>(As a reminder, any shorter prefix of a string is lexicographically smaller: for example, <code>&quot;ab&quot;</code> is lexicographically smaller than <code>&quot;aba&quot;</code>.&nbsp; A leaf of a node is a node that has no children.)</em></p>\r\n\r\n<div>\r\n<div>\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n</div>\r\n</div>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/01/30/tree1.png\" style=\"width: 160px; height: 107px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[0,1,2,3,4,3,4]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">&quot;dba&quot;</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/01/30/tree2.png\" style=\"width: 160px; height: 107px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[25,1,3,1,3,0,2]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">&quot;adz&quot;</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/01/tree3.png\" style=\"height: 170px; width: 172px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[2,2,1,null,1,0,null,0]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">&quot;abc&quot;</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li>The number of nodes in the given tree will be between <code>1</code> and <code>8500</code>.</li>\r\n\t<li>Each node in the tree will have a value between <code>0</code> and <code>25</code>.</li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"32.2K\", \"totalSubmission\": \"69.3K\", \"totalAcceptedRaw\": 32200, \"totalSubmissionRaw\": 69319, \"acRate\": \"46.5%\"}", "similarQuestions": "[{\"title\": \"Sum Root to Leaf Numbers\", \"titleSlug\": \"sum-root-to-leaf-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Paths\", \"titleSlug\": \"binary-tree-paths\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "987", "name": "vertical-order-traversal-of-a-binary-tree", "content": {"questionId": "1029", "questionFrontendId": "987", "questionTitle": "Vertical Order Traversal of a Binary Tree", "questionTitleSlug": "vertical-order-traversal-of-a-binary-tree", "content": "<p>Given a binary tree, return the <em>vertical order</em> traversal of its nodes&nbsp;values.</p>\r\n\r\n<p>For each node at position <code>(X, Y)</code>, its left and right children respectively&nbsp;will be at positions <code>(X-1, Y-1)</code> and <code>(X+1, Y-1)</code>.</p>\r\n\r\n<p>Running a vertical line from <code>X = -infinity</code> to <code>X = +infinity</code>, whenever the vertical line touches some nodes, we report the values of the nodes in order from top to bottom (decreasing <code>Y</code> coordinates).</p>\r\n\r\n<p>If two nodes have the same position, then the value of the node that is reported first is the value that is smaller.</p>\r\n\r\n<p>Return an list&nbsp;of non-empty reports in order of <code>X</code> coordinate.&nbsp; Every report will have a list of values of nodes.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/01/31/1236_example_1.PNG\" style=\"width: 201px; height: 186px;\" /></p>\r\n\r\n<div>\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[3,9,20,null,null,15,7]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[[9],[3,15],[20],[7]]</span>\r\n<strong>Explanation: </strong>\r\nWithout loss of generality, we can assume the root node is at position (0, 0):\r\nThen, the node with value 9 occurs at position (-1, -1);\r\nThe nodes with values 3 and 15 occur at positions (0, 0) and (0, -2);\r\nThe node with value 20 occurs at position (1, -1);\r\nThe node with value 7 occurs at position (2, -2).\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/01/31/tree2.png\" style=\"width: 236px; height: 150px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,2,3,4,5,6,7]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[[4],[2],[1,5,6],[3],[7]]</span>\r\n<strong>Explanation: </strong>\r\nThe node with value 5 and the node with value 6 have the same position according to the given scheme.\r\nHowever, in the report &quot;[1,5,6]&quot;, the node value of 5 comes first since 5 is smaller than 6.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li>The tree will have between <font face=\"monospace\">1</font>&nbsp;and <code>1000</code> nodes.</li>\r\n\t<li>Each node&#39;s value will be between <code>0</code> and <code>1000</code>.</li>\r\n</ol>\r\n</div>\r\n\r\n<div>\r\n<div>&nbsp;</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"107.1K\", \"totalSubmission\": \"286.6K\", \"totalAcceptedRaw\": 107086, \"totalSubmissionRaw\": 286552, \"acRate\": \"37.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "986", "name": "interval-list-intersections", "content": {"questionId": "1028", "questionFrontendId": "986", "questionTitle": "Interval List Intersections", "questionTitleSlug": "interval-list-intersections", "content": "<p>Given two lists&nbsp;of <strong>closed</strong> intervals, each list of intervals is pairwise disjoint and in sorted order.</p>\n\n<p>Return the intersection of these two interval lists.</p>\n\n<p><em>(Formally, a closed interval <code>[a, b]</code> (with <code>a &lt;= b</code>) denotes&nbsp;the set of real numbers <code>x</code> with <code>a &lt;= x &lt;= b</code>.&nbsp; The&nbsp;intersection of two closed intervals is a set of real numbers that is either empty, or can be represented as a closed interval.&nbsp; For example, the intersection of [1, 3] and [2, 4] is [2, 3].)</em></p>\n\n<div>\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/01/30/interval1.png\" style=\"width: 506px; height: 140px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[[0,2],[5,10],[13,23],[24,25]]</span>, B = <span id=\"example-input-1-2\">[[1,5],[8,12],[15,24],[25,26]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[[1,2],[5,5],[8,10],[15,23],[24,24],[25,25]]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt; 1000</code></li>\n\t<li><code>0 &lt;= B.length &lt; 1000</code></li>\n\t<li><code>0 &lt;= A[i].start, A[i].end, B[i].start, B[i].end &lt; 10^9</code></li>\n</ol>\n</div>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"154.2K\", \"totalSubmission\": \"226.9K\", \"totalAcceptedRaw\": 154163, \"totalSubmissionRaw\": 226894, \"acRate\": \"67.9%\"}", "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Merge Sorted Array\", \"titleSlug\": \"merge-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Employee Free Time\", \"titleSlug\": \"employee-free-time\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "984", "name": "string-without-aaa-or-bbb", "content": {"questionId": "1026", "questionFrontendId": "984", "questionTitle": "String Without AAA or BBB", "questionTitleSlug": "string-without-aaa-or-bbb", "content": "<p>Given two integers <code>a</code> and <code>b</code>, return <strong>any</strong> string <code>s</code> such that:</p>\n\n<ul>\n\t<li><code>s</code> has length <code>a + b</code> and contains exactly <code>a</code> <code>&#39;a&#39;</code> letters, and exactly <code>b</code> <code>&#39;b&#39;</code> letters,</li>\n\t<li>The substring <code>&#39;aaa&#39;</code> does not occur in <code>s</code>, and</li>\n\t<li>The substring <code>&#39;bbb&#39;</code> does not occur in <code>s</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = 1, b = 2\n<strong>Output:</strong> &quot;abb&quot;\n<strong>Explanation:</strong> &quot;abb&quot;, &quot;bab&quot; and &quot;bba&quot; are all correct answers.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = 4, b = 1\n<strong>Output:</strong> &quot;aabaa&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= a, b &lt;= 100</code></li>\n\t<li>It is guaranteed such an <code>s</code> exists for the given <code>a</code> and <code>b</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"20.5K\", \"totalSubmission\": \"53.4K\", \"totalAcceptedRaw\": 20473, \"totalSubmissionRaw\": 53371, \"acRate\": \"38.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "983", "name": "minimum-cost-for-tickets", "content": {"questionId": "1025", "questionFrontendId": "983", "questionTitle": "Minimum Cost For Tickets", "questionTitleSlug": "minimum-cost-for-tickets", "content": "<p>In a country popular for train travel, you&nbsp;have planned some train travelling one year in advance.&nbsp; The days of the year that you will travel is given as an array <code>days</code>.&nbsp; Each day is an integer from <code>1</code> to <code>365</code>.</p>\r\n\r\n<p>Train tickets are sold in 3 different ways:</p>\r\n\r\n<ul>\r\n\t<li>a 1-day pass is sold for <code>costs[0]</code> dollars;</li>\r\n\t<li>a 7-day pass is sold for <code>costs[1]</code> dollars;</li>\r\n\t<li>a 30-day pass is sold for <code>costs[2]</code> dollars.</li>\r\n</ul>\r\n\r\n<p>The passes allow that many days of consecutive travel.&nbsp; For example, if we get a 7-day pass on day 2, then we can travel for 7 days: day 2, 3, 4, 5, 6, 7, and 8.</p>\r\n\r\n<p>Return the minimum number of dollars you need to travel every day in the given list of <code>days</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>days = <span id=\"example-input-1-1\">[1,4,6,7,8,20]</span>, costs = <span id=\"example-input-1-2\">[2,7,15]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">11</span>\r\n<strong>Explanation: </strong>\r\nFor example, here is one way to buy passes that lets you travel your travel plan:\r\nOn day 1, you bought a 1-day pass for costs[0] = $2, which covered day 1.\r\nOn day 3, you bought a 7-day pass for costs[1] = $7, which covered days 3, 4, ..., 9.\r\nOn day 20, you bought a 1-day pass for costs[0] = $2, which covered day 20.\r\nIn total you spent $11 and covered all the days of your travel.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>days = <span id=\"example-input-2-1\">[1,2,3,4,5,6,7,8,9,10,30,31]</span>, costs = <span id=\"example-input-2-2\">[2,7,15]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">17</span>\r\n<strong>Explanation: </strong>\r\nFor example, here is one way to buy passes that lets you travel your travel plan:\r\nOn day 1, you bought a 30-day pass for costs[2] = $15 which covered days 1, 2, ..., 30.\r\nOn day 31, you bought a 1-day pass for costs[0] = $2 which covered day 31.\r\nIn total you spent $17 and covered all the days of your travel.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= days.length &lt;= 365</code></li>\r\n\t<li><code>1 &lt;= days[i] &lt;= 365</code></li>\r\n\t<li><code>days</code> is in strictly increasing order.</li>\r\n\t<li><code>costs.length == 3</code></li>\r\n\t<li><code>1 &lt;= costs[i] &lt;= 1000</code></li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"86K\", \"totalSubmission\": \"137.5K\", \"totalAcceptedRaw\": 86031, \"totalSubmissionRaw\": 137505, \"acRate\": \"62.6%\"}", "similarQuestions": "[{\"title\": \"Coin Change\", \"titleSlug\": \"coin-change\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "981", "name": "time-based-key-value-store", "content": {"questionId": "1023", "questionFrontendId": "981", "questionTitle": "Time Based Key-Value Store", "questionTitleSlug": "time-based-key-value-store", "content": "<p>Create a timebased key-value store class&nbsp;<code>TimeMap</code>, that supports two operations.</p>\r\n\r\n<p>1. <code>set(string key, string value, int timestamp)</code></p>\r\n\r\n<ul>\r\n\t<li>Stores the <code>key</code> and <code>value</code>, along with the given <code>timestamp</code>.</li>\r\n</ul>\r\n\r\n<p>2. <code>get(string key, int timestamp)</code></p>\r\n\r\n<ul>\r\n\t<li>Returns a value such that <code>set(key, value, timestamp_prev)</code> was called previously, with <code>timestamp_prev &lt;= timestamp</code>.</li>\r\n\t<li>If there are multiple such values, it returns the one with the largest <code>timestamp_prev</code>.</li>\r\n\t<li>If there are no values, it returns the empty string (<code>&quot;&quot;</code>).</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>inputs = <span id=\"example-input-1-1\">[&quot;TimeMap&quot;,&quot;set&quot;,&quot;get&quot;,&quot;get&quot;,&quot;set&quot;,&quot;get&quot;,&quot;get&quot;]</span>, inputs = <span id=\"example-input-1-2\">[[],[&quot;foo&quot;,&quot;bar&quot;,1],[&quot;foo&quot;,1],[&quot;foo&quot;,3],[&quot;foo&quot;,&quot;bar2&quot;,4],[&quot;foo&quot;,4],[&quot;foo&quot;,5]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[null,null,&quot;bar&quot;,&quot;bar&quot;,null,&quot;bar2&quot;,&quot;bar2&quot;]</span>\r\n<strong>Explanation: </strong><span id=\"example-output-1\">&nbsp; \r\nTimeMap kv; &nbsp; \r\nkv.set(&quot;foo&quot;, &quot;bar&quot;, 1); // store the key &quot;foo&quot; and value &quot;bar&quot; along with timestamp = 1 &nbsp; \r\nkv.get(&quot;foo&quot;, 1);  // output &quot;bar&quot; &nbsp; \r\nkv.get(&quot;foo&quot;, 3); // output &quot;bar&quot; since there is no value corresponding to foo at timestamp 3 and timestamp 2, then the only value is at timestamp 1 ie &quot;bar&quot; &nbsp; \r\nkv.set(&quot;foo&quot;, &quot;bar2&quot;, 4); &nbsp; \r\nkv.get(&quot;foo&quot;, 4); // output &quot;bar2&quot; &nbsp; \r\nkv.get(&quot;foo&quot;, 5); //output &quot;bar2&quot; &nbsp; \r\n</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>inputs = <span id=\"example-input-2-1\">[&quot;TimeMap&quot;,&quot;set&quot;,&quot;set&quot;,&quot;get&quot;,&quot;get&quot;,&quot;get&quot;,&quot;get&quot;,&quot;get&quot;]</span>, inputs = <span id=\"example-input-2-2\">[[],[&quot;love&quot;,&quot;high&quot;,10],[&quot;love&quot;,&quot;low&quot;,20],[&quot;love&quot;,5],[&quot;love&quot;,10],[&quot;love&quot;,15],[&quot;love&quot;,20],[&quot;love&quot;,25]]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[null,null,null,&quot;&quot;,&quot;high&quot;,&quot;high&quot;,&quot;low&quot;,&quot;low&quot;]</span>\r\n</pre>\r\n</div>\r\n</div>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li>All key/value strings are lowercase.</li>\r\n\t<li>All key/value strings have&nbsp;length in the range&nbsp;<code>[1, 100]</code></li>\r\n\t<li>The <code>timestamps</code> for all <code>TimeMap.set</code> operations are strictly increasing.</li>\r\n\t<li><code>1 &lt;= timestamp &lt;= 10^7</code></li>\r\n\t<li><code>TimeMap.set</code> and <code>TimeMap.get</code>&nbsp;functions will be called a total of <code>120000</code> times (combined) per test case.</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"86.4K\", \"totalSubmission\": \"160.5K\", \"totalAcceptedRaw\": 86374, \"totalSubmissionRaw\": 160481, \"acRate\": \"53.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "979", "name": "distribute-coins-in-binary-tree", "content": {"questionId": "1021", "questionFrontendId": "979", "questionTitle": "Distribute Coins in Binary Tree", "questionTitleSlug": "distribute-coins-in-binary-tree", "content": "<p>You are given the <code>root</code> of a binary tree with <code>n</code> nodes where each <code>node</code> in the tree has <code>node.val</code> coins and there are <code>n</code> coins total.</p>\n\n<p>In one move, we may choose two adjacent nodes and move one coin from one node to another. (A move may be from parent to child, or from child to parent.)</p>\n\n<p>Return the number of moves required to make every node have exactly one coin.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/01/18/tree1.png\" style=\"width: 150px; height: 142px;\" />\n<pre>\n<strong>Input:</strong> root = [3,0,0]\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>From the root of the tree, we move one coin to its left child, and one coin to its right child.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/01/18/tree2.png\" style=\"width: 150px; height: 142px;\" />\n<pre>\n<strong>Input:</strong> root = [0,3,0]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>From the left child of the root, we move two coins to the root [taking two moves].  Then, we move one coin from the root of the tree to the right child.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/01/18/tree3.png\" style=\"width: 150px; height: 142px;\" />\n<pre>\n<strong>Input:</strong> root = [1,0,2]\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong>Example 4:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/01/18/tree4.png\" style=\"width: 155px; height: 156px;\" />\n<pre>\n<strong>Input:</strong> root = [1,0,0,null,3]\n<strong>Output:</strong> 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is <code>n</code>.</li>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>0 &lt;= Node.val &lt;= n</code></li>\n\t<li>The sum of <code>Node.val</code> is <code>n</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"50.8K\", \"totalSubmission\": \"73.3K\", \"totalAcceptedRaw\": 50790, \"totalSubmissionRaw\": 73256, \"acRate\": \"69.3%\"}", "similarQuestions": "[{\"title\": \"Sum of Distances in Tree\", \"titleSlug\": \"sum-of-distances-in-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Cameras\", \"titleSlug\": \"binary-tree-cameras\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "978", "name": "longest-turbulent-subarray", "content": {"questionId": "1020", "questionFrontendId": "978", "questionTitle": "Longest Turbulent Subarray", "questionTitleSlug": "longest-turbulent-subarray", "content": "<p>Given an integer array <code>arr</code>, return <em>the length of a maximum size turbulent subarray of</em> <code>arr</code>.</p>\n\n<p>A subarray is <strong>turbulent</strong> if the comparison sign flips between each adjacent pair of elements in the subarray.</p>\n\n<p>More formally, a subarray <code>[arr[i], arr[i + 1], ..., arr[j]]</code> of <code>arr</code> is said to be turbulent if and only if:</p>\n\n<ul>\n\t<li>For <code>i &lt;= k &lt; j</code>:\n\n\t<ul>\n\t\t<li><code>arr[k] &gt; arr[k + 1]</code> when <code>k</code> is odd, and</li>\n\t\t<li><code>arr[k] &lt; arr[k + 1]</code> when <code>k</code> is even.</li>\n\t</ul>\n\t</li>\n\t<li>Or, for <code>i &lt;= k &lt; j</code>:\n\t<ul>\n\t\t<li><code>arr[k] &gt; arr[k + 1]</code> when <code>k</code> is even, and</li>\n\t\t<li><code>arr[k] &lt; arr[k + 1]</code> when <code>k</code> is odd.</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [9,4,2,10,7,8,8,1,9]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> arr[1] &gt; arr[2] &lt; arr[3] &gt; arr[4] &lt; arr[5]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [4,8,12,16]\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [100]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 4 * 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= arr[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"35K\", \"totalSubmission\": \"75K\", \"totalAcceptedRaw\": 34961, \"totalSubmissionRaw\": 75003, \"acRate\": \"46.6%\"}", "similarQuestions": "[{\"title\": \"Maximum Subarray\", \"titleSlug\": \"maximum-subarray\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "974", "name": "subarray-sums-divisible-by-k", "content": {"questionId": "1016", "questionFrontendId": "974", "questionTitle": "Subarray Sums Divisible by K", "questionTitleSlug": "subarray-sums-divisible-by-k", "content": "<p>Given an array <code>A</code> of integers, return the number of (contiguous, non-empty) subarrays that have a sum divisible by <code>K</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[4,5,0,-2,-3,1]</span>, K = <span id=\"example-input-1-2\">5</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">7</span>\r\n<strong>Explanation: </strong>There are 7 subarrays with a sum divisible by K = 5:\r\n[4, 5, 0, -2, -3, 1], [5], [5, 0], [5, 0, -2, -3], [0], [0, -2, -3], [-2, -3]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 30000</code></li>\r\n\t<li><code>-10000 &lt;= A[i] &lt;= 10000</code></li>\r\n\t<li><code>2 &lt;= K &lt;= 10000</code></li>\r\n</ol>\r\n</div>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"48.5K\", \"totalSubmission\": \"96.4K\", \"totalAcceptedRaw\": 48498, \"totalSubmissionRaw\": 96429, \"acRate\": \"50.3%\"}", "similarQuestions": "[{\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Make Sum Divisible by P\", \"titleSlug\": \"make-sum-divisible-by-p\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Hash Table", "slug": "hash-table"}]}}, {"id": "973", "name": "k-closest-points-to-origin", "content": {"questionId": "1014", "questionFrontendId": "973", "questionTitle": "K Closest Points to Origin", "questionTitleSlug": "k-closest-points-to-origin", "content": "<p>We have a list of <code>points</code>&nbsp;on the plane.&nbsp; Find the <code>K</code> closest points to the origin <code>(0, 0)</code>.</p>\r\n\r\n<p>(Here, the distance between two points on a plane is the Euclidean distance.)</p>\r\n\r\n<p>You may return the answer in any order.&nbsp; The&nbsp;answer is guaranteed to be unique (except for the order that it is in.)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>points = <span id=\"example-input-1-1\">[[1,3],[-2,2]]</span>, K = <span id=\"example-input-1-2\">1</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[[-2,2]]</span>\r\n<strong>Explanation: </strong>\r\nThe distance between (1, 3) and the origin is sqrt(10).\r\nThe distance between (-2, 2) and the origin is sqrt(8).\r\nSince sqrt(8) &lt; sqrt(10), (-2, 2) is closer to the origin.\r\nWe only want the closest K = 1 points from the origin, so the answer is just [[-2,2]].\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>points = <span id=\"example-input-2-1\">[[3,3],[5,-1],[-2,4]]</span>, K = <span id=\"example-input-2-2\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[[3,3],[-2,4]]</span>\r\n(The answer [[-2,4],[3,3]] would also be accepted.)\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= K &lt;= points.length &lt;= 10000</code></li>\r\n\t<li><code>-10000 &lt; points[i][0] &lt; 10000</code></li>\r\n\t<li><code>-10000 &lt; points[i][1] &lt; 10000</code></li>\r\n</ol>\r\n</div>\r\n</div>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"386K\", \"totalSubmission\": \"599.4K\", \"totalAcceptedRaw\": 386005, \"totalSubmissionRaw\": 599391, \"acRate\": \"64.4%\"}", "similarQuestions": "[{\"title\": \"Kth Largest Element in an Array\", \"titleSlug\": \"kth-largest-element-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Top K Frequent Elements\", \"titleSlug\": \"top-k-frequent-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Top K Frequent Words\", \"titleSlug\": \"top-k-frequent-words\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Divide and Conquer", "slug": "divide-and-conquer"}, {"name": "Heap", "slug": "heap"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "971", "name": "flip-binary-tree-to-match-preorder-traversal", "content": {"questionId": "1011", "questionFrontendId": "971", "questionTitle": "Flip Binary Tree To Match Preorder Traversal", "questionTitleSlug": "flip-binary-tree-to-match-preorder-traversal", "content": "<p>Given a binary tree with <code>N</code> nodes, each node has a different value from&nbsp;<code>{1, ..., N}</code>.</p>\r\n\r\n<p>A node in this binary tree can be <em>flipped</em>&nbsp;by swapping the left child and the right child of that node.</p>\r\n\r\n<p>Consider the sequence of&nbsp;<code>N</code> values reported by a preorder traversal starting from the root.&nbsp; Call such a sequence of <code>N</code> values the&nbsp;<em>voyage</em>&nbsp;of the tree.</p>\r\n\r\n<p>(Recall that a <em>preorder traversal</em>&nbsp;of a node means we report the current node&#39;s value, then preorder-traverse the left child, then preorder-traverse the right child.)</p>\r\n\r\n<p>Our goal is to flip the <strong>least number</strong> of nodes in the tree so that the voyage of the tree matches the <code>voyage</code> we are given.</p>\r\n\r\n<p>If we can do so, then return a&nbsp;list&nbsp;of the values of all nodes flipped.&nbsp; You may return the answer in any order.</p>\r\n\r\n<p>If we cannot do so, then return the list <code>[-1]</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/01/02/1219-01.png\" style=\"width: 88px; height: 120px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>root = <span id=\"example-input-1-1\">[1,2]</span>, voyage = <span id=\"example-input-1-2\">[2,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[-1]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/01/02/1219-02.png\" style=\"width: 127px; height: 120px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>root = <span id=\"example-input-2-1\">[1,2,3]</span>, voyage = <span id=\"example-input-2-2\">[1,3,2]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[1]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/01/02/1219-02.png\" style=\"width: 127px; height: 120px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>root = <span id=\"example-input-3-1\">[1,2,3]</span>, voyage = <span id=\"example-input-3-2\">[1,2,3]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">[]</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span>Note:</span></strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= N &lt;= 100</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.6K\", \"totalSubmission\": \"31.6K\", \"totalAcceptedRaw\": 14566, \"totalSubmissionRaw\": 31578, \"acRate\": \"46.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "969", "name": "pancake-sorting", "content": {"questionId": "1009", "questionFrontendId": "969", "questionTitle": "Pancake Sorting", "questionTitleSlug": "pancake-sorting", "content": "<p>Given an array of integers&nbsp;<code>arr</code>, sort the array by performing a series of <strong>pancake flips</strong>.</p>\n\n<p>In one pancake flip we do the following steps:</p>\n\n<ul>\n\t<li>Choose an integer <code>k</code> where <code>1 &lt;= k &lt;= arr.length</code>.</li>\n\t<li>Reverse the sub-array <code>arr[1...k]</code>.</li>\n</ul>\n\n<p>For example, if <code>arr = [3,2,1,4]</code> and we performed a pancake flip choosing <code>k = 3</code>, we reverse the sub-array <code>[3,2,1]</code>, so <code>arr = [<strong>1,2,3</strong>,4]</code> after the pancake flip at <code>k = 3</code>.</p>\n\n<p>Return <em>the <code>k</code>-values corresponding to a sequence of pancake flips that sort <code>arr</code></em>.&nbsp;Any valid answer that sorts the array within <code>10 * arr.length</code> flips will be judged as correct.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [3,2,4,1]\n<strong>Output:</strong> [4,2,4,3]\n<strong>Explanation: </strong>\nWe perform 4 pancake flips, with k values 4, 2, 4, and 3.\nStarting state: arr = [3, 2, 4, 1]\nAfter 1st flip (k = 4): arr = [<strong>1, 4, 2, 3</strong>]\nAfter 2nd flip (k = 2): arr = [<strong>4, 1</strong>, 2, 3]\nAfter 3rd flip (k = 4): arr = [<strong>3, 2, 1, 4</strong>]\nAfter 4th flip (k = 3): arr = [<strong>1, 2, 3</strong>, 4], which is sorted.\nNotice that we return an array of the chosen k values of the pancake flips.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,3]\n<strong>Output:</strong> []\n<strong>Explanation: </strong>The input is already sorted, so there is no need to flip anything.\nNote that other answers, such as [3, 3], would also be accepted.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= arr[i] &lt;= arr.length</code></li>\n\t<li>All integers in <code>arr</code> are unique (i.e. <code>arr</code> is a permutation of the integers from <code>1</code> to <code>arr.length</code>).</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"53.3K\", \"totalSubmission\": \"77.8K\", \"totalAcceptedRaw\": 53254, \"totalSubmissionRaw\": 77820, \"acRate\": \"68.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "967", "name": "numbers-with-same-consecutive-differences", "content": {"questionId": "1007", "questionFrontendId": "967", "questionTitle": "Numbers With Same Consecutive Differences", "questionTitleSlug": "numbers-with-same-consecutive-differences", "content": "<p>Return all <strong>non-negative</strong> integers of length <code>n</code> such that the absolute difference between every two consecutive digits is <code>k</code>.</p>\n\n<p>Note that <strong>every</strong> number in the answer <strong>must not</strong> have leading zeros. For example, <code>01</code> has one leading zero and is invalid.</p>\n\n<p>You may return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3, k = 7\n<strong>Output:</strong> [181,292,707,818,929]\n<strong>Explanation: </strong>Note that 070 is not a valid number, because it has leading zeroes.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, k = 1\n<strong>Output:</strong> [10,12,21,23,32,34,43,45,54,56,65,67,76,78,87,89,98]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, k = 0\n<strong>Output:</strong> [11,22,33,44,55,66,77,88,99]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, k = 1\n<strong>Output:</strong> [10,12,21,23,32,34,43,45,54,56,65,67,76,78,87,89,98]\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, k = 2\n<strong>Output:</strong> [13,20,24,31,35,42,46,53,57,64,68,75,79,86,97]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 9</code></li>\n\t<li><code>0 &lt;= k &lt;= 9</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"39.9K\", \"totalSubmission\": \"90.1K\", \"totalAcceptedRaw\": 39862, \"totalSubmissionRaw\": 90099, \"acRate\": \"44.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}, {"name": "Recursion", "slug": "recursion"}]}}, {"id": "966", "name": "vowel-spellchecker", "content": {"questionId": "1006", "questionFrontendId": "966", "questionTitle": "Vowel Spellchecker", "questionTitleSlug": "vowel-spellchecker", "content": "<p>Given a&nbsp;<code>wordlist</code>, we want to implement a spellchecker that converts a query word into a correct word.</p>\r\n\r\n<p>For a given <code>query</code> word, the spell checker handles two categories of spelling mistakes:</p>\r\n\r\n<ul>\r\n\t<li>Capitalization: If the query matches a word in the wordlist (<strong>case-insensitive</strong>), then the query word is returned with the same case as the case in the wordlist.\r\n\r\n\t<ul>\r\n\t\t<li>Example: <code>wordlist = [&quot;yellow&quot;]</code>, <code>query = &quot;YellOw&quot;</code>: <code>correct = &quot;yellow&quot;</code></li>\r\n\t\t<li>Example: <code>wordlist = [&quot;Yellow&quot;]</code>, <code>query = &quot;yellow&quot;</code>: <code>correct = &quot;Yellow&quot;</code></li>\r\n\t\t<li>Example: <code>wordlist = [&quot;yellow&quot;]</code>, <code>query = &quot;yellow&quot;</code>: <code>correct = &quot;yellow&quot;</code></li>\r\n\t</ul>\r\n\t</li>\r\n\t<li>Vowel Errors: If after replacing the vowels (&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;) of the query word with any vowel individually, it matches a word in the wordlist (<strong>case-insensitive</strong>), then the query word is returned with the same case as the match in the wordlist.\r\n\t<ul>\r\n\t\t<li>Example: <code>wordlist = [&quot;YellOw&quot;]</code>, <code>query = &quot;yollow&quot;</code>: <code>correct = &quot;YellOw&quot;</code></li>\r\n\t\t<li>Example: <code>wordlist = [&quot;YellOw&quot;]</code>, <code>query = &quot;yeellow&quot;</code>: <code>correct = &quot;&quot;</code> (no match)</li>\r\n\t\t<li>Example: <code>wordlist = [&quot;YellOw&quot;]</code>, <code>query = &quot;yllw&quot;</code>: <code>correct = &quot;&quot;</code> (no match)</li>\r\n\t</ul>\r\n\t</li>\r\n</ul>\r\n\r\n<p>In addition, the spell checker operates under the following precedence rules:</p>\r\n\r\n<ul>\r\n\t<li>When the query exactly matches a word in the wordlist (<strong>case-sensitive</strong>), you should return the same word back.</li>\r\n\t<li>When the query matches a word up to capitlization, you should return the first such match in the wordlist.</li>\r\n\t<li>When the query matches a word up to vowel errors, you should return the first such match in the wordlist.</li>\r\n\t<li>If the query has no matches in the wordlist, you should return the empty string.</li>\r\n</ul>\r\n\r\n<p>Given some <code>queries</code>, return a&nbsp;list of words <code>answer</code>, where <code>answer[i]</code>&nbsp;is&nbsp;the correct word for <code>query = queries[i]</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>wordlist = <span id=\"example-input-1-1\">[&quot;KiTe&quot;,&quot;kite&quot;,&quot;hare&quot;,&quot;Hare&quot;]</span>, queries = <span id=\"example-input-1-2\">[&quot;kite&quot;,&quot;Kite&quot;,&quot;KiTe&quot;,&quot;Hare&quot;,&quot;HARE&quot;,&quot;Hear&quot;,&quot;hear&quot;,&quot;keti&quot;,&quot;keet&quot;,&quot;keto&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[&quot;kite&quot;,&quot;KiTe&quot;,&quot;KiTe&quot;,&quot;Hare&quot;,&quot;hare&quot;,&quot;&quot;,&quot;&quot;,&quot;KiTe&quot;,&quot;&quot;,&quot;KiTe&quot;]</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= wordlist.length &lt;= 5000</code></li>\r\n\t<li><code>1 &lt;= queries.length &lt;= 5000</code></li>\r\n\t<li><code>1 &lt;= wordlist[i].length &lt;= 7</code></li>\r\n\t<li><code>1 &lt;= queries[i].length &lt;= 7</code></li>\r\n\t<li>All strings in <code>wordlist</code> and <code>queries</code> consist only of <strong>english</strong>&nbsp;letters.</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13.8K\", \"totalSubmission\": \"28.9K\", \"totalAcceptedRaw\": 13785, \"totalSubmissionRaw\": 28917, \"acRate\": \"47.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "String", "slug": "string"}]}}, {"id": "963", "name": "minimum-area-rectangle-ii", "content": {"questionId": "1003", "questionFrontendId": "963", "questionTitle": "Minimum Area Rectangle II", "questionTitleSlug": "minimum-area-rectangle-ii", "content": "<p>Given a set of points in the xy-plane, determine the minimum area of <strong>any</strong> rectangle formed from these points, with sides <strong>not necessarily parallel</strong> to the x and y axes.</p>\r\n\r\n<p>If there isn&#39;t any rectangle, return 0.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/21/1a.png\" style=\"width: 150px; height: 151px;\" /></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[[1,2],[2,1],[1,0],[0,1]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">2.00000\r\n<strong>Explanation:</strong> </span><span>The minimum area rectangle occurs at [1,2],[2,1],[1,0],[0,1], with an area of 2.</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/22/2.png\" style=\"width: 150px; height: 94px;\" /></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[[0,1],[2,1],[1,1],[1,0],[2,0]]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">1.00000\r\n</span><strong>Explanation:</strong> The minimum area rectangle occurs at [1,0],[1,1],[2,1],[2,0], with an area of 1.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/22/3.png\" style=\"width: 160px; height: 167px;\" /></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[[0,3],[1,2],[3,1],[1,3],[2,1]]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">0\r\n</span><span><strong>Explanation:</strong> There is no possible rectangle to form from these points.</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/21/4c.png\" style=\"width: 160px; height: 155px;\" /></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-4-1\">[[3,1],[1,1],[0,1],[2,1],[3,3],[3,2],[0,2],[2,3]]</span>\r\n<strong>Output: </strong><span id=\"example-output-4\">2.00000\r\n</span><span><strong>Explanation:</strong> The minimum area rectangle occurs at [2,1],[2,3],[3,3],[3,1], with an area of 2.</span>\r\n</pre>\r\n</div>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= points.length &lt;= 50</code></li>\r\n\t<li><code>0 &lt;=&nbsp;points[i][0] &lt;=&nbsp;40000</code></li>\r\n\t<li><code>0 &lt;=&nbsp;points[i][1] &lt;=&nbsp;40000</code></li>\r\n\t<li>All points are distinct.</li>\r\n\t<li>Answers within <code>10^-5</code> of the actual value will be accepted as correct.</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14K\", \"totalSubmission\": \"27.1K\", \"totalAcceptedRaw\": 13981, \"totalSubmissionRaw\": 27111, \"acRate\": \"51.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Geometry", "slug": "geometry"}]}}, {"id": "962", "name": "maximum-width-ramp", "content": {"questionId": "1002", "questionFrontendId": "962", "questionTitle": "Maximum Width Ramp", "questionTitleSlug": "maximum-width-ramp", "content": "<p>Given an array <code>A</code> of integers, a <em>ramp</em>&nbsp;is a tuple <code>(i, j)</code> for which <code>i &lt; j</code>&nbsp;and&nbsp;<code>A[i] &lt;= A[j]</code>.&nbsp; The width of such a&nbsp;ramp is <code>j - i</code>.</p>\r\n\r\n<p>Find the maximum width of a ramp in <code>A</code>.&nbsp; If one doesn&#39;t exist, return 0.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[6,0,8,2,1,5]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">4</span>\r\n<strong>Explanation: </strong>\r\nThe maximum width ramp is achieved at (i, j) = (1, 5): A[1] = 0 and A[5] = 5.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[9,8,1,0,1,9,4,0,4,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">7</span>\r\n<strong>Explanation: </strong>\r\nThe maximum width ramp is achieved at (i, j) = (2, 9): A[2] = 1 and A[9] = 1.\r\n</pre>\r\n</div>\r\n\r\n<div>\r\n<div>\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>2 &lt;= A.length &lt;= 50000</code></li>\r\n\t<li><code>0 &lt;= A[i] &lt;= 50000</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n\r\n<div>\r\n<div>&nbsp;</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"22.5K\", \"totalSubmission\": \"48.8K\", \"totalAcceptedRaw\": 22457, \"totalSubmissionRaw\": 48798, \"acRate\": \"46.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "959", "name": "regions-cut-by-slashes", "content": {"questionId": "999", "questionFrontendId": "959", "questionTitle": "Regions Cut By Slashes", "questionTitleSlug": "regions-cut-by-slashes", "content": "<p>In a N x N&nbsp;<code>grid</code> composed of 1 x 1 squares, each 1 x 1 square consists of a <code>/</code>, <code>\\</code>, or blank space.&nbsp; These characters divide the square into contiguous regions.</p>\r\n\r\n<p>(Note that backslash characters are escaped, so a <code>\\</code>&nbsp;is represented as <code>&quot;\\\\&quot;</code>.)</p>\r\n\r\n<p>Return the number of regions.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<ol>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:\r\n</strong><span id=\"example-input-1-1\">[\r\n&nbsp; &quot; /&quot;,\r\n&nbsp; &quot;/ &quot;\r\n]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\r\n<strong>Explanation: </strong>The 2x2 grid is as follows:\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/15/1.png\" style=\"width: 82px; height: 82px;\" />\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:\r\n</strong><span id=\"example-input-2-1\">[\r\n&nbsp; &quot; /&quot;,\r\n&nbsp; &quot;  &quot;\r\n]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">1</span>\r\n<strong>Explanation: </strong>The 2x2 grid is as follows:\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/15/2.png\" style=\"width: 82px; height: 82px;\" />\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:\r\n</strong><span id=\"example-input-3-1\">[\r\n&nbsp; &quot;\\\\/&quot;,\r\n&nbsp; &quot;/\\\\&quot;\r\n]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">4</span>\r\n<strong>Explanation: </strong>(Recall that because \\ characters are escaped, &quot;\\\\/&quot; refers to \\/, and &quot;/\\\\&quot; refers to /\\.)\r\nThe 2x2 grid is as follows:\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/15/3.png\" style=\"width: 82px; height: 82px;\" />\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:\r\n</strong><span id=\"example-input-4-1\">[\r\n&nbsp; &quot;/\\\\&quot;,\r\n&nbsp; &quot;\\\\/&quot;\r\n]</span>\r\n<strong>Output: </strong><span id=\"example-output-4\">5</span>\r\n<strong>Explanation: </strong>(Recall that because \\ characters are escaped, &quot;/\\\\&quot; refers to /\\, and &quot;\\\\/&quot; refers to \\/.)\r\nThe 2x2 grid is as follows:\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/15/4.png\" style=\"width: 82px; height: 82px;\" />\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:\r\n</strong><span id=\"example-input-5-1\">[\r\n&nbsp; &quot;//&quot;,\r\n&nbsp; &quot;/ &quot;\r\n]</span>\r\n<strong>Output: </strong><span id=\"example-output-5\">3</span>\r\n<strong>Explanation: </strong>The 2x2 grid is as follows:\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/15/5.png\" style=\"width: 82px; height: 82px;\" />\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= grid.length == grid[0].length &lt;= 30</code></li>\r\n\t<li><code>grid[i][j]</code> is either <code>&#39;/&#39;</code>, <code>&#39;\\&#39;</code>, or <code>&#39; &#39;</code>.</li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23.5K\", \"totalSubmission\": \"35.2K\", \"totalAcceptedRaw\": 23484, \"totalSubmissionRaw\": 35211, \"acRate\": \"66.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Union Find", "slug": "union-find"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "958", "name": "check-completeness-of-a-binary-tree", "content": {"questionId": "998", "questionFrontendId": "958", "questionTitle": "Check Completeness of a Binary Tree", "questionTitleSlug": "check-completeness-of-a-binary-tree", "content": "<p>Given the <code>root</code> of a binary tree, determine if it is a <em>complete binary tree</em>.</p>\n\n<p>In a <strong><a href=\"http://en.wikipedia.org/wiki/Binary_tree#Types_of_binary_trees\" target=\"_blank\">complete binary tree</a></strong>, every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between <code>1</code> and <code>2<sup>h</sup></code> nodes inclusive at the last level <code>h</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/15/complete-binary-tree-1.png\" style=\"width: 180px; height: 145px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,5,6]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Every level before the last is full (ie. levels with node-values {1} and {2, 3}), and all nodes in the last level ({4, 5, 6}) are as far left as possible.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/15/complete-binary-tree-2.png\" style=\"width: 200px; height: 145px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,5,null,7]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The node with value 7 isn&#39;t as far left as possible.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 100]</code>.</li>\n\t<li><code>1 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"69K\", \"totalSubmission\": \"131.7K\", \"totalAcceptedRaw\": 69014, \"totalSubmissionRaw\": 131736, \"acRate\": \"52.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "957", "name": "prison-cells-after-n-days", "content": {"questionId": "994", "questionFrontendId": "957", "questionTitle": "Prison Cells After N Days", "questionTitleSlug": "prison-cells-after-n-days", "content": "<p>There are 8 prison cells in a row, and each cell is either occupied or vacant.</p>\r\n\r\n<p>Each day, whether the cell is occupied or vacant changes according to the following rules:</p>\r\n\r\n<ul>\r\n\t<li>If a cell has two adjacent neighbors that are both occupied or both vacant,&nbsp;then the cell becomes occupied.</li>\r\n\t<li>Otherwise, it becomes vacant.</li>\r\n</ul>\r\n\r\n<p>(Note that because the prison is a row, the first and the last cells in the row can&#39;t have two adjacent neighbors.)</p>\r\n\r\n<p>We describe the current state of the prison&nbsp;in the following way:&nbsp;<code>cells[i] == 1</code> if the <code>i</code>-th cell is occupied, else <code>cells[i] == 0</code>.</p>\r\n\r\n<p>Given the initial state of the prison, return the state of the prison after <code>N</code> days (and <code>N</code> such changes described above.)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<ol>\r\n</ol>\r\n</div>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>cells = <span id=\"example-input-1-1\">[0,1,0,1,1,0,0,1]</span>, N = <span id=\"example-input-1-2\">7</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[0,0,1,1,0,0,0,0]</span>\r\n<strong>Explanation: \r\n</strong><span id=\"example-output-1\">The following table summarizes the state of the prison on each day:\r\nDay 0: [0, 1, 0, 1, 1, 0, 0, 1]\r\nDay 1: [0, 1, 1, 0, 0, 0, 0, 0]\r\nDay 2: [0, 0, 0, 0, 1, 1, 1, 0]\r\nDay 3: [0, 1, 1, 0, 0, 1, 0, 0]\r\nDay 4: [0, 0, 0, 0, 0, 1, 0, 0]\r\nDay 5: [0, 1, 1, 1, 0, 1, 0, 0]\r\nDay 6: [0, 0, 1, 0, 1, 1, 0, 0]\r\nDay 7: [0, 0, 1, 1, 0, 0, 0, 0]</span>\r\n\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>cells = <span id=\"example-input-2-1\">[1,0,0,1,0,0,1,0]</span>, N = <span id=\"example-input-2-2\">1000000000</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[0,0,1,1,1,1,1,0]</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>cells.length == 8</code></li>\r\n\t<li><code>cells[i]</code> is in <code>{0, 1}</code></li>\r\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"108.6K\", \"totalSubmission\": \"270.1K\", \"totalAcceptedRaw\": 108626, \"totalSubmissionRaw\": 270134, \"acRate\": \"40.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}]}}, {"id": "955", "name": "delete-columns-to-make-sorted-ii", "content": {"questionId": "992", "questionFrontendId": "955", "questionTitle": "Delete Columns to Make Sorted II", "questionTitleSlug": "delete-columns-to-make-sorted-ii", "content": "<p>We are given an array&nbsp;<code>A</code> of <code>N</code> lowercase letter strings, all of the same length.</p>\r\n\r\n<p>Now, we may choose any set of deletion indices, and for each string, we delete all the characters in those indices.</p>\r\n\r\n<p>For example, if we have an array <code>A = [&quot;abcdef&quot;,&quot;uvwxyz&quot;]</code> and deletion indices <code>{0, 2, 3}</code>, then the final array after deletions is <code>[&quot;bef&quot;,&quot;vyz&quot;]</code>.</p>\r\n\r\n<p>Suppose we chose a set of deletion indices <code>D</code> such that after deletions, the final array has its elements in <strong>lexicographic</strong> order (<code>A[0] &lt;= A[1] &lt;= A[2] ... &lt;= A[A.length - 1]</code>).</p>\r\n\r\n<p>Return the minimum possible value of <code>D.length</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<div>\r\n<ol>\r\n</ol>\r\n</div>\r\n</div>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;ca&quot;,&quot;bb&quot;,&quot;ac&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\r\n<strong>Explanation: </strong>\r\nAfter deleting the first column, A = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;].\r\nNow A is in lexicographic order (ie. A[0] &lt;= A[1] &lt;= A[2]).\r\nWe require at least 1 deletion since initially A was not in lexicographic order, so the answer is 1.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span>[&quot;xc&quot;,&quot;yb&quot;,&quot;za&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">0</span>\r\n<strong>Explanation: </strong>\r\nA is already in lexicographic order, so we don&#39;t need to delete anything.\r\nNote that the rows of A are not necessarily in lexicographic order:\r\nie. it is NOT necessarily true that (A[0][0] &lt;= A[0][1] &lt;= ...)\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[&quot;zyx&quot;,&quot;wvu&quot;,&quot;tsr&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\r\n<strong>Explanation: </strong>\r\nWe have to delete every column.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<div>\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 100</code></li>\r\n\t<li><code>1 &lt;= A[i].length &lt;= 100</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11.2K\", \"totalSubmission\": \"33.6K\", \"totalAcceptedRaw\": 11244, \"totalSubmissionRaw\": 33604, \"acRate\": \"33.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "954", "name": "array-of-doubled-pairs", "content": {"questionId": "991", "questionFrontendId": "954", "questionTitle": "Array of Doubled Pairs", "questionTitleSlug": "array-of-doubled-pairs", "content": "<p>Given an array of integers <code>A</code>&nbsp;with even length, return <code>true</code> if and only if it is possible to reorder it such that <code>A[2 * i + 1] = 2 * A[2 * i]</code> for every <code>0 &lt;=&nbsp;i &lt; len(A) / 2</code>.</p>\n\n<div>\n<div>\n<div>\n<ol>\n</ol>\n</div>\n</div>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> A = [3,1,3,6]\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> A = [2,1,2,6]\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> A = [4,-2,2,-4]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> We can take two groups, [-2,-4] and [2,4] to form [-2,-4,2,4] or [2,4,-2,-4].\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> A = [1,2,4,16,8,4]\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= A.length &lt;= 3 *&nbsp;10<sup>4</sup></code></li>\n\t<li><code>A.length</code> is even.</li>\n\t<li><code>-10<sup>5</sup> &lt;= A[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"21.9K\", \"totalSubmission\": \"61.9K\", \"totalAcceptedRaw\": 21859, \"totalSubmissionRaw\": 61885, \"acRate\": \"35.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Hash Table", "slug": "hash-table"}]}}, {"id": "951", "name": "flip-equivalent-binary-trees", "content": {"questionId": "988", "questionFrontendId": "951", "questionTitle": "Flip Equivalent Binary Trees", "questionTitleSlug": "flip-equivalent-binary-trees", "content": "<p>For a binary tree <strong>T</strong>, we can define a <strong>flip operation</strong> as follows: choose any node, and swap the left and right child subtrees.</p>\n\n<p>A binary tree <strong>X</strong>&nbsp;is <em>flip equivalent</em> to a binary tree <strong>Y</strong> if and only if we can make <strong>X</strong> equal to <strong>Y</strong> after some number of flip operations.</p>\n\n<p>Given the roots of two binary trees <code>root1</code> and <code>root2</code>, return <code>true</code> if the two trees are flip equivelent or <code>false</code> otherwise.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"Flipped Trees Diagram\" src=\"https://assets.leetcode.com/uploads/2018/11/29/tree_ex.png\" style=\"width: 500px; height: 220px;\" />\n<pre>\n<strong>Input:</strong> root1 = [1,2,3,4,5,6,null,null,null,7,8], root2 = [1,3,2,null,6,4,5,null,null,null,null,8,7]\n<strong>Output:</strong> true\n<strong>Explanation: </strong>We flipped at nodes with values 1, 3, and 5.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root1 = [], root2 = []\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root1 = [], root2 = [1]\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> root1 = [0,null,1], root2 = []\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> root1 = [0,null,1], root2 = [0,1]\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in each tree is in the range <code>[0, 100]</code>.</li>\n\t<li>Each tree will have <strong>unique node values</strong> in the range <code>[0, 99]</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"63.7K\", \"totalSubmission\": \"97.2K\", \"totalAcceptedRaw\": 63704, \"totalSubmissionRaw\": 97168, \"acRate\": \"65.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "950", "name": "reveal-cards-in-increasing-order", "content": {"questionId": "987", "questionFrontendId": "950", "questionTitle": "Reveal Cards In Increasing Order", "questionTitleSlug": "reveal-cards-in-increasing-order", "content": "<p>In a deck of cards, every card has a unique integer.&nbsp; You can order the deck in&nbsp;any order you want.</p>\r\n\r\n<p>Initially, all the cards start face down (unrevealed) in one deck.</p>\r\n\r\n<p>Now, you do the following steps repeatedly, until all cards are revealed:</p>\r\n\r\n<ol>\r\n\t<li>Take the top card of the deck, reveal it, and take it out of the deck.</li>\r\n\t<li>If there are still cards in the deck, put the next top card of the deck at&nbsp;the bottom of the deck.</li>\r\n\t<li>If there are still unrevealed cards, go back to step 1.&nbsp; Otherwise, stop.</li>\r\n</ol>\r\n\r\n<p>Return an ordering of the deck that would reveal the cards&nbsp;in <strong>increasing order.</strong></p>\r\n\r\n<p>The first entry in the answer is considered to be the top of the deck.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[17,13,11,2,3,5,7]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[2,13,3,11,5,17,7]</span>\r\n<strong>Explanation: </strong>\r\nWe get the deck in the order [17,13,11,2,3,5,7] (this order doesn't matter), and reorder it.\r\nAfter reordering, the deck starts as [2,13,3,11,5,17,7], where 2 is the top of the deck.\r\nWe reveal 2, and move 13 to the bottom.  The deck is now [3,11,5,17,7,13].\r\nWe reveal 3, and move 11 to the bottom.  The deck is now [5,17,7,13,11].\r\nWe reveal 5, and move 17 to the bottom.  The deck is now [7,13,11,17].\r\nWe reveal 7, and move 13 to the bottom.  The deck is now [11,17,13].\r\nWe reveal 11, and move 17 to the bottom.  The deck is now [13,17].\r\nWe reveal 13, and move 17 to the bottom.  The deck is now [17].\r\nWe reveal 17.\r\nSince all the cards revealed are in increasing order, the answer is correct.\r\n</pre>\r\n\r\n<div>\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 1000</code></li>\r\n\t<li><code>1 &lt;= A[i] &lt;= 10^6</code></li>\r\n\t<li><code>A[i] != A[j]</code>&nbsp;for all&nbsp;<code>i != j</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"41K\", \"totalSubmission\": \"54.6K\", \"totalAcceptedRaw\": 41023, \"totalSubmissionRaw\": 54551, \"acRate\": \"75.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "949", "name": "largest-time-for-given-digits", "content": {"questionId": "986", "questionFrontendId": "949", "questionTitle": "Largest Time for Given Digits", "questionTitleSlug": "largest-time-for-given-digits", "content": "<p>Given an array&nbsp;<code>arr</code> of 4 digits, find the latest 24-hour time that can be made using each digit <strong>exactly once</strong>.</p>\n\n<p>24-hour times are formatted as <code>&quot;HH:MM&quot;</code>, where <code>HH</code>&nbsp;is between&nbsp;<code>00</code>&nbsp;and&nbsp;<code>23</code>, and&nbsp;<code>MM</code>&nbsp;is between&nbsp;<code>00</code>&nbsp;and&nbsp;<code>59</code>. The earliest 24-hour time is <code>00:00</code>, and the latest is <code>23:59</code>.</p>\n\n<p>Return <em>the latest 24-hour time&nbsp;in&nbsp;<code>&quot;HH:MM&quot;</code> format</em>.&nbsp; If no valid time can be made, return an empty string.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> A = [1,2,3,4]\n<strong>Output:</strong> &quot;23:41&quot;\n<strong>Explanation:</strong>&nbsp;The valid 24-hour times are &quot;12:34&quot;, &quot;12:43&quot;, &quot;13:24&quot;, &quot;13:42&quot;, &quot;14:23&quot;, &quot;14:32&quot;, &quot;21:34&quot;, &quot;21:43&quot;, &quot;23:14&quot;, and &quot;23:41&quot;. Of these times, &quot;23:41&quot; is the latest.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> A = [5,5,5,5]\n<strong>Output:</strong> &quot;&quot;\n<strong>Explanation:</strong>&nbsp;There are no valid 24-hour times as &quot;55:55&quot; is not valid.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> A = [0,0,0,0]\n<strong>Output:</strong> &quot;00:00&quot;\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> A = [0,0,1,0]\n<strong>Output:</strong> &quot;10:00&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>arr.length == 4</code></li>\n\t<li><code>0 &lt;= arr[i] &lt;= 9</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"58.1K\", \"totalSubmission\": \"160.3K\", \"totalAcceptedRaw\": 58076, \"totalSubmissionRaw\": 160320, \"acRate\": \"36.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "948", "name": "bag-of-tokens", "content": {"questionId": "985", "questionFrontendId": "948", "questionTitle": "Bag of Tokens", "questionTitleSlug": "bag-of-tokens", "content": "<p>You have an initial <strong>power</strong> of <code>P</code>, an initial <strong>score</strong> of <code>0</code>, and a bag of <code>tokens</code> where <code>tokens[i]</code> is the value of the <code>i<sup>th</sup></code> token (0-indexed).</p>\r\n\r\n<p>Your goal is to maximize your total <strong>score</strong> by potentially playing each token in one of two ways:</p>\r\n\r\n<ul>\r\n\t<li>If your current <strong>power</strong> is at least <code>tokens[i]</code>, you may play the <code>i<sup>th</sup></code> token face up, losing <code>tokens[i]</code> <strong>power</strong> and gaining <code>1</code> <strong>score</strong>.</li>\r\n\t<li>If your current <strong>score</strong> is at least <code>1</code>, you may play the <code>i<sup>th</sup></code> token face down, gaining <code>tokens[i]</code> <strong>power</strong> and losing <code>1</code> <strong>score</strong>.</li>\r\n</ul>\r\n\r\n<p>Each token may be played <strong>at most</strong> once and <strong>in any order</strong>. You do <strong>not</strong> have to play all the tokens.</p>\r\n\r\n<p>Return <em>the largest possible <strong>score</strong> you can achieve after playing any number of tokens</em>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> tokens = [100], P = 50\r\n<strong>Output:</strong> 0\r\n<strong>Explanation</strong><strong>:</strong> Playing the only token in the bag is impossible because you either have too little power or too little score.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> tokens = [100,200], P = 150\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong> Play the 0<sup>th</sup> token (100) face up, your power becomes 50 and score becomes 1.\r\nThere is no need to play the 1<sup>st</sup> token since you cannot play it face up to add to your score.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> tokens = [100,200,300,400], P = 200\r\n<strong>Output:</strong> 2\r\n<strong>Explanation:</strong> Play the tokens in this order to get a score of 2:\r\n1. Play the 0<sup>th</sup> token (100) face up, your power becomes 100 and score becomes 1.\r\n2. Play the 3<sup>rd</sup> token (400) face down, your power becomes 500 and score becomes 0.\r\n3. Play the 1<sup>st</sup> token (200) face up, your power becomes 300 and score becomes 1.\r\n4. Play the 2<sup>nd </sup>token (300) face up, your power becomes 0 and score becomes 2.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= tokens.length &lt;= 1000</code></li>\r\n\t<li><code>0 &lt;= tokens[i],&nbsp;P &lt; 10<sup>4</sup></code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"30.5K\", \"totalSubmission\": \"66.1K\", \"totalAcceptedRaw\": 30530, \"totalSubmissionRaw\": 66119, \"acRate\": \"46.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}, {"name": "Greedy", "slug": "greedy"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "947", "name": "most-stones-removed-with-same-row-or-column", "content": {"questionId": "984", "questionFrontendId": "947", "questionTitle": "Most Stones Removed with Same Row or Column", "questionTitleSlug": "most-stones-removed-with-same-row-or-column", "content": "<p>On a 2D plane, we place <code>stones</code> at some integer coordinate points. Each coordinate point may have at most one stone.</p>\n\n<p>A <strong>move</strong> consists of removing a stone&nbsp;that shares a column or row with another stone on the grid.</p>\n\n<p>Given an array <code>stones</code> where <code>stones[i] = [x<sub>i</sub>, y<sub>i</sub>]</code>,&nbsp;return <em>the largest possible number of moves we can make</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> stones = [[0,0],[0,1],[1,0],[1,2],[2,1],[2,2]]\n<strong>Output:</strong> 5\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> stones = [[0,0],[0,2],[1,1],[2,0],[2,2]]\n<strong>Output:</strong> 3\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> stones = [[0,0]]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= stones.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= x<sub>i</sub>, y<sub>i</sub> &lt; 10<sup>4</sup></code></li>\n\t<li><code>stones</code> contains unique values.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"61.7K\", \"totalSubmission\": \"111.5K\", \"totalAcceptedRaw\": 61677, \"totalSubmissionRaw\": 111536, \"acRate\": \"55.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Union Find", "slug": "union-find"}]}}, {"id": "946", "name": "validate-stack-sequences", "content": {"questionId": "983", "questionFrontendId": "946", "questionTitle": "Validate Stack Sequences", "questionTitleSlug": "validate-stack-sequences", "content": "<p>Given two sequences <code>pushed</code> and <code>popped</code>&nbsp;<strong>with distinct values</strong>,&nbsp;return <code>true</code> if and only if this could have been the result of a sequence of push and pop operations on an initially empty stack.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>pushed = <span id=\"example-input-1-1\">[1,2,3,4,5]</span>, popped = <span id=\"example-input-1-2\">[4,5,3,2,1]</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n<strong>Explanation: </strong>We might do the following sequence:\npush(1), push(2), push(3), push(4), pop() -&gt; 4,\npush(5), pop() -&gt; 5, pop() -&gt; 3, pop() -&gt; 2, pop() -&gt; 1\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>pushed = <span id=\"example-input-2-1\">[1,2,3,4,5]</span>, popped = <span id=\"example-input-2-2\">[4,3,5,1,2]</span>\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\n<strong>Explanation: </strong>1 cannot be popped before 2.\n</pre>\n</div>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= pushed.length == popped.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= pushed[i], popped[i] &lt; 1000</code></li>\n\t<li><code>pushed</code> is a permutation of <code>popped</code>.</li>\n\t<li><code>pushed</code> and <code>popped</code> have distinct values.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"72.3K\", \"totalSubmission\": \"114.2K\", \"totalAcceptedRaw\": 72257, \"totalSubmissionRaw\": 114189, \"acRate\": \"63.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}]}}, {"id": "945", "name": "minimum-increment-to-make-array-unique", "content": {"questionId": "982", "questionFrontendId": "945", "questionTitle": "Minimum Increment to Make Array Unique", "questionTitleSlug": "minimum-increment-to-make-array-unique", "content": "<p>Given an array of integers A, a <em>move</em> consists of choosing any <code>A[i]</code>, and incrementing it by <code>1</code>.</p>\r\n\r\n<p>Return the least number of moves to make every value in <code>A</code> unique.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,2]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\r\n<strong>Explanation: </strong> After 1 move, the array could be [1, 2, 3].\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[3,2,1,2,1,7]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">6</span>\r\n<strong>Explanation: </strong> After 6 moves, the array could be [3, 4, 1, 2, 5, 7].\r\nIt can be shown with 5 or less moves that it is impossible for the array to have all unique values.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>0 &lt;= A.length &lt;= 40000</code></li>\r\n\t<li><code>0 &lt;= A[i] &lt; 40000</code></li>\r\n</ol>\r\n\r\n<div>\r\n<div>&nbsp;</div>\r\n</div>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"30.5K\", \"totalSubmission\": \"65.5K\", \"totalAcceptedRaw\": 30498, \"totalSubmissionRaw\": 65513, \"acRate\": \"46.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "939", "name": "minimum-area-rectangle", "content": {"questionId": "976", "questionFrontendId": "939", "questionTitle": "Minimum Area Rectangle", "questionTitleSlug": "minimum-area-rectangle", "content": "<p>Given a set of points in the xy-plane, determine the minimum area of a rectangle formed from these points, with sides parallel to the x and y axes.</p>\r\n\r\n<p>If there isn&#39;t any rectangle, return 0.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[[1,1],[1,3],[3,1],[3,3],[2,2]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">4</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[[1,1],[1,3],[3,1],[3,3],[4,1],[4,3]]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">2</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note</strong>:</p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= points.length &lt;= 500</code></li>\r\n\t<li><code>0 &lt;=&nbsp;points[i][0] &lt;=&nbsp;40000</code></li>\r\n\t<li><code>0 &lt;=&nbsp;points[i][1] &lt;=&nbsp;40000</code></li>\r\n\t<li>All points are distinct.</li>\r\n</ol>\r\n</div>\r\n</div>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"60.2K\", \"totalSubmission\": \"116.3K\", \"totalAcceptedRaw\": 60183, \"totalSubmissionRaw\": 116282, \"acRate\": \"51.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}]}}, {"id": "935", "name": "knight-dialer", "content": {"questionId": "972", "questionFrontendId": "935", "questionTitle": "Knight Dialer", "questionTitleSlug": "knight-dialer", "content": "<p>The chess knight has a <strong>unique movement</strong>,&nbsp;it may move two squares vertically and one square horizontally, or two squares horizontally and one square vertically (with both forming the shape of an <strong>L</strong>). The possible movements of chess knight are shown in this diagaram:</p>\n\n<p>A chess knight can move as indicated in the chess diagram below:</p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/18/chess.jpg\" style=\"width: 402px; height: 402px;\" />\n<p>We have a chess knight and a phone pad as shown below, the knight <strong>can only stand on a numeric cell</strong>&nbsp;(i.e. blue cell).</p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/18/phone.jpg\" style=\"width: 242px; height: 322px;\" />\n<p>Given an integer <code>n</code>, return how many distinct phone numbers of length <code>n</code> we can dial.</p>\n\n<p>You are allowed to place the knight <strong>on any numeric cell</strong> initially and then you should perform <code>n - 1</code> jumps to dial a number of length <code>n</code>. All jumps should be <strong>valid</strong> knight jumps.</p>\n\n<p>As the answer may be very large, <strong>return the answer modulo</strong> <code>10<sup>9</sup> + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> We need to dial a number of length 1, so placing the knight over any numeric cell of the 10 cells is sufficient.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> 20\n<strong>Explanation:</strong> All the valid number we can dial are [04, 06, 16, 18, 27, 29, 34, 38, 40, 43, 49, 60, 61, 67, 72, 76, 81, 83, 92, 94]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> 46\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4\n<strong>Output:</strong> 104\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3131\n<strong>Output:</strong> 136006598\n<strong>Explanation:</strong> Please take care of the mod.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 5000</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"42.9K\", \"totalSubmission\": \"93.2K\", \"totalAcceptedRaw\": 42900, \"totalSubmissionRaw\": 93190, \"acRate\": \"46.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "934", "name": "shortest-bridge", "content": {"questionId": "971", "questionFrontendId": "934", "questionTitle": "Shortest Bridge", "questionTitleSlug": "shortest-bridge", "content": "<p>In a given 2D binary array <code>A</code>, there are two islands.&nbsp; (An island is a 4-directionally connected group of&nbsp;<code>1</code>s not connected to any other 1s.)</p>\n\n<p>Now, we may change <code>0</code>s to <code>1</code>s so as to connect the two islands together to form 1 island.</p>\n\n<p>Return the smallest number of <code>0</code>s that must be flipped.&nbsp; (It is guaranteed that the answer is at least 1.)</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> A = [[0,1],[1,0]]\n<strong>Output:</strong> 1\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> A = [[0,1,0],[0,0,0],[0,0,1]]\n<strong>Output:</strong> 2\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> A = [[1,1,1,1,1],[1,0,0,0,1],[1,0,1,0,1],[1,0,0,0,1],[1,1,1,1,1]]\n<strong>Output:</strong> 1\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= A.length == A[0].length &lt;= 100</code></li>\n\t<li><code>A[i][j] == 0</code> or <code>A[i][j] == 1</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"40.9K\", \"totalSubmission\": \"82.9K\", \"totalAcceptedRaw\": 40870, \"totalSubmissionRaw\": 82928, \"acRate\": \"49.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "932", "name": "beautiful-array", "content": {"questionId": "968", "questionFrontendId": "932", "questionTitle": "Beautiful Array", "questionTitleSlug": "beautiful-array", "content": "<p>For some fixed <code>N</code>, an array <code>A</code> is <em>beautiful</em> if it is a permutation of the integers <code>1, 2, ..., N</code>, such that:</p>\r\n\r\n<p>For every <code>i &lt; j</code>, there is <strong>no</strong>&nbsp;<code>k</code> with <code>i &lt; k &lt; j</code>&nbsp;such that <code>A[k] * 2 = A[i] + A[j]</code>.</p>\r\n\r\n<p>Given <code>N</code>, return <strong>any</strong> beautiful array <code>A</code>.&nbsp; (It is guaranteed that one exists.)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">4</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[2,1,4,3]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">5</span>\r\n<strong>Output: </strong><span>[3,1,2,5,4]</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= N &lt;= 1000</code></li>\r\n</ul>\r\n\r\n<div>\r\n<div>&nbsp;</div>\r\n</div>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.5K\", \"totalSubmission\": \"23.7K\", \"totalAcceptedRaw\": 14468, \"totalSubmissionRaw\": 23701, \"acRate\": \"61.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Divide and Conquer", "slug": "divide-and-conquer"}]}}, {"id": "931", "name": "minimum-falling-path-sum", "content": {"questionId": "967", "questionFrontendId": "931", "questionTitle": "Minimum Falling Path Sum", "questionTitleSlug": "minimum-falling-path-sum", "content": "<p>Given a <strong>square</strong> array of integers <code>A</code>, we want the <strong>minimum</strong> sum of a <em>falling path</em> through <code>A</code>.</p>\n\n<p>A falling path starts at any element in the first row, and chooses one element from each row.&nbsp; The next row&#39;s choice must be in a column that is different from the previous row&#39;s column by at most one.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[1,2,3],[4,5,6],[7,8,9]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">12</span>\n<strong>Explanation: </strong>\nThe possible falling paths are:\n</pre>\n\n<ul>\n\t<li><code>[1,4,7], [1,4,8], [1,5,7], [1,5,8], [1,5,9]</code></li>\n\t<li><code>[2,4,7], [2,4,8], [2,5,7], [2,5,8], [2,5,9], [2,6,8], [2,6,9]</code></li>\n\t<li><code>[3,5,7], [3,5,8], [3,5,9], [3,6,8], [3,6,9]</code></li>\n</ul>\n\n<p>The falling path with the smallest sum is <code>[1,4,7]</code>, so the answer is <code>12</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= A.length == A[0].length &lt;= 100</code></li>\n\t<li><code>-100 &lt;= A[i][j] &lt;= 100</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"62.4K\", \"totalSubmission\": \"98.8K\", \"totalAcceptedRaw\": 62393, \"totalSubmissionRaw\": 98759, \"acRate\": \"63.2%\"}", "similarQuestions": "[{\"title\": \"Minimum Falling Path Sum II\", \"titleSlug\": \"minimum-falling-path-sum-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "930", "name": "binary-subarrays-with-sum", "content": {"questionId": "966", "questionFrontendId": "930", "questionTitle": "Binary Subarrays With Sum", "questionTitleSlug": "binary-subarrays-with-sum", "content": "<p>In an array <code>A</code> of <code>0</code>s and <code>1</code>s, how many <strong>non-empty</strong> subarrays have sum <code>S</code>?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[1,0,1,0,1]</span>, S = <span id=\"example-input-1-2\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">4</span>\r\n<strong>Explanation: </strong>\r\nThe 4 subarrays are bolded below:\r\n[<strong>1,0,1</strong>,0,1]\r\n[<strong>1,0,1,0</strong>,1]\r\n[1,<strong>0,1,0,1</strong>]\r\n[1,0,<strong>1,0,1</strong>]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>A.length &lt;= 30000</code></li>\r\n\t<li><code>0 &lt;= S &lt;= A.length</code></li>\r\n\t<li><code>A[i]</code>&nbsp;is either <code>0</code>&nbsp;or <code>1</code>.</li>\r\n</ol>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"26.9K\", \"totalSubmission\": \"60.9K\", \"totalAcceptedRaw\": 26901, \"totalSubmissionRaw\": 60921, \"acRate\": \"44.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "926", "name": "flip-string-to-monotone-increasing", "content": {"questionId": "962", "questionFrontendId": "926", "questionTitle": "Flip String to Monotone Increasing", "questionTitleSlug": "flip-string-to-monotone-increasing", "content": "<p>A string of <code>&#39;0&#39;</code>s and <code>&#39;1&#39;</code>s is <em>monotone increasing</em> if it consists of some number of <code>&#39;0&#39;</code>s (possibly 0), followed by some number of <code>&#39;1&#39;</code>s (also possibly 0.)</p>\r\n\r\n<p>We are given a string <code>S</code> of <code>&#39;0&#39;</code>s and <code>&#39;1&#39;</code>s, and we may flip any <code>&#39;0&#39;</code> to a <code>&#39;1&#39;</code> or a <code>&#39;1&#39;</code> to a <code>&#39;0&#39;</code>.</p>\r\n\r\n<p>Return the minimum number of flips to make <code>S</code>&nbsp;monotone increasing.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;00110&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\r\n<strong>Explanation: </strong>We flip the last digit to get 00111.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;010110&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">2</span>\r\n<strong>Explanation: </strong>We flip to get 011111, or alternatively 000111.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">&quot;00011000&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">2</span>\r\n<strong>Explanation: </strong>We flip to get 00000000.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span>Note:</span></strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= S.length &lt;= 20000</code></li>\r\n\t<li><code>S</code> only consists of <code>&#39;0&#39;</code> and <code>&#39;1&#39;</code> characters.</li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"24.7K\", \"totalSubmission\": \"46.8K\", \"totalAcceptedRaw\": 24722, \"totalSubmissionRaw\": 46770, \"acRate\": \"52.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "923", "name": "3sum-with-multiplicity", "content": {"questionId": "959", "questionFrontendId": "923", "questionTitle": "3Sum With Multiplicity", "questionTitleSlug": "3sum-with-multiplicity", "content": "<p>Given an integer array <code>A</code>, and an integer <code>target</code>, return the number of&nbsp;tuples&nbsp;<code>i, j, k</code>&nbsp; such that <code>i &lt; j &lt; k</code> and&nbsp;<code>A[i] + A[j] + A[k] == target</code>.</p>\n\n<p>As the answer can be very large, return it <strong>modulo</strong>&nbsp;<code>10<sup>9</sup> + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> A = [1,1,2,2,3,3,4,4,5,5], target = 8\n<strong>Output:</strong> 20\n<strong>Explanation: </strong>\nEnumerating by the values (A[i], A[j], A[k]):\n(1, 2, 5) occurs 8 times;\n(1, 3, 4) occurs 8 times;\n(2, 2, 4) occurs 2 times;\n(2, 3, 3) occurs 2 times.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> A = [1,1,2,2,2,2], target = 5\n<strong>Output:</strong> 12\n<strong>Explanation: </strong>\nA[i] = 1, A[j] = A[k] = 2 occurs 12 times:\nWe choose one 1 from [1,1] in 2 ways,\nand two 2s from [2,2,2,2] in 6 ways.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= A.length &lt;= 3000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 100</code></li>\n\t<li><code>0 &lt;= target &lt;= 300</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"21.5K\", \"totalSubmission\": \"59.7K\", \"totalAcceptedRaw\": 21507, \"totalSubmissionRaw\": 59743, \"acRate\": \"36.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "921", "name": "minimum-add-to-make-parentheses-valid", "content": {"questionId": "957", "questionFrontendId": "921", "questionTitle": "Minimum Add to Make Parentheses Valid", "questionTitleSlug": "minimum-add-to-make-parentheses-valid", "content": "<p>Given a string&nbsp;<code>S</code> of <code>&#39;(&#39;</code> and <code>&#39;)&#39;</code> parentheses, we add the minimum number of parentheses ( <code>&#39;(&#39;</code> or <code>&#39;)&#39;</code>, and in any positions ) so that the resulting parentheses string is valid.</p>\r\n\r\n<p>Formally, a parentheses string is valid if and only if:</p>\r\n\r\n<ul>\r\n\t<li>It is the empty string, or</li>\r\n\t<li>It can be written as <code>AB</code>&nbsp;(<code>A</code> concatenated with <code>B</code>), where <code>A</code> and <code>B</code> are valid strings, or</li>\r\n\t<li>It can be written as <code>(A)</code>, where <code>A</code> is a valid string.</li>\r\n</ul>\r\n\r\n<p>Given a parentheses string, return the minimum number of parentheses we must add to make the resulting string valid.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;())&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;(((&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">3</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">&quot;()&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">0</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-4-1\">&quot;()))((&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-4\">4</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>S.length &lt;= 1000</code></li>\r\n\t<li><code>S</code> only consists of <code>&#39;(&#39;</code> and <code>&#39;)&#39;</code> characters.</li>\r\n</ol>\r\n\r\n<div>\r\n<div>\r\n<div>\r\n<div>&nbsp;</div>\r\n</div>\r\n</div>\r\n</div>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"86.5K\", \"totalSubmission\": \"116.1K\", \"totalAcceptedRaw\": 86479, \"totalSubmissionRaw\": 116069, \"acRate\": \"74.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "919", "name": "complete-binary-tree-inserter", "content": {"questionId": "955", "questionFrontendId": "919", "questionTitle": "Complete Binary Tree Inserter", "questionTitleSlug": "complete-binary-tree-inserter", "content": "<p>A <em>complete</em> binary tree is a binary tree in which every level, except possibly the last, is completely filled, and all nodes are as far left as possible.</p>\r\n\r\n<p>Write a data structure&nbsp;<code>CBTInserter</code>&nbsp;that is initialized with a complete binary tree and supports the following operations:</p>\r\n\r\n<ul>\r\n\t<li><code>CBTInserter(TreeNode root)</code> initializes the data structure on a given tree&nbsp;with head node <code>root</code>;</li>\r\n\t<li><code>CBTInserter.insert(int v)</code> will insert a <code>TreeNode</code>&nbsp;into the tree with value <code>node.val =&nbsp;v</code>&nbsp;so that the tree remains complete, <strong>and returns the value of the parent of the inserted <code>TreeNode</code></strong>;</li>\r\n\t<li><code>CBTInserter.get_root()</code> will return the head node of the tree.</li>\r\n</ul>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>inputs = <span id=\"example-input-1-1\">[&quot;CBTInserter&quot;,&quot;insert&quot;,&quot;get_root&quot;]</span>, inputs = <span id=\"example-input-1-2\">[[[1]],[2],[]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[null,1,[1,2]]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>inputs = <span id=\"example-input-2-1\">[&quot;CBTInserter&quot;,&quot;insert&quot;,&quot;insert&quot;,&quot;get_root&quot;]</span>, inputs = <span id=\"example-input-2-2\">[[[1,2,3,4,5,6]],[7],[8],[]]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[null,3,4,[1,2,3,4,5,6,7,8]]</span></pre>\r\n</div>\r\n\r\n<div>\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li>The initial given tree is complete and contains between <code>1</code> and <code>1000</code> nodes.</li>\r\n\t<li><code>CBTInserter.insert</code> is called at most <code>10000</code> times per test case.</li>\r\n\t<li>Every value of a given or inserted node is between <code>0</code> and <code>5000</code>.</li>\r\n</ol>\r\n</div>\r\n</div>\r\n\r\n<div>\r\n<p>&nbsp;</p>\r\n\r\n<div>&nbsp;</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"20.3K\", \"totalSubmission\": \"34.7K\", \"totalAcceptedRaw\": 20299, \"totalSubmissionRaw\": 34695, \"acRate\": \"58.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "918", "name": "maximum-sum-circular-subarray", "content": {"questionId": "954", "questionFrontendId": "918", "questionTitle": "Maximum Sum Circular Subarray", "questionTitleSlug": "maximum-sum-circular-subarray", "content": "<p>Given a <strong>circular&nbsp;array</strong>&nbsp;<strong>C</strong> of integers represented by&nbsp;<code>A</code>, find the maximum possible sum of a non-empty subarray of <strong>C</strong>.</p>\r\n\r\n<p>Here, a&nbsp;<em>circular&nbsp;array</em> means the end of the array connects to the beginning of the array.&nbsp; (Formally, <code>C[i] = A[i]</code> when <code>0 &lt;= i &lt; A.length</code>, and <code>C[i+A.length] = C[i]</code>&nbsp;when&nbsp;<code>i &gt;= 0</code>.)</p>\r\n\r\n<p>Also, a subarray may only include each element of the fixed buffer <code>A</code> at most once.&nbsp; (Formally, for a subarray <code>C[i], C[i+1], ..., C[j]</code>, there does not exist <code>i &lt;= k1, k2 &lt;= j</code> with <code>k1 % A.length&nbsp;= k2 % A.length</code>.)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,-2,3,-2]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">3\r\n<strong>Explanation: </strong>Subarray [3] has maximum sum 3</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[5,-3,5]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">10\r\n</span><span id=\"example-output-3\"><strong>Explanation:</strong>&nbsp;</span><span id=\"example-output-1\">Subarray [5,5] has maximum sum </span><span>5 + 5 = 10</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[3,-1,2,-1]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">4\r\n<strong>Explanation:</strong>&nbsp;</span><span id=\"example-output-1\">Subarray [2,-1,3] has maximum sum </span><span>2 + (-1) + 3 = 4</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-4-1\">[3,-2,2,-3]</span>\r\n<strong>Output: </strong><span id=\"example-output-4\">3\r\n</span><span id=\"example-output-3\"><strong>Explanation:</strong>&nbsp;</span><span id=\"example-output-1\">Subarray [3] and [3,-2,2] both have maximum sum </span><span>3</span>\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-5-1\">[-2,-3,-1]</span>\r\n<strong>Output: </strong><span id=\"example-output-5\">-1\r\n</span><span id=\"example-output-3\"><strong>Explanation:</strong>&nbsp;</span><span id=\"example-output-1\">Subarray [-1] has maximum sum -1</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ol>\r\n\t<li><code>-30000 &lt;= A[i] &lt;= 30000</code></li>\r\n\t<li><code>1 &lt;= A.length &lt;= 30000</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"65.4K\", \"totalSubmission\": \"192.4K\", \"totalAcceptedRaw\": 65433, \"totalSubmissionRaw\": 192433, \"acRate\": \"34.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "916", "name": "word-subsets", "content": {"questionId": "952", "questionFrontendId": "916", "questionTitle": "Word Subsets", "questionTitleSlug": "word-subsets", "content": "<p>We are given two arrays <code>A</code> and <code>B</code> of words.&nbsp; Each word is a string of lowercase letters.</p>\r\n\r\n<p>Now, say that&nbsp;word <code>b</code> is a subset of word <code>a</code><strong>&nbsp;</strong>if every letter in <code>b</code> occurs in <code>a</code>, <strong>including multiplicity</strong>.&nbsp; For example, <code>&quot;wrr&quot;</code> is a subset of <code>&quot;warrior&quot;</code>, but is not a subset of <code>&quot;world&quot;</code>.</p>\r\n\r\n<p>Now say a word <code>a</code> from <code>A</code> is <em>universal</em> if for every <code>b</code> in <code>B</code>, <code>b</code>&nbsp;is a subset of <code>a</code>.&nbsp;</p>\r\n\r\n<p>Return a list of all universal words in <code>A</code>.&nbsp; You can return the words in any order.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[&quot;amazon&quot;,&quot;apple&quot;,&quot;facebook&quot;,&quot;google&quot;,&quot;leetcode&quot;]</span>, B = <span id=\"example-input-1-2\">[&quot;e&quot;,&quot;o&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[&quot;facebook&quot;,&quot;google&quot;,&quot;leetcode&quot;]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[&quot;amazon&quot;,&quot;apple&quot;,&quot;facebook&quot;,&quot;google&quot;,&quot;leetcode&quot;]</span>, B = <span id=\"example-input-2-2\">[&quot;l&quot;,&quot;e&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[&quot;apple&quot;,&quot;google&quot;,&quot;leetcode&quot;]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">[&quot;amazon&quot;,&quot;apple&quot;,&quot;facebook&quot;,&quot;google&quot;,&quot;leetcode&quot;]</span>, B = <span id=\"example-input-3-2\">[&quot;e&quot;,&quot;oo&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">[&quot;facebook&quot;,&quot;google&quot;]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-4-1\">[&quot;amazon&quot;,&quot;apple&quot;,&quot;facebook&quot;,&quot;google&quot;,&quot;leetcode&quot;]</span>, B = <span id=\"example-input-4-2\">[&quot;lo&quot;,&quot;eo&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-4\">[&quot;google&quot;,&quot;leetcode&quot;]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-5-1\">[&quot;amazon&quot;,&quot;apple&quot;,&quot;facebook&quot;,&quot;google&quot;,&quot;leetcode&quot;]</span>, B = <span id=\"example-input-5-2\">[&quot;ec&quot;,&quot;oc&quot;,&quot;ceo&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-5\">[&quot;facebook&quot;,&quot;leetcode&quot;]</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length, B.length &lt;= 10000</code></li>\r\n\t<li><code>1 &lt;= A[i].length, B[i].length&nbsp;&lt;= 10</code></li>\r\n\t<li><code>A[i]</code> and <code>B[i]</code> consist only of lowercase letters.</li>\r\n\t<li>All words in <code>A[i]</code> are unique: there isn&#39;t <code>i != j</code> with <code>A[i] == A[j]</code>.</li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"24.4K\", \"totalSubmission\": \"50.7K\", \"totalAcceptedRaw\": 24402, \"totalSubmissionRaw\": 50706, \"acRate\": \"48.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "915", "name": "partition-array-into-disjoint-intervals", "content": {"questionId": "951", "questionFrontendId": "915", "questionTitle": "Partition Array into Disjoint Intervals", "questionTitleSlug": "partition-array-into-disjoint-intervals", "content": "<p>Given an array <code>A</code>, partition it&nbsp;into two (contiguous) subarrays&nbsp;<code>left</code>&nbsp;and <code>right</code>&nbsp;so that:</p>\r\n\r\n<ul>\r\n\t<li>Every element in <code>left</code>&nbsp;is less than or equal to every element in <code>right</code>.</li>\r\n\t<li><code>left</code> and <code>right</code> are non-empty.</li>\r\n\t<li><code>left</code>&nbsp;has the smallest possible size.</li>\r\n</ul>\r\n\r\n<p>Return the <strong>length</strong> of <code>left</code> after such a partitioning.&nbsp; It is guaranteed that such a partitioning exists.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[5,0,3,8,6]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\r\n<strong>Explanation: </strong>left = [5,0,3], right = [8,6]\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,1,1,0,6,12]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">4</span>\r\n<strong>Explanation: </strong>left = [1,1,1,0], right = [6,12]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>2 &lt;= A.length&nbsp;&lt;= 30000</code></li>\r\n\t<li><code>0 &lt;= A[i] &lt;= 10^6</code></li>\r\n\t<li>It is guaranteed there is at least one way to partition <code>A</code> as described.</li>\r\n</ol>\r\n\r\n<div>\r\n<div>&nbsp;</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23.2K\", \"totalSubmission\": \"50.7K\", \"totalAcceptedRaw\": 23243, \"totalSubmissionRaw\": 50674, \"acRate\": \"45.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "912", "name": "sort-an-array", "content": {"questionId": "948", "questionFrontendId": "912", "questionTitle": "Sort an Array", "questionTitleSlug": "sort-an-array", "content": "<p>Given an array of integers <code>nums</code>, sort the array in ascending order.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [5,2,3,1]\n<strong>Output:</strong> [1,2,3,5]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [5,1,1,2,0,0]\n<strong>Output:</strong> [0,0,1,1,2,5]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 50000</code></li>\n\t<li><code>-50000 &lt;= nums[i] &lt;= 50000</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"116.2K\", \"totalSubmission\": \"180.6K\", \"totalAcceptedRaw\": 116194, \"totalSubmissionRaw\": 180558, \"acRate\": \"64.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "911", "name": "online-election", "content": {"questionId": "947", "questionFrontendId": "911", "questionTitle": "Online Election", "questionTitleSlug": "online-election", "content": "<p>In an election, the <code>i</code>-th&nbsp;vote was cast for <code>persons[i]</code> at time <code>times[i]</code>.</p>\r\n\r\n<p>Now, we would like to implement the following query function: <code>TopVotedCandidate.q(int t)</code> will return the number of the person that was leading the election at time <code>t</code>.&nbsp;&nbsp;</p>\r\n\r\n<p>Votes cast at time <code>t</code> will count towards our query.&nbsp; In the case of a tie, the most recent vote (among tied candidates) wins.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;TopVotedCandidate&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;]</span>, <span id=\"example-input-1-2\">[[[0,1,1,0,0,1,0],[0,5,10,15,20,25,30]],[3],[12],[25],[15],[24],[8]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[null,0,1,1,0,0,1]</span>\r\n<strong>Explanation: </strong>\r\nAt time 3, the votes are [0], and 0 is leading.\r\nAt time 12, the votes are [0,1,1], and 1 is leading.\r\nAt time 25, the votes are [0,1,1,0,0,1], and 1 is leading (as ties go to the most recent vote.)\r\nThis continues for 3 more queries at time 15, 24, and 8.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= persons.length = times.length &lt;= 5000</code></li>\r\n\t<li><code>0 &lt;= persons[i] &lt;= persons.length</code></li>\r\n\t<li><code>times</code>&nbsp;is a strictly increasing array with all elements in <code>[0, 10^9]</code>.</li>\r\n\t<li><code>TopVotedCandidate.q</code> is called at most <code>10000</code> times per test case.</li>\r\n\t<li><code>TopVotedCandidate.q(int t)</code> is always called with <code>t &gt;= times[0]</code>.</li>\r\n</ol>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"27.4K\", \"totalSubmission\": \"53.6K\", \"totalAcceptedRaw\": 27398, \"totalSubmissionRaw\": 53558, \"acRate\": \"51.2%\"}", "similarQuestions": "[{\"title\": \"Rank Teams by Votes\", \"titleSlug\": \"rank-teams-by-votes\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "910", "name": "smallest-range-ii", "content": {"questionId": "946", "questionFrontendId": "910", "questionTitle": "Smallest Range II", "questionTitleSlug": "smallest-range-ii", "content": "<p>Given an array <code>A</code> of integers, for each integer <code>A[i]</code> we need to choose <strong>either&nbsp;<code>x = -K</code>&nbsp;or <code>x = K</code></strong>, and add <code>x</code> to <code>A[i] <strong>(only once)</strong></code>.</p>\r\n\r\n<p>After this process, we have some array <code>B</code>.</p>\r\n\r\n<p>Return the smallest possible difference between the maximum value of <code>B</code>&nbsp;and the minimum value of <code>B</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[1]</span>, K = <span id=\"example-input-1-2\">0</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">0</span>\r\n<span><strong>Explanation</strong>: B = [1]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[0,10]</span>, K = <span id=\"example-input-2-2\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">6\r\n</span><span><strong>Explanation</strong>: B = [2,8]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">[1,3,6]</span>, K = <span id=\"example-input-3-2\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\r\n<span><strong>Explanation</strong>: B = [4,6,3]</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\r\n\t<li><code>0 &lt;= A[i] &lt;= 10000</code></li>\r\n\t<li><code>0 &lt;= K &lt;= 10000</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23.9K\", \"totalSubmission\": \"76.7K\", \"totalAcceptedRaw\": 23908, \"totalSubmissionRaw\": 76745, \"acRate\": \"31.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "909", "name": "snakes-and-ladders", "content": {"questionId": "945", "questionFrontendId": "909", "questionTitle": "Snakes and Ladders", "questionTitleSlug": "snakes-and-ladders", "content": "<p>On an N x N <code>board</code>, the numbers from <code>1</code> to <code>N*N</code> are written&nbsp;<em>boustrophedonically</em>&nbsp;<strong>starting from the bottom&nbsp;left of the board</strong>, and alternating direction each row.&nbsp; For example, for a 6 x 6 board, the numbers are written as follows:</p>\r\n\r\n<pre>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/09/23/snakes.png\" style=\"width: 254px; height: 200px;\" />\r\n</pre>\r\n\r\n<p>You start on square <code>1</code> of the board (which is always in the last row and&nbsp;first column).&nbsp; Each move, starting from square <code>x</code>, consists of the following:</p>\r\n\r\n<ul>\r\n\t<li>You choose a destination square <code>S</code> with number&nbsp;<code>x+1</code>, <code>x+2</code>, <code>x+3</code>, <code>x+4</code>, <code>x+5</code>, or <code>x+6</code>, provided this&nbsp;number is&nbsp;<code>&lt;=&nbsp;N*N</code>.\r\n\r\n\t<ul>\r\n\t\t<li>(This choice simulates the result of a standard 6-sided die roll: ie., there are always <strong>at most 6 destinations, regardless of the size of the board</strong>.)</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li>If <code>S</code>&nbsp;has a snake or ladder, you move to the destination of that snake or ladder.&nbsp; Otherwise, you move to <code>S</code>.</li>\r\n</ul>\r\n\r\n<p>A board square on row <code>r</code> and column <code>c</code>&nbsp;has a &quot;snake or ladder&quot; if <code>board[r][c] != -1</code>.&nbsp; The destination of that snake or ladder is <code>board[r][c]</code>.</p>\r\n\r\n<p>Note that you only take a snake or ladder at most once per move: if the destination to a snake or ladder is the start of another&nbsp;snake or ladder, you do <strong>not</strong> continue moving.&nbsp; (For example, if the board is `[[4,-1],[-1,3]]`, and on the first move your destination square is `2`, then you finish your first move at&nbsp;`3`, because you do <strong>not</strong> continue moving to `4`.)</p>\r\n\r\n<p>Return the least number of moves required to reach square <font face=\"monospace\">N*N</font>.&nbsp; If it is not possible, return <code>-1</code>.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[\r\n[-1,-1,-1,-1,-1,-1],\r\n[-1,-1,-1,-1,-1,-1],\r\n[-1,-1,-1,-1,-1,-1],\r\n[-1,35,-1,-1,13,-1],\r\n[-1,-1,-1,-1,-1,-1],\r\n[-1,15,-1,-1,-1,-1]]\r\n<strong>Output: </strong>4\r\n<strong>Explanation: </strong>\r\nAt the beginning, you start at square 1 [at row 5, column 0].\r\nYou decide to move to square 2, and must take the ladder to square 15.\r\nYou then decide to move to square 17 (row 3, column 5), and must take the snake to square 13.\r\nYou then decide to move to square 14, and must take the ladder to square 35.\r\nYou then decide to move to square 36, ending the game.\r\nIt can be shown that you need at least 4 moves to reach the N*N-th square, so the answer is 4.\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>2 &lt;= board.length = board[0].length&nbsp;&lt;= 20</code></li>\r\n\t<li><code>board[i][j]</code>&nbsp;is between <code>1</code> and <code>N*N</code> or is equal to <code>-1</code>.</li>\r\n\t<li>The board&nbsp;square with number <code>1</code> has no snake or ladder.</li>\r\n\t<li>The board square with number <code>N*N</code> has no snake or ladder.</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"40.6K\", \"totalSubmission\": \"104K\", \"totalAcceptedRaw\": 40563, \"totalSubmissionRaw\": 104017, \"acRate\": \"39.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "907", "name": "sum-of-subarray-minimums", "content": {"questionId": "943", "questionFrontendId": "907", "questionTitle": "Sum of Subarray Minimums", "questionTitleSlug": "sum-of-subarray-minimums", "content": "<p>Given an array of integers <code>A</code>, find the sum of <code>min(B)</code>, where <code>B</code> ranges over&nbsp;every (contiguous) subarray of <code>A</code>.</p>\r\n\r\n<p>Since the answer may be large, <strong>return the answer modulo <code>10^9 + 7</code>.</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[3,1,2,4]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">17</span>\r\n<strong>Explanation:</strong> Subarrays are [3], [1], [2], [4], [3,1], [1,2], [2,4], [3,1,2], [1,2,4], [3,1,2,4]. \r\nMinimums are 3, 1, 2, 4, 1, 1, 2, 1, 1, 1.&nbsp; Sum is 17.</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 30000</code></li>\r\n\t<li><code>1 &lt;= A[i] &lt;= 30000</code></li>\r\n</ol>\r\n\r\n<div>\r\n<p>&nbsp;</p>\r\n</div>\r\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [3,1,2,4]\n<strong>Output:</strong> 17\n<strong>Explanation:</strong> \nSubarrays are [3], [1], [2], [4], [3,1], [1,2], [2,4], [3,1,2], [1,2,4], [3,1,2,4]. \nMinimums are 3, 1, 2, 4, 1, 1, 2, 1, 1, 1.\nSum is 17.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [11,81,94,43,3]\n<strong>Output:</strong> 444\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= arr[i] &lt;= 3 * 10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"34.4K\", \"totalSubmission\": \"103.6K\", \"totalAcceptedRaw\": 34437, \"totalSubmissionRaw\": 103581, \"acRate\": \"33.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Stack", "slug": "stack"}]}}, {"id": "904", "name": "fruit-into-baskets", "content": {"questionId": "940", "questionFrontendId": "904", "questionTitle": "Fruit Into Baskets", "questionTitleSlug": "fruit-into-baskets", "content": "<p>In a row of trees, the <code>i</code>-th tree&nbsp;produces&nbsp;fruit with type&nbsp;<code>tree[i]</code>.</p>\r\n\r\n<p>You <strong>start at any tree&nbsp;of your choice</strong>, then repeatedly perform the following steps:</p>\r\n\r\n<ol>\r\n\t<li>Add one piece of fruit from this tree to your baskets.&nbsp; If you cannot, stop.</li>\r\n\t<li>Move to the next tree to the right of the current tree.&nbsp; If there is no tree to the right, stop.</li>\r\n</ol>\r\n\r\n<p>Note that you do not have any choice after the initial choice of starting tree:&nbsp;you must perform step 1, then step 2, then back to step 1, then step 2, and so on until you stop.</p>\r\n\r\n<p>You have two baskets, and each basket can carry any quantity of fruit, but you want each basket to only carry one type of fruit each.</p>\r\n\r\n<p>What is the total amount of fruit you can collect with this procedure?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\r\n<strong><span>Explanation: </span></strong><span>We can collect [1,2,1].</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[0,1,2,2]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">3\r\n</span><strong><span>Explanation: </span></strong><span>We can collect [1,2,2].\r\nIf we started at the first tree, we would only collect [0, 1].</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[1,2,3,2,2]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">4\r\n</span><strong><span>Explanation: </span></strong><span>We can collect [2,3,2,2].</span>\r\n<span>If we started at the first tree, we would only collect [1, 2].</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-4-1\">[3,3,3,1,2,1,1,2,3,3,4]</span>\r\n<strong>Output: </strong>5<span id=\"example-output-4\">\r\n</span><strong><span>Explanation: </span></strong><span>We can collect [1,2,1,1,2].</span>\r\n<span>If we started at the first tree or the eighth tree, we would only collect 4 fruits.</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= tree.length &lt;= 40000</code></li>\r\n\t<li><code>0 &lt;= tree[i] &lt; tree.length</code></li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"117.1K\", \"totalSubmission\": \"273.7K\", \"totalAcceptedRaw\": 117133, \"totalSubmissionRaw\": 273712, \"acRate\": \"42.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "901", "name": "online-stock-span", "content": {"questionId": "937", "questionFrontendId": "901", "questionTitle": "Online Stock Span", "questionTitleSlug": "online-stock-span", "content": "<p>Write a class <code>StockSpanner</code> which collects daily price quotes for some stock, and returns the <em>span</em>&nbsp;of that stock&#39;s price for the current day.</p>\r\n\r\n<p>The span of the stock&#39;s price today&nbsp;is defined as the maximum number of consecutive days (starting from today and going backwards)&nbsp;for which the price of the stock was less than or equal to today&#39;s price.</p>\r\n\r\n<p>For example, if the price of a stock over the next 7 days were <code>[100, 80, 60, 70, 60, 75, 85]</code>, then the stock spans would be <code>[1, 1, 1, 2, 1, 4, 6]</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;StockSpanner&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;]</span>, <span id=\"example-input-1-2\">[[],[100],[80],[60],[70],[60],[75],[85]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[null,1,1,1,2,1,4,6]</span>\r\n<strong>Explanation: </strong>\r\nFirst, S = StockSpanner() is initialized.  Then:\r\nS.next(100) is called and returns 1,\r\nS.next(80) is called and returns 1,\r\nS.next(60) is called and returns 1,\r\nS.next(70) is called and returns 2,\r\nS.next(60) is called and returns 1,\r\nS.next(75) is called and returns 4,\r\nS.next(85) is called and returns 6.\r\n\r\nNote that (for example) S.next(75) returned 4, because the last 4 prices\r\n(including today&#39;s price of 75) were less than or equal to today&#39;s price.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li>Calls to <code>StockSpanner.next(int price)</code> will have <code>1 &lt;= price &lt;= 10^5</code>.</li>\r\n\t<li>There will be at most <code>10000</code> calls to <code>StockSpanner.next</code>&nbsp;per test case.</li>\r\n\t<li>There will be at most <code>150000</code> calls to <code>StockSpanner.next</code> across all test cases.</li>\r\n\t<li>The total&nbsp;time limit for this problem has been reduced by 75% for&nbsp;C++, and 50% for all other languages.</li>\r\n</ol>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"82.2K\", \"totalSubmission\": \"134.6K\", \"totalAcceptedRaw\": 82192, \"totalSubmissionRaw\": 134639, \"acRate\": \"61.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}]}}, {"id": "900", "name": "rle-iterator", "content": {"questionId": "936", "questionFrontendId": "900", "questionTitle": "RLE Iterator", "questionTitleSlug": "rle-iterator", "content": "<p>Write an iterator that iterates through a run-length encoded sequence.</p>\r\n\r\n<p>The iterator is initialized by <code>RLEIterator(int[] A)</code>, where <code>A</code> is a run-length encoding of some&nbsp;sequence.&nbsp; More specifically,&nbsp;for all even <code>i</code>,&nbsp;<code>A[i]</code> tells us the number of times that the non-negative integer value <code>A[i+1]</code> is repeated in the sequence.</p>\r\n\r\n<p>The iterator supports one function:&nbsp;<code>next(int n)</code>, which exhausts the next <code>n</code> elements&nbsp;(<code>n &gt;= 1</code>) and returns the last element exhausted in this way.&nbsp; If there is no element left to exhaust, <code>next</code>&nbsp;returns <code>-1</code> instead.</p>\r\n\r\n<p>For example, we start with <code>A = [3,8,0,9,2,5]</code>, which is a run-length encoding of the sequence <code>[8,8,8,5,5]</code>.&nbsp; This is because the sequence can be read as&nbsp;&quot;three eights, zero nines, two fives&quot;.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;RLEIterator&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;]</span>, <span id=\"example-input-1-2\">[[[3,8,0,9,2,5]],[2],[1],[1],[2]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[null,8,8,5,-1]</span>\r\n<strong>Explanation: </strong>\r\nRLEIterator is initialized with RLEIterator([3,8,0,9,2,5]).\r\nThis maps to the sequence [8,8,8,5,5].\r\nRLEIterator.next is then called 4 times:\r\n\r\n.next(2) exhausts 2 terms of the sequence, returning 8.  The remaining sequence is now [8, 5, 5].\r\n\r\n.next(1) exhausts 1 term of the sequence, returning 8.  The remaining sequence is now [5, 5].\r\n\r\n.next(1) exhausts 1 term of the sequence, returning 5.  The remaining sequence is now [5].\r\n\r\n.next(2) exhausts 2 terms, returning -1.  This is because the first term exhausted was 5,\r\nbut the second term did not exist.  Since the last term exhausted does not exist, we return -1.\r\n\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>0 &lt;= A.length &lt;= 1000</code></li>\r\n\t<li><code>A.length</code>&nbsp;is an even integer.</li>\r\n\t<li><code>0 &lt;= A[i] &lt;= 10^9</code></li>\r\n\t<li>There are at most <code>1000</code> calls to <code>RLEIterator.next(int n)</code> per test case.</li>\r\n\t<li>Each call to&nbsp;<code>RLEIterator.next(int n)</code>&nbsp;will have <code>1 &lt;= n &lt;= 10^9</code>.</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"27.5K\", \"totalSubmission\": \"50K\", \"totalAcceptedRaw\": 27475, \"totalSubmissionRaw\": 50002, \"acRate\": \"54.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "898", "name": "bitwise-ors-of-subarrays", "content": {"questionId": "934", "questionFrontendId": "898", "questionTitle": "Bitwise ORs of Subarrays", "questionTitleSlug": "bitwise-ors-of-subarrays", "content": "<p>We have an array <code>arr</code> of non-negative integers.</p>\n\n<p>For every (contiguous) subarray <code>sub = [arr[i], arr[i + 1], ..., arr[j]]</code> (with <code>i &lt;= j</code>), we take the bitwise OR of all the elements in <code>sub</code>, obtaining a result <code>arr[i] | arr[i + 1] | ... | arr[j]</code>.</p>\n\n<p>Return the number of possible results. Results that occur more than once are only counted once in the final answer</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [0]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> There is only one possible result: 0.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,1,2]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The possible subarrays are [1], [1], [2], [1, 1], [1, 2], [1, 1, 2].\nThese yield the results 1, 1, 2, 1, 3, 3.\nThere are 3 unique values, so the answer is 3.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,4]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The possible results are 1, 2, 3, 4, 6, and 7.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= nums[i]&nbsp;&lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"17.5K\", \"totalSubmission\": \"51.5K\", \"totalAcceptedRaw\": 17484, \"totalSubmissionRaw\": 51468, \"acRate\": \"34.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "894", "name": "all-possible-full-binary-trees", "content": {"questionId": "930", "questionFrontendId": "894", "questionTitle": "All Possible Full Binary Trees", "questionTitleSlug": "all-possible-full-binary-trees", "content": "<p>A <em>full binary tree</em>&nbsp;is a binary tree where each node has exactly 0 or 2&nbsp;children.</p>\r\n\r\n<p>Return a list of all possible full binary trees with <code>N</code> nodes.&nbsp; Each element of the answer is the root node of one possible tree.</p>\r\n\r\n<p>Each <code>node</code> of each&nbsp;tree in the answer <strong>must</strong> have <code>node.val = 0</code>.</p>\r\n\r\n<p>You may return the final list of trees in any order.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">7</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[[0,0,0,null,null,0,0,null,null,0,0],[0,0,0,null,null,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,null,null,null,null,0,0],[0,0,0,0,0,null,null,0,0]]</span>\r\n<strong>Explanation:</strong>\r\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/08/22/fivetrees.png\" style=\"width: 700px; height: 400px;\" />\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= N &lt;= 20</code></li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"45.7K\", \"totalSubmission\": \"59.5K\", \"totalAcceptedRaw\": 45683, \"totalSubmissionRaw\": 59537, \"acRate\": \"76.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Recursion", "slug": "recursion"}]}}, {"id": "890", "name": "find-and-replace-pattern", "content": {"questionId": "926", "questionFrontendId": "890", "questionTitle": "Find and Replace Pattern", "questionTitleSlug": "find-and-replace-pattern", "content": "<p>You have a list of&nbsp;<code>words</code> and a <code>pattern</code>, and you want to know which words in <code>words</code> matches the pattern.</p>\r\n\r\n<p>A word matches the pattern if there exists a permutation of letters <code>p</code> so that after replacing every letter <code>x</code> in the pattern with <code>p(x)</code>, we get the desired word.</p>\r\n\r\n<p>(<em>Recall that a permutation of letters is a bijection from letters to letters: every letter maps to another letter, and no two letters map to the same letter.</em>)</p>\r\n\r\n<p>Return a list of the words in <code>words</code>&nbsp;that match the given pattern.&nbsp;</p>\r\n\r\n<p>You may return the answer in any order.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>words = <span id=\"example-input-1-1\">[&quot;abc&quot;,&quot;deq&quot;,&quot;mee&quot;,&quot;aqq&quot;,&quot;dkd&quot;,&quot;ccc&quot;]</span>, pattern = <span id=\"example-input-1-2\">&quot;abb&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[&quot;mee&quot;,&quot;aqq&quot;]</span>\r\n<strong><span>Explanation: </span></strong>&quot;mee&quot; matches the pattern because there is a permutation {a -&gt; m, b -&gt; e, ...}. \r\n&quot;ccc&quot; does not match the pattern because {a -&gt; c, b -&gt; c, ...} is not a permutation,\r\nsince a and b map to the same letter.</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= words.length &lt;= 50</code></li>\r\n\t<li><code>1 &lt;= pattern.length = words[i].length&nbsp;&lt;= 20</code></li>\r\n</ul>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"58.5K\", \"totalSubmission\": \"79K\", \"totalAcceptedRaw\": 58493, \"totalSubmissionRaw\": 78995, \"acRate\": \"74.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "889", "name": "construct-binary-tree-from-preorder-and-postorder-traversal", "content": {"questionId": "925", "questionFrontendId": "889", "questionTitle": "Construct Binary Tree from Preorder and Postorder Traversal", "questionTitleSlug": "construct-binary-tree-from-preorder-and-postorder-traversal", "content": "<p>Return any binary tree that matches the given preorder and postorder traversals.</p>\r\n\r\n<p>Values in the traversals&nbsp;<code>pre</code> and <code>post</code>&nbsp;are distinct&nbsp;positive integers.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>pre = <span id=\"example-input-1-1\">[1,2,4,5,3,6,7]</span>, post = <span id=\"example-input-1-2\">[4,5,2,6,7,3,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[1,2,3,4,5,6,7]</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span>Note:</span></strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= pre.length == post.length &lt;= 30</code></li>\r\n\t<li><code>pre[]</code> and <code>post[]</code>&nbsp;are both permutations of <code>1, 2, ..., pre.length</code>.</li>\r\n\t<li>It is guaranteed an answer exists. If there exists multiple answers, you can return any of them.</li>\r\n</ul>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"44.4K\", \"totalSubmission\": \"66.2K\", \"totalAcceptedRaw\": 44447, \"totalSubmissionRaw\": 66173, \"acRate\": \"67.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "886", "name": "possible-bipartition", "content": {"questionId": "922", "questionFrontendId": "886", "questionTitle": "Possible Bipartition", "questionTitleSlug": "possible-bipartition", "content": "<p>Given a set of <code>N</code>&nbsp;people (numbered <code>1, 2, ..., N</code>), we would like to split everyone into two groups of <strong>any</strong> size.</p>\r\n\r\n<p>Each person may dislike some other people, and they should not go into the same group.&nbsp;</p>\r\n\r\n<p>Formally, if <code>dislikes[i] = [a, b]</code>, it means it is not allowed to put the people numbered <code>a</code> and <code>b</code> into the same group.</p>\r\n\r\n<p>Return <code>true</code>&nbsp;if and only if it is possible to split everyone into two groups in this way.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<div>\r\n<ol>\r\n</ol>\r\n</div>\r\n</div>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>N = <span id=\"example-input-1-1\">4</span>, dislikes = <span id=\"example-input-1-2\">[[1,2],[1,3],[2,4]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\r\n<strong>Explanation</strong>: group1 [1,4], group2 [2,3]\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>N = <span id=\"example-input-2-1\">3</span>, dislikes = <span id=\"example-input-2-2\">[[1,2],[1,3],[2,3]]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>N = <span id=\"example-input-3-1\">5</span>, dislikes = <span id=\"example-input-3-2\">[[1,2],[2,3],[3,4],[4,5],[1,5]]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">false</span>\r\n</pre>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= N &lt;= 2000</code></li>\r\n\t<li><code>0 &lt;= dislikes.length &lt;= 10000</code></li>\r\n\t<li><code>dislikes[i].length == 2</code></li>\r\n\t<li><code>1 &lt;= dislikes[i][j] &lt;= N</code></li>\r\n\t<li><code>dislikes[i][0] &lt; dislikes[i][1]</code></li>\r\n\t<li>There does not exist <code>i != j</code> for which <code>dislikes[i] == dislikes[j]</code>.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"67.4K\", \"totalSubmission\": \"150.5K\", \"totalAcceptedRaw\": 67444, \"totalSubmissionRaw\": 150525, \"acRate\": \"44.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "885", "name": "spiral-matrix-iii", "content": {"questionId": "921", "questionFrontendId": "885", "questionTitle": "Spiral Matrix III", "questionTitleSlug": "spiral-matrix-iii", "content": "<p>On a 2 dimensional grid with <code>R</code> rows and <code>C</code> columns, we start at <code>(r0, c0)</code> facing east.</p>\r\n\r\n<p>Here, the north-west corner of the grid is at the&nbsp;first row and column, and the south-east corner of the grid is at the last row and column.</p>\r\n\r\n<p>Now, we walk in a clockwise spiral shape to visit every position in this grid.&nbsp;</p>\r\n\r\n<p>Whenever we would move outside the boundary of the grid, we continue our walk outside the grid (but may return to the grid boundary later.)&nbsp;</p>\r\n\r\n<p>Eventually, we reach all <code>R * C</code> spaces of the grid.</p>\r\n\r\n<p>Return a list of coordinates representing the positions of the grid in the order they were visited.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>R = <span id=\"example-input-1-1\">1</span>, C = <span id=\"example-input-1-2\">4</span>, r0 = <span id=\"example-input-1-3\">0</span>, c0 = <span id=\"example-input-1-4\">0</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[[0,0],[0,1],[0,2],[0,3]]</span>\r\n\r\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/08/24/example_1.png\" style=\"width: 174px; height: 99px;\" />\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>R = <span id=\"example-input-2-1\">5</span>, C = <span id=\"example-input-2-2\">6</span>, r0 = <span id=\"example-input-2-3\">1</span>, c0 = <span id=\"example-input-2-4\">4</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[[1,4],[1,5],[2,5],[2,4],[2,3],[1,3],[0,3],[0,4],[0,5],[3,5],[3,4],[3,3],[3,2],[2,2],[1,2],[0,2],[4,5],[4,4],[4,3],[4,2],[4,1],[3,1],[2,1],[1,1],[0,1],[4,0],[3,0],[2,0],[1,0],[0,0]]</span>\r\n\r\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/08/24/example_2.png\" style=\"width: 202px; height: 142px;\" />\r\n</pre>\r\n\r\n<div>\r\n<div>\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= R &lt;= 100</code></li>\r\n\t<li><code>1 &lt;= C &lt;= 100</code></li>\r\n\t<li><code>0 &lt;= r0 &lt; R</code></li>\r\n\t<li><code>0 &lt;= c0 &lt; C</code></li>\r\n</ol>\r\n</div>\r\n</div>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23.7K\", \"totalSubmission\": \"33.7K\", \"totalAcceptedRaw\": 23672, \"totalSubmissionRaw\": 33651, \"acRate\": \"70.3%\"}", "similarQuestions": "[{\"title\": \"Spiral Matrix\", \"titleSlug\": \"spiral-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Spiral Matrix II\", \"titleSlug\": \"spiral-matrix-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "881", "name": "boats-to-save-people", "content": {"questionId": "917", "questionFrontendId": "881", "questionTitle": "Boats to Save People", "questionTitleSlug": "boats-to-save-people", "content": "<p>The <code>i</code>-th person has weight <code>people[i]</code>, and each boat can carry a maximum weight of <code>limit</code>.</p>\r\n\r\n<p>Each boat carries at most 2 people at the same time, provided the sum of the&nbsp;weight of those people is at most <code>limit</code>.</p>\r\n\r\n<p>Return the minimum number of boats to carry every given person.&nbsp; (It is guaranteed each person can be carried by a boat.)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>people = <span id=\"example-input-1-1\">[1,2]</span>, limit = <span id=\"example-input-1-2\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\r\n<strong>Explanation: </strong>1 boat (1, 2)\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>people = <span id=\"example-input-2-1\">[3,2,2,1]</span>, limit = <span id=\"example-input-2-2\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">3</span>\r\n<strong>Explanation</strong>: 3 boats (1, 2), (2) and (3)\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>people = <span id=\"example-input-3-1\">[3,5,3,4]</span>, limit = <span id=\"example-input-3-2\">5</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">4</span>\r\n<strong>Explanation</strong>: 4 boats (3), (3), (4), (5)</pre>\r\n\r\n<p><strong>Note</strong>:</p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;=&nbsp;people.length &lt;= 50000</code></li>\r\n\t<li><code>1 &lt;= people[i] &lt;=&nbsp;limit &lt;= 30000</code></li>\r\n</ul>\r\n</div>\r\n</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"42.1K\", \"totalSubmission\": \"88.5K\", \"totalAcceptedRaw\": 42114, \"totalSubmissionRaw\": 88510, \"acRate\": \"47.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "880", "name": "decoded-string-at-index", "content": {"questionId": "916", "questionFrontendId": "880", "questionTitle": "Decoded String at Index", "questionTitleSlug": "decoded-string-at-index", "content": "<p>An encoded string <code>S</code> is given.&nbsp; To find and write the <em>decoded</em> string to a tape, the encoded string is read <strong>one character at a time</strong>&nbsp;and the following steps are taken:</p>\n\n<ul>\n\t<li>If the character read is a letter, that letter is written onto the tape.</li>\n\t<li>If the character read is a digit (say <code>d</code>), the entire current tape is repeatedly written&nbsp;<code>d-1</code>&nbsp;more times in total.</li>\n</ul>\n\n<p>Now for some encoded string <code>S</code>, and an index <code>K</code>, find and return the <code>K</code>-th letter (1 indexed) in the decoded string.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = <span id=\"example-input-1-1\">&quot;leet2code3&quot;</span>, K = <span id=\"example-input-1-2\">10</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;o&quot;</span>\n<strong>Explanation: </strong>\nThe decoded string is &quot;leetleetcodeleetleetcodeleetleetcode&quot;.\nThe 10th letter in the string is &quot;o&quot;.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = <span id=\"example-input-2-1\">&quot;ha22&quot;</span>, K = <span id=\"example-input-2-2\">5</span>\n<strong>Output: </strong><span id=\"example-output-2\">&quot;h&quot;</span>\n<strong>Explanation: </strong>\nThe decoded string is &quot;hahahaha&quot;.  The 5th letter is &quot;h&quot;.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = <span id=\"example-input-3-1\">&quot;a2345678999999999999999&quot;</span>, K = <span id=\"example-input-3-2\">1</span>\n<strong>Output: </strong><span id=\"example-output-3\">&quot;a&quot;</span>\n<strong>Explanation: </strong>\nThe decoded string is &quot;a&quot; repeated 8301530446056247680 times.  The 1st letter is &quot;a&quot;.\n</pre>\n</div>\n</div>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= S.length &lt;= 100</code></li>\n\t<li><code>S</code>&nbsp;will only contain lowercase letters and digits <code>2</code> through <code>9</code>.</li>\n\t<li><code>S</code>&nbsp;starts with a letter.</li>\n\t<li><code>1 &lt;= K &lt;= 10^9</code></li>\n\t<li>It&#39;s guaranteed that <code>K</code>&nbsp;is less than or equal to the length of the decoded string.</li>\n\t<li>The decoded string is guaranteed to have less than <code>2^63</code> letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"27.1K\", \"totalSubmission\": \"96.2K\", \"totalAcceptedRaw\": 27132, \"totalSubmissionRaw\": 96181, \"acRate\": \"28.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}]}}, {"id": "478", "name": "generate-random-point-in-a-circle", "content": {"questionId": "915", "questionFrontendId": "478", "questionTitle": "Generate Random Point in a Circle", "questionTitleSlug": "generate-random-point-in-a-circle", "content": "<p>Given the radius and x-y positions of the center of a circle, write a function <code>randPoint</code>&nbsp;which&nbsp;generates a uniform random&nbsp;point in the circle.</p>\r\n\r\n<p>Note:</p>\r\n\r\n<ol>\r\n\t<li>input and output values are&nbsp;in&nbsp;<a href=\"https://www.webopedia.com/TERM/F/floating_point_number.html\" target=\"_blank\">floating-point</a>.</li>\r\n\t<li>radius and x-y position of the center of the circle is passed into the class constructor.</li>\r\n\t<li>a point on the circumference of the circle is considered to be&nbsp;in the circle.</li>\r\n\t<li><code>randPoint</code>&nbsp;returns&nbsp;a size 2 array containing x-position and y-position of the random point, in that order.</li>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: \r\n</strong><span id=\"example-input-1-1\">[&quot;Solution&quot;,&quot;randPoint&quot;,&quot;randPoint&quot;,&quot;randPoint&quot;]\r\n</span><span id=\"example-input-1-2\">[[1,0,0],[],[],[]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[null,[-0.72939,-0.65505],[-0.78502,-0.28626],[-0.83119,-0.19803]]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: \r\n</strong><span id=\"example-input-2-1\">[&quot;Solution&quot;,&quot;randPoint&quot;,&quot;randPoint&quot;,&quot;randPoint&quot;]\r\n</span><span id=\"example-input-2-2\">[[10,5,-7.5],[],[],[]]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[null,[11.52438,-8.33273],[2.46992,-16.21705],[11.13430,-12.42337]]</span></pre>\r\n</div>\r\n\r\n<p><strong>Explanation of Input Syntax:</strong></p>\r\n\r\n<p>The input is two lists:&nbsp;the subroutines called&nbsp;and their&nbsp;arguments.&nbsp;<code>Solution</code>&#39;s&nbsp;constructor has three arguments, the radius, x-position of the center, and y-position of the center of the circle. <code>randPoint</code> has no arguments.&nbsp;Arguments&nbsp;are&nbsp;always wrapped with a list, even if there aren&#39;t any.</p>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"12.9K\", \"totalSubmission\": \"33.1K\", \"totalAcceptedRaw\": 12863, \"totalSubmissionRaw\": 33082, \"acRate\": \"38.9%\"}", "similarQuestions": "[{\"title\": \"Random Point in Non-overlapping Rectangles\", \"titleSlug\": \"random-point-in-non-overlapping-rectangles\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Random", "slug": "random"}, {"name": "Rejection Sampling", "slug": "rejection-sampling"}]}}, {"id": "497", "name": "random-point-in-non-overlapping-rectangles", "content": {"questionId": "914", "questionFrontendId": "497", "questionTitle": "Random Point in Non-overlapping Rectangles", "questionTitleSlug": "random-point-in-non-overlapping-rectangles", "content": "<p>Given a list of <strong>non-overlapping</strong>&nbsp;axis-aligned rectangles <code>rects</code>, write a function <code>pick</code> which randomly and uniformily picks an <strong>integer point</strong> in the space&nbsp;covered by the rectangles.</p>\r\n\r\n<p>Note:</p>\r\n\r\n<ol>\r\n\t<li>An <strong>integer point</strong>&nbsp;is a point that has integer coordinates.&nbsp;</li>\r\n\t<li>A point&nbsp;on the perimeter&nbsp;of a rectangle is&nbsp;<strong>included</strong> in the space covered by the rectangles.&nbsp;</li>\r\n\t<li><code>i</code>th rectangle = <code>rects[i]</code> =&nbsp;<code>[x1,y1,x2,y2]</code>, where <code>[x1, y1]</code>&nbsp;are the integer coordinates of the bottom-left corner, and <code>[x2, y2]</code>&nbsp;are the integer coordinates of the top-right corner.</li>\r\n\t<li>length and width of each rectangle does not exceed <code>2000</code>.</li>\r\n\t<li><code>1 &lt;= rects.length&nbsp;&lt;= 100</code></li>\r\n\t<li><code>pick</code> return a point as an array of integer coordinates&nbsp;<code>[p_x, p_y]</code></li>\r\n\t<li><code>pick</code> is called at most <code>10000</code>&nbsp;times.</li>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: \r\n</strong><span id=\"example-input-1-1\">[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]\r\n</span><span id=\"example-input-1-2\">[[[[1,1,5,5]]],[],[],[]]</span>\r\n<strong>Output: \r\n</strong><span id=\"example-output-1\">[null,[4,1],[4,1],[3,3]]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: \r\n</strong><span id=\"example-input-2-1\">[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]\r\n</span><span id=\"example-input-2-2\">[[[[-2,-2,-1,-1],[1,0,3,0]]],[],[],[],[],[]]</span>\r\n<strong>Output: \r\n</strong><span id=\"example-output-2\">[null,[-1,-2],[2,0],[-2,-1],[3,0],[-2,-2]]</span></pre>\r\n</div>\r\n\r\n<div>\r\n<p><strong>Explanation of Input Syntax:</strong></p>\r\n\r\n<p>The input is two lists:&nbsp;the subroutines called&nbsp;and their&nbsp;arguments.&nbsp;<code>Solution</code>&#39;s&nbsp;constructor has one argument, the array of rectangles <code>rects</code>. <code>pick</code>&nbsp;has no arguments.&nbsp;Arguments&nbsp;are&nbsp;always wrapped with a list, even if there aren&#39;t any.</p>\r\n</div>\r\n</div>\r\n\r\n<div>\r\n<div>&nbsp;</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"29.8K\", \"totalSubmission\": \"76.4K\", \"totalAcceptedRaw\": 29805, \"totalSubmissionRaw\": 76375, \"acRate\": \"39.0%\"}", "similarQuestions": "[{\"title\": \"Random Pick with Weight\", \"titleSlug\": \"random-pick-with-weight\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Generate Random Point in a Circle\", \"titleSlug\": \"generate-random-point-in-a-circle\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Random", "slug": "random"}]}}, {"id": "519", "name": "random-flip-matrix", "content": {"questionId": "913", "questionFrontendId": "519", "questionTitle": "Random Flip Matrix", "questionTitleSlug": "random-flip-matrix", "content": "<p>You are given the number of rows <code>n_rows</code>&nbsp;and number of columns <code>n_cols</code>&nbsp;of a&nbsp;2D&nbsp;binary matrix&nbsp;where all values are initially 0.&nbsp;Write a function <code>flip</code>&nbsp;which chooses&nbsp;a 0 value&nbsp;<a href=\"https://en.wikipedia.org/wiki/Discrete_uniform_distribution\" target=\"_blank\">uniformly at random</a>,&nbsp;changes it to 1,&nbsp;and then returns the position <code>[row.id, col.id]</code> of that value. Also, write a function <code>reset</code> which sets all values back to 0.&nbsp;<strong>Try to minimize the number of calls to system&#39;s Math.random()</strong> and optimize the time and&nbsp;space complexity.</p>\r\n\r\n<p>Note:</p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= n_rows, n_cols&nbsp;&lt;= 10000</code></li>\r\n\t<li><code>0 &lt;= row.id &lt; n_rows</code> and <code>0 &lt;= col.id &lt; n_cols</code></li>\r\n\t<li><code>flip</code>&nbsp;will not be called when the matrix has no&nbsp;0 values left.</li>\r\n\t<li>the total number of calls to&nbsp;<code>flip</code>&nbsp;and <code>reset</code>&nbsp;will not exceed&nbsp;1000.</li>\r\n</ol>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: \r\n</strong><span id=\"example-input-1-1\">[&quot;Solution&quot;,&quot;flip&quot;,&quot;flip&quot;,&quot;flip&quot;,&quot;flip&quot;]\r\n</span><span id=\"example-input-1-2\">[[2,3],[],[],[],[]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[null,[0,1],[1,2],[1,0],[1,1]]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: \r\n</strong><span id=\"example-input-2-1\">[&quot;Solution&quot;,&quot;flip&quot;,&quot;flip&quot;,&quot;reset&quot;,&quot;flip&quot;]\r\n</span><span id=\"example-input-2-2\">[[1,2],[],[],[],[]]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[null,[0,0],[0,1],null,[0,0]]</span></pre>\r\n</div>\r\n\r\n<p><strong>Explanation of Input Syntax:</strong></p>\r\n\r\n<p>The input is two lists:&nbsp;the subroutines called&nbsp;and their&nbsp;arguments. <code>Solution</code>&#39;s constructor&nbsp;has two arguments, <code>n_rows</code> and <code>n_cols</code>.&nbsp;<code>flip</code>&nbsp;and <code>reset</code> have&nbsp;no&nbsp;arguments.&nbsp;Arguments&nbsp;are&nbsp;always wrapped with a list, even if there aren&#39;t any.</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"9.5K\", \"totalSubmission\": \"25.4K\", \"totalAcceptedRaw\": 9528, \"totalSubmissionRaw\": 25366, \"acRate\": \"37.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Random", "slug": "random"}]}}, {"id": "528", "name": "random-pick-with-weight", "content": {"questionId": "912", "questionFrontendId": "528", "questionTitle": "Random Pick with Weight", "questionTitleSlug": "random-pick-with-weight", "content": "<p>You are given an array of positive integers <code>w</code> where <code>w[i]</code> describes the weight of <code>i</code><sup><code>th</code>&nbsp;</sup>index (0-indexed).</p>\n\n<p>We need to call the function&nbsp;<code>pickIndex()</code> which <strong>randomly</strong> returns an integer in the range <code>[0, w.length - 1]</code>.&nbsp;<code>pickIndex()</code>&nbsp;should return the integer&nbsp;proportional to its weight in the <code>w</code> array. For example, for <code>w = [1, 3]</code>, the probability of picking the index <code>0</code> is <code>1 / (1 + 3)&nbsp;= 0.25</code> (i.e 25%)&nbsp;while the probability of picking the index <code>1</code> is <code>3 / (1 + 3)&nbsp;= 0.75</code> (i.e 75%).</p>\n\n<p>More formally, the probability of picking index <code>i</code> is <code>w[i] / sum(w)</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;Solution&quot;,&quot;pickIndex&quot;]\n[[[1]],[]]\n<strong>Output</strong>\n[null,0]\n\n<strong>Explanation</strong>\nSolution solution = new Solution([1]);\nsolution.pickIndex(); // return 0. Since there is only one single element on the array the only option is to return the first element.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;Solution&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;]\n[[[1,3]],[],[],[],[],[]]\n<strong>Output</strong>\n[null,1,1,1,1,0]\n\n<strong>Explanation</strong>\nSolution solution = new Solution([1, 3]);\nsolution.pickIndex(); // return 1. It&#39;s returning the second element (index = 1) that has probability of 3/4.\nsolution.pickIndex(); // return 1\nsolution.pickIndex(); // return 1\nsolution.pickIndex(); // return 1\nsolution.pickIndex(); // return 0. It&#39;s returning the first element (index = 0) that has probability of 1/4.\n\nSince this is a randomization problem, multiple answers are allowed so the following outputs can be considered correct :\n[null,1,1,1,1,0]\n[null,1,1,1,1,1]\n[null,1,1,1,0,0]\n[null,1,1,1,0,1]\n[null,1,0,1,0,0]\n......\nand so on.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= w.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= w[i] &lt;= 10^5</code></li>\n\t<li><code>pickIndex</code>&nbsp;will be called at most <code>10000</code> times.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"140.6K\", \"totalSubmission\": \"316.3K\", \"totalAcceptedRaw\": 140565, \"totalSubmissionRaw\": 316347, \"acRate\": \"44.4%\"}", "similarQuestions": "[{\"title\": \"Random Pick Index\", \"titleSlug\": \"random-pick-index\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Random Pick with Blacklist\", \"titleSlug\": \"random-pick-with-blacklist\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Random Point in Non-overlapping Rectangles\", \"titleSlug\": \"random-point-in-non-overlapping-rectangles\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Random", "slug": "random"}]}}, {"id": "877", "name": "stone-game", "content": {"questionId": "909", "questionFrontendId": "877", "questionTitle": "Stone Game", "questionTitleSlug": "stone-game", "content": "<p>Alex and Lee play a game with piles of stones.&nbsp; There are an even number of&nbsp;piles <strong>arranged in a row</strong>, and each pile has a positive integer number of stones <code>piles[i]</code>.</p>\n\n<p>The objective of the game is to end with the most&nbsp;stones.&nbsp; The total number of stones is odd, so there are no ties.</p>\n\n<p>Alex and Lee take turns, with Alex starting first.&nbsp; Each turn, a player&nbsp;takes the entire pile of stones from either the beginning or the end of the row.&nbsp; This continues until there are no more piles left, at which point the person with the most stones wins.</p>\n\n<p>Assuming Alex and Lee play optimally, return <code>True</code>&nbsp;if and only if Alex wins the game.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> piles = [5,3,4,5]\n<strong>Output:</strong> true\n<strong>Explanation: </strong>\nAlex starts first, and can only take the first 5 or the last 5.\nSay he takes the first 5, so that the row becomes [3, 4, 5].\nIf Lee takes 3, then the board is [4, 5], and Alex takes 5 to win with 10 points.\nIf Lee takes the last 5, then the board is [3, 4], and Alex takes 4 to win with 9 points.\nThis demonstrated that taking the first 5 was a winning move for Alex, so we return true.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= piles.length &lt;= 500</code></li>\n\t<li><code>piles.length</code> is even.</li>\n\t<li><code>1 &lt;= piles[i] &lt;= 500</code></li>\n\t<li><code>sum(piles)</code> is odd.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"74.5K\", \"totalSubmission\": \"112.4K\", \"totalAcceptedRaw\": 74469, \"totalSubmissionRaw\": 112444, \"acRate\": \"66.2%\"}", "similarQuestions": "[{\"title\": \"Stone Game V\", \"titleSlug\": \"stone-game-v\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game VI\", \"titleSlug\": \"stone-game-vi\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stone Game VII\", \"titleSlug\": \"stone-game-vii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Minimax", "slug": "minimax"}]}}, {"id": "875", "name": "koko-eating-bananas", "content": {"questionId": "907", "questionFrontendId": "875", "questionTitle": "Koko Eating Bananas", "questionTitleSlug": "koko-eating-bananas", "content": "<p>Koko loves to eat bananas.&nbsp; There are <code>N</code>&nbsp;piles of bananas, the <code>i</code>-th&nbsp;pile has <code>piles[i]</code> bananas.&nbsp; The guards have gone and will come back in <code>H</code> hours.</p>\n\n<p>Koko can decide her bananas-per-hour eating speed of <code>K</code>.&nbsp; Each hour, she chooses some pile of bananas, and eats K bananas from that pile.&nbsp; If the pile has less than <code>K</code> bananas, she eats all of them instead, and won&#39;t eat any more bananas during this hour.</p>\n\n<p>Koko likes to eat slowly, but still wants to finish eating all the bananas before the guards come back.</p>\n\n<p>Return the minimum integer <code>K</code> such that she can eat all the bananas within <code>H</code> hours.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> piles = [3,6,7,11], H = 8\n<strong>Output:</strong> 4\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> piles = [30,11,23,4,20], H = 5\n<strong>Output:</strong> 30\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> piles = [30,11,23,4,20], H = 6\n<strong>Output:</strong> 23\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= piles.length &lt;= 10^4</code></li>\n\t<li><code>piles.length &lt;= H &lt;= 10^9</code></li>\n\t<li><code>1 &lt;= piles[i] &lt;= 10^9</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"56.9K\", \"totalSubmission\": \"106.9K\", \"totalAcceptedRaw\": 56925, \"totalSubmissionRaw\": 106897, \"acRate\": \"53.3%\"}", "similarQuestions": "[{\"title\": \"Minimize Max Distance to Gas Station\", \"titleSlug\": \"minimize-max-distance-to-gas-station\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "873", "name": "length-of-longest-fibonacci-subsequence", "content": {"questionId": "905", "questionFrontendId": "873", "questionTitle": "Length of Longest Fibonacci Subsequence", "questionTitleSlug": "length-of-longest-fibonacci-subsequence", "content": "<p>A sequence <code>X<sub>1</sub>, X<sub>2</sub>, ..., X<sub>n</sub></code> is <em>Fibonacci-like</em> if:</p>\n\n<ul>\n\t<li><code>n &gt;= 3</code></li>\n\t<li><code>X<sub>i</sub> + X<sub>i+1</sub> = X<sub>i+2</sub></code> for all <code>i + 2 &lt;= n</code></li>\n</ul>\n\n<p>Given a <b>strictly increasing</b> array <code>arr</code> of positive integers forming a sequence, return the <strong>length</strong> of the longest Fibonacci-like subsequence of <code>arr</code>. If one does not exist, return <code>0</code>.</p>\n\n<p><em>A subsequence is derived from another sequence <code>arr</code> by deleting any number of elements (including none) from <code>arr</code>, without changing the order of the remaining elements. For example, <code>[3, 5, 8]</code> is a subsequence of <code>[3, 4, 5, 6, 7, 8]</code>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,3,4,5,6,7,8]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The longest subsequence that is fibonacci-like: [1,2,3,5,8].</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,3,7,11,12,14,18]\n<strong>Output:</strong> 3\n<strong>Explanation</strong>:<strong> </strong>The longest subsequence that is fibonacci-like: [1,11,12], [3,11,14] or [7,11,18].</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= arr.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= arr[i] &lt; arr[i + 1] &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"34.8K\", \"totalSubmission\": \"72.6K\", \"totalAcceptedRaw\": 34839, \"totalSubmissionRaw\": 72567, \"acRate\": \"48.0%\"}", "similarQuestions": "[{\"title\": \"Fibonacci Number\", \"titleSlug\": \"fibonacci-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "470", "name": "implement-rand10-using-rand7", "content": {"questionId": "903", "questionFrontendId": "470", "questionTitle": "Implement Rand10() Using Rand7()", "questionTitleSlug": "implement-rand10-using-rand7", "content": "<p>Given the <strong>API</strong> <code>rand7()</code> that generates a uniform random integer in the range <code>[1, 7]</code>, write a function <code>rand10()</code> that generates a uniform random integer in the range <code>[1, 10]</code>. You can only call the API <code>rand7()</code>, and you shouldn&#39;t call any other API. Please <strong>do not</strong> use a language&#39;s built-in random API.</p>\n\n<p>Each test case will have one <strong>internal</strong> argument <code>n</code>, the number of times that your implemented function <code>rand10()</code> will be called while testing. Note that this is <strong>not an argument</strong> passed to <code>rand10()</code>.</p>\n\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>What is the <a href=\"https://en.wikipedia.org/wiki/Expected_value\" target=\"_blank\">expected value</a>&nbsp;for the number of calls to&nbsp;<code>rand7()</code>&nbsp;function?</li>\n\t<li>Could you minimize the number of calls to <code>rand7()</code>?</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 1\n<strong>Output:</strong> [2]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 2\n<strong>Output:</strong> [2,8]\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> n = 3\n<strong>Output:</strong> [3,8,10]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"45.4K\", \"totalSubmission\": \"98.9K\", \"totalAcceptedRaw\": 45404, \"totalSubmissionRaw\": 98914, \"acRate\": \"45.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Random", "slug": "random"}, {"name": "Rejection Sampling", "slug": "rejection-sampling"}]}}, {"id": "870", "name": "advantage-shuffle", "content": {"questionId": "901", "questionFrontendId": "870", "questionTitle": "Advantage Shuffle", "questionTitleSlug": "advantage-shuffle", "content": "<p>Given two arrays <code>A</code> and <code>B</code> of equal size, the <em>advantage of <code>A</code> with respect to <code>B</code></em> is the number of indices <code>i</code>&nbsp;for which <code>A[i] &gt; B[i]</code>.</p>\r\n\r\n<p>Return <strong>any</strong> permutation of <code>A</code> that maximizes its advantage with respect to <code>B</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[2,7,11,15]</span>, B = <span id=\"example-input-1-2\">[1,10,4,11]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[2,11,7,15]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[12,24,8,32]</span>, B = <span id=\"example-input-2-2\">[13,25,32,11]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[24,32,8,12]</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length = B.length &lt;= 10000</code></li>\r\n\t<li><code>0 &lt;= A[i] &lt;= 10^9</code></li>\r\n\t<li><code>0 &lt;= B[i] &lt;= 10^9</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"24.1K\", \"totalSubmission\": \"52K\", \"totalAcceptedRaw\": 24093, \"totalSubmissionRaw\": 51966, \"acRate\": \"46.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "869", "name": "reordered-power-of-2", "content": {"questionId": "900", "questionFrontendId": "869", "questionTitle": "Reordered Power of 2", "questionTitleSlug": "reordered-power-of-2", "content": "<p>Starting with a positive integer <code>N</code>, we reorder the digits in any order (including the original order) such that the leading digit is not zero.</p>\r\n\r\n<p>Return <code>true</code>&nbsp;if and only if we can do this in a way such that the resulting number is a power of 2.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">1</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">10</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">16</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">true</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-4-1\">24</span>\r\n<strong>Output: </strong><span id=\"example-output-4\">false</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-5-1\">46</span>\r\n<strong>Output: </strong><span id=\"example-output-5\">true</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"16.2K\", \"totalSubmission\": \"30K\", \"totalAcceptedRaw\": 16180, \"totalSubmissionRaw\": 29951, \"acRate\": \"54.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "866", "name": "prime-palindrome", "content": {"questionId": "897", "questionFrontendId": "866", "questionTitle": "Prime Palindrome", "questionTitleSlug": "prime-palindrome", "content": "<p>Find the smallest prime palindrome greater than or equal to <code>N</code>.</p>\r\n\r\n<p>Recall that a&nbsp;number is <em>prime</em> if it&#39;s only divisors are 1 and itself, and it is greater than 1.&nbsp;</p>\r\n\r\n<p>For example, 2,3,5,7,11 and 13 are&nbsp;primes.</p>\r\n\r\n<p>Recall that a number is a <em>palindrome</em> if it reads the same from left to right as it does from right to left.&nbsp;</p>\r\n\r\n<p>For example, 12321 is a palindrome.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">6</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">7</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">8</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">11</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">13</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">101</span></pre>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= N &lt;= 10^8</code></li>\r\n\t<li>The answer is guaranteed to exist and be less than <code>2 * 10^8</code>.</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"20.4K\", \"totalSubmission\": \"81.2K\", \"totalAcceptedRaw\": 20356, \"totalSubmissionRaw\": 81179, \"acRate\": \"25.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "865", "name": "smallest-subtree-with-all-the-deepest-nodes", "content": {"questionId": "896", "questionFrontendId": "865", "questionTitle": "Smallest Subtree with all the Deepest Nodes", "questionTitleSlug": "smallest-subtree-with-all-the-deepest-nodes", "content": "<p>Given the <code>root</code> of a binary tree, the depth of each node is <strong>the shortest distance to the root</strong>.</p>\r\n\r\n<p>Return <em>the smallest subtree</em> such that it contains <strong>all the deepest nodes</strong> in the original tree.</p>\r\n\r\n<p>A node is called <strong>the&nbsp;deepest</strong> if it has the largest depth possible among&nbsp;any node in the entire tree.</p>\r\n\r\n<p>The <strong>subtree</strong> of a node is tree consisting of that node, plus the set of all descendants of that node.</p>\r\n\r\n<p><strong>Note:</strong> This question is the same as 1123: <a href=\"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves/\" target=\"_blank\">https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves/</a></p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/07/01/sketch1.png\" style=\"width: 600px; height: 510px;\" />\r\n<pre>\r\n<strong>Input:</strong> root = [3,5,1,6,2,0,8,null,null,7,4]\r\n<strong>Output:</strong> [2,7,4]\r\n<strong>Explanation:</strong> We return the node with value 2, colored in yellow in the diagram.\r\nThe nodes coloured in blue are the deepest nodes of the tree.\r\nNotice that nodes 5, 3 and 2 contain the deepest nodes in the tree but node 2 is the smallest subtree among them, so we return it.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [1]\r\n<strong>Output:</strong> [1]\r\n<strong>Explanation:</strong> The root is the deepest node in the tree.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [0,1,3,null,2]\r\n<strong>Output:</strong> [2]\r\n<strong>Explanation:</strong> The deepest node in the tree is 2, the valid subtrees are the subtrees of nodes 2, 1 and 0 but the subtree of node 2 is the smallest.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li>The number of nodes in the tree will be in the range <code>[1, 500]</code>.</li>\r\n\t<li><code>0 &lt;= Node.val &lt;= 500</code></li>\r\n\t<li>The values of the nodes in the tree&nbsp;are <strong>unique</strong>.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"65.4K\", \"totalSubmission\": \"101.4K\", \"totalAcceptedRaw\": 65396, \"totalSubmissionRaw\": 101367, \"acRate\": \"64.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}, {"name": "Recursion", "slug": "recursion"}]}}, {"id": "863", "name": "all-nodes-distance-k-in-binary-tree", "content": {"questionId": "893", "questionFrontendId": "863", "questionTitle": "All Nodes Distance K in Binary Tree", "questionTitleSlug": "all-nodes-distance-k-in-binary-tree", "content": "<p>We are given a binary tree (with root node&nbsp;<code>root</code>), a <code>target</code> node, and an integer value <code>K</code>.</p>\r\n\r\n<p>Return a list of the values of all&nbsp;nodes that have a distance <code>K</code> from the <code>target</code> node.&nbsp; The answer can be returned in any order.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>root = <span id=\"example-input-1-1\">[3,5,1,6,2,0,8,null,null,7,4]</span>, target = <span id=\"example-input-1-2\">5</span>, K = <span id=\"example-input-1-3\">2</span>\r\n\r\n<strong>Output: </strong><span id=\"example-output-1\">[7,4,1]</span>\r\n\r\n<strong>Explanation: </strong>\r\nThe nodes that are a distance 2 from the target node (with value 5)\r\nhave values 7, 4, and 1.\r\n\r\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/06/28/sketch0.png\" style=\"width: 280px; height: 240px;\" />\r\n\r\nNote that the inputs &quot;root&quot; and &quot;target&quot; are actually TreeNodes.\r\nThe descriptions of the inputs above are just serializations of these objects.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li>The given tree is non-empty.</li>\r\n\t<li>Each node in the tree has unique values&nbsp;<code>0 &lt;= node.val &lt;= 500</code>.</li>\r\n\t<li>The <code>target</code>&nbsp;node is a node in the tree.</li>\r\n\t<li><code>0 &lt;= K &lt;= 1000</code>.</li>\r\n</ol>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"107.5K\", \"totalSubmission\": \"187.8K\", \"totalAcceptedRaw\": 107504, \"totalSubmissionRaw\": 187846, \"acRate\": \"57.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "861", "name": "score-after-flipping-matrix", "content": {"questionId": "891", "questionFrontendId": "861", "questionTitle": "Score After Flipping Matrix", "questionTitleSlug": "score-after-flipping-matrix", "content": "<p>We have a two dimensional matrix&nbsp;<code>A</code> where each value is <code>0</code> or <code>1</code>.</p>\r\n\r\n<p>A move consists of choosing any row or column, and toggling each value in that row or column: changing all <code>0</code>s to <code>1</code>s, and all <code>1</code>s to <code>0</code>s.</p>\r\n\r\n<p>After making any number of moves, every row of this matrix is interpreted as a binary number, and the score of the matrix is the sum of these numbers.</p>\r\n\r\n<p>Return the highest possible&nbsp;score.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[[0,0,1,1],[1,0,1,0],[1,1,0,0]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">39</span>\r\n<strong>Explanation:\r\n</strong>Toggled to <span id=\"example-input-1-1\">[[1,1,1,1],[1,0,0,1],[1,1,1,1]].\r\n0b1111 + 0b1001 + 0b1111 = 15 + 9 + 15 = 39</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 20</code></li>\r\n\t<li><code>1 &lt;= A[0].length &lt;= 20</code></li>\r\n\t<li><code>A[i][j]</code>&nbsp;is <code>0</code> or <code>1</code>.</li>\r\n</ol>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"24.3K\", \"totalSubmission\": \"33.2K\", \"totalAcceptedRaw\": 24316, \"totalSubmissionRaw\": 33163, \"acRate\": \"73.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "858", "name": "mirror-reflection", "content": {"questionId": "888", "questionFrontendId": "858", "questionTitle": "Mirror Reflection", "questionTitleSlug": "mirror-reflection", "content": "<p>There is&nbsp;a special square room with mirrors on each of the four&nbsp;walls.&nbsp; Except for the southwest&nbsp;corner, there are receptors on each of the remaining corners, numbered <code>0</code>, <code>1</code>, and <code>2</code>.</p>\n\n<p>The square room has walls of length <code>p</code>, and a laser ray from the southwest corner&nbsp;first meets the east wall at a distance <code>q</code>&nbsp;from the <code>0</code>th receptor.</p>\n\n<p>Return the number of the receptor that the ray meets first.&nbsp; (It is guaranteed that the ray will meet&nbsp;a receptor eventually.)</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>p = <span id=\"example-input-1-1\">2</span>, q = <span id=\"example-input-1-2\">1</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n<strong>Explanation: </strong>The ray meets receptor 2 the first time it gets reflected back to the left wall.\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/06/18/reflection.png\" style=\"width: 218px; height: 217px;\" />\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= p &lt;= 1000</code></li>\n\t<li><code>0 &lt;= q &lt;= p</code></li>\n</ol>\n</div>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23K\", \"totalSubmission\": \"38.7K\", \"totalAcceptedRaw\": 23016, \"totalSubmissionRaw\": 38680, \"acRate\": \"59.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "856", "name": "score-of-parentheses", "content": {"questionId": "886", "questionFrontendId": "856", "questionTitle": "Score of Parentheses", "questionTitleSlug": "score-of-parentheses", "content": "<p>Given a balanced parentheses string <code>S</code>, compute the score of the string based on the following rule:</p>\r\n\r\n<ul>\r\n\t<li><code>()</code> has score 1</li>\r\n\t<li><code>AB</code> has score <code>A + B</code>, where A and B are balanced parentheses strings.</li>\r\n\t<li><code>(A)</code> has score <code>2 * A</code>, where A is a balanced parentheses string.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;()&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;(())&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">2</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">&quot;()()&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">2</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-4-1\">&quot;(()(()))&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-4\">6</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>S</code> is a balanced parentheses string, containing only <code>(</code> and <code>)</code>.</li>\r\n\t<li><code>2 &lt;= S.length &lt;= 50</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"47.3K\", \"totalSubmission\": \"76.3K\", \"totalAcceptedRaw\": 47278, \"totalSubmissionRaw\": 76269, \"acRate\": \"62.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Stack", "slug": "stack"}]}}, {"id": "855", "name": "exam-room", "content": {"questionId": "885", "questionFrontendId": "855", "questionTitle": "Exam Room", "questionTitleSlug": "exam-room", "content": "<p>In an exam room, there are <code>N</code> seats in a single row, numbered <code>0, 1, 2, ..., N-1</code>.</p>\r\n\r\n<p>When a student enters the room, they must sit in the seat that maximizes the distance to the closest person.&nbsp; If there are multiple such seats, they sit in the seat with the lowest number.&nbsp; (Also, if no one is in the room, then the student sits at seat number 0.)</p>\r\n\r\n<p>Return a class <code>ExamRoom(int N)</code>&nbsp;that exposes two functions: <code>ExamRoom.seat()</code>&nbsp;returning an <code>int</code>&nbsp;representing what seat the student sat in, and <code>ExamRoom.leave(int p)</code>&nbsp;representing that the student in seat number <code>p</code>&nbsp;now leaves the room.&nbsp; It is guaranteed that any calls to <code>ExamRoom.leave(p)</code> have a student sitting in seat <code>p</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;ExamRoom&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;leave&quot;,&quot;seat&quot;]</span>, <span id=\"example-input-1-2\">[[10],[],[],[],[],[4],[]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[null,0,9,4,2,null,5]</span>\r\n<span><strong>Explanation</strong>:\r\nExamRoom(10) -&gt; null\r\nseat() -&gt; 0, no one is in the room, then the student sits at seat number 0.\r\nseat() -&gt; 9, the student sits at the last seat number 9.\r\nseat() -&gt; 4, the student sits at the last seat number 4.\r\nseat() -&gt; 2, the student sits at the last seat number 2.\r\nleave(4) -&gt; null\r\nseat() -&gt; 5, the student sits at the last seat number 5.</span>\r\n</pre>\r\n\r\n<p><span>\u200b\u200b\u200b\u200b\u200b\u200b\u200b</span></p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\r\n\t<li><code>ExamRoom.seat()</code> and <code>ExamRoom.leave()</code> will be called at most <code>10^4</code> times across all test cases.</li>\r\n\t<li>Calls to <code>ExamRoom.leave(p)</code> are guaranteed to have a student currently sitting in seat number <code>p</code>.</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"35K\", \"totalSubmission\": \"80.7K\", \"totalAcceptedRaw\": 35031, \"totalSubmissionRaw\": 80746, \"acRate\": \"43.4%\"}", "similarQuestions": "[{\"title\": \"Maximize Distance to Closest Person\", \"titleSlug\": \"maximize-distance-to-closest-person\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Ordered Map", "slug": "ordered-map"}]}}, {"id": "853", "name": "car-fleet", "content": {"questionId": "883", "questionFrontendId": "853", "questionTitle": "Car Fleet", "questionTitleSlug": "car-fleet", "content": "<p><code>N</code> cars are going to the same destination along a one lane road.&nbsp; The destination is <code>target</code>&nbsp;miles away.</p>\r\n\r\n<p>Each car <code>i</code>&nbsp;has a constant speed <code>speed[i]</code>&nbsp;(in miles per hour), and initial position <code>position[i]</code>&nbsp;miles towards the target along the road.</p>\r\n\r\n<p>A car can never pass another car ahead of it, but it can catch up to it, and drive bumper to bumper at the same speed.</p>\r\n\r\n<p>The distance between these two cars is ignored - they are assumed to have the same position.</p>\r\n\r\n<p>A <em>car fleet</em> is some non-empty set of cars driving&nbsp;at the same position and same speed.&nbsp; Note that a single car is also a car fleet.</p>\r\n\r\n<p>If a car catches up to a car fleet right at the destination point, it will&nbsp;still be&nbsp;considered as one car fleet.</p>\r\n\r\n<p><br />\r\nHow many car fleets will arrive at the destination?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>target = <span id=\"example-input-1-1\">12</span>, position = <span id=\"example-input-1-2\">[10,8,0,5,3]</span>, speed = <span id=\"example-input-1-3\">[2,4,1,1,3]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\r\n<strong>Explanation</strong>:\r\nThe cars starting at 10 and 8 become a fleet, meeting each other at 12.\r\nThe car starting at 0 doesn&#39;t catch up to any other car, so it is a fleet by itself.\r\nThe cars starting at 5 and 3 become a fleet, meeting each other at 6.\r\nNote that no other cars meet these fleets before the destination, so the answer is 3.\r\n</pre>\r\n\r\n<p><br />\r\n<strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>0 &lt;= N &lt;= 10 ^ 4</code></li>\r\n\t<li><code>0 &lt; target&nbsp;&lt;= 10 ^ 6</code></li>\r\n\t<li><code>0 &lt;&nbsp;speed[i] &lt;= 10 ^ 6</code></li>\r\n\t<li><code>0 &lt;= position[i] &lt; target</code></li>\r\n\t<li>All initial positions are different.</li>\r\n</ol>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"31.2K\", \"totalSubmission\": \"71.8K\", \"totalAcceptedRaw\": 31226, \"totalSubmissionRaw\": 71834, \"acRate\": \"43.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Sort", "slug": "sort"}]}}, {"id": "851", "name": "loud-and-rich", "content": {"questionId": "881", "questionFrontendId": "851", "questionTitle": "Loud and Rich", "questionTitleSlug": "loud-and-rich", "content": "<p>In a group of N people (labelled <code>0, 1, 2, ..., N-1</code>), each person has different amounts of money, and different levels of quietness.</p>\r\n\r\n<p>For convenience, we&#39;ll call the person with label <code>x</code>, simply &quot;person <code>x</code>&quot;.</p>\r\n\r\n<p>We&#39;ll say that <code>richer[i] = [x, y]</code> if person <code>x</code>&nbsp;definitely has more money than person&nbsp;<code>y</code>.&nbsp; Note that <code>richer</code>&nbsp;may only be a subset of valid observations.</p>\r\n\r\n<p>Also, we&#39;ll say <code>quiet[x] = q</code> if person <font face=\"monospace\">x</font>&nbsp;has quietness <code>q</code>.</p>\r\n\r\n<p>Now, return <code>answer</code>, where <code>answer[x] = y</code> if <code>y</code> is the least quiet person (that is, the person <code>y</code> with the smallest value of <code>quiet[y]</code>), among all people&nbsp;who definitely have&nbsp;equal to or more money than person <code>x</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>richer = <span id=\"example-input-1-1\">[[1,0],[2,1],[3,1],[3,7],[4,3],[5,3],[6,3]]</span>, quiet = <span id=\"example-input-1-2\">[3,2,5,4,6,1,7,0]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[5,5,2,5,4,5,6,7]</span>\r\n<strong>Explanation: </strong>\r\nanswer[0] = 5.\r\nPerson 5 has more money than 3, which has more money than 1, which has more money than 0.\r\nThe only person who is quieter (has lower quiet[x]) is person 7, but\r\nit isn&#39;t clear if they have more money than person 0.\r\n\r\nanswer[7] = 7.\r\nAmong all people that definitely have equal to or more money than person 7\r\n(which could be persons 3, 4, 5, 6, or 7), the person who is the quietest (has lower quiet[x])\r\nis person 7.\r\n\r\nThe other answers can be filled out with similar reasoning.\r\n</pre>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= quiet.length = N &lt;= 500</code></li>\r\n\t<li><code>0 &lt;= quiet[i] &lt; N</code>, all <code>quiet[i]</code> are different.</li>\r\n\t<li><code>0 &lt;= richer.length &lt;= N * (N-1) / 2</code></li>\r\n\t<li><code>0 &lt;= richer[i][j] &lt; N</code></li>\r\n\t<li><code>richer[i][0] != richer[i][1]</code></li>\r\n\t<li><code>richer[i]</code>&#39;s are all different.</li>\r\n\t<li>The&nbsp;observations in <code>richer</code> are all logically consistent.</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.2K\", \"totalSubmission\": \"27K\", \"totalAcceptedRaw\": 14166, \"totalSubmissionRaw\": 27012, \"acRate\": \"52.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "849", "name": "maximize-distance-to-closest-person", "content": {"questionId": "879", "questionFrontendId": "849", "questionTitle": "Maximize Distance to Closest Person", "questionTitleSlug": "maximize-distance-to-closest-person", "content": "<p>You are given an array representing a row of <code>seats</code> where <code>seats[i] = 1</code> represents a person sitting in the <code>i<sup>th</sup></code> seat, and <code>seats[i] = 0</code> represents that the <code>i<sup>th</sup></code> seat is empty <strong>(0-indexed)</strong>.</p>\n\n<p>There is at least one empty seat, and at least one person sitting.</p>\n\n<p>Alex wants to sit in the seat such that the distance between him and the closest person to him is maximized.&nbsp;</p>\n\n<p>Return <em>that maximum distance to the closest person</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/10/distance.jpg\" style=\"width: 650px; height: 257px;\" />\n<pre>\n<strong>Input:</strong> seats = [1,0,0,0,1,0,1]\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>\nIf Alex sits in the second open seat (i.e. seats[2]), then the closest person has distance 2.\nIf Alex sits in any other open seat, the closest person has distance 1.\nThus, the maximum distance to the closest person is 2.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> seats = [1,0,0,0]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>\nIf Alex sits in the last seat (i.e. seats[3]), the closest person is 3 seats away.\nThis is the maximum distance possible, so the answer is 3.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> seats = [0,1]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= seats.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>seats[i]</code>&nbsp;is <code>0</code> or&nbsp;<code>1</code>.</li>\n\t<li>At least one seat is <strong>empty</strong>.</li>\n\t<li>At least one seat is <strong>occupied</strong>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"94.9K\", \"totalSubmission\": \"214K\", \"totalAcceptedRaw\": 94927, \"totalSubmissionRaw\": 214034, \"acRate\": \"44.4%\"}", "similarQuestions": "[{\"title\": \"Exam Room\", \"titleSlug\": \"exam-room\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "848", "name": "shifting-letters", "content": {"questionId": "878", "questionFrontendId": "848", "questionTitle": "Shifting Letters", "questionTitleSlug": "shifting-letters", "content": "<p>We have a string <code>S</code> of lowercase letters, and an integer array <code>shifts</code>.</p>\r\n\r\n<p>Call the <em>shift</em> of a letter, the next letter in the alphabet, (wrapping around so that <code>&#39;z&#39;</code> becomes <code>&#39;a&#39;</code>).&nbsp;</p>\r\n\r\n<p>For example, <code>shift(&#39;a&#39;) = &#39;b&#39;</code>, <code>shift(&#39;t&#39;) = &#39;u&#39;</code>, and <code>shift(&#39;z&#39;) = &#39;a&#39;</code>.</p>\r\n\r\n<p>Now for each <code>shifts[i] = x</code>, we want to shift the first <code>i+1</code>&nbsp;letters of <code>S</code>, <code>x</code> times.</p>\r\n\r\n<p>Return the final string&nbsp;after all such shifts to <code>S</code> are applied.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>S = &quot;abc&quot;, shifts = [3,5,9]\r\n<strong>Output: </strong>&quot;rpl&quot;\r\n<strong>Explanation: </strong>\r\nWe start with &quot;abc&quot;.\r\nAfter shifting the first 1 letters of S by 3, we have &quot;dbc&quot;.\r\nAfter shifting the first 2 letters of S by 5, we have &quot;igc&quot;.\r\nAfter shifting the first 3 letters of S by 9, we have &quot;rpl&quot;, the answer.\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= S.length = shifts.length &lt;= 20000</code></li>\r\n\t<li><code>0 &lt;= shifts[i] &lt;= 10 ^ 9</code></li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"27.1K\", \"totalSubmission\": \"60.2K\", \"totalAcceptedRaw\": 27085, \"totalSubmissionRaw\": 60151, \"acRate\": \"45.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "846", "name": "hand-of-straights", "content": {"questionId": "876", "questionFrontendId": "846", "questionTitle": "Hand of Straights", "questionTitleSlug": "hand-of-straights", "content": "<p>Alice has a <code>hand</code> of cards, given as an array of integers.</p>\n\n<p>Now she wants to rearrange the cards into groups so that each group is size <code>W</code>, and consists of <code>W</code> consecutive cards.</p>\n\n<p>Return <code>true</code> if and only if she can.</p>\n\n<p><strong>Note:</strong> This question is the same as&nbsp;1296:&nbsp;<a href=\"https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/\">https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/</a></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> hand = [1,2,3,6,2,3,4,7,8], W = 3\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Alice&#39;s hand can be rearranged as [1,2,3],[2,3,4],[6,7,8]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> hand = [1,2,3,4,5], W = 4\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Alice&#39;s hand can&#39;t be rearranged into groups of 4.\n\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= hand.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= hand[i]&nbsp;&lt;= 10^9</code></li>\n\t<li><code>1 &lt;= W &lt;= hand.length</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"61.5K\", \"totalSubmission\": \"111.6K\", \"totalAcceptedRaw\": 61497, \"totalSubmissionRaw\": 111570, \"acRate\": \"55.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Ordered Map", "slug": "ordered-map"}]}}, {"id": "845", "name": "longest-mountain-in-array", "content": {"questionId": "875", "questionFrontendId": "845", "questionTitle": "Longest Mountain in Array", "questionTitleSlug": "longest-mountain-in-array", "content": "<p>You may recall that an array <code>arr</code> is a <strong>mountain array</strong> if and only if:</p>\n\n<ul>\n\t<li><code>arr.length &gt;= 3</code></li>\n\t<li>There exists some index <code>i</code> (<strong>0-indexed</strong>) with <code>0 &lt; i &lt; arr.length - 1</code> such that:\n\t<ul>\n\t\t<li><code>arr[0] &lt; arr[1] &lt; ... &lt; arr[i - 1] &lt; arr[i]</code></li>\n\t\t<li><code>arr[i] &gt; arr[i + 1] &gt; ... &gt; arr[arr.length - 1]</code></li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>Given an integer array <code>arr</code>,&nbsp;return <em>the length of the longest subarray, which is a mountain</em>.&nbsp;Return <code>0</code> if there is no mountain subarray.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [2,1,4,7,3,2,5]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The largest mountain is [1,4,7,3,2] which has length 5.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [2,2,2]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There is no mountain.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1&nbsp;&lt;= arr.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= arr[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>Can you solve it using only one pass?</li>\n\t<li>Can you solve it in <code>O(1)</code> space?</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"60.3K\", \"totalSubmission\": \"156.8K\", \"totalAcceptedRaw\": 60257, \"totalSubmissionRaw\": 156801, \"acRate\": \"38.4%\"}", "similarQuestions": "[{\"title\": \"Minimum Number of Removals to Make Mountain Array\", \"titleSlug\": \"minimum-number-of-removals-to-make-mountain-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "842", "name": "split-array-into-fibonacci-sequence", "content": {"questionId": "872", "questionFrontendId": "842", "questionTitle": "Split Array into Fibonacci Sequence", "questionTitleSlug": "split-array-into-fibonacci-sequence", "content": "<p>Given a string <code>S</code>&nbsp;of digits, such as <code>S = &quot;123456579&quot;</code>, we can split it into a <em>Fibonacci-like sequence</em>&nbsp;<code>[123, 456, 579].</code></p>\r\n\r\n<p>Formally, a Fibonacci-like sequence is a list&nbsp;<code>F</code> of non-negative integers such that:</p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= F[i] &lt;= 2^31 - 1</code>, (that is,&nbsp;each integer fits a 32-bit signed integer type);</li>\r\n\t<li><code>F.length &gt;= 3</code>;</li>\r\n\t<li>and<code> F[i] + F[i+1] = F[i+2] </code>for all <code>0 &lt;= i &lt; F.length - 2</code>.</li>\r\n</ul>\r\n\r\n<p>Also, note that when splitting the string into pieces, each piece must not have extra leading zeroes, except if the piece is the number 0 itself.</p>\r\n\r\n<p>Return any Fibonacci-like sequence split from <code>S</code>, or return <code>[]</code> if it cannot be done.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>&quot;123456579&quot;\r\n<strong>Output: </strong>[123,456,579]\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>&quot;11235813&quot;\r\n<strong>Output: </strong>[1,1,2,3,5,8,13]\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>&quot;112358130&quot;\r\n<strong>Output: </strong>[]\r\n<strong>Explanation: </strong>The task is impossible.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>&quot;0123&quot;\r\n<strong>Output: </strong>[]\r\n<strong>Explanation: </strong>Leading zeroes are not allowed, so &quot;01&quot;, &quot;2&quot;, &quot;3&quot; is not valid.\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>&quot;1101111&quot;\r\n<strong>Output: </strong>[110, 1, 111]\r\n<strong>Explanation: </strong>The output [11, 0, 11, 11] would also be accepted.\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= S.length&nbsp;&lt;= 200</code></li>\r\n\t<li><code>S</code> contains only digits.</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"22.9K\", \"totalSubmission\": \"62.4K\", \"totalAcceptedRaw\": 22857, \"totalSubmissionRaw\": 62428, \"acRate\": \"36.6%\"}", "similarQuestions": "[{\"title\": \"Additive Number\", \"titleSlug\": \"additive-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Fibonacci Number\", \"titleSlug\": \"fibonacci-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Backtracking", "slug": "backtracking"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "841", "name": "keys-and-rooms", "content": {"questionId": "871", "questionFrontendId": "841", "questionTitle": "Keys and Rooms", "questionTitleSlug": "keys-and-rooms", "content": "<p>There are <code>N</code> rooms and you start in room <code>0</code>.&nbsp; Each room has a distinct number in <code>0, 1, 2, ..., N-1</code>, and each room may have&nbsp;some keys to access the next room.&nbsp;</p>\r\n\r\n<p>Formally, each room <code>i</code>&nbsp;has a list of keys <code>rooms[i]</code>, and each key <code>rooms[i][j]</code> is an integer in <code>[0, 1, ..., N-1]</code> where <code>N = rooms.length</code>.&nbsp; A key <code>rooms[i][j] = v</code>&nbsp;opens the room with number <code>v</code>.</p>\r\n\r\n<p>Initially, all the rooms start locked (except for room <code>0</code>).&nbsp;</p>\r\n\r\n<p>You can walk back and forth between rooms freely.</p>\r\n\r\n<p>Return <code>true</code>&nbsp;if and only if you can enter&nbsp;every room.</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[[1],[2],[3],[]]\r\n<strong>Output: </strong>true\r\n<strong>Explanation:  </strong>\r\nWe start in room 0, and pick up key 1.\r\nWe then go to room 1, and pick up key 2.\r\nWe then go to room 2, and pick up key 3.\r\nWe then go to room 3.  Since we were able to go to every room, we return true.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[[1,3],[3,0,1],[2],[0]]\r\n<strong>Output: </strong>false\r\n<strong>Explanation: </strong>We can&#39;t enter the room with number 2.\r\n</pre>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= rooms.length &lt;=&nbsp;1000</code></li>\r\n\t<li><code>0 &lt;= rooms[i].length &lt;= 1000</code></li>\r\n\t<li>The number of keys in all rooms combined is at most&nbsp;<code>3000</code>.</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"93.8K\", \"totalSubmission\": \"144.2K\", \"totalAcceptedRaw\": 93770, \"totalSubmissionRaw\": 144191, \"acRate\": \"65.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "840", "name": "magic-squares-in-grid", "content": {"questionId": "870", "questionFrontendId": "840", "questionTitle": "Magic Squares In Grid", "questionTitleSlug": "magic-squares-in-grid", "content": "<p>A <code>3 x 3</code> magic square is a <code>3 x 3</code> grid filled with distinct numbers <strong>from </strong><code>1</code><strong> to </strong><code>9</code> such that each row, column, and both diagonals all have the same sum.</p>\n\n<p>Given a <code>row x col</code>&nbsp;<code>grid</code>&nbsp;of integers, how many <code>3 x 3</code> &quot;magic square&quot; subgrids are there?&nbsp; (Each subgrid is contiguous).</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/11/magic_main.jpg\" style=\"width: 322px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> grid = [[4,3,8,4],[9,5,1,9],[2,7,6,2]]\n<strong>Output:</strong> 1\n<strong>Explanation: </strong>\nThe following subgrid is a 3 x 3 magic square:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/11/magic_valid.jpg\" style=\"width: 242px; height: 242px;\" />\nwhile this one is not:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/11/magic_invalid.jpg\" style=\"width: 242px; height: 242px;\" />\nIn total, there is only one magic square inside the given grid.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[8]]\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[4,4],[3,3]]\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[4,7,8],[9,5,1],[2,3,6]]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>row == grid.length</code></li>\n\t<li><code>col == grid[i].length</code></li>\n\t<li><code>1 &lt;= row, col &lt;= 10</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 15</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"26.9K\", \"totalSubmission\": \"71.4K\", \"totalAcceptedRaw\": 26900, \"totalSubmissionRaw\": 71362, \"acRate\": \"37.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "838", "name": "push-dominoes", "content": {"questionId": "868", "questionFrontendId": "838", "questionTitle": "Push Dominoes", "questionTitleSlug": "push-dominoes", "content": "<p>There are<font face=\"monospace\">&nbsp;<code>N</code></font> dominoes in a line, and we place each domino vertically upright.</p>\r\n\r\n<p>In the beginning, we simultaneously push&nbsp;some of the dominoes either to the left or to the right.</p>\r\n\r\n<p><img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/05/18/domino.png\" style=\"height: 160px;\" /></p>\r\n\r\n<p>After each second, each domino that is falling to the left pushes the adjacent domino on the left.</p>\r\n\r\n<p>Similarly, the dominoes falling to the right push their adjacent dominoes standing on the right.</p>\r\n\r\n<p>When a vertical domino has dominoes falling on it from both sides, it stays still due to the balance of the forces.</p>\r\n\r\n<p>For the purposes of this question, we will consider that a falling domino&nbsp;expends no additional force to a falling or already fallen domino.</p>\r\n\r\n<p>Given a string &quot;S&quot; representing the initial state.&nbsp;<code>S[i] = &#39;L&#39;</code>, if the i-th domino has been pushed to the left; <code>S[i] = &#39;R&#39;</code>, if the i-th domino has been pushed to the right; <code>S[i] = &#39;.&#39;</code>,&nbsp;if the <code>i</code>-th domino has not been pushed.</p>\r\n\r\n<p>Return a string representing the final state.&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>&quot;.L.R...LR..L..&quot;\r\n<strong>Output: </strong>&quot;LL.RR.LLRRLL..&quot;\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>&quot;RR.L&quot;\r\n<strong>Output: </strong>&quot;RR.L&quot;\r\n<strong>Explanation: </strong>The first domino expends no additional force on the second domino.\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>0 &lt;= N&nbsp;&lt;= 10^5</code></li>\r\n\t<li>String&nbsp;<code>dominoes</code> contains only&nbsp;<code>&#39;L</code>&#39;, <code>&#39;R&#39;</code> and <code>&#39;.&#39;</code></li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"25.1K\", \"totalSubmission\": \"50.7K\", \"totalAcceptedRaw\": 25116, \"totalSubmissionRaw\": 50742, \"acRate\": \"49.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "837", "name": "new-21-game", "content": {"questionId": "867", "questionFrontendId": "837", "questionTitle": "New 21 Game", "questionTitleSlug": "new-21-game", "content": "<p>Alice plays the following game, loosely based on the card game &quot;21&quot;.</p>\r\n\r\n<p>Alice starts with <code>0</code> points, and draws numbers while she has less than <code>K</code> points.&nbsp; During each draw, she gains an integer number of points randomly from the range <code>[1, W]</code>, where <code>W</code> is an integer.&nbsp; Each draw is independent and the outcomes have equal probabilities.</p>\r\n\r\n<p>Alice stops drawing numbers when she gets <code>K</code> or more points.&nbsp; What is the probability&nbsp;that she has <code>N</code> or less points?</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>N = 10, K = 1, W = 10\r\n<strong>Output: </strong>1.00000\r\n<strong>Explanation: </strong> Alice gets a single card, then stops.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>N = 6, K = 1, W = 10\r\n<strong>Output: </strong>0.60000\r\n<strong>Explanation: </strong> Alice gets a single card, then stops.\r\nIn 6 out of W = 10 possibilities, she is at or below N = 6 points.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>N = 21, K = 17, W = 10\r\n<strong>Output: </strong>0.73278</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>0 &lt;= K &lt;= N &lt;= 10000</code></li>\r\n\t<li><code>1 &lt;= W &lt;= 10000</code></li>\r\n\t<li>Answers will be accepted as correct if they are within <code>10^-5</code> of the correct answer.</li>\r\n\t<li>The judging time limit has been reduced for this question.</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"20.4K\", \"totalSubmission\": \"57.8K\", \"totalAcceptedRaw\": 20388, \"totalSubmissionRaw\": 57825, \"acRate\": \"35.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "835", "name": "image-overlap", "content": {"questionId": "864", "questionFrontendId": "835", "questionTitle": "Image Overlap", "questionTitleSlug": "image-overlap", "content": "<p>You are given two images <code>img1</code> and <code>img2</code>&nbsp;both of size <code>n x n</code>, represented as&nbsp;binary, square matrices of the same size. (A binary matrix has only 0s and 1s as values.)</p>\n\n<p>We translate one image however we choose (sliding it left, right, up, or down any number of units), and place it on top of the other image.&nbsp; After, the <em>overlap</em> of this translation is the number of positions that have a 1 in both images.</p>\n\n<p>(Note also that a translation does <strong>not</strong> include any kind of rotation.)</p>\n\n<p>What is the largest possible overlap?</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/09/overlap1.jpg\" style=\"width: 450px; height: 231px;\" />\n<pre>\n<strong>Input:</strong> img1 = [[1,1,0],[0,1,0],[0,1,0]], img2 = [[0,0,0],[0,1,1],[0,0,1]]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> We slide img1 to right by 1 unit and down by 1 unit.\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/09/overlap_step1.jpg\" style=\"width: 450px; height: 105px;\" />\nThe number of positions that have a 1 in both images is 3. (Shown in red)\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/09/overlap_step2.jpg\" style=\"width: 450px; height: 231px;\" />\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> img1 = [[1]], img2 = [[1]]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> img1 = [[0]], img2 = [[0]]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == img1.length</code></li>\n\t<li><code>n == img1[i].length</code></li>\n\t<li><code>n == img2.length </code></li>\n\t<li><code>n == img2[i].length</code></li>\n\t<li><code>1 &lt;= n &lt;= 30</code></li>\n\t<li><code>img1[i][j]</code> is <code>0</code> or <code>1</code>.</li>\n\t<li><code>img2[i][j]</code> is <code>0</code> or <code>1</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"42.5K\", \"totalSubmission\": \"68.5K\", \"totalAcceptedRaw\": 42471, \"totalSubmissionRaw\": 68547, \"acRate\": \"62.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "833", "name": "find-and-replace-in-string", "content": {"questionId": "862", "questionFrontendId": "833", "questionTitle": "Find And Replace in String", "questionTitleSlug": "find-and-replace-in-string", "content": "<p>To some string <code>S</code>, we will perform some&nbsp;replacement&nbsp;operations that replace groups of letters with new ones (not necessarily the same size).</p>\n\n<p>Each replacement operation has <code>3</code> parameters: a starting index <code>i</code>, a source word&nbsp;<code>x</code>&nbsp;and a target word&nbsp;<code>y</code>.&nbsp; The rule is that if <code><font face=\"monospace\">x</font></code>&nbsp;starts at position <code>i</code>&nbsp;in the <strong>original</strong> <strong>string</strong> <strong><code>S</code></strong>, then we will replace that occurrence of&nbsp;<code>x</code>&nbsp;with&nbsp;<code>y</code>.&nbsp; If not, we do nothing.</p>\n\n<p>For example, if we have&nbsp;<code>S = &quot;abcd&quot;</code>&nbsp;and we have some replacement operation&nbsp;<code>i = 2, x = &quot;cd&quot;, y = &quot;ffff&quot;</code>, then because&nbsp;<code>&quot;cd&quot;</code>&nbsp;starts at position <code><font face=\"monospace\">2</font></code>&nbsp;in the original string <code>S</code>, we will replace it with <code>&quot;ffff&quot;</code>.</p>\n\n<p>Using another example on <code>S = &quot;abcd&quot;</code>, if we have both the replacement operation <code>i = 0, x = &quot;ab&quot;, y = &quot;eee&quot;</code>, as well as another replacement operation&nbsp;<code>i = 2, x = &quot;ec&quot;, y = &quot;ffff&quot;</code>, this second operation does nothing because in the original string&nbsp;<code>S[2] = &#39;c&#39;</code>, which doesn&#39;t match&nbsp;<code>x[0] = &#39;e&#39;</code>.</p>\n\n<p>All these operations occur simultaneously.&nbsp; It&#39;s guaranteed that there won&#39;t be any overlap in replacement: for example,&nbsp;<code>S = &quot;abc&quot;, indexes = [0, 1],&nbsp;sources = [&quot;ab&quot;,&quot;bc&quot;]</code> is not a valid test case.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> S = &quot;abcd&quot;, indexes = [0, 2], sources = [&quot;a&quot;, &quot;cd&quot;], targets = [&quot;eee&quot;, &quot;ffff&quot;]\n<strong>Output:</strong> &quot;eeebffff&quot;\n<strong>Explanation:</strong>\n&quot;a&quot; starts at index 0 in S, so it&#39;s replaced by &quot;eee&quot;.\n&quot;cd&quot; starts at index 2 in S, so it&#39;s replaced by &quot;ffff&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> S = &quot;abcd&quot;, indexes = [0, 2], sources = [&quot;ab&quot;,&quot;ec&quot;], targets = [&quot;eee&quot;,&quot;ffff&quot;]\n<strong>Output:</strong> &quot;eeecd&quot;\n<strong>Explanation:</strong>\n&quot;ab&quot; starts at index 0 in S, so it&#39;s replaced by &quot;eee&quot;.\n&quot;ec&quot; doesn&#39;t starts at index 2 in the <strong>original</strong> S, so we do nothing.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= S.length &lt;= 1000</code></li>\n\t<li><code>S</code> consists of only lowercase English letters.</li>\n\t<li><code>0 &lt;= indexes.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= indexes[i] &lt; S.length</code></li>\n\t<li><code>sources.length == indexes.length</code></li>\n\t<li><code>targets.length == indexes.length</code></li>\n\t<li><code>1 &lt;= sources[i].length, targets[i].length &lt;= 50</code></li>\n\t<li><code>sources[i]</code>&nbsp;and <code>targets[i]</code>&nbsp;consist of only lowercase English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"52.8K\", \"totalSubmission\": \"103.2K\", \"totalAcceptedRaw\": 52762, \"totalSubmissionRaw\": 103205, \"acRate\": \"51.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "622", "name": "design-circular-queue", "content": {"questionId": "860", "questionFrontendId": "622", "questionTitle": "Design Circular Queue", "questionTitleSlug": "design-circular-queue", "content": "<p>Design your implementation of the circular queue. The circular queue is a linear data structure in which the operations are performed based on FIFO (First In First Out) principle and the last position is connected back to the first position to make a circle. It is also called &quot;Ring Buffer&quot;.</p>\n\n<p>One of the benefits of the circular queue is that we can make use of the spaces in front of the queue. In a normal queue, once the queue becomes full, we cannot insert the next element even if there is a space in front of the queue. But using the circular queue, we can use the space to store new values.</p>\n\n<p>Implementation the <code>MyCircularQueue</code> class:</p>\n\n<ul>\n\t<li><code>MyCircularQueue(k)</code> Initializes the object with the size of the queue to be <code>k</code>.</li>\n\t<li><code>int Front()</code> Gets the front item from the queue. If the queue is empty, return <code>-1</code>.</li>\n\t<li><code>int Rear()</code> Gets the last item from the queue. If the queue is empty, return <code>-1</code>.</li>\n\t<li><code>boolean enQueue(int value)</code> Inserts an element into the circular queue. Return <code>true</code> if the operation is successful.</li>\n\t<li><code>boolean deQueue()</code> Deletes an element from the circular queue. Return <code>true</code> if the operation is successful.</li>\n\t<li><code>boolean isEmpty()</code> Checks whether the circular queue is empty or not.</li>\n\t<li><code>boolean isFull()</code> Checks whether the circular queue is full or not.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;MyCircularQueue&quot;, &quot;enQueue&quot;, &quot;enQueue&quot;, &quot;enQueue&quot;, &quot;enQueue&quot;, &quot;Rear&quot;, &quot;isFull&quot;, &quot;deQueue&quot;, &quot;enQueue&quot;, &quot;Rear&quot;]\n[[3], [1], [2], [3], [4], [], [], [], [4], []]\n<strong>Output</strong>\n[null, true, true, true, false, 3, true, true, true, 4]\n\n<strong>Explanation</strong>\nMyCircularQueue myCircularQueue = new MyCircularQueue(3);\nmyCircularQueue.enQueue(1); // return True\nmyCircularQueue.enQueue(2); // return True\nmyCircularQueue.enQueue(3); // return True\nmyCircularQueue.enQueue(4); // return False\nmyCircularQueue.Rear();     // return 3\nmyCircularQueue.isFull();   // return True\nmyCircularQueue.deQueue();  // return True\nmyCircularQueue.enQueue(4); // return True\nmyCircularQueue.Rear();     // return 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= 1000</code></li>\n\t<li><code>0 &lt;= value &lt;= 1000</code></li>\n\t<li>At most <code>3000</code> calls will be made to&nbsp;<code>enQueue</code>, <code>deQueue</code>,&nbsp;<code>Front</code>,&nbsp;<code>Rear</code>,&nbsp;<code>isEmpty</code>, and&nbsp;<code>isFull</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong>&nbsp;Could you solve the problem without using the built-in queue?&nbsp;", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"83.9K\", \"totalSubmission\": \"186.9K\", \"totalAcceptedRaw\": 83926, \"totalSubmissionRaw\": 186853, \"acRate\": \"44.9%\"}", "similarQuestions": "[{\"title\": \"Design Circular Deque\", \"titleSlug\": \"design-circular-deque\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Design Front Middle Back Queue\", \"titleSlug\": \"design-front-middle-back-queue\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}, {"name": "Queue", "slug": "queue"}]}}, {"id": "641", "name": "design-circular-deque", "content": {"questionId": "859", "questionFrontendId": "641", "questionTitle": "Design Circular Deque", "questionTitleSlug": "design-circular-deque", "content": "<p>Design your implementation of the circular double-ended queue (deque).</p>\r\n\r\n<p>Your implementation should support following operations:</p>\r\n\r\n<ul>\r\n\t<li><code>MyCircularDeque(k)</code>: Constructor, set the size of the deque to be k.</li>\r\n\t<li><code>insertFront()</code>: Adds an item at the front of Deque. Return true if the operation is successful.</li>\r\n\t<li><code>insertLast()</code>: Adds an item at the rear of Deque. Return true if the operation is successful.</li>\r\n\t<li><code>deleteFront()</code>: Deletes an item from the front of Deque. Return true if the operation is successful.</li>\r\n\t<li><code>deleteLast()</code>: Deletes an item from the rear of Deque. Return true if the operation is successful.</li>\r\n\t<li><code>getFront()</code>: Gets the front item from the Deque. If the deque is empty, return -1.</li>\r\n\t<li><code>getRear()</code>: Gets the last item from Deque. If the deque is empty, return -1.</li>\r\n\t<li><code>isEmpty()</code>: Checks whether Deque is empty or not.&nbsp;</li>\r\n\t<li><code>isFull()</code>: Checks whether Deque is full or not.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\nMyCircularDeque circularDeque = new MycircularDeque(3); // set the size to be 3\r\ncircularDeque.insertLast(1);\t\t\t// return true\r\ncircularDeque.insertLast(2);\t\t\t// return true\r\ncircularDeque.insertFront(3);\t\t\t// return true\r\ncircularDeque.insertFront(4);\t\t\t// return false, the queue is full\r\ncircularDeque.getRear();  \t\t\t// return 2\r\ncircularDeque.isFull();\t\t\t\t// return true\r\ncircularDeque.deleteLast();\t\t\t// return true\r\ncircularDeque.insertFront(4);\t\t\t// return true\r\ncircularDeque.getFront();\t\t\t// return 4\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li>All values will be in the range of [0, 1000].</li>\r\n\t<li>The number of operations will be in the range of&nbsp;[1, 1000].</li>\r\n\t<li>Please do not use the built-in Deque library.</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"22.3K\", \"totalSubmission\": \"40.8K\", \"totalAcceptedRaw\": 22292, \"totalSubmissionRaw\": 40822, \"acRate\": \"54.6%\"}", "similarQuestions": "[{\"title\": \"Design Circular Queue\", \"titleSlug\": \"design-circular-queue\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Design Front Middle Back Queue\", \"titleSlug\": \"design-front-middle-back-queue\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}, {"name": "Queue", "slug": "queue"}]}}, {"id": "831", "name": "masking-personal-information", "content": {"questionId": "858", "questionFrontendId": "831", "questionTitle": "Masking Personal Information", "questionTitleSlug": "masking-personal-information", "content": "<p>We are given a&nbsp;personal information string <code>S</code>, which may represent&nbsp;either <strong>an email address</strong> or <strong>a phone number.</strong></p>\r\n\r\n<p>We would like to mask this&nbsp;personal information according to the&nbsp;following rules:</p>\r\n\r\n<p><br />\r\n<u><strong>1. Email address:</strong></u></p>\r\n\r\n<p>We define a&nbsp;<strong>name</strong> to be a string of <code>length &ge; 2</code> consisting&nbsp;of only lowercase letters&nbsp;<code>a-z</code> or uppercase&nbsp;letters&nbsp;<code>A-Z</code>.</p>\r\n\r\n<p>An email address starts with a name, followed by the&nbsp;symbol <code>&#39;@&#39;</code>, followed by a name, followed by the&nbsp;dot&nbsp;<code>&#39;.&#39;</code>&nbsp;and&nbsp;followed by a name.&nbsp;</p>\r\n\r\n<p>All email addresses are&nbsp;guaranteed to be valid and in the format of&nbsp;<code>&quot;name1@name2.name3&quot;.</code></p>\r\n\r\n<p>To mask an email, <strong>all names must be converted to lowercase</strong> and <strong>all letters between the first and last letter of the first name</strong> must be replaced by 5 asterisks <code>&#39;*&#39;</code>.</p>\r\n\r\n<p><br />\r\n<u><strong>2. Phone number:</strong></u></p>\r\n\r\n<p>A phone number is a string consisting of&nbsp;only the digits <code>0-9</code> or the characters from the set <code>{&#39;+&#39;, &#39;-&#39;, &#39;(&#39;, &#39;)&#39;, &#39;&nbsp;&#39;}.</code>&nbsp;You may assume a phone&nbsp;number contains&nbsp;10 to 13 digits.</p>\r\n\r\n<p>The last 10 digits make up the local&nbsp;number, while the digits before those make up the country code. Note that&nbsp;the country code is optional. We want to expose only the last 4 digits&nbsp;and mask all other&nbsp;digits.</p>\r\n\r\n<p>The local&nbsp;number&nbsp;should be formatted and masked as <code>&quot;***-***-1111&quot;,&nbsp;</code>where <code>1</code> represents the exposed digits.</p>\r\n\r\n<p>To mask a phone number with country code like <code>&quot;+111 111 111 1111&quot;</code>, we write it in the form <code>&quot;+***-***-***-1111&quot;.</code>&nbsp; The <code>&#39;+&#39;</code>&nbsp;sign and the first <code>&#39;-&#39;</code>&nbsp;sign before the local number should only exist if there is a country code.&nbsp; For example, a 12 digit phone number mask&nbsp;should start&nbsp;with <code>&quot;+**-&quot;</code>.</p>\r\n\r\n<p>Note that extraneous characters like <code>&quot;(&quot;, &quot;)&quot;, &quot; &quot;</code>, as well as&nbsp;extra dashes or plus signs not part of the above formatting scheme should be removed.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Return the correct &quot;mask&quot; of the information provided.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>&quot;LeetCode@LeetCode.com&quot;\r\n<strong>Output: </strong>&quot;l*****e@leetcode.com&quot;\r\n<strong>Explanation:&nbsp;</strong>All names are converted to lowercase, and the letters between the\r\n&nbsp;            first and last letter of the first name is replaced by 5 asterisks.\r\n&nbsp;            Therefore, &quot;leetcode&quot; -&gt; &quot;l*****e&quot;.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>&quot;AB@qq.com&quot;\r\n<strong>Output: </strong>&quot;a*****b@qq.com&quot;\r\n<strong>Explanation:&nbsp;</strong>There must be 5 asterisks between the first and last letter \r\n&nbsp;            of the first name &quot;ab&quot;. Therefore, &quot;ab&quot; -&gt; &quot;a*****b&quot;.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>&quot;1(234)567-890&quot;\r\n<strong>Output: </strong>&quot;***-***-7890&quot;\r\n<strong>Explanation:</strong>&nbsp;10 digits in the phone number, which means all digits make up the local number.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>&quot;86-(10)12345678&quot;\r\n<strong>Output: </strong>&quot;+**-***-***-5678&quot;\r\n<strong>Explanation:</strong>&nbsp;12 digits, 2 digits for country code and 10 digits for local number. \r\n</pre>\r\n\r\n<p><strong>Notes:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>S.length&nbsp;&lt;=&nbsp;40</code>.</li>\r\n\t<li>Emails have length at least 8.</li>\r\n\t<li>Phone numbers have length at least 10.</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11.3K\", \"totalSubmission\": \"25.4K\", \"totalAcceptedRaw\": 11322, \"totalSubmissionRaw\": 25350, \"acRate\": \"44.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "826", "name": "most-profit-assigning-work", "content": {"questionId": "853", "questionFrontendId": "826", "questionTitle": "Most Profit Assigning Work", "questionTitleSlug": "most-profit-assigning-work", "content": "<p>We have jobs: <code>difficulty[i]</code>&nbsp;is the difficulty of the&nbsp;<code>i</code>th job, and&nbsp;<code>profit[i]</code>&nbsp;is the profit of the&nbsp;<code>i</code>th job.&nbsp;</p>\r\n\r\n<p>Now we have some workers.&nbsp;<code>worker[i]</code>&nbsp;is the ability of the&nbsp;<code>i</code>th worker, which means that this worker can only complete a job with difficulty at most&nbsp;<code>worker[i]</code>.&nbsp;</p>\r\n\r\n<p>Every worker can be assigned at most one job, but one job&nbsp;can be completed multiple times.</p>\r\n\r\n<p>For example, if 3 people attempt the same job that pays $1, then the total profit will be $3.&nbsp; If a worker cannot complete any job, his profit is $0.</p>\r\n\r\n<p>What is the most profit we can make?</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>difficulty = [2,4,6,8,10], profit = [10,20,30,40,50], worker = [4,5,6,7]\r\n<strong>Output: </strong>100 \r\n<strong>Explanation: W</strong>orkers are assigned jobs of difficulty [4,4,6,6] and they get profit of [20,20,30,30] seperately.</pre>\r\n\r\n<p><strong>Notes:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= difficulty.length = profit.length &lt;= 10000</code></li>\r\n\t<li><code>1 &lt;= worker.length &lt;= 10000</code></li>\r\n\t<li><code>difficulty[i], profit[i], worker[i]</code>&nbsp; are in range&nbsp;<code>[1, 10^5]</code></li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23.3K\", \"totalSubmission\": \"60.2K\", \"totalAcceptedRaw\": 23349, \"totalSubmissionRaw\": 60180, \"acRate\": \"38.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "825", "name": "friends-of-appropriate-ages", "content": {"questionId": "852", "questionFrontendId": "825", "questionTitle": "Friends Of Appropriate Ages", "questionTitleSlug": "friends-of-appropriate-ages", "content": "<p>Some people will make friend requests. The&nbsp;list of their ages is given and&nbsp;<code>ages[i]</code>&nbsp;is the age of the&nbsp;ith person.&nbsp;</p>\n\n<p>Person A will NOT friend request person B (B != A) if any of the following conditions are true:</p>\n\n<ul>\n\t<li><code>age[B]&nbsp;&lt;= 0.5 * age[A]&nbsp;+ 7</code></li>\n\t<li><code>age[B]&nbsp;&gt; age[A]</code></li>\n\t<li><code>age[B]&nbsp;&gt; 100 &amp;&amp;&nbsp;age[A]&nbsp;&lt; 100</code></li>\n</ul>\n\n<p>Otherwise, A will friend request B.</p>\n\n<p>Note that if&nbsp;A requests B, B does not necessarily request A.&nbsp; Also, people will not friend request themselves.</p>\n\n<p>How many total friend requests are made?</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>[16,16]\n<strong>Output: </strong>2\n<strong>Explanation: </strong>2 people friend request each other.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>[16,17,18]\n<strong>Output: </strong>2\n<strong>Explanation: </strong>Friend requests are made 17 -&gt; 16, 18 -&gt; 17.</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>[20,30,100,110,120]\n<strong>Output: </strong>3\n<strong>Explanation: </strong>Friend requests are made 110 -&gt; 100, 120 -&gt; 110, 120 -&gt; 100.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Notes:</p>\n\n<ul>\n\t<li><code>1 &lt;= ages.length&nbsp;&lt;= 20000</code>.</li>\n\t<li><code>1 &lt;= ages[i] &lt;= 120</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"43K\", \"totalSubmission\": \"98.5K\", \"totalAcceptedRaw\": 43041, \"totalSubmissionRaw\": 98547, \"acRate\": \"43.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "708", "name": "insert-into-a-sorted-circular-linked-list", "content": {"questionId": "850", "questionFrontendId": "708", "questionTitle": "Insert into a Sorted Circular Linked List", "questionTitleSlug": "insert-into-a-sorted-circular-linked-list", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"51.3K\", \"totalSubmission\": \"158.9K\", \"totalAcceptedRaw\": 51320, \"totalSubmissionRaw\": 158930, \"acRate\": \"32.3%\"}", "similarQuestions": "[{\"title\": \"Insertion Sort List\", \"titleSlug\": \"insertion-sort-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}]}}, {"id": "823", "name": "binary-trees-with-factors", "content": {"questionId": "843", "questionFrontendId": "823", "questionTitle": "Binary Trees With Factors", "questionTitleSlug": "binary-trees-with-factors", "content": "<p>Given an array of unique integers, <code>arr</code>, where each integer <code>arr[i]</code> is strictly greater than <code>1</code>.</p>\n\n<p>We make a binary tree using these integers, and each number may be used for any number of times. Each non-leaf node&#39;s value should be equal to the product of the values of its children.</p>\n\n<p>Return <em>the number of binary trees we can make</em>. The answer may be too large so return the answer <strong>modulo</strong> <code>10<sup>9</sup> + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [2,4]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> We can make these trees: <code>[2], [4], [4, 2, 2]</code></pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [2,4,5,10]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> We can make these trees: <code>[2], [4], [5], [10], [4, 2, 2], [10, 2, 5], [10, 5, 2]</code>.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 1000</code></li>\n\t<li><code>2 &lt;= arr[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"12.7K\", \"totalSubmission\": \"35.1K\", \"totalAcceptedRaw\": 12696, \"totalSubmissionRaw\": 35071, \"acRate\": \"36.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "822", "name": "card-flipping-game", "content": {"questionId": "842", "questionFrontendId": "822", "questionTitle": "Card Flipping Game", "questionTitleSlug": "card-flipping-game", "content": "<p>On a table are <code>N</code> cards, with a positive integer printed on the front and back of each card (possibly different).</p>\r\n\r\n<p>We flip any number of cards, and after we choose one&nbsp;card.&nbsp;</p>\r\n\r\n<p>If the number <code>X</code> on the back of the chosen&nbsp;card is not on the front of any card, then this number X is good.</p>\r\n\r\n<p>What is the smallest number that is good?&nbsp; If no number is good, output <code>0</code>.</p>\r\n\r\n<p>Here, <code>fronts[i]</code> and <code>backs[i]</code> represent the number on the front and back of card <code>i</code>.&nbsp;</p>\r\n\r\n<p>A&nbsp;flip swaps the front and back numbers, so the value on the front is now on the back and vice versa.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> fronts = [1,2,4,4,7], backs = [1,3,4,1,3]\r\n<strong>Output:</strong> <code>2</code>\r\n<strong>Explanation:</strong> If we flip the second card, the fronts are <code>[1,3,4,4,7]</code> and the backs are <code>[1,2,4,1,3]</code>.\r\nWe choose the second card, which has number 2 on the back, and it isn&#39;t on the front of any card, so <code>2</code> is good.</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= fronts.length == backs.length&nbsp;&lt;=&nbsp;1000</code>.</li>\r\n\t<li><code>1 &lt;=&nbsp;fronts[i]&nbsp;&lt;= 2000</code>.</li>\r\n\t<li><code>1 &lt;= backs[i]&nbsp;&lt;= 2000</code>.</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"10.1K\", \"totalSubmission\": \"23.2K\", \"totalAcceptedRaw\": 10069, \"totalSubmissionRaw\": 23192, \"acRate\": \"43.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "820", "name": "short-encoding-of-words", "content": {"questionId": "839", "questionFrontendId": "820", "questionTitle": "Short Encoding of Words", "questionTitleSlug": "short-encoding-of-words", "content": "<p>A <strong>valid encoding</strong> of an array of <code>words</code> is any reference string <code>s</code> and array of indices <code>indices</code> such that:</p>\n\n<ul>\n\t<li><code>words.length == indices.length</code></li>\n\t<li>The reference string <code>s</code> ends with the <code>&#39;#&#39;</code> character.</li>\n\t<li>For each index <code>indices[i]</code>, the <strong>substring</strong> of <code>s</code> starting from <code>indices[i]</code> and up to (but not including) the next <code>&#39;#&#39;</code> character is equal to <code>words[i]</code>.</li>\n</ul>\n\n<p>Given an array of <code>words</code>, return <em>the <strong>length of the shortest reference string</strong> </em><code>s</code><em> possible of any <strong>valid encoding</strong> of </em><code>words</code><em>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;time&quot;, &quot;me&quot;, &quot;bell&quot;]\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> A valid encoding would be s = <code>&quot;time#bell#&quot; and indices = [0, 2, 5</code>].\nwords[0] = &quot;time&quot;, the substring of s starting from indices[0] = 0 to the next &#39;#&#39; is underlined in &quot;<u>time</u>#bell#&quot;\nwords[1] = &quot;me&quot;, the substring of s starting from indices[1] = 2 to the next &#39;#&#39; is underlined in &quot;ti<u>me</u>#bell#&quot;\nwords[2] = &quot;bell&quot;, the substring of s starting from indices[2] = 5 to the next &#39;#&#39; is underlined in &quot;time#<u>bell</u>#&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;t&quot;]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> A valid encoding would be s = &quot;t#&quot; and indices = [0].\n\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 2000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 7</code></li>\n\t<li><code>words[i]</code> consists of only lowercase letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"15.2K\", \"totalSubmission\": \"29.7K\", \"totalAcceptedRaw\": 15225, \"totalSubmissionRaw\": 29662, \"acRate\": \"51.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "707", "name": "design-linked-list", "content": {"questionId": "838", "questionFrontendId": "707", "questionTitle": "Design Linked List", "questionTitleSlug": "design-linked-list", "content": "<p>Design your&nbsp;implementation of the linked list. You can choose to use a singly or doubly linked list.<br />\nA node in a singly&nbsp;linked list should have two attributes: <code>val</code>&nbsp;and <code>next</code>. <code>val</code> is the value of the current node, and <code>next</code>&nbsp;is&nbsp;a&nbsp;pointer/reference to the next node.<br />\nIf you want to use the doubly linked list,&nbsp;you will need&nbsp;one more attribute <code>prev</code> to indicate the previous node in the linked list. Assume all nodes in the linked list are <strong>0-indexed</strong>.</p>\n\n<p>Implement the <code>MyLinkedList</code>&nbsp;class:</p>\n\n<ul>\n\t<li><code>MyLinkedList()</code>&nbsp;Initializes&nbsp;the&nbsp;<code>MyLinkedList</code> object.</li>\n\t<li><code>int get(int index)</code>&nbsp;Get the value of&nbsp;the <code>index<sup>th</sup></code>&nbsp;node in the linked list. If the index is invalid, return <code>-1</code>.</li>\n\t<li><code>void addAtHead(int val)</code>&nbsp;Add a node of value <code>val</code>&nbsp;before the first element of the linked list. After the insertion, the new node will be the first node of the linked list.</li>\n\t<li><code>void addAtTail(int val)</code>&nbsp;Append a node of value <code>val</code>&nbsp;as the last element of the linked list.</li>\n\t<li><code>void addAtIndex(int index, int val)</code>&nbsp;Add a node of value <code>val</code>&nbsp;before the <code>index<sup>th</sup></code>&nbsp;node in the linked list.&nbsp;If <code>index</code>&nbsp;equals the length of the linked list, the node will be appended to the end of the linked list. If <code>index</code> is greater than the length, the node <strong>will not be inserted</strong>.</li>\n\t<li><code>void deleteAtIndex(int index)</code>&nbsp;Delete&nbsp;the <code>index<sup>th</sup></code>&nbsp;node in the linked list, if the index is valid.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;MyLinkedList&quot;, &quot;addAtHead&quot;, &quot;addAtTail&quot;, &quot;addAtIndex&quot;, &quot;get&quot;, &quot;deleteAtIndex&quot;, &quot;get&quot;]\n[[], [1], [3], [1, 2], [1], [1], [1]]\n<strong>Output</strong>\n[null, null, null, null, 2, null, 3]\n\n<strong>Explanation</strong>\nMyLinkedList myLinkedList = new MyLinkedList();\nmyLinkedList.addAtHead(1);\nmyLinkedList.addAtTail(3);\nmyLinkedList.addAtIndex(1, 2);    // linked list becomes 1-&gt;2-&gt;3\nmyLinkedList.get(1);              // return 2\nmyLinkedList.deleteAtIndex(1);    // now the linked list is 1-&gt;3\nmyLinkedList.get(1);              // return 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= index, val &lt;= 1000</code></li>\n\t<li>Please do not use the built-in LinkedList library.</li>\n\t<li>At most <code>2000</code>&nbsp;calls will be made to&nbsp;<code>get</code>,&nbsp;<code>addAtHead</code>,&nbsp;<code>addAtTail</code>,&nbsp; <code>addAtIndex</code> and&nbsp;<code>deleteAtIndex</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"89.1K\", \"totalSubmission\": \"349.2K\", \"totalAcceptedRaw\": 89083, \"totalSubmissionRaw\": 349191, \"acRate\": \"25.5%\"}", "similarQuestions": "[{\"title\": \"Design Skiplist\", \"titleSlug\": \"design-skiplist\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}, {"name": "Design", "slug": "design"}]}}, {"id": "817", "name": "linked-list-components", "content": {"questionId": "835", "questionFrontendId": "817", "questionTitle": "Linked List Components", "questionTitleSlug": "linked-list-components", "content": "<p>We are given&nbsp;<code>head</code>,&nbsp;the head node of a linked list containing&nbsp;<strong>unique integer values</strong>.</p>\r\n\r\n<p>We are also given the list&nbsp;<code>G</code>, a subset of the values in the linked list.</p>\r\n\r\n<p>Return the number of connected components in <code>G</code>, where two values are connected if they appear consecutively in the linked list.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> \r\nhead: 0-&gt;1-&gt;2-&gt;3\r\nG = [0, 1, 3]\r\n<strong>Output:</strong> 2\r\n<strong>Explanation:</strong> \r\n0 and 1 are connected, so [0, 1] and [3] are the two connected components.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> \r\nhead: 0-&gt;1-&gt;2-&gt;3-&gt;4\r\nG = [0, 3, 1, 4]\r\n<strong>Output:</strong> 2\r\n<strong>Explanation:</strong> \r\n0 and 1 are connected, 3 and 4 are connected, so [0, 1] and [3, 4] are the two connected components.\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li>If&nbsp;<code>N</code>&nbsp;is the&nbsp;length of the linked list given by&nbsp;<code>head</code>,&nbsp;<code>1 &lt;= N &lt;= 10000</code>.</li>\r\n\t<li>The value of each node in the linked list will be in the range<code> [0, N - 1]</code>.</li>\r\n\t<li><code>1 &lt;= G.length &lt;= 10000</code>.</li>\r\n\t<li><code>G</code> is a subset of all values in the linked list.</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"50.1K\", \"totalSubmission\": \"87.1K\", \"totalAcceptedRaw\": 50058, \"totalSubmissionRaw\": 87116, \"acRate\": \"57.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}]}}, {"id": "816", "name": "ambiguous-coordinates", "content": {"questionId": "834", "questionFrontendId": "816", "questionTitle": "Ambiguous Coordinates", "questionTitleSlug": "ambiguous-coordinates", "content": "<p>We had some 2-dimensional coordinates, like <code>&quot;(1, 3)&quot;</code> or <code>&quot;(2, 0.5)&quot;</code>.&nbsp; Then, we removed&nbsp;all commas, decimal points, and spaces, and ended up with the string&nbsp;<code>S</code>.&nbsp; Return a list of strings representing&nbsp;all possibilities for what our original coordinates could have been.</p>\r\n\r\n<p>Our original representation never had extraneous zeroes, so we never started with numbers like &quot;00&quot;, &quot;0.0&quot;, &quot;0.00&quot;, &quot;1.0&quot;, &quot;001&quot;, &quot;00.01&quot;, or any other number that can be represented with&nbsp;less digits.&nbsp; Also, a decimal point within a number never occurs without at least one digit occuring before it, so we never started with numbers like &quot;.1&quot;.</p>\r\n\r\n<p>The final answer list can be returned in any order.&nbsp; Also note that all coordinates in the final answer&nbsp;have exactly one space between them (occurring after the comma.)</p>\r\n\r\n<pre>\r\n<strong>Example 1:</strong>\r\n<strong>Input:</strong> &quot;(123)&quot;\r\n<strong>Output:</strong> [&quot;(1, 23)&quot;, &quot;(12, 3)&quot;, &quot;(1.2, 3)&quot;, &quot;(1, 2.3)&quot;]\r\n</pre>\r\n\r\n<pre>\r\n<strong>Example 2:</strong>\r\n<strong>Input:</strong> &quot;(00011)&quot;\r\n<strong>Output:</strong> &nbsp;[&quot;(0.001, 1)&quot;, &quot;(0, 0.011)&quot;]\r\n<strong>Explanation:</strong> \r\n0.0, 00, 0001 or 00.01 are not allowed.\r\n</pre>\r\n\r\n<pre>\r\n<strong>Example 3:</strong>\r\n<strong>Input:</strong> &quot;(0123)&quot;\r\n<strong>Output:</strong> [&quot;(0, 123)&quot;, &quot;(0, 12.3)&quot;, &quot;(0, 1.23)&quot;, &quot;(0.1, 23)&quot;, &quot;(0.1, 2.3)&quot;, &quot;(0.12, 3)&quot;]\r\n</pre>\r\n\r\n<pre>\r\n<strong>Example 4:</strong>\r\n<strong>Input:</strong> &quot;(100)&quot;\r\n<strong>Output:</strong> [(10, 0)]\r\n<strong>Explanation:</strong> \r\n1.0 is not allowed.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>4 &lt;= S.length &lt;= 12</code>.</li>\r\n\t<li><code>S[0]</code> = &quot;(&quot;, <code>S[S.length - 1]</code> = &quot;)&quot;, and the other elements in <code>S</code> are digits.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"10.6K\", \"totalSubmission\": \"22.2K\", \"totalAcceptedRaw\": 10617, \"totalSubmissionRaw\": 22212, \"acRate\": \"47.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "814", "name": "binary-tree-pruning", "content": {"questionId": "832", "questionFrontendId": "814", "questionTitle": "Binary Tree Pruning", "questionTitleSlug": "binary-tree-pruning", "content": "<p>We are given the head node <code>root</code>&nbsp;of a binary tree, where additionally every node&#39;s value is either a 0 or a 1.</p>\n\n<p>Return the same tree where every subtree (of the given tree) not containing a 1 has been removed.</p>\n\n<p>(Recall that the subtree of a node X is X, plus every node that is a descendant of X.)</p>\n\n<pre>\n<strong>Example 1:</strong>\n<strong>Input:</strong> [1,null,0,0,1]\n<strong>Output: </strong>[1,null,0,null,1]\n \n<strong>Explanation:</strong> \nOnly the red nodes satisfy the property &quot;every subtree not containing a 1&quot;.\nThe diagram on the right represents the answer.\n\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/06/1028_2.png\" style=\"width:450px\" />\n</pre>\n\n<pre>\n<strong>Example 2:</strong>\n<strong>Input:</strong> [1,0,1,0,0,0,1]\n<strong>Output: </strong>[1,null,1,null,1]\n\n\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/06/1028_1.png\" style=\"width:450px\" />\n</pre>\n\n<pre>\n<strong>Example 3:</strong>\n<strong>Input:</strong> [1,1,0,1,1,0,1,0]\n<strong>Output: </strong>[1,1,0,1,1,null,1]\n\n\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/05/1028.png\" style=\"width:450px\" />\n</pre>\n\n<p><strong>Note: </strong></p>\n\n<ul>\n\t<li>The binary tree&nbsp;will&nbsp;have&nbsp;at&nbsp;most <code>200 nodes</code>.</li>\n\t<li>The value of each node will only be <code>0</code> or <code>1</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"76.2K\", \"totalSubmission\": \"104.3K\", \"totalAcceptedRaw\": 76213, \"totalSubmissionRaw\": 104324, \"acRate\": \"73.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "813", "name": "largest-sum-of-averages", "content": {"questionId": "831", "questionFrontendId": "813", "questionTitle": "Largest Sum of Averages", "questionTitleSlug": "largest-sum-of-averages", "content": "<p>We partition a row of numbers <code>A</code>&nbsp;into at most <code>K</code> adjacent (non-empty) groups, then our score is the sum of the average of each group. What is the largest score we can achieve?</p>\r\n\r\n<p>Note that our partition must use every number in A, and that scores are not necessarily integers.</p>\r\n\r\n<pre>\r\n<strong>Example:</strong>\r\n<strong>Input:</strong> \r\nA = [9,1,2,3,9]\r\nK = 3\r\n<strong>Output:</strong> 20\r\n<strong>Explanation:</strong> \r\nThe best choice is to partition A into [9], [1, 2, 3], [9]. The answer is 9 + (1 + 2 + 3) / 3 + 9 = 20.\r\nWe could have also partitioned A into [9, 1], [2], [3, 9], for example.\r\nThat partition would lead to a score of 5 + 2 + 6 = 13, which is worse.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= A.length &lt;= 100</code>.</li>\r\n\t<li><code>1 &lt;= A[i] &lt;= 10000</code>.</li>\r\n\t<li><code>1 &lt;= K &lt;= A.length</code>.</li>\r\n\t<li>Answers within <code>10^-6</code> of the correct answer will be accepted as correct.</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"28.2K\", \"totalSubmission\": \"55.7K\", \"totalAcceptedRaw\": 28246, \"totalSubmissionRaw\": 55697, \"acRate\": \"50.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "809", "name": "expressive-words", "content": {"questionId": "827", "questionFrontendId": "809", "questionTitle": "Expressive Words", "questionTitleSlug": "expressive-words", "content": "<p>Sometimes people repeat letters to represent extra feeling, such as &quot;hello&quot; -&gt; &quot;heeellooo&quot;, &quot;hi&quot; -&gt; &quot;hiiii&quot;.&nbsp; In these strings like &quot;heeellooo&quot;, we have <em>groups</em> of adjacent letters that are all the same:&nbsp; &quot;h&quot;, &quot;eee&quot;, &quot;ll&quot;, &quot;ooo&quot;.</p>\n\n<p>For some given string <code>S</code>, a query word is <em>stretchy</em> if it can be made to be equal to <code>S</code> by any&nbsp;number of&nbsp;applications of the following <em>extension</em> operation: choose a group consisting of&nbsp;characters <code>c</code>, and add some number of characters <code>c</code> to the group so that the size of the group is 3 or more.</p>\n\n<p>For example, starting with &quot;hello&quot;, we could do an extension on the group &quot;o&quot; to get &quot;hellooo&quot;, but we cannot get &quot;helloo&quot; since the group &quot;oo&quot; has size less than 3.&nbsp; Also, we could do another extension like &quot;ll&quot; -&gt; &quot;lllll&quot; to get &quot;helllllooo&quot;.&nbsp; If <code>S = &quot;helllllooo&quot;</code>, then the query word &quot;hello&quot; would be stretchy because of these two extension operations:&nbsp;<code>query = &quot;hello&quot; -&gt; &quot;hellooo&quot; -&gt;&nbsp;&quot;helllllooo&quot; = S</code>.</p>\n\n<p>Given a list of query words, return the number of words that are stretchy.&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<pre>\n<strong>Example:</strong>\n<strong>Input:</strong> \nS = &quot;heeellooo&quot;\nwords = [&quot;hello&quot;, &quot;hi&quot;, &quot;helo&quot;]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> \nWe can extend &quot;e&quot; and &quot;o&quot; in the word &quot;hello&quot; to get &quot;heeellooo&quot;.\nWe can&#39;t extend &quot;helo&quot; to get &quot;heeellooo&quot; because the group &quot;ll&quot; is not size 3 or more.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= len(S) &lt;= 100</code>.</li>\n\t<li><code>0 &lt;= len(words) &lt;= 100</code>.</li>\n\t<li><code>0 &lt;= len(words[i]) &lt;= 100</code>.</li>\n\t<li><code>S</code> and all words in <code>words</code>&nbsp;consist only of&nbsp;lowercase letters</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"58K\", \"totalSubmission\": \"124.5K\", \"totalAcceptedRaw\": 58025, \"totalSubmissionRaw\": 124470, \"acRate\": \"46.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "808", "name": "soup-servings", "content": {"questionId": "826", "questionFrontendId": "808", "questionTitle": "Soup Servings", "questionTitleSlug": "soup-servings", "content": "<p>There are two types of soup: type A and type B. Initially we have <code>N</code> ml of each type of soup. There are four kinds of operations:</p>\r\n\r\n<ol>\r\n\t<li>Serve&nbsp;100 ml of soup A and 0 ml of soup B</li>\r\n\t<li>Serve&nbsp;75 ml of soup A and 25&nbsp;ml of soup B</li>\r\n\t<li>Serve 50 ml of soup A and 50 ml of soup B</li>\r\n\t<li>Serve 25&nbsp;ml of soup A and 75&nbsp;ml of soup B</li>\r\n</ol>\r\n\r\n<p>When we serve some soup, we give it to someone and we no longer have it.&nbsp; Each turn,&nbsp;we will choose from the four operations with equal probability 0.25. If the remaining volume of soup is not enough to complete the operation, we will serve&nbsp;as much as we can.&nbsp; We stop once we no longer have some quantity of both types of soup.</p>\r\n\r\n<p>Note that we do not have the operation where all 100 ml&#39;s of soup B are used first.&nbsp;&nbsp;</p>\r\n\r\n<p>Return the probability that soup A will be empty&nbsp;first, plus half the probability that A and B become empty at the same time.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n<strong>Example:</strong>\r\n<strong>Input:</strong> N = 50\r\n<strong>Output:</strong> 0.625\r\n<strong>Explanation:</strong> \r\nIf we choose the first two operations, A will become empty first. For the third operation, A and B will become empty at the same time. For the fourth operation, B will become empty first. So the total probability of A becoming empty first plus half the probability that A and B become empty at the same time, is 0.25 * (1 + 1 + 0.5 + 0) = 0.625.\r\n\r\n</pre>\r\n\r\n<p><strong>Notes: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= N &lt;= 10^9</code>.&nbsp;</li>\r\n\t<li>Answers within&nbsp;<code>10^-6</code>&nbsp;of the true value will be accepted as correct.</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11K\", \"totalSubmission\": \"27.1K\", \"totalAcceptedRaw\": 11038, \"totalSubmissionRaw\": 27142, \"acRate\": \"40.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "807", "name": "max-increase-to-keep-city-skyline", "content": {"questionId": "825", "questionFrontendId": "807", "questionTitle": "Max Increase to Keep City Skyline", "questionTitleSlug": "max-increase-to-keep-city-skyline", "content": "<p>In a 2 dimensional array <code>grid</code>, each value <code>grid[i][j]</code> represents the height of a building located there. We are allowed to increase the height of any number of buildings, by any amount (the amounts&nbsp;can be different for different buildings). Height&nbsp;0 is considered to be a&nbsp;building&nbsp;as well.&nbsp;</p>\r\n\r\n<p>At the end, the &quot;skyline&quot; when viewed from all four directions&nbsp;of the grid, i.e.&nbsp;top, bottom, left, and right,&nbsp;must be the same as the&nbsp;skyline of the original grid. A city&#39;s skyline is the outer contour of the rectangles formed by all the buildings when viewed from a distance. See&nbsp;the following example.</p>\r\n\r\n<p>What is the maximum total sum that the height of the buildings can be increased?</p>\r\n\r\n<pre>\r\n<strong>Example:</strong>\r\n<strong>Input:</strong> grid = [[3,0,8,4],[2,4,5,7],[9,2,6,3],[0,3,1,0]]\r\n<strong>Output:</strong> 35\r\n<strong>Explanation:</strong> \r\nThe grid is:\r\n[ [3, 0, 8, 4], \r\n  [2, 4, 5, 7],\r\n  [9, 2, 6, 3],\r\n  [0, 3, 1, 0] ]\r\n\r\nThe skyline viewed from top or bottom is: [9, 4, 8, 7]\r\nThe skyline viewed from left or right is: [8, 7, 9, 3]\r\n\r\nThe grid after increasing the height of buildings without affecting skylines is:\r\n\r\ngridNew = [ [8, 4, 8, 7],\r\n            [7, 4, 7, 7],\r\n            [9, 4, 8, 7],\r\n            [3, 3, 3, 3] ]\r\n\r\n</pre>\r\n\r\n<p><strong>Notes: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt; grid.length = grid[0].length &lt;= 50</code>.</li>\r\n\t<li>All heights <code>grid[i][j]</code> are in the range <code>[0, 100]</code>.</li>\r\n\t<li>All buildings in <code>grid[i][j]</code> occupy the entire grid cell: that is, they are a <code>1 x 1 x grid[i][j]</code> rectangular prism.</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"92.1K\", \"totalSubmission\": \"109.3K\", \"totalAcceptedRaw\": 92060, \"totalSubmissionRaw\": 109344, \"acRate\": \"84.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "802", "name": "find-eventual-safe-states", "content": {"questionId": "820", "questionFrontendId": "802", "questionTitle": "Find Eventual Safe States", "questionTitleSlug": "find-eventual-safe-states", "content": "<p>We start at some node in a directed graph, and every turn, we walk along a directed edge of the graph. If we reach a terminal node (that is, it has no outgoing directed edges), we stop.</p>\n\n<p>We define a starting node to be <strong>safe</strong> if we must eventually walk to a terminal node. More specifically, there is a natural number <code>k</code>, so that we must have stopped at a terminal node in less than <code>k</code> steps for <strong>any choice of where to walk</strong>.</p>\n\n<p>Return <em>an array containing all the safe nodes of the graph</em>. The answer should be sorted in <strong>ascending</strong> order.</p>\n\n<p>The directed graph has <code>n</code> nodes with labels from <code>0</code> to <code>n - 1</code>, where <code>n</code> is the length of <code>graph</code>. The graph is given in the following form: <code>graph[i]</code> is a list of labels <code>j</code> such that <code>(i, j)</code> is a directed edge of the graph, going from node <code>i</code> to node <code>j</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"Illustration of graph\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/03/17/picture1.png\" style=\"height: 171px; width: 600px;\" />\n<pre>\n<strong>Input:</strong> graph = [[1,2],[2,3],[5],[0],[5],[],[]]\n<strong>Output:</strong> [2,4,5,6]\n<strong>Explanation:</strong> The given graph is shown above.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> graph = [[1,2,3,4],[1,2],[3,4],[0,4],[]]\n<strong>Output:</strong> [4]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == graph.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= graph[i].legnth &lt;= n</code></li>\n\t<li><code>graph[i]</code> is sorted in a strictly increasing order.</li>\n\t<li>The graph may contain self-loops.</li>\n\t<li>The number of edges in the graph will be in the range <code>[1, 4 * 10<sup>4</sup>]</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"46.4K\", \"totalSubmission\": \"93.8K\", \"totalAcceptedRaw\": 46442, \"totalSubmissionRaw\": 93784, \"acRate\": \"49.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "801", "name": "minimum-swaps-to-make-sequences-increasing", "content": {"questionId": "819", "questionFrontendId": "801", "questionTitle": "Minimum Swaps To Make Sequences Increasing", "questionTitleSlug": "minimum-swaps-to-make-sequences-increasing", "content": "<p>We have two integer sequences <code>A</code> and <code>B</code> of the same non-zero length.</p>\r\n\r\n<p>We are allowed to swap elements <code>A[i]</code> and <code>B[i]</code>.&nbsp; Note that both elements are in the same index position in their respective sequences.</p>\r\n\r\n<p>At the end of some number of swaps, <code>A</code> and <code>B</code> are both strictly increasing.&nbsp; (A sequence is <em>strictly increasing</em> if and only if <code>A[0] &lt; A[1] &lt; A[2] &lt; ... &lt; A[A.length - 1]</code>.)</p>\r\n\r\n<p>Given A and B, return the minimum number of swaps to make both sequences strictly increasing.&nbsp; It is guaranteed that the given input always makes it possible.</p>\r\n\r\n<pre>\r\n<strong>Example:</strong>\r\n<strong>Input:</strong> A = [1,3,5,4], B = [1,2,3,7]\r\n<strong>Output:</strong> 1\r\n<strong>Explanation: </strong>\r\nSwap A[3] and B[3].  Then the sequences are:\r\nA = [1, 3, 5, 7] and B = [1, 2, 3, 4]\r\nwhich are both strictly increasing.\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>A, B</code> are arrays with the same length, and that length will be in the range <code>[1, 1000]</code>.</li>\r\n\t<li><code>A[i], B[i]</code> are integer values in the range <code>[0, 2000]</code>.</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"38.1K\", \"totalSubmission\": \"97.7K\", \"totalAcceptedRaw\": 38101, \"totalSubmissionRaw\": 97680, \"acRate\": \"39.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "799", "name": "champagne-tower", "content": {"questionId": "815", "questionFrontendId": "799", "questionTitle": "Champagne Tower", "questionTitleSlug": "champagne-tower", "content": "<p>We stack glasses in a pyramid, where the <strong>first</strong> row has <code>1</code> glass, the <strong>second</strong> row has <code>2</code> glasses, and so on until the 100<sup>th</sup> row.&nbsp; Each glass holds one cup&nbsp;of champagne.</p>\r\n\r\n<p>Then, some champagne is poured into the first glass at the top.&nbsp; When the topmost glass is full, any excess liquid poured will fall equally to the glass immediately to the left and right of it.&nbsp; When those glasses become full, any excess champagne will fall equally to the left and right of those glasses, and so on.&nbsp; (A glass at the bottom row has its excess champagne fall on the floor.)</p>\r\n\r\n<p>For example, after one cup of champagne is poured, the top most glass is full.&nbsp; After two cups of champagne are poured, the two glasses on the second row are half full.&nbsp; After three cups of champagne are poured, those two cups become full - there are 3 full glasses total now.&nbsp; After four cups of champagne are poured, the third row has the middle glass half full, and the two outside glasses are a quarter full, as pictured below.</p>\r\n\r\n<p><img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/03/09/tower.png\" style=\"height: 241px; width: 350px;\" /></p>\r\n\r\n<p>Now after pouring some non-negative integer cups of champagne, return how full the <code>j<sup>th</sup></code> glass in the <code>i<sup>th</sup></code> row is (both <code>i</code> and <code>j</code> are 0-indexed.)</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> poured = 1, query_row = 1, query_glass = 1\r\n<strong>Output:</strong> 0.00000\r\n<strong>Explanation:</strong> We poured 1 cup of champange to the top glass of the tower (which is indexed as (0, 0)). There will be no excess liquid so all the glasses under the top glass will remain empty.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> poured = 2, query_row = 1, query_glass = 1\r\n<strong>Output:</strong> 0.50000\r\n<strong>Explanation:</strong> We poured 2 cups of champange to the top glass of the tower (which is indexed as (0, 0)). There is one cup of excess liquid. The glass indexed as (1, 0) and the glass indexed as (1, 1) will share the excess liquid equally, and each will get half cup of champange.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> poured = 100000009, query_row = 33, query_glass = 17\r\n<strong>Output:</strong> 1.00000\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;=&nbsp;poured &lt;= 10<sup>9</sup></code></li>\r\n\t<li><code>0 &lt;= query_glass &lt;= query_row&nbsp;&lt; 100</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"31.5K\", \"totalSubmission\": \"71.7K\", \"totalAcceptedRaw\": 31534, \"totalSubmissionRaw\": 71749, \"acRate\": \"44.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "797", "name": "all-paths-from-source-to-target", "content": {"questionId": "813", "questionFrontendId": "797", "questionTitle": "All Paths From Source to Target", "questionTitleSlug": "all-paths-from-source-to-target", "content": "<p>Given a directed&nbsp;acyclic graph (<strong>DAG</strong>) of <code>n</code> nodes labeled from 0 to n - 1,&nbsp;find all possible paths from node <code>0</code> to node <code>n - 1</code>, and return them in any order.</p>\n\n<p>The graph is given as follows:&nbsp;<code>graph[i]</code> is a list of all nodes you can visit from node <code>i</code>&nbsp;(i.e., there is a directed edge from node <code>i</code> to node <code>graph[i][j]</code>).</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/28/all_1.jpg\" style=\"width: 242px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> graph = [[1,2],[3],[3],[]]\n<strong>Output:</strong> [[0,1,3],[0,2,3]]\n<strong>Explanation:</strong> There are two paths: 0 -&gt; 1 -&gt; 3 and 0 -&gt; 2 -&gt; 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/28/all_2.jpg\" style=\"width: 423px; height: 301px;\" />\n<pre>\n<strong>Input:</strong> graph = [[4,3,1],[3,2,4],[3],[4],[]]\n<strong>Output:</strong> [[0,4],[0,3,4],[0,1,3,4],[0,1,2,3,4],[0,1,4]]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> graph = [[1],[]]\n<strong>Output:</strong> [[0,1]]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> graph = [[1,2,3],[2],[3],[]]\n<strong>Output:</strong> [[0,1,2,3],[0,2,3],[0,3]]\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> graph = [[1,3],[2],[3],[]]\n<strong>Output:</strong> [[0,1,2,3],[0,3]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == graph.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 15</code></li>\n\t<li><code>0 &lt;= graph[i][j] &lt; n</code></li>\n\t<li><code>graph[i][j] != i</code> (i.e., there will be no self-loops).</li>\n\t<li>The input graph is <strong>guaranteed</strong> to be a <strong>DAG</strong>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"106.6K\", \"totalSubmission\": \"136.1K\", \"totalAcceptedRaw\": 106589, \"totalSubmissionRaw\": 136099, \"acRate\": \"78.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "795", "name": "number-of-subarrays-with-bounded-maximum", "content": {"questionId": "811", "questionFrontendId": "795", "questionTitle": "Number of Subarrays with Bounded Maximum", "questionTitleSlug": "number-of-subarrays-with-bounded-maximum", "content": "<p>We are given an array <code>A</code> of positive integers, and two positive integers <code>L</code> and <code>R</code> (<code>L &lt;= R</code>).</p>\r\n\r\n<p>Return the number of (contiguous, non-empty) subarrays such that the value of the maximum array element in that subarray is at least <code>L</code> and at most <code>R</code>.</p>\r\n\r\n<pre>\r\n<strong>Example :</strong>\r\n<strong>Input:</strong> \r\nA = [2, 1, 4, 3]\r\nL = 2\r\nR = 3\r\n<strong>Output:</strong> 3\r\n<strong>Explanation:</strong> There are three subarrays that meet the requirements: [2], [2, 1], [3].\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li>L, R&nbsp; and <code>A[i]</code> will be an integer in the range <code>[0, 10^9]</code>.</li>\r\n\t<li>The length of <code>A</code> will be in the range of <code>[1, 50000]</code>.</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"21.5K\", \"totalSubmission\": \"45.6K\", \"totalAcceptedRaw\": 21512, \"totalSubmissionRaw\": 45638, \"acRate\": \"47.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "794", "name": "valid-tic-tac-toe-state", "content": {"questionId": "810", "questionFrontendId": "794", "questionTitle": "Valid Tic-Tac-Toe State", "questionTitleSlug": "valid-tic-tac-toe-state", "content": "<p>A Tic-Tac-Toe board is given as a string array <code>board</code>. Return True if and only if it is possible to reach this board position during the course of a valid tic-tac-toe game.</p>\r\n\r\n<p>The <code>board</code> is a 3 x 3 array, and consists of characters <code>&quot; &quot;</code>, <code>&quot;X&quot;</code>, and <code>&quot;O&quot;</code>.&nbsp; The &quot; &quot; character represents an empty square.</p>\r\n\r\n<p>Here are the rules of Tic-Tac-Toe:</p>\r\n\r\n<ul>\r\n\t<li>Players take turns placing characters into empty squares (&quot; &quot;).</li>\r\n\t<li>The first player always places &quot;X&quot; characters, while the second player always places &quot;O&quot; characters.</li>\r\n\t<li>&quot;X&quot; and &quot;O&quot; characters are always placed into empty squares, never filled ones.</li>\r\n\t<li>The game ends when there are 3 of the same (non-empty) character filling any row, column, or diagonal.</li>\r\n\t<li>The game also ends if all squares are non-empty.</li>\r\n\t<li>No more moves can be played if the game is over.</li>\r\n</ul>\r\n\r\n<pre>\r\n<strong>Example 1:</strong>\r\n<strong>Input:</strong> board = [&quot;O&nbsp; &quot;, &quot;&nbsp; &nbsp;&quot;, &quot;&nbsp; &nbsp;&quot;]\r\n<strong>Output:</strong> false\r\n<strong>Explanation:</strong> The first player always plays &quot;X&quot;.\r\n\r\n<strong>Example 2:</strong>\r\n<strong>Input:</strong> board = [&quot;XOX&quot;, &quot; X &quot;, &quot;   &quot;]\r\n<strong>Output:</strong> false\r\n<strong>Explanation:</strong> Players take turns making moves.\r\n\r\n<strong>Example 3:</strong>\r\n<strong>Input:</strong> board = [&quot;XXX&quot;, &quot;   &quot;, &quot;OOO&quot;]\r\n<strong>Output:</strong> false\r\n\r\n<strong>Example 4:</strong>\r\n<strong>Input:</strong> board = [&quot;XOX&quot;, &quot;O O&quot;, &quot;XOX&quot;]\r\n<strong>Output:</strong> true\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>board</code> is a length-3 array of strings, where each string <code>board[i]</code> has length 3.</li>\r\n\t<li>Each <code>board[i][j]</code> is a character in the set <code>{&quot; &quot;, &quot;X&quot;, &quot;O&quot;}</code>.</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"30.2K\", \"totalSubmission\": \"89.9K\", \"totalAcceptedRaw\": 30246, \"totalSubmissionRaw\": 89906, \"acRate\": \"33.6%\"}", "similarQuestions": "[{\"title\": \"Design Tic-Tac-Toe\", \"titleSlug\": \"design-tic-tac-toe\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Recursion", "slug": "recursion"}]}}, {"id": "792", "name": "number-of-matching-subsequences", "content": {"questionId": "808", "questionFrontendId": "792", "questionTitle": "Number of Matching Subsequences", "questionTitleSlug": "number-of-matching-subsequences", "content": "<p>Given string <code>S</code> and a&nbsp;dictionary of words <code>words</code>, find the number of <code>words[i]</code> that is a subsequence of <code>S</code>.</p>\r\n\r\n<pre>\r\n<strong>Example :</strong>\r\n<strong>Input:</strong> \r\nS = &quot;abcde&quot;\r\nwords = [&quot;a&quot;, &quot;bb&quot;, &quot;acd&quot;, &quot;ace&quot;]\r\n<strong>Output:</strong> 3\r\n<strong>Explanation:</strong> There are three words in <code>words</code> that are a subsequence of <code>S</code>: &quot;a&quot;, &quot;acd&quot;, &quot;ace&quot;.\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li>All words in <code>words</code> and <code>S</code> will only consists of lowercase letters.</li>\r\n\t<li>The length of <code>S</code> will be in the range of <code>[1, 50000]</code>.</li>\r\n\t<li>The length of <code>words</code> will be in the range of&nbsp;<code>[1, 5000]</code>.</li>\r\n\t<li>The length of <code>words[i]</code> will be in the range of <code>[1, 50]</code>.</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"49.7K\", \"totalSubmission\": \"103.6K\", \"totalAcceptedRaw\": 49679, \"totalSubmissionRaw\": 103578, \"acRate\": \"48.0%\"}", "similarQuestions": "[{\"title\": \"Is Subsequence\", \"titleSlug\": \"is-subsequence\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Shortest Way to Form String\", \"titleSlug\": \"shortest-way-to-form-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "791", "name": "custom-sort-string", "content": {"questionId": "807", "questionFrontendId": "791", "questionTitle": "Custom Sort String", "questionTitleSlug": "custom-sort-string", "content": "<p><code>S</code> and <code>T</code> are strings composed of lowercase letters. In <code>S</code>, no letter occurs more than once.</p>\r\n\r\n<p><code>S</code> was sorted in some custom order previously. We want to permute the characters of <code>T</code> so that they match the order that <code>S</code> was sorted. More specifically, if <code>x</code> occurs before <code>y</code> in <code>S</code>, then <code>x</code> should occur before <code>y</code> in the returned string.</p>\r\n\r\n<p>Return any permutation of <code>T</code> (as a string) that satisfies this property.</p>\r\n\r\n<pre>\r\n<strong>Example :</strong>\r\n<strong>Input:</strong> \r\nS = &quot;cba&quot;\r\nT = &quot;abcd&quot;\r\n<strong>Output:</strong> &quot;cbad&quot;\r\n<strong>Explanation:</strong> \r\n&quot;a&quot;, &quot;b&quot;, &quot;c&quot; appear in S, so the order of &quot;a&quot;, &quot;b&quot;, &quot;c&quot; should be &quot;c&quot;, &quot;b&quot;, and &quot;a&quot;. \r\nSince &quot;d&quot; does not appear in S, it can be at any position in T. &quot;dcba&quot;, &quot;cdba&quot;, &quot;cbda&quot; are also valid outputs.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>S</code> has length at most <code>26</code>, and no character is repeated in <code>S</code>.</li>\r\n\t<li><code>T</code> has length at most <code>200</code>.</li>\r\n\t<li><code>S</code> and <code>T</code> consist of lowercase letters only.</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"80K\", \"totalSubmission\": \"121.5K\", \"totalAcceptedRaw\": 79990, \"totalSubmissionRaw\": 121531, \"acRate\": \"65.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "790", "name": "domino-and-tromino-tiling", "content": {"questionId": "806", "questionFrontendId": "790", "questionTitle": "Domino and Tromino Tiling", "questionTitleSlug": "domino-and-tromino-tiling", "content": "<p>We have two types of tiles: a 2x1 domino shape, and an &quot;L&quot; tromino shape. These shapes may be rotated.</p>\r\n\r\n<pre>\r\nXX  &lt;- domino\r\n\r\nXX  &lt;- &quot;L&quot; tromino\r\nX\r\n</pre>\r\n\r\n<p>Given N, how many ways are there to tile a 2 x N board? <strong>Return your answer modulo 10^9 + 7</strong>.</p>\r\n\r\n<p>(In a tiling, every square must be covered by a tile. Two tilings are different if and only if there are two 4-directionally adjacent cells on the board such that exactly one of the tilings has both squares occupied by a tile.)</p>\r\n\r\n\r\n<pre>\r\n<strong>Example:</strong>\r\n<strong>Input:</strong> 3\r\n<strong>Output:</strong> 5\r\n<strong>Explanation:</strong> \r\nThe five different ways are listed below, different letters indicates different tiles:\r\nXYZ XXZ XYY XXY XYY\r\nXYZ YYZ XZZ XYY XXY</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li>N&nbsp; will be in range <code>[1, 1000]</code>.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"17.2K\", \"totalSubmission\": \"43.2K\", \"totalAcceptedRaw\": 17153, \"totalSubmissionRaw\": 43176, \"acRate\": \"39.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "789", "name": "escape-the-ghosts", "content": {"questionId": "805", "questionFrontendId": "789", "questionTitle": "Escape The Ghosts", "questionTitleSlug": "escape-the-ghosts", "content": "<p>You are playing a simplified PAC-MAN game on an infinite 2-D grid. You start at the point <code>[0, 0]</code>, and you are given a destination point <code>target = [x<sub>target</sub>, y<sub>target</sub>]</code>, which you are trying to get to. There are several ghosts on the map with their starting positions given as an array <code>ghosts</code>, where <code>ghosts[i] = [x<sub>i</sub>, y<sub>i</sub>]</code> represents the starting position of the <code>i<sup>th</sup></code> ghost. All inputs are <strong>integral coordinates</strong>.</p>\n\n<p>Each turn, you and all the ghosts may independently choose to either <strong>move 1 unit</strong> in any of the four cardinal directions: north, east, south, or west or <strong>stay still</strong>. All actions happen <strong>simultaneously</strong>.</p>\n\n<p>You escape if and only if you can reach the target <strong>before</strong> any ghost reaches you. If you reach any square (including the target) at the <strong>same time</strong> as a ghost, it <strong>does not</strong> count as an escape.</p>\n\n<p>Return <code>true</code><em> if it is possible to escape, otherwise return </em><code>false</code><em>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> ghosts = [[1,0],[0,3]], target = [0,1]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> You can reach the destination (0, 1) after 1 turn, while the ghosts located at (1, 0) and (0, 3) cannot catch up with you.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> ghosts = [[1,0]], target = [2,0]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> You need to reach the destination (2, 0), but the ghost at (1, 0) lies between you and the destination.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> ghosts = [[2,0]], target = [1,0]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The ghost can reach the target at the same time as you.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> ghosts = [[5,0],[-10,-2],[0,-5],[-2,-2],[-7,1]], target = [7,7]\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> ghosts = [[-1,0],[0,1],[-1,0],[0,1],[-1,0]], target = [0,0]\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= ghosts.length &lt;= 100</code></li>\n\t<li><code>ghosts[i].length == 2</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= x<sub>i</sub>, y<sub>i</sub> &lt;= 10<sup>4</sup></code></li>\n\t<li>There can be <strong>multiple ghosts</strong> in the same location.</li>\n\t<li><code>target.length == 2</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= x<sub>target</sub>, y<sub>target</sub> &lt;= 10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"16.2K\", \"totalSubmission\": \"28K\", \"totalAcceptedRaw\": 16250, \"totalSubmissionRaw\": 28022, \"acRate\": \"58.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "787", "name": "cheapest-flights-within-k-stops", "content": {"questionId": "803", "questionFrontendId": "787", "questionTitle": "Cheapest Flights Within K Stops", "questionTitleSlug": "cheapest-flights-within-k-stops", "content": "<p>There are <code>n</code> cities connected by&nbsp;<code>m</code> flights. Each flight starts from city&nbsp;<code>u</code> and arrives at&nbsp;<code>v</code> with a price <code>w</code>.</p>\n\n<p>Now given all the cities and flights, together with starting city <code>src</code> and the destination&nbsp;<code>dst</code>, your task is to find the cheapest price from <code>src</code> to <code>dst</code> with up to <code>k</code> stops. If there is no such route, output <code>-1</code>.</p>\n\n<pre>\n<strong>Example 1:</strong>\n<strong>Input:</strong> \nn = 3, edges = [[0,1,100],[1,2,100],[0,2,500]]\nsrc = 0, dst = 2, k = 1\n<strong>Output:</strong> 200\n<strong>Explanation:</strong> \nThe graph looks like this:\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/02/16/995.png\" style=\"height:180px; width:246px\" />\n\nThe cheapest price from city <code>0</code> to city <code>2</code> with at most 1 stop costs 200, as marked red in the picture.</pre>\n\n<pre>\n<strong>Example 2:</strong>\n<strong>Input:</strong> \nn = 3, edges = [[0,1,100],[1,2,100],[0,2,500]]\nsrc = 0, dst = 2, k = 0\n<strong>Output:</strong> 500\n<strong>Explanation:</strong> \nThe graph looks like this:\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/02/16/995.png\" style=\"height:180px; width:246px\" />\n\nThe cheapest price from city <code>0</code> to city <code>2</code> with at most 0 stop costs 500, as marked blue in the picture.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of&nbsp;nodes&nbsp;<code>n</code> will be&nbsp;in range <code>[1, 100]</code>, with nodes labeled from <code>0</code> to <code>n</code><code> - 1</code>.</li>\n\t<li>The&nbsp;size of <code>flights</code> will be&nbsp;in range <code>[0, n * (n - 1) / 2]</code>.</li>\n\t<li>The format of each flight will be <code>(src, </code><code>dst</code><code>, price)</code>.</li>\n\t<li>The price of each flight will be in the range <code>[1, 10000]</code>.</li>\n\t<li><code>k</code> is in the range of <code>[0, n - 1]</code>.</li>\n\t<li>There&nbsp;will&nbsp;not&nbsp;be&nbsp;any&nbsp;duplicated&nbsp;flights or&nbsp;self&nbsp;cycles.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"134.2K\", \"totalSubmission\": \"340.4K\", \"totalAcceptedRaw\": 134236, \"totalSubmissionRaw\": 340415, \"acRate\": \"39.4%\"}", "similarQuestions": "[{\"title\": \"Maximum Vacation Days\", \"titleSlug\": \"maximum-vacation-days\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Heap", "slug": "heap"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "785", "name": "is-graph-bipartite", "content": {"questionId": "801", "questionFrontendId": "785", "questionTitle": "Is Graph Bipartite?", "questionTitleSlug": "is-graph-bipartite", "content": "<p>Given an undirected <code>graph</code>, return <code>true</code> if and only if it is bipartite.</p>\n\n<p>Recall that a graph is <em>bipartite</em> if we can split its set of nodes into two independent subsets A and B, such that every edge in the graph has one node in A and another node in B.</p>\n\n<p>The graph is given in the following form: <code>graph[i]</code> is a list of indexes <code>j</code> for which the edge between nodes <code>i</code> and <code>j</code> exists.&nbsp; Each node is an integer between <code>0</code> and <code>graph.length - 1</code>.&nbsp; There are no self edges or parallel edges: <code>graph[i]</code> does not contain <code>i</code>, and it doesn&#39;t contain any element twice.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/21/bi1.jpg\" style=\"width: 222px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> graph = [[1,3],[0,2],[1,3],[0,2]]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> We can divide the vertices into two groups: {0, 2} and {1, 3}.\n\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/21/bi2.jpg\" style=\"width: 222px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> graph = [[1,2,3],[0,2],[0,1,3],[0,2]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> We cannot find a way to divide the set of nodes into two independent subsets.\n\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= graph.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= graph[i].length &lt; 100</code></li>\n\t<li><code>0 &lt;= graph[i][j] &lt;= graph.length - 1</code></li>\n\t<li><code>graph[i][j] != i</code></li>\n\t<li>All the values of <code>graph[i]</code> are <strong>unique</strong>.</li>\n\t<li>The graph is <strong>guaranteed</strong> to be <strong>undirected</strong>.&nbsp;</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"151.7K\", \"totalSubmission\": \"315.5K\", \"totalAcceptedRaw\": 151716, \"totalSubmissionRaw\": 315494, \"acRate\": \"48.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "784", "name": "letter-case-permutation", "content": {"questionId": "800", "questionFrontendId": "784", "questionTitle": "Letter Case Permutation", "questionTitleSlug": "letter-case-permutation", "content": "<p>Given a string S, we can transform every letter individually&nbsp;to be lowercase or uppercase to create another string.</p>\n\n<p>Return <em>a list of all possible strings we could create</em>. You can return the output&nbsp;in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> S = &quot;a1b2&quot;\n<strong>Output:</strong> [&quot;a1b2&quot;,&quot;a1B2&quot;,&quot;A1b2&quot;,&quot;A1B2&quot;]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> S = &quot;3z4&quot;\n<strong>Output:</strong> [&quot;3z4&quot;,&quot;3Z4&quot;]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> S = &quot;12345&quot;\n<strong>Output:</strong> [&quot;12345&quot;]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> S = &quot;0&quot;\n<strong>Output:</strong> [&quot;0&quot;]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>S</code> will be a string with length between <code>1</code> and <code>12</code>.</li>\n\t<li><code>S</code> will consist only of letters or digits.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"106.8K\", \"totalSubmission\": \"161.9K\", \"totalAcceptedRaw\": 106827, \"totalSubmissionRaw\": 161938, \"acRate\": \"66.0%\"}", "similarQuestions": "[{\"title\": \"Subsets\", \"titleSlug\": \"subsets\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Brace Expansion\", \"titleSlug\": \"brace-expansion\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "781", "name": "rabbits-in-forest", "content": {"questionId": "797", "questionFrontendId": "781", "questionTitle": "Rabbits in Forest", "questionTitleSlug": "rabbits-in-forest", "content": "<p>In a forest, each rabbit has some color. Some subset of rabbits (possibly all of them) tell you how many other rabbits have the same color as them. Those <code>answers</code> are placed in an array.</p>\r\n\r\n<p>Return the minimum number of rabbits that could be in the forest.</p>\r\n\r\n<pre>\r\n<strong>Examples:</strong>\r\n<strong>Input:</strong> answers = [1, 1, 2]\r\n<strong>Output:</strong> 5\r\n<strong>Explanation:</strong>\r\nThe two rabbits that answered &quot;1&quot; could both be the same color, say red.\r\nThe rabbit than answered &quot;2&quot; can&#39;t be red or the answers would be inconsistent.\r\nSay the rabbit that answered &quot;2&quot; was blue.\r\nThen there should be 2 other blue rabbits in the forest that didn&#39;t answer into the array.\r\nThe smallest possible number of rabbits in the forest is therefore 5: 3 that answered plus 2 that didn&#39;t.\r\n\r\n<strong>Input:</strong> answers = [10, 10, 10]\r\n<strong>Output:</strong> 11\r\n\r\n<strong>Input:</strong> answers = []\r\n<strong>Output:</strong> 0\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>answers</code> will have length at most <code>1000</code>.</li>\r\n\t<li>Each <code>answers[i]</code> will be an integer in the range <code>[0, 999]</code>.</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23.6K\", \"totalSubmission\": \"42.8K\", \"totalAcceptedRaw\": 23619, \"totalSubmissionRaw\": 42754, \"acRate\": \"55.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Math", "slug": "math"}]}}, {"id": "779", "name": "k-th-symbol-in-grammar", "content": {"questionId": "795", "questionFrontendId": "779", "questionTitle": "K-th Symbol in Grammar", "questionTitleSlug": "k-th-symbol-in-grammar", "content": "<p>On the first row, we write a <code>0</code>. Now in every subsequent row, we look at the previous row and replace each occurrence of <code>0</code> with <code>01</code>, and each occurrence of <code>1</code> with <code>10</code>.</p>\r\n\r\n<p>Given row <code>N</code> and index <code>K</code>, return the <code>K</code>-th indexed symbol in row <code>N</code>. (The values of <code>K</code> are 1-indexed.) (1 indexed).</p>\r\n\r\n<pre>\r\n<strong>Examples:</strong>\r\n<strong>Input:</strong> N = 1, K = 1\r\n<strong>Output:</strong> 0\r\n\r\n<strong>Input:</strong> N = 2, K = 1\r\n<strong>Output:</strong> 0\r\n\r\n<strong>Input:</strong> N = 2, K = 2\r\n<strong>Output:</strong> 1\r\n\r\n<strong>Input:</strong> N = 4, K = 5\r\n<strong>Output:</strong> 1\r\n\r\n<strong>Explanation:</strong>\r\nrow 1: 0\r\nrow 2: 01\r\nrow 3: 0110\r\nrow 4: 01101001\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>N</code> will be an integer in the range <code>[1, 30]</code>.</li>\r\n\t<li><code>K</code> will be an integer in the range <code>[1, 2^(N-1)]</code>.</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"44.3K\", \"totalSubmission\": \"115.5K\", \"totalAcceptedRaw\": 44348, \"totalSubmissionRaw\": 115517, \"acRate\": \"38.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Recursion", "slug": "recursion"}]}}, {"id": "777", "name": "swap-adjacent-in-lr-string", "content": {"questionId": "793", "questionFrontendId": "777", "questionTitle": "Swap Adjacent in LR String", "questionTitleSlug": "swap-adjacent-in-lr-string", "content": "<p>In a string composed of <code>&#39;L&#39;</code>, <code>&#39;R&#39;</code>, and <code>&#39;X&#39;</code> characters, like <code>&quot;RXXLRXRXL&quot;</code>, a move consists of either replacing one occurrence of <code>&quot;XL&quot;</code> with <code>&quot;LX&quot;</code>, or replacing one occurrence of <code>&quot;RX&quot;</code> with <code>&quot;XR&quot;</code>. Given the starting string <code>start</code> and the ending string <code>end</code>, return <code>True</code> if and only if there exists a sequence of moves to transform one string to the other.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> start = &quot;RXXLRXRXL&quot;, end = &quot;XRLXXRRLX&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> We can transform start to end following these steps:\nRXXLRXRXL -&gt;\nXRXLRXRXL -&gt;\nXRLXRXRXL -&gt;\nXRLXXRRXL -&gt;\nXRLXXRRLX\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> start = &quot;X&quot;, end = &quot;L&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> start = &quot;LLR&quot;, end = &quot;RRL&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> start = &quot;XL&quot;, end = &quot;LX&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> start = &quot;XLLR&quot;, end = &quot;LXLX&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= start.length&nbsp;&lt;= 10<sup>4</sup></code></li>\n\t<li><code>start.length == end.length</code></li>\n\t<li>Both <code>start</code> and <code>end</code> will only consist of characters in <code>&#39;L&#39;</code>, <code>&#39;R&#39;</code>, and&nbsp;<code>&#39;X&#39;</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"33.5K\", \"totalSubmission\": \"94.8K\", \"totalAcceptedRaw\": 33519, \"totalSubmissionRaw\": 94844, \"acRate\": \"35.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Brainteaser", "slug": "brainteaser"}]}}, {"id": "776", "name": "split-bst", "content": {"questionId": "791", "questionFrontendId": "776", "questionTitle": "Split BST", "questionTitleSlug": "split-bst", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"20K\", \"totalSubmission\": \"35.4K\", \"totalAcceptedRaw\": 19977, \"totalSubmissionRaw\": 35421, \"acRate\": \"56.4%\"}", "similarQuestions": "[{\"title\": \"Delete Node in a BST\", \"titleSlug\": \"delete-node-in-a-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Recursion", "slug": "recursion"}]}}, {"id": "775", "name": "global-and-local-inversions", "content": {"questionId": "790", "questionFrontendId": "775", "questionTitle": "Global and Local Inversions", "questionTitleSlug": "global-and-local-inversions", "content": "<p>We have some permutation <code>A</code> of <code>[0, 1, ..., N - 1]</code>, where <code>N</code> is the length of <code>A</code>.</p>\r\n\r\n<p>The number of (global) inversions is the number of <code>i &lt; j</code> with <code>0 &lt;= i &lt; j &lt; N</code> and <code>A[i] &gt; A[j]</code>.</p>\r\n\r\n<p>The number of local inversions is the number of <code>i</code> with <code>0 &lt;= i &lt; N</code> and <code>A[i] &gt; A[i+1]</code>.</p>\r\n\r\n<p>Return <code>true</code>&nbsp;if and only if the number of global inversions is equal to the number of local inversions.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> A = [1,0,2]\r\n<strong>Output:</strong> true\r\n<strong>Explanation:</strong> There is 1 global inversion, and 1 local inversion.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> A = [1,2,0]\r\n<strong>Output:</strong> false\r\n<strong>Explanation:</strong> There are 2 global inversions, and 1 local inversion.\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>A</code> will be a permutation of <code>[0, 1, ..., A.length - 1]</code>.</li>\r\n\t<li><code>A</code> will have length in range <code>[1, 5000]</code>.</li>\r\n\t<li>The time limit for this problem has been reduced.</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"25K\", \"totalSubmission\": \"59K\", \"totalAcceptedRaw\": 24977, \"totalSubmissionRaw\": 58959, \"acRate\": \"42.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Math", "slug": "math"}]}}, {"id": "702", "name": "search-in-a-sorted-array-of-unknown-size", "content": {"questionId": "786", "questionFrontendId": "702", "questionTitle": "Search in a Sorted Array of Unknown Size", "questionTitleSlug": "search-in-a-sorted-array-of-unknown-size", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"39.7K\", \"totalSubmission\": \"58.1K\", \"totalAcceptedRaw\": 39706, \"totalSubmissionRaw\": 58071, \"acRate\": \"68.4%\"}", "similarQuestions": "[{\"title\": \"Binary Search\", \"titleSlug\": \"binary-search\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Index of the Large Integer\", \"titleSlug\": \"find-the-index-of-the-large-integer\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "701", "name": "insert-into-a-binary-search-tree", "content": {"questionId": "784", "questionFrontendId": "701", "questionTitle": "Insert into a Binary Search Tree", "questionTitleSlug": "insert-into-a-binary-search-tree", "content": "<p>You are given the <code>root</code> node of a binary search tree (BST) and a <code>value</code> to insert into the tree. Return <em>the root node of the BST after the insertion</em>. It is <strong>guaranteed</strong> that the new value does not exist in the original BST.</p>\n\n<p><strong>Notice</strong>&nbsp;that there may exist&nbsp;multiple valid ways for the&nbsp;insertion, as long as the tree remains a BST after insertion. You can return <strong>any of them</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/05/insertbst.jpg\" style=\"width: 752px; height: 221px;\" />\n<pre>\n<strong>Input:</strong> root = [4,2,7,1,3], val = 5\n<strong>Output:</strong> [4,2,7,1,3,5]\n<strong>Explanation:</strong> Another accepted tree is:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/05/bst.jpg\" style=\"width: 352px; height: 301px;\" />\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [40,20,60,10,30,50,70], val = 25\n<strong>Output:</strong> [40,20,60,10,30,50,70,null,null,25]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [4,2,7,1,3,null,null,null,null,null,null], val = 5\n<strong>Output:</strong> [4,2,7,1,3,5]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in&nbsp;the tree will be in the range <code>[0,&nbsp;10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>8</sup> &lt;= Node.val &lt;= 10<sup>8</sup></code></li>\n\t<li>All the values <code>Node.val</code> are <strong>unique</strong>.</li>\n\t<li><code>-10<sup>8</sup> &lt;= val &lt;= 10<sup>8</sup></code></li>\n\t<li>It&#39;s <strong>guaranteed</strong> that <code>val</code> does not exist in the original BST.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"158.5K\", \"totalSubmission\": \"209K\", \"totalAcceptedRaw\": 158481, \"totalSubmissionRaw\": 209027, \"acRate\": \"75.8%\"}", "similarQuestions": "[{\"title\": \"Search in a Binary Search Tree\", \"titleSlug\": \"search-in-a-binary-search-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "769", "name": "max-chunks-to-make-sorted", "content": {"questionId": "780", "questionFrontendId": "769", "questionTitle": "Max Chunks To Make Sorted", "questionTitleSlug": "max-chunks-to-make-sorted", "content": "<p>Given an array <code>arr</code> that is a permutation of <code>[0, 1, ..., arr.length - 1]</code>, we split the array into some number of &quot;chunks&quot; (partitions), and individually sort each chunk.&nbsp; After concatenating them,&nbsp;the result equals the sorted array.</p>\r\n\r\n<p>What is the most number of chunks we could have made?</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [4,3,2,1,0]\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong>\r\nSplitting into two or more chunks will not return the required result.\r\nFor example, splitting into [4, 3], [2, 1, 0] will result in [3, 4, 0, 1, 2], which isn&#39;t sorted.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [1,0,2,3,4]\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong>\r\nWe can split into two chunks, such as [1, 0], [2, 3, 4].\r\nHowever, splitting into [1, 0], [2], [3], [4] is the highest number of chunks possible.\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>arr</code> will have length in range <code>[1, 10]</code>.</li>\r\n\t<li><code>arr[i]</code> will be a permutation of <code>[0, 1, ..., arr.length - 1]</code>.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"43.5K\", \"totalSubmission\": \"78.6K\", \"totalAcceptedRaw\": 43479, \"totalSubmissionRaw\": 78577, \"acRate\": \"55.3%\"}", "similarQuestions": "[{\"title\": \"Max Chunks To Make Sorted II\", \"titleSlug\": \"max-chunks-to-make-sorted-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "767", "name": "reorganize-string", "content": {"questionId": "778", "questionFrontendId": "767", "questionTitle": "Reorganize String", "questionTitleSlug": "reorganize-string", "content": "<p>Given a string <code>S</code>, check if the letters can be rearranged so that two characters that are adjacent to each other are not the same.</p>\r\n\r\n<p>If possible, output any possible result.&nbsp; If not possible, return the empty string.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> S = &quot;aab&quot;\r\n<strong>Output:</strong> &quot;aba&quot;\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> S = &quot;aaab&quot;\r\n<strong>Output:</strong> &quot;&quot;\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>S</code> will consist of lowercase letters and have length in range <code>[1, 500]</code>.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"114.2K\", \"totalSubmission\": \"229.7K\", \"totalAcceptedRaw\": 114236, \"totalSubmissionRaw\": 229712, \"acRate\": \"49.7%\"}", "similarQuestions": "[{\"title\": \"Rearrange String k Distance Apart\", \"titleSlug\": \"rearrange-string-k-distance-apart\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Task Scheduler\", \"titleSlug\": \"task-scheduler\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Heap", "slug": "heap"}, {"name": "Greedy", "slug": "greedy"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "558", "name": "logical-or-of-two-binary-grids-represented-as-quad-trees", "content": {"questionId": "773", "questionFrontendId": "558", "questionTitle": "Logical OR of Two Binary Grids Represented as Quad-Trees", "questionTitleSlug": "logical-or-of-two-binary-grids-represented-as-quad-trees", "content": "<p>A Binary Matrix is a matrix in which all the elements are either <strong>0</strong> or <strong>1</strong>.</p>\r\n\r\n<p>Given <code>quadTree1</code> and <code>quadTree2</code>. <code>quadTree1</code> represents a <code>n * n</code> binary matrix and <code>quadTree2</code> represents another&nbsp;<code>n * n</code> binary matrix.&nbsp;</p>\r\n\r\n<p>Return <em>a Quad-Tree</em> representing the <code>n * n</code> binary matrix which is the result of <strong>logical bitwise OR</strong> of the two binary matrixes represented by <code>quadTree1</code> and <code>quadTree2</code>.</p>\r\n\r\n<p>Notice that you can assign the value of a node to <strong>True</strong> or <strong>False</strong> when <code>isLeaf</code> is <strong>False</strong>, and both are <strong>accepted</strong> in the answer.</p>\r\n\r\n<p>A Quad-Tree is a tree data structure in which each internal node has exactly four children. Besides, each node has two attributes:</p>\r\n\r\n<ul>\r\n\t<li><code>val</code>: True if the node represents a grid of 1&#39;s or False if the node represents a grid of 0&#39;s.&nbsp;</li>\r\n\t<li><code>isLeaf</code>: True if the node is leaf node on the tree or False if the node has the four children.</li>\r\n</ul>\r\n\r\n<pre>\r\nclass Node {\r\n    public boolean val;\r\n&nbsp; &nbsp; public boolean isLeaf;\r\n&nbsp; &nbsp; public Node topLeft;\r\n&nbsp; &nbsp; public Node topRight;\r\n&nbsp; &nbsp; public Node bottomLeft;\r\n&nbsp; &nbsp; public Node bottomRight;\r\n}</pre>\r\n\r\n<p>We can construct a Quad-Tree from a two-dimensional area using the following steps:</p>\r\n\r\n<ol>\r\n\t<li>If the current grid has the same value (i.e all <code>1&#39;s</code> or all <code>0&#39;s</code>)&nbsp;set <code>isLeaf</code>&nbsp;True and set <code>val</code> to the value of the grid and set the four children to Null and stop.</li>\r\n\t<li>If the current grid has different values, set <code>isLeaf</code> to False and&nbsp;set <code>val</code> to any value and divide the current grid into four sub-grids as shown in the photo.</li>\r\n\t<li>Recurse for each of the children with the proper sub-grid.</li>\r\n</ol>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/11/new_top.png\" style=\"width: 777px; height: 181px;\" />\r\n<p>If you want to know more about the Quad-Tree, you can refer to the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Quadtree\">wiki</a>.</p>\r\n\r\n<p><strong>Quad-Tree&nbsp;format:</strong></p>\r\n\r\n<p>The input/output represents the serialized format of a Quad-Tree using level order traversal, where <code>null</code> signifies a path terminator where no node exists below.</p>\r\n\r\n<p>It is very similar to the serialization of the binary tree. The only difference is that the node is represented as a list <code>[isLeaf, val]</code>.</p>\r\n\r\n<p>If the value of <code>isLeaf</code> or <code>val</code> is True we represent it as <strong>1</strong> in the list&nbsp;<code>[isLeaf, val]</code> and if the value of <code>isLeaf</code> or <code>val</code> is False we represent it as <strong>0</strong>.</p>\r\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/11/qt1.png\" style=\"width: 550px; height: 196px;\" /> <img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/11/qt2.png\" style=\"width: 550px; height: 278px;\" />\n<pre>\n<strong>Input:</strong> quadTree1 = [[0,1],[1,1],[1,1],[1,0],[1,0]]\n, quadTree2 = [[0,1],[1,1],[0,1],[1,1],[1,0],null,null,null,null,[1,0],[1,0],[1,1],[1,1]]\n<strong>Output:</strong> [[0,0],[1,1],[1,1],[1,1],[1,0]]\n<strong>Explanation:</strong> quadTree1 and quadTree2 are shown above. You can see the binary matrix which is represented by each Quad-Tree.\nIf we apply logical bitwise OR on the two binary matrices we get the binary matrix below which is represented by the result Quad-Tree.\nNotice that the binary matrices shown are only for illustration, you don&#39;t have to construct the binary matrix to get the result tree.\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/11/qtr.png\" style=\"width: 777px; height: 222px;\" />\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> quadTree1 = [[1,0]]\n, quadTree2 = [[1,0]]\n<strong>Output:</strong> [[1,0]]\n<strong>Explanation:</strong> Each tree represents a binary matrix of size 1*1. Each matrix contains only zero.\nThe resulting matrix is of size 1*1 with also zero.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> quadTree1 = [[0,0],[1,0],[1,0],[1,1],[1,1]]\n, quadTree2 = [[0,0],[1,1],[1,1],[1,0],[1,1]]\n<strong>Output:</strong> [[1,1]]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> quadTree1 = [[0,0],[1,1],[1,0],[1,1],[1,1]]\n, quadTree2 = [[0,0],[1,1],[0,1],[1,1],[1,1],null,null,null,null,[1,1],[1,0],[1,0],[1,1]]\n<strong>Output:</strong> [[0,0],[1,1],[0,1],[1,1],[1,1],null,null,null,null,[1,1],[1,0],[1,0],[1,1]]\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> quadTree1 = [[0,1],[1,0],[0,1],[1,1],[1,0],null,null,null,null,[1,0],[1,0],[1,1],[1,1]]\n, quadTree2 = [[0,1],[0,1],[1,0],[1,1],[1,0],[1,0],[1,0],[1,1],[1,1]]\n<strong>Output:</strong> [[0,0],[0,1],[0,1],[1,1],[1,0],[1,0],[1,0],[1,1],[1,1],[1,0],[1,0],[1,1],[1,1]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>quadTree1</code> and <code>quadTree2</code> are both <strong>valid</strong> Quad-Trees each representing a <code>n * n</code> grid.</li>\n\t<li><code>n == 2^x</code> where <code>0 &lt;= x &lt;= 9</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"9.3K\", \"totalSubmission\": \"20.5K\", \"totalAcceptedRaw\": 9294, \"totalSubmissionRaw\": 20486, \"acRate\": \"45.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "427", "name": "construct-quad-tree", "content": {"questionId": "772", "questionFrontendId": "427", "questionTitle": "Construct Quad Tree", "questionTitleSlug": "construct-quad-tree", "content": "<p>Given a <code>n * n</code> matrix <code>grid</code> of <code>0&#39;s</code> and <code>1&#39;s</code> only. We want to represent the <code>grid</code> with a Quad-Tree.</p>\r\n\r\n<p>Return <em>the root of the Quad-Tree</em> representing the <code>grid</code>.</p>\r\n\r\n<p>Notice that you can assign the value of a node to <strong>True</strong> or <strong>False</strong> when <code>isLeaf</code> is <strong>False</strong>, and both are <strong>accepted</strong> in the answer.</p>\r\n\r\n<p>A Quad-Tree is a tree data structure in which each internal node has exactly four children. Besides, each node has two attributes:</p>\r\n\r\n<ul>\r\n\t<li><code>val</code>: True if the node represents a grid of 1&#39;s or False if the node represents a grid of 0&#39;s.&nbsp;</li>\r\n\t<li><code>isLeaf</code>: True if the node is leaf node on the tree or False if the node has the four children.</li>\r\n</ul>\r\n\r\n<pre>\r\nclass Node {\r\n    public boolean val;\r\n&nbsp; &nbsp; public boolean isLeaf;\r\n&nbsp; &nbsp; public Node topLeft;\r\n&nbsp; &nbsp; public Node topRight;\r\n&nbsp; &nbsp; public Node bottomLeft;\r\n&nbsp; &nbsp; public Node bottomRight;\r\n}</pre>\r\n\r\n<p>We can construct a Quad-Tree from a two-dimensional area using the following steps:</p>\r\n\r\n<ol>\r\n\t<li>If the current grid has the same value (i.e all <code>1&#39;s</code> or all <code>0&#39;s</code>)&nbsp;set <code>isLeaf</code>&nbsp;True and set <code>val</code> to the value of the grid and set the four children to Null and stop.</li>\r\n\t<li>If the current grid has different values, set <code>isLeaf</code> to False and&nbsp;set <code>val</code> to any value and divide the current grid into four sub-grids as shown in the photo.</li>\r\n\t<li>Recurse for each of the children with the proper sub-grid.</li>\r\n</ol>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/11/new_top.png\" style=\"width: 777px; height: 181px;\" />\r\n<p>If you want to know more about the Quad-Tree, you can refer to the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Quadtree\">wiki</a>.</p>\r\n\r\n<p><strong>Quad-Tree&nbsp;format:</strong></p>\r\n\r\n<p>The output represents the serialized format of a Quad-Tree using level order traversal, where <code>null</code> signifies a path terminator where no node exists below.</p>\r\n\r\n<p>It is very similar to the serialization of the binary tree. The only difference is that the node is represented as a list <code>[isLeaf, val]</code>.</p>\r\n\r\n<p>If the value of <code>isLeaf</code> or <code>val</code> is True we represent it as <strong>1</strong> in the list&nbsp;<code>[isLeaf, val]</code> and if the value of <code>isLeaf</code> or <code>val</code> is False we represent it as <strong>0</strong>.</p>\r\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/11/grid1.png\" style=\"width: 777px; height: 99px;\" />\n<pre>\n<strong>Input:</strong> grid = [[0,1],[1,0]]\n<strong>Output:</strong> [[0,1],[1,0],[1,1],[1,1],[1,0]]\n<strong>Explanation:</strong> The explanation of this example is shown below:\nNotice that 0 represnts False and 1 represents True in the photo representing the Quad-Tree.\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/12/e1tree.png\" style=\"width: 777px; height: 186px;\" />\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/12/e2mat.png\" style=\"width: 777px; height: 343px;\" /></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0],[1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0]]\n<strong>Output:</strong> [[0,1],[1,1],[0,1],[1,1],[1,0],null,null,null,null,[1,0],[1,0],[1,1],[1,1]]\n<strong>Explanation:</strong> All values in the grid are not the same. We divide the grid into four sub-grids.\nThe topLeft, bottomLeft and bottomRight each has the same value.\nThe topRight have different values so we divide it into 4 sub-grids where each has the same value.\nExplanation is shown in the photo below:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/12/e2tree.png\" style=\"width: 777px; height: 328px;\" />\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,1],[1,1]]\n<strong>Output:</strong> [[1,1]]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[0]]\n<strong>Output:</strong> [[1,0]]\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,1,0,0],[1,1,0,0],[0,0,1,1],[0,0,1,1]]\n<strong>Output:</strong> [[0,1],[1,1],[1,0],[1,0],[1,1]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == grid.length == grid[i].length</code></li>\n\t<li><code>n == 2^x</code> where <code>0 &lt;= x &lt;= 6</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"25.4K\", \"totalSubmission\": \"40.8K\", \"totalAcceptedRaw\": 25404, \"totalSubmissionRaw\": 40810, \"acRate\": \"62.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "764", "name": "largest-plus-sign", "content": {"questionId": "769", "questionFrontendId": "764", "questionTitle": "Largest Plus Sign", "questionTitleSlug": "largest-plus-sign", "content": "<p>\r\nIn a 2D <code>grid</code> from (0, 0) to (N-1, N-1), every cell contains a <code>1</code>, except those cells in the given list <code>mines</code> which are <code>0</code>.  What is the largest axis-aligned plus sign of <code>1</code>s contained in the grid?  Return the order of the plus sign.  If there is none, return 0.\r\n</p><p>\r\nAn \"<i>axis-aligned plus sign of <code>1</code>s</i> of order <b>k</b>\" has some center <code>grid[x][y] = 1</code> along with 4 arms of length <code>k-1</code> going up, down, left, and right, and made of <code>1</code>s.  This is demonstrated in the diagrams below.  Note that there could be <code>0</code>s or <code>1</code>s beyond the arms of the plus sign, only the relevant area of the plus sign is checked for 1s.\r\n</p><p>\r\n\r\n<p><b>Examples of Axis-Aligned Plus Signs of Order k:</b><br /><pre>\r\nOrder 1:\r\n000\r\n0<b>1</b>0\r\n000\r\n\r\nOrder 2:\r\n00000\r\n00<b>1</b>00\r\n0<b>111</b>0\r\n00<b>1</b>00\r\n00000\r\n\r\nOrder 3:\r\n0000000\r\n000<b>1</b>000\r\n000<b>1</b>000\r\n0<b>11111</b>0\r\n000<b>1</b>000\r\n000<b>1</b>000\r\n0000000\r\n</pre></p>\r\n\r\n<p><b>Example 1:</b><br /><pre>\r\n<b>Input:</b> N = 5, mines = [[4, 2]]\r\n<b>Output:</b> 2\r\n<b>Explanation:</b>\r\n11111\r\n11111\r\n1<b>1</b>111\r\n<b>111</b>11\r\n1<b>1</b>011\r\nIn the above grid, the largest plus sign can only be order 2.  One of them is marked in bold.\r\n</pre></p>\r\n\r\n<p><b>Example 2:</b><br /><pre>\r\n<b>Input:</b> N = 2, mines = []\r\n<b>Output:</b> 1\r\n<b>Explanation:</b>\r\nThere is no plus sign of order 2, but there is of order 1.\r\n</pre></p>\r\n\r\n<p><b>Example 3:</b><br /><pre>\r\n<b>Input:</b> N = 1, mines = [[0, 0]]\r\n<b>Output:</b> 0\r\n<b>Explanation:</b>\r\nThere is no plus sign, so return 0.\r\n</pre></p>\r\n\r\n<p><b>Note:</b><br><ol>\r\n<li><code>N</code> will be an integer in the range <code>[1, 500]</code>.</li>\r\n<li><code>mines</code> will have length at most <code>5000</code>.</li>\r\n<li><code>mines[i]</code> will be length 2 and consist of integers in the range <code>[0, N-1]</code>.</li>\r\n<li><i>(Additionally, programs submitted in C, C++, or C# will be judged with a slightly smaller time limit.)</i></li>\r\n</ol></p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23.4K\", \"totalSubmission\": \"50.7K\", \"totalAcceptedRaw\": 23397, \"totalSubmissionRaw\": 50657, \"acRate\": \"46.2%\"}", "similarQuestions": "[{\"title\": \"Maximal Square\", \"titleSlug\": \"maximal-square\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "763", "name": "partition-labels", "content": {"questionId": "768", "questionFrontendId": "763", "questionTitle": "Partition Labels", "questionTitleSlug": "partition-labels", "content": "<p>A string <code>S</code> of lowercase English letters is given. We want to partition this string into as many parts as possible so that each letter appears in at most one part, and return a list of integers representing the size of these parts.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> S = &quot;ababcbacadefegdehijhklij&quot;\n<b>Output:</b> [9,7,8]\n<b>Explanation:</b>\nThe partition is &quot;ababcbaca&quot;, &quot;defegde&quot;, &quot;hijhklij&quot;.\nThis is a partition so that each letter appears in at most one part.\nA partition like &quot;ababcbacadefegde&quot;, &quot;hijhklij&quot; is incorrect, because it splits S into less parts.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li><code>S</code> will have length in range <code>[1, 500]</code>.</li>\n\t<li><code>S</code> will consist of lowercase English&nbsp;letters (<code>&#39;a&#39;</code> to <code>&#39;z&#39;</code>) only.</li>\n</ul>\n\n<p>&nbsp;</p>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"213.4K\", \"totalSubmission\": \"274.2K\", \"totalAcceptedRaw\": 213351, \"totalSubmissionRaw\": 274185, \"acRate\": \"77.8%\"}", "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "430", "name": "flatten-a-multilevel-doubly-linked-list", "content": {"questionId": "766", "questionFrontendId": "430", "questionTitle": "Flatten a Multilevel Doubly Linked List", "questionTitleSlug": "flatten-a-multilevel-doubly-linked-list", "content": "<p>You are given a doubly linked list which in addition to the next and previous pointers, it could have a child pointer, which may or may not point to a separate doubly linked list. These child lists may have one or more children of their own, and so on, to produce a multilevel data structure, as shown in the example below.</p>\r\n\r\n<p>Flatten the list so that all the nodes appear in a single-level, doubly linked list. You are given the head of the first level of the list.</p>\r\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1,2,3,4,5,6,null,null,null,7,8,9,10,null,null,11,12]\n<strong>Output:</strong> [1,2,3,7,8,11,12,9,10,4,5,6]\n<strong>Explanation:\n</strong>\nThe multilevel linked list in the input is as follows:\n\n<img src=\"https://assets.leetcode.com/uploads/2018/10/12/multilevellinkedlist.png\" style=\"width: 640px;\" />\n\nAfter flattening the multilevel linked list it becomes:\n\n<img src=\"https://assets.leetcode.com/uploads/2018/10/12/multilevellinkedlistflattened.png\" style=\"width: 1100px;\" />\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1,2,null,3]\n<strong>Output:</strong> [1,3,2]\n<strong>Explanation:\n\n</strong>The input multilevel linked list is as follows:\n\n  1---2---NULL\n  |\n  3---NULL\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = []\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>How&nbsp;multilevel linked list is represented in test case:</strong></p>\n\n<p>We use the&nbsp;multilevel linked list from <strong>Example 1</strong> above:</p>\n\n<pre>\n 1---2---3---4---5---6--NULL\n         |\n         7---8---9---10--NULL\n             |\n             11--12--NULL</pre>\n\n<p>The serialization of each level is as follows:</p>\n\n<pre>\n[1,2,3,4,5,6,null]\n[7,8,9,10,null]\n[11,12,null]\n</pre>\n\n<p>To serialize all levels together we will add nulls in each level to signify no node connects to the upper node of the previous level. The serialization becomes:</p>\n\n<pre>\n[1,2,3,4,5,6,null]\n[null,null,7,8,9,10,null]\n[null,11,12,null]\n</pre>\n\n<p>Merging the serialization of each level and removing trailing nulls we obtain:</p>\n\n<pre>\n[1,2,3,4,5,6,null,null,null,7,8,9,10,null,null,11,12]</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of Nodes will not exceed <code>1000</code>.</li>\n\t<li><code>1 &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"138K\", \"totalSubmission\": \"244.3K\", \"totalAcceptedRaw\": 137973, \"totalSubmissionRaw\": 244311, \"acRate\": \"56.5%\"}", "similarQuestions": "[{\"title\": \"Flatten Binary Tree to Linked List\", \"titleSlug\": \"flatten-binary-tree-to-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Correct a Binary Tree\", \"titleSlug\": \"correct-a-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "429", "name": "n-ary-tree-level-order-traversal", "content": {"questionId": "764", "questionFrontendId": "429", "questionTitle": "N-ary Tree Level Order Traversal", "questionTitleSlug": "n-ary-tree-level-order-traversal", "content": "<p>Given an n-ary tree, return the <i>level order</i> traversal of its nodes&#39; values.</p>\r\n\r\n<p><em>Nary-Tree input serialization&nbsp;is represented in their level order traversal, each group of children is separated by the null value (See examples).</em></p>\r\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png\" style=\"width: 100%; max-width: 300px;\" /></p>\n\n<pre>\n<strong>Input:</strong> root = [1,null,3,2,4,null,5,6]\n<strong>Output:</strong> [[1],[3,2,4],[5,6]]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/08/sample_4_964.png\" style=\"width: 296px; height: 241px;\" /></p>\n\n<pre>\n<strong>Input:</strong> root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\n<strong>Output:</strong> [[1],[2,3,4,5],[6,7,8,9,10],[11,12,13],[14]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The height of the n-ary tree is less than or equal to <code>1000</code></li>\n\t<li>The total number of nodes is between <code>[0, 10<sup>4</sup>]</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"91.2K\", \"totalSubmission\": \"137.8K\", \"totalAcceptedRaw\": 91173, \"totalSubmissionRaw\": 137789, \"acRate\": \"66.2%\"}", "similarQuestions": "[{\"title\": \"Binary Tree Level Order Traversal\", \"titleSlug\": \"binary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Preorder Traversal\", \"titleSlug\": \"n-ary-tree-preorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Postorder Traversal\", \"titleSlug\": \"n-ary-tree-postorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "426", "name": "convert-binary-search-tree-to-sorted-doubly-linked-list", "content": {"questionId": "758", "questionFrontendId": "426", "questionTitle": "Convert Binary Search Tree to Sorted Doubly Linked List", "questionTitleSlug": "convert-binary-search-tree-to-sorted-doubly-linked-list", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"98.4K\", \"totalSubmission\": \"162.5K\", \"totalAcceptedRaw\": 98386, \"totalSubmissionRaw\": 162475, \"acRate\": \"60.6%\"}", "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}, {"name": "Divide and Conquer", "slug": "divide-and-conquer"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "756", "name": "pyramid-transition-matrix", "content": {"questionId": "757", "questionFrontendId": "756", "questionTitle": "Pyramid Transition Matrix", "questionTitleSlug": "pyramid-transition-matrix", "content": "<p>We are stacking blocks to form a pyramid. Each block has a color which is a one letter string.</p>\n\n<p>We are allowed to place any color block <code>C</code> on top of two adjacent blocks of colors <code>A</code> and <code>B</code>, if and only if <code>ABC</code> is an allowed triple.</p>\n\n<p>We start with a bottom row of <code>bottom</code>, represented as a single string. We also start with a list of allowed triples <code>allowed</code>. Each allowed triple is represented as a string of length 3.</p>\n\n<p>Return true if we can build the pyramid all the way to the top, otherwise false.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> bottom = &quot;BCD&quot;, allowed = [&quot;BCG&quot;, &quot;CDE&quot;, &quot;GEA&quot;, &quot;FFF&quot;]\n<b>Output:</b> true\n<b>Explanation:</b>\nWe can stack the pyramid like this:\n    A\n   / \\\n  G   E\n / \\ / \\\nB   C   D\n\nWe are allowed to place G on top of B and C because BCG is an allowed triple.  Similarly, we can place E on top of C and D, then A on top of G and E.</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> bottom = &quot;AABA&quot;, allowed = [&quot;AAA&quot;, &quot;AAB&quot;, &quot;ABA&quot;, &quot;ABB&quot;, &quot;BAC&quot;]\n<b>Output:</b> false\n<b>Explanation:</b>\nWe can&#39;t stack the pyramid to the top.\nNote that there could be allowed triples (A, B, C) and (A, B, D) with C != D.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>bottom</code> will be a string with length in range <code>[2, 8]</code>.</li>\n\t<li><code>allowed</code> will have length in range <code>[0, 200]</code>.</li>\n\t<li>Letters in all strings will be chosen from the set <code>{&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;, &#39;F&#39;, &#39;G&#39;}</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"22.6K\", \"totalSubmission\": \"40.8K\", \"totalAcceptedRaw\": 22629, \"totalSubmissionRaw\": 40832, \"acRate\": \"55.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Bit Manipulation", "slug": "bit-manipulation"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "755", "name": "pour-water", "content": {"questionId": "756", "questionFrontendId": "755", "questionTitle": "Pour Water", "questionTitleSlug": "pour-water", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"22.9K\", \"totalSubmission\": \"52.1K\", \"totalAcceptedRaw\": 22904, \"totalSubmissionRaw\": 52146, \"acRate\": \"43.9%\"}", "similarQuestions": "[{\"title\": \"Trapping Rain Water\", \"titleSlug\": \"trapping-rain-water\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "754", "name": "reach-a-number", "content": {"questionId": "755", "questionFrontendId": "754", "questionTitle": "Reach a Number", "questionTitleSlug": "reach-a-number", "content": "<p>\r\nYou are standing at position <code>0</code> on an infinite number line.  There is a goal at position <code>target</code>.\r\n</p><p>\r\nOn each move, you can either go left or right.  During the <i>n</i>-th move (starting from 1), you take <i>n</i> steps.\r\n</p><p>\r\nReturn the minimum number of steps required to reach the destination.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> target = 3\r\n<b>Output:</b> 2\r\n<b>Explanation:</b>\r\nOn the first move we step from 0 to 1.\r\nOn the second step we step from 1 to 3.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> target = 2\r\n<b>Output:</b> 3\r\n<b>Explanation:</b>\r\nOn the first move we step from 0 to 1.\r\nOn the second move we step  from 1 to -1.\r\nOn the third move we step from -1 to 2.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<li><code>target</code> will be a non-zero integer in the range <code>[-10^9, 10^9]</code>.</li>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"18.2K\", \"totalSubmission\": \"51.8K\", \"totalAcceptedRaw\": 18224, \"totalSubmissionRaw\": 51832, \"acRate\": \"35.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "752", "name": "open-the-lock", "content": {"questionId": "753", "questionFrontendId": "752", "questionTitle": "Open the Lock", "questionTitleSlug": "open-the-lock", "content": "<p>You have a lock in front of you with 4 circular wheels. Each wheel has 10 slots: <code>&#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39;</code>. The wheels can rotate freely and wrap around: for example we can turn <code>&#39;9&#39;</code> to be <code>&#39;0&#39;</code>, or <code>&#39;0&#39;</code> to be <code>&#39;9&#39;</code>. Each move consists of turning one wheel one slot.</p>\n\n<p>The lock initially starts at <code>&#39;0000&#39;</code>, a string representing the state of the 4 wheels.</p>\n\n<p>You are given a list of <code>deadends</code> dead ends, meaning if the lock displays any of these codes, the wheels of the lock will stop turning and you will be unable to open it.</p>\n\n<p>Given a <code>target</code> representing the value of the wheels that will unlock the lock, return the minimum total number of turns required to open the lock, or -1 if it is impossible.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> deadends = [&quot;0201&quot;,&quot;0101&quot;,&quot;0102&quot;,&quot;1212&quot;,&quot;2002&quot;], target = &quot;0202&quot;\n<strong>Output:</strong> 6\n<strong>Explanation:</strong>\nA sequence of valid moves would be &quot;0000&quot; -&gt; &quot;1000&quot; -&gt; &quot;1100&quot; -&gt; &quot;1200&quot; -&gt; &quot;1201&quot; -&gt; &quot;1202&quot; -&gt; &quot;0202&quot;.\nNote that a sequence like &quot;0000&quot; -&gt; &quot;0001&quot; -&gt; &quot;0002&quot; -&gt; &quot;0102&quot; -&gt; &quot;0202&quot; would be invalid,\nbecause the wheels of the lock become stuck after the display becomes the dead end &quot;0102&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> deadends = [&quot;8888&quot;], target = &quot;0009&quot;\n<strong>Output:</strong> 1\n<strong>Explanation:</strong>\nWe can turn the last wheel in reverse to move from &quot;0000&quot; -&gt; &quot;0009&quot;.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> deadends = [&quot;8887&quot;,&quot;8889&quot;,&quot;8878&quot;,&quot;8898&quot;,&quot;8788&quot;,&quot;8988&quot;,&quot;7888&quot;,&quot;9888&quot;], target = &quot;8888&quot;\n<strong>Output:</strong> -1\nExplanation:\nWe can&#39;t reach the target without getting stuck.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> deadends = [&quot;0000&quot;], target = &quot;8888&quot;\n<strong>Output:</strong> -1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;=&nbsp;deadends.length &lt;= 500</code></li>\n\t<li><code><font face=\"monospace\">deadends[i].length == 4</font></code></li>\n\t<li><code><font face=\"monospace\">target.length == 4</font></code></li>\n\t<li>target <strong>will not be</strong> in the list <code>deadends</code>.</li>\n\t<li><code>target</code> and <code>deadends[i]</code> consist of digits only.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"80.1K\", \"totalSubmission\": \"152.9K\", \"totalAcceptedRaw\": 80114, \"totalSubmissionRaw\": 152895, \"acRate\": \"52.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "751", "name": "ip-to-cidr", "content": {"questionId": "752", "questionFrontendId": "751", "questionTitle": "IP to CIDR", "questionTitleSlug": "ip-to-cidr", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11.1K\", \"totalSubmission\": \"18.5K\", \"totalAcceptedRaw\": 11115, \"totalSubmissionRaw\": 18451, \"acRate\": \"60.2%\"}", "similarQuestions": "[{\"title\": \"Restore IP Addresses\", \"titleSlug\": \"restore-ip-addresses\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Validate IP Address\", \"titleSlug\": \"validate-ip-address\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "750", "name": "number-of-corner-rectangles", "content": {"questionId": "751", "questionFrontendId": "750", "questionTitle": "Number Of Corner Rectangles", "questionTitleSlug": "number-of-corner-rectangles", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"27.8K\", \"totalSubmission\": \"41.7K\", \"totalAcceptedRaw\": 27809, \"totalSubmissionRaw\": 41744, \"acRate\": \"66.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "743", "name": "network-delay-time", "content": {"questionId": "744", "questionFrontendId": "743", "questionTitle": "Network Delay Time", "questionTitleSlug": "network-delay-time", "content": "<p>There are <code>N</code> network nodes, labelled <code>1</code> to <code>N</code>.</p>\r\n\r\n<p>Given <code>times</code>, a list of travel times as <b>directed</b> edges <code>times[i] = (u, v, w)</code>, where <code>u</code> is the source node, <code>v</code> is the target node, and <code>w</code> is the time it takes for a signal to travel from source to target.</p>\r\n\r\n<p>Now, we send a signal from a certain node <code>K</code>. How long will it take for all nodes to receive the signal? If it is impossible, return <code>-1</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/05/23/931_example_1.png\" style=\"width: 200px; height: 220px;\" /></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>times = <span id=\"example-input-1-1\">[[2,1,1],[2,3,1],[3,4,1]]</span>, N = <span id=\"example-input-1-2\">4</span>, K = <span id=\"example-input-1-3\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li><code>N</code> will be in the range <code>[1, 100]</code>.</li>\r\n\t<li><code>K</code> will be in the range <code>[1, N]</code>.</li>\r\n\t<li>The length of <code>times</code> will be in the range <code>[1, 6000]</code>.</li>\r\n\t<li>All edges <code>times[i] = (u, v, w)</code> will have <code>1 &lt;= u, v &lt;= N</code> and <code>0 &lt;= w &lt;= 100</code>.</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"126.7K\", \"totalSubmission\": \"280.2K\", \"totalAcceptedRaw\": 126690, \"totalSubmissionRaw\": 280228, \"acRate\": \"45.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Heap", "slug": "heap"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "742", "name": "closest-leaf-in-a-binary-tree", "content": {"questionId": "743", "questionFrontendId": "742", "questionTitle": "Closest Leaf in a Binary Tree", "questionTitleSlug": "closest-leaf-in-a-binary-tree", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"25.3K\", \"totalSubmission\": \"57.6K\", \"totalAcceptedRaw\": 25315, \"totalSubmissionRaw\": 57561, \"acRate\": \"44.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "740", "name": "delete-and-earn", "content": {"questionId": "740", "questionFrontendId": "740", "questionTitle": "Delete and Earn", "questionTitleSlug": "delete-and-earn", "content": "<p>Given an array <code>nums</code> of integers, you can perform operations on the array.</p>\r\n\r\n<p>In each operation, you pick any <code>nums[i]</code> and delete it to earn <code>nums[i]</code> points. After, you must delete <b>every</b> element equal to <code>nums[i] - 1</code> or <code>nums[i] + 1</code>.</p>\r\n\r\n<p>You start with 0 points. Return the maximum number of points you can earn by applying such operations.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> nums = [3, 4, 2]\r\n<b>Output:</b> 6\r\n<b>Explanation:</b> \r\nDelete 4 to earn 4 points, consequently 3 is also deleted.\r\nThen, delete 2 to earn 2 points. 6 total points are earned.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> nums = [2, 2, 3, 3, 3, 4]\r\n<b>Output:</b> 9\r\n<b>Explanation:</b> \r\nDelete 3 to earn 3 points, deleting both 2&#39;s and the 4.\r\nThen, delete 3 again to earn 3 points, and 3 again to earn 3 points.\r\n9 total points are earned.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ul>\r\n\t<li>The length of <code>nums</code> is at most <code>20000</code>.</li>\r\n\t<li>Each element <code>nums[i]</code> is an integer in the range <code>[1, 10000]</code>.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"44.4K\", \"totalSubmission\": \"90.4K\", \"totalAcceptedRaw\": 44371, \"totalSubmissionRaw\": 90408, \"acRate\": \"49.1%\"}", "similarQuestions": "[{\"title\": \"House Robber\", \"titleSlug\": \"house-robber\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "739", "name": "daily-temperatures", "content": {"questionId": "739", "questionFrontendId": "739", "questionTitle": "Daily Temperatures", "questionTitleSlug": "daily-temperatures", "content": "<p>\r\nGiven a list of daily temperatures <code>T</code>, return a list such that, for each day in the input, tells you how many days you would have to wait until a warmer temperature.  If there is no future day for which this is possible, put <code>0</code> instead.\r\n</p><p>\r\nFor example, given the list of temperatures <code>T = [73, 74, 75, 71, 69, 72, 76, 73]</code>, your output should be <code>[1, 1, 4, 2, 1, 1, 0, 0]</code>.\r\n</p>\r\n\r\n<p><b>Note:</b>\r\nThe length of <code>temperatures</code> will be in the range <code>[1, 30000]</code>.\r\nEach temperature will be an integer in the range <code>[30, 100]</code>.\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"203.1K\", \"totalSubmission\": \"316.3K\", \"totalAcceptedRaw\": 203128, \"totalSubmissionRaw\": 316268, \"acRate\": \"64.2%\"}", "similarQuestions": "[{\"title\": \"Next Greater Element I\", \"titleSlug\": \"next-greater-element-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Stack", "slug": "stack"}]}}, {"id": "738", "name": "monotone-increasing-digits", "content": {"questionId": "738", "questionFrontendId": "738", "questionTitle": "Monotone Increasing Digits", "questionTitleSlug": "monotone-increasing-digits", "content": "<p>\r\nGiven a non-negative integer <code>N</code>, find the largest number that is less than or equal to <code>N</code> with monotone increasing digits.\r\n</p><p>\r\n(Recall that an integer has <i>monotone increasing digits</i> if and only if each pair of adjacent digits <code>x</code> and <code>y</code> satisfy <code>x <= y</code>.)\r\n</p><p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> N = 10\r\n<b>Output:</b> 9\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> N = 1234\r\n<b>Output:</b> 1234\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 3:</b><br />\r\n<pre>\r\n<b>Input:</b> N = 332\r\n<b>Output:</b> 299\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<code>N</code> is an integer in the range <code>[0, 10^9]</code>.\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"26.2K\", \"totalSubmission\": \"57.7K\", \"totalAcceptedRaw\": 26199, \"totalSubmissionRaw\": 57715, \"acRate\": \"45.4%\"}", "similarQuestions": "[{\"title\": \"Remove K Digits\", \"titleSlug\": \"remove-k-digits\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "737", "name": "sentence-similarity-ii", "content": {"questionId": "737", "questionFrontendId": "737", "questionTitle": "Sentence Similarity II", "questionTitleSlug": "sentence-similarity-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"45.9K\", \"totalSubmission\": \"99.1K\", \"totalAcceptedRaw\": 45920, \"totalSubmissionRaw\": 99084, \"acRate\": \"46.3%\"}", "similarQuestions": "[{\"title\": \"Friend Circles\", \"titleSlug\": \"friend-circles\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Accounts Merge\", \"titleSlug\": \"accounts-merge\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sentence Similarity\", \"titleSlug\": \"sentence-similarity\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Union Find", "slug": "union-find"}]}}, {"id": "735", "name": "asteroid-collision", "content": {"questionId": "735", "questionFrontendId": "735", "questionTitle": "Asteroid Collision", "questionTitleSlug": "asteroid-collision", "content": "<p>We are given an array <code>asteroids</code> of integers representing asteroids in a row.</p>\n\n<p>For each asteroid, the absolute value represents its size, and the sign represents its direction (positive meaning right, negative meaning left). Each asteroid moves at the same speed.</p>\n\n<p>Find out the state of the asteroids after all collisions. If two asteroids meet, the smaller one will explode. If both are the same size, both will explode. Two asteroids moving in the same direction will never meet.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> asteroids = [5,10,-5]\n<strong>Output:</strong> [5,10]\n<b>Explanation:</b> The 10 and -5 collide resulting in 10.  The 5 and 10 never collide.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> asteroids = [8,-8]\n<strong>Output:</strong> []\n<b>Explanation:</b> The 8 and -8 collide exploding each other.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> asteroids = [10,2,-5]\n<strong>Output:</strong> [10]\n<b>Explanation:</b> The 2 and -5 collide resulting in -5. The 10 and -5 collide resulting in 10.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> asteroids = [-2,-1,1,2]\n<strong>Output:</strong> [-2,-1,1,2]\n<b>Explanation:</b> The -2 and -1 are moving left, while the 1 and 2 are moving right. Asteroids moving the same direction never meet, so no asteroids will meet each other.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= asteroids &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-1000 &lt;= asteroids[i] &lt;= 1000</code></li>\n\t<li><code>asteroids[i] != 0</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"97K\", \"totalSubmission\": \"224.8K\", \"totalAcceptedRaw\": 96956, \"totalSubmissionRaw\": 224785, \"acRate\": \"43.1%\"}", "similarQuestions": "[{\"title\": \"Can Place Flowers\", \"titleSlug\": \"can-place-flowers\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}]}}, {"id": "731", "name": "my-calendar-ii", "content": {"questionId": "731", "questionFrontendId": "731", "questionTitle": "My Calendar II", "questionTitleSlug": "my-calendar-ii", "content": "<p>Implement a <code>MyCalendarTwo</code> class to store your events. A new event can be added if adding the event will not cause a <b>triple</b> booking.</p>\r\n\r\n<p>Your class will have one method, <code>book(int start, int end)</code>. Formally, this represents a booking on the half open interval <code>[start, end)</code>, the range of real numbers <code>x</code> such that <code>start &lt;= x &lt; end</code>.</p>\r\n\r\n<p>A <i>triple booking</i> happens when <b>three</b> events have some non-empty intersection (ie., there is some time that is common to all 3 events.)</p>\r\n\r\n<p>For each call to the method <code>MyCalendar.book</code>, return <code>true</code> if the event can be added to the calendar successfully without causing a <b>triple</b> booking. Otherwise, return <code>false</code> and do not add the event to the calendar.</p>\r\nYour class will be called like this: <code>MyCalendar cal = new MyCalendar();</code> <code>MyCalendar.book(start, end)</code>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\nMyCalendar();\r\nMyCalendar.book(10, 20); // returns true\r\nMyCalendar.book(50, 60); // returns true\r\nMyCalendar.book(10, 40); // returns true\r\nMyCalendar.book(5, 15); // returns false\r\nMyCalendar.book(5, 10); // returns true\r\nMyCalendar.book(25, 55); // returns true\r\n<b>Explanation:</b> \r\nThe first two events can be booked.  The third event can be double booked.\r\nThe fourth event (5, 15) can&#39;t be booked, because it would result in a triple booking.\r\nThe fifth event (5, 10) can be booked, as it does not use time 10 which is already double booked.\r\nThe sixth event (25, 55) can be booked, as the time in [25, 40) will be double booked with the third event;\r\nthe time [40, 50) will be single booked, and the time [50, 55) will be double booked with the second event.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ul>\r\n\t<li>The number of calls to <code>MyCalendar.book</code> per test case will be at most <code>1000</code>.</li>\r\n\t<li>In calls to <code>MyCalendar.book(start, end)</code>, <code>start</code> and <code>end</code> are integers in the range <code>[0, 10^9]</code>.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"48.2K\", \"totalSubmission\": \"96.3K\", \"totalAcceptedRaw\": 48186, \"totalSubmissionRaw\": 96342, \"acRate\": \"50.0%\"}", "similarQuestions": "[{\"title\": \"My Calendar I\", \"titleSlug\": \"my-calendar-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"My Calendar III\", \"titleSlug\": \"my-calendar-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Ordered Map", "slug": "ordered-map"}]}}, {"id": "729", "name": "my-calendar-i", "content": {"questionId": "729", "questionFrontendId": "729", "questionTitle": "My Calendar I", "questionTitleSlug": "my-calendar-i", "content": "<p>Implement a <code>MyCalendar</code> class to store your events. A new event can be added if adding the event will not cause a double booking.</p>\r\n\r\n<p>Your class will have the method, <code>book(int start, int end)</code>. Formally, this represents a booking on the half open interval <code>[start, end)</code>, the range of real numbers <code>x</code> such that <code>start &lt;= x &lt; end</code>.</p>\r\n\r\n<p>A <i>double booking</i> happens when two events have some non-empty intersection (ie., there is some time that is common to both events.)</p>\r\n\r\n<p>For each call to the method <code>MyCalendar.book</code>, return <code>true</code> if the event can be added to the calendar successfully without causing a double booking. Otherwise, return <code>false</code> and do not add the event to the calendar.</p>\r\nYour class will be called like this: <code>MyCalendar cal = new MyCalendar();</code> <code>MyCalendar.book(start, end)</code>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\nMyCalendar();\r\nMyCalendar.book(10, 20); // returns true\r\nMyCalendar.book(15, 25); // returns false\r\nMyCalendar.book(20, 30); // returns true\r\n<b>Explanation:</b> \r\nThe first event can be booked.  The second can&#39;t because time 15 is already booked by another event.\r\nThe third event can be booked, as the first event takes every time less than 20, but not including 20.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ul>\r\n\t<li>The number of calls to <code>MyCalendar.book</code> per test case will be at most <code>1000</code>.</li>\r\n\t<li>In calls to <code>MyCalendar.book(start, end)</code>, <code>start</code> and <code>end</code> are integers in the range <code>[0, 10^9]</code>.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"73.9K\", \"totalSubmission\": \"139.7K\", \"totalAcceptedRaw\": 73924, \"totalSubmissionRaw\": 139698, \"acRate\": \"52.9%\"}", "similarQuestions": "[{\"title\": \"My Calendar II\", \"titleSlug\": \"my-calendar-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"My Calendar III\", \"titleSlug\": \"my-calendar-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "725", "name": "split-linked-list-in-parts", "content": {"questionId": "725", "questionFrontendId": "725", "questionTitle": "Split Linked List in Parts", "questionTitleSlug": "split-linked-list-in-parts", "content": "<p>Given a (singly) linked list with head node <code>root</code>, write a function to split the linked list into <code>k</code> consecutive linked list \"parts\".\r\n</p><p>\r\nThe length of each part should be as equal as possible: no two parts should have a size differing by more than 1.  This may lead to some parts being null.\r\n</p><p>\r\nThe parts should be in order of occurrence in the input list, and parts occurring earlier should always have a size greater than or equal parts occurring later.\r\n</p><p>\r\nReturn a List of ListNode's representing the linked list parts that are formed.\r\n</p>\r\n\r\nExamples\r\n1->2->3->4, k = 5 // 5 equal parts\r\n[ [1], \r\n[2],\r\n[3],\r\n[4],\r\nnull ]\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre style=\"white-space: pre-line\">\r\n<b>Input:</b> \r\nroot = [1, 2, 3], k = 5\r\n<b>Output:</b> [[1],[2],[3],[],[]]\r\n<b>Explanation:</b>\r\nThe input and each element of the output are ListNodes, not arrays.\r\nFor example, the input root has root.val = 1, root.next.val = 2, \\root.next.next.val = 3, and root.next.next.next = null.\r\nThe first element output[0] has output[0].val = 1, output[0].next = null.\r\nThe last element output[4] is null, but it's string representation as a ListNode is [].\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> \r\nroot = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], k = 3\r\n<b>Output:</b> [[1, 2, 3, 4], [5, 6, 7], [8, 9, 10]]\r\n<b>Explanation:</b>\r\nThe input has been split into consecutive parts with size difference at most 1, and earlier parts are a larger size than the later parts.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<li>The length of <code>root</code> will be in the range <code>[0, 1000]</code>.</li>\r\n<li>Each value of a node in the input will be an integer in the range <code>[0, 999]</code>.</li>\r\n<li><code>k</code> will be an integer in the range <code>[1, 50]</code>.</li>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"55.1K\", \"totalSubmission\": \"104.8K\", \"totalAcceptedRaw\": 55149, \"totalSubmissionRaw\": 104756, \"acRate\": \"52.6%\"}", "similarQuestions": "[{\"title\": \"Rotate List\", \"titleSlug\": \"rotate-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Odd Even Linked List\", \"titleSlug\": \"odd-even-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}]}}, {"id": "723", "name": "candy-crush", "content": {"questionId": "723", "questionFrontendId": "723", "questionTitle": "Candy Crush", "questionTitleSlug": "candy-crush", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"29.5K\", \"totalSubmission\": \"40.9K\", \"totalAcceptedRaw\": 29465, \"totalSubmissionRaw\": 40935, \"acRate\": \"72.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "722", "name": "remove-comments", "content": {"questionId": "722", "questionFrontendId": "722", "questionTitle": "Remove Comments", "questionTitleSlug": "remove-comments", "content": "<p>Given a C++ program, remove comments from it. The program <code>source</code> is an array where <code>source[i]</code> is the <code>i</code>-th line of the source code.  This represents the result of splitting the original source code string by the newline character <code>\\n</code>.</p>\r\n\r\n<p>In C++, there are two types of comments, line comments, and block comments.</p>\r\n<p>\r\nThe string <code>//</code> denotes a line comment, which represents that it and rest of the characters to the right of it in the same line should be ignored.\r\n</p><p>\r\nThe string <code>/*</code> denotes a block comment, which represents that all characters until the next (non-overlapping) occurrence of <code>*/</code> should be ignored.  (Here, occurrences happen in reading order: line by line from left to right.)  To be clear, the string <code>/*/</code> does not yet end the block comment, as the ending would be overlapping the beginning.\r\n</p><p>\r\nThe first effective comment takes precedence over others: if the string <code>//</code> occurs in a block comment, it is ignored. Similarly, if the string <code>/*</code> occurs in a line or block comment, it is also ignored.\r\n</p><p>\r\nIf a certain line of code is empty after removing comments, you must not output that line: each string in the answer list will be non-empty.\r\n</p><p>\r\nThere will be no control characters, single quote, or double quote characters.  For example, <code>source = \"string s = \"/* Not a comment. */\";\"</code> will not be a test case.  (Also, nothing else such as defines or macros will interfere with the comments.)\r\n</p><p>\r\nIt is guaranteed that every open block comment will eventually be closed, so <code>/*</code> outside of a line or block comment always starts a new comment.\r\n</p><p>\r\nFinally, implicit newline characters can be deleted by block comments.  Please see the examples below for details.\r\n</p>\r\n\r\n<p>After removing the comments from the source code, return the source code in the same format.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre style=\"white-space: pre-wrap\">\r\n<b>Input:</b> \r\nsource = [\"/*Test program */\", \"int main()\", \"{ \", \"  // variable declaration \", \"int a, b, c;\", \"/* This is a test\", \"   multiline  \", \"   comment for \", \"   testing */\", \"a = b + c;\", \"}\"]\r\n\r\nThe line by line code is visualized as below:\r\n/*Test program */\r\nint main()\r\n{ \r\n  // variable declaration \r\nint a, b, c;\r\n/* This is a test\r\n   multiline  \r\n   comment for \r\n   testing */\r\na = b + c;\r\n}\r\n\r\n<b>Output:</b> [\"int main()\",\"{ \",\"  \",\"int a, b, c;\",\"a = b + c;\",\"}\"]\r\n\r\nThe line by line code is visualized as below:\r\nint main()\r\n{ \r\n  \r\nint a, b, c;\r\na = b + c;\r\n}\r\n\r\n<b>Explanation:</b> \r\nThe string <code>/*</code> denotes a block comment, including line 1 and lines 6-9. The string <code>//</code> denotes line 4 as comments.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre style=\"white-space: pre-wrap\">\r\n<b>Input:</b> \r\nsource = [\"a/*comment\", \"line\", \"more_comment*/b\"]\r\n<b>Output:</b> [\"ab\"]\r\n<b>Explanation:</b> The original source string is \"a/*comment<b>\\n</b>line<b>\\n</b>more_comment*/b\", where we have bolded the newline characters.  After deletion, the <i>implicit</i> newline characters are deleted, leaving the string \"ab\", which when delimited by newline characters becomes [\"ab\"].\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<li>The length of <code>source</code> is in the range <code>[1, 100]</code>.</li>\r\n<li>The length of <code>source[i]</code> is in the range <code>[0, 80]</code>.</li>\r\n<li>Every open block comment is eventually closed.</li>\r\n<li>There are no single-quote, double-quote, or control characters in the source code.</li>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"36.8K\", \"totalSubmission\": \"103.1K\", \"totalAcceptedRaw\": 36788, \"totalSubmissionRaw\": 103099, \"acRate\": \"35.7%\"}", "similarQuestions": "[{\"title\": \"Mini Parser\", \"titleSlug\": \"mini-parser\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Ternary Expression Parser\", \"titleSlug\": \"ternary-expression-parser\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "721", "name": "accounts-merge", "content": {"questionId": "721", "questionFrontendId": "721", "questionTitle": "Accounts Merge", "questionTitleSlug": "accounts-merge", "content": "<p>Given a list <code>accounts</code>, each element <code>accounts[i]</code> is a list of strings, where the first element <code>accounts[i][0]</code> is a <i>name</i>, and the rest of the elements are <i>emails</i> representing emails of the account.</p>\r\n\r\n<p>Now, we would like to merge these accounts.  Two accounts definitely belong to the same person if there is some email that is common to both accounts.  Note that even if two accounts have the same name, they may belong to different people as people could have the same name.  A person can have any number of accounts initially, but all of their accounts definitely have the same name.</p>\r\n\r\n<p>After merging the accounts, return the accounts in the following format: the first element of each account is the name, and the rest of the elements are emails <b>in sorted order</b>.  The accounts themselves can be returned in any order.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre style=\"white-space: pre-wrap\">\r\n<b>Input:</b> \r\naccounts = [[\"John\", \"johnsmith@mail.com\", \"john00@mail.com\"], [\"John\", \"johnnybravo@mail.com\"], [\"John\", \"johnsmith@mail.com\", \"john_newyork@mail.com\"], [\"Mary\", \"mary@mail.com\"]]\r\n<b>Output:</b> [[\"John\", 'john00@mail.com', 'john_newyork@mail.com', 'johnsmith@mail.com'],  [\"John\", \"johnnybravo@mail.com\"], [\"Mary\", \"mary@mail.com\"]]\r\n<b>Explanation:</b> \r\nThe first and third John's are the same person as they have the common email \"johnsmith@mail.com\".\r\nThe second John and Mary are different people as none of their email addresses are used by other accounts.\r\nWe could return these lists in any order, for example the answer [['Mary', 'mary@mail.com'], ['John', 'johnnybravo@mail.com'], \r\n['John', 'john00@mail.com', 'john_newyork@mail.com', 'johnsmith@mail.com']] would still be accepted.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<li>The length of <code>accounts</code> will be in the range <code>[1, 1000]</code>.</li>\r\n<li>The length of <code>accounts[i]</code> will be in the range <code>[1, 10]</code>.</li>\r\n<li>The length of <code>accounts[i][j]</code> will be in the range <code>[1, 30]</code>.</li>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"112.6K\", \"totalSubmission\": \"221.5K\", \"totalAcceptedRaw\": 112577, \"totalSubmissionRaw\": 221523, \"acRate\": \"50.8%\"}", "similarQuestions": "[{\"title\": \"Redundant Connection\", \"titleSlug\": \"redundant-connection\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sentence Similarity\", \"titleSlug\": \"sentence-similarity\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sentence Similarity II\", \"titleSlug\": \"sentence-similarity-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Union Find", "slug": "union-find"}]}}, {"id": "718", "name": "maximum-length-of-repeated-subarray", "content": {"questionId": "718", "questionFrontendId": "718", "questionTitle": "Maximum Length of Repeated Subarray", "questionTitleSlug": "maximum-length-of-repeated-subarray", "content": "<p>Given two integer arrays <code>A</code> and <code>B</code>, return the maximum length of an subarray that appears in both arrays.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b>\r\nA: [1,2,3,2,1]\r\nB: [3,2,1,4,7]\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> \r\nThe repeated subarray with maximum length is [3, 2, 1].\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>1 &lt;= len(A), len(B) &lt;= 1000</li>\r\n\t<li>0 &lt;= A[i], B[i] &lt; 100</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"78.1K\", \"totalSubmission\": \"156.1K\", \"totalAcceptedRaw\": 78064, \"totalSubmissionRaw\": 156081, \"acRate\": \"50.0%\"}", "similarQuestions": "[{\"title\": \"Minimum Size Subarray Sum\", \"titleSlug\": \"minimum-size-subarray-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Hash Table", "slug": "hash-table"}, {"name": "Binary Search", "slug": "binary-search"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "714", "name": "best-time-to-buy-and-sell-stock-with-transaction-fee", "content": {"questionId": "714", "questionFrontendId": "714", "questionTitle": "Best Time to Buy and Sell Stock with Transaction Fee", "questionTitleSlug": "best-time-to-buy-and-sell-stock-with-transaction-fee", "content": "<p>Your are given an array of integers <code>prices</code>, for which the <code>i</code>-th element is the price of a given stock on day <code>i</code>; and a non-negative integer <code>fee</code> representing a transaction fee.</p>\r\n<p>You may complete as many transactions as you like, but you need to pay the transaction fee for each transaction.  You may not buy more than 1 share of a stock at a time (ie. you must sell the stock share before you buy again.)</p>\r\n<p>Return the maximum profit you can make.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> prices = [1, 3, 2, 8, 4, 9], fee = 2\r\n<b>Output:</b> 8\r\n<b>Explanation:</b> The maximum profit can be achieved by:\r\n<li>Buying at prices[0] = 1</li><li>Selling at prices[3] = 8</li><li>Buying at prices[4] = 4</li><li>Selling at prices[5] = 9</li>The total profit is ((8 - 1) - 2) + ((9 - 4) - 2) = 8.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<li><code>0 < prices.length <= 50000</code>.</li>\r\n<li><code>0 < prices[i] < 50000</code>.</li>\r\n<li><code>0 <= fee < 50000</code>.</li>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"82.1K\", \"totalSubmission\": \"147.3K\", \"totalAcceptedRaw\": 82053, \"totalSubmissionRaw\": 147289, \"acRate\": \"55.7%\"}", "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock II\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "713", "name": "subarray-product-less-than-k", "content": {"questionId": "713", "questionFrontendId": "713", "questionTitle": "Subarray Product Less Than K", "questionTitleSlug": "subarray-product-less-than-k", "content": "<p>Your are given an array of positive integers <code>nums</code>.</p>\r\n<p>Count and print the number of (contiguous) subarrays where the product of all the elements in the subarray is less than <code>k</code>.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> nums = [10, 5, 2, 6], k = 100\r\n<b>Output:</b> 8\r\n<b>Explanation:</b> The 8 subarrays that have product less than 100 are: [10], [5], [2], [6], [10, 5], [5, 2], [2, 6], [5, 2, 6].\r\nNote that [10, 5, 2] is not included as the product of 100 is not strictly less than k.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<li><code>0 < nums.length <= 50000</code>.</li>\r\n<li><code>0 < nums[i] < 1000</code>.</li>\r\n<li><code>0 <= k < 10^6</code>.</li>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"91.3K\", \"totalSubmission\": \"226.3K\", \"totalAcceptedRaw\": 91295, \"totalSubmissionRaw\": 226337, \"acRate\": \"40.3%\"}", "similarQuestions": "[{\"title\": \"Maximum Product Subarray\", \"titleSlug\": \"maximum-product-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Size Subarray Sum Equals k\", \"titleSlug\": \"maximum-size-subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum Less Than K\", \"titleSlug\": \"two-sum-less-than-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "712", "name": "minimum-ascii-delete-sum-for-two-strings", "content": {"questionId": "712", "questionFrontendId": "712", "questionTitle": "Minimum ASCII Delete Sum for Two Strings", "questionTitleSlug": "minimum-ascii-delete-sum-for-two-strings", "content": "<p>Given two strings <code>s1, s2</code>, find the lowest ASCII sum of deleted characters to make two strings equal.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> s1 = \"sea\", s2 = \"eat\"\r\n<b>Output:</b> 231\r\n<b>Explanation:</b> Deleting \"s\" from \"sea\" adds the ASCII value of \"s\" (115) to the sum.\r\nDeleting \"t\" from \"eat\" adds 116 to the sum.\r\nAt the end, both strings are equal, and 115 + 116 = 231 is the minimum sum possible to achieve this.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> s1 = \"delete\", s2 = \"leet\"\r\n<b>Output:</b> 403\r\n<b>Explanation:</b> Deleting \"dee\" from \"delete\" to turn the string into \"let\",\r\nadds 100[d]+101[e]+101[e] to the sum.  Deleting \"e\" from \"leet\" adds 101[e] to the sum.\r\nAt the end, both strings are equal to \"let\", and the answer is 100+101+101+101 = 403.\r\nIf instead we turned both strings into \"lee\" or \"eet\", we would get answers of 433 or 417, which are higher.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<li><code>0 < s1.length, s2.length <= 1000</code>.</li>\r\n<li>All elements of each string will have an ASCII value in <code>[97, 122]</code>.</li> \r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"41.4K\", \"totalSubmission\": \"70K\", \"totalAcceptedRaw\": 41381, \"totalSubmissionRaw\": 69982, \"acRate\": \"59.1%\"}", "similarQuestions": "[{\"title\": \"Edit Distance\", \"titleSlug\": \"edit-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Longest Increasing Subsequence\", \"titleSlug\": \"longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Delete Operation for Two Strings\", \"titleSlug\": \"delete-operation-for-two-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "698", "name": "partition-to-k-equal-sum-subsets", "content": {"questionId": "698", "questionFrontendId": "698", "questionTitle": "Partition to K Equal Sum Subsets", "questionTitleSlug": "partition-to-k-equal-sum-subsets", "content": "<p>Given an array of integers <code>nums</code> and a positive integer <code>k</code>, find whether it&#39;s possible to divide this array into <code>k</code> non-empty subsets whose sums are all equal.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> nums = [4, 3, 2, 3, 5, 2, 1], k = 4\r\n<b>Output:</b> True\r\n<b>Explanation:</b> It&#39;s possible to divide it into 4 subsets (5), (1, 4), (2,3), (2,3) with equal sums.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= k &lt;= len(nums) &lt;= 16</code>.</li>\r\n\t<li><code>0 &lt; nums[i] &lt; 10000</code>.</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"108K\", \"totalSubmission\": \"237.2K\", \"totalAcceptedRaw\": 107952, \"totalSubmissionRaw\": 237222, \"acRate\": \"45.5%\"}", "similarQuestions": "[{\"title\": \"Partition Equal Subset Sum\", \"titleSlug\": \"partition-equal-subset-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Recursion", "slug": "recursion"}]}}, {"id": "695", "name": "max-area-of-island", "content": {"questionId": "695", "questionFrontendId": "695", "questionTitle": "Max Area of Island", "questionTitleSlug": "max-area-of-island", "content": "<p>Given a non-empty 2D array <code>grid</code> of 0&#39;s and 1&#39;s, an <b>island</b> is a group of <code>1</code>&#39;s (representing land) connected 4-directionally (horizontal or vertical.) You may assume all four edges of the grid are surrounded by water.</p>\r\n\r\n<p>Find the maximum area of an island in the given 2D array. (If there is no island, the maximum area is 0.)</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n[[0,0,1,0,0,0,0,1,0,0,0,0,0],\r\n [0,0,0,0,0,0,0,1,1,1,0,0,0],\r\n [0,1,1,0,1,0,0,0,0,0,0,0,0],\r\n [0,1,0,0,1,1,0,0,<b>1</b>,0,<b>1</b>,0,0],\r\n [0,1,0,0,1,1,0,0,<b>1</b>,<b>1</b>,<b>1</b>,0,0],\r\n [0,0,0,0,0,0,0,0,0,0,<b>1</b>,0,0],\r\n [0,0,0,0,0,0,0,1,1,1,0,0,0],\r\n [0,0,0,0,0,0,0,1,1,0,0,0,0]]\r\n</pre>\r\nGiven the above grid, return <code>6</code>. Note the answer is not 11, because the island must be connected 4-directionally.\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n[[0,0,0,0,0,0,0,0]]</pre>\r\nGiven the above grid, return <code>0</code>.\r\n\r\n<p><b>Note:</b> The length of each dimension in the given <code>grid</code> does not exceed 50.</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"193.6K\", \"totalSubmission\": \"302.2K\", \"totalAcceptedRaw\": 193611, \"totalSubmissionRaw\": 302208, \"acRate\": \"64.1%\"}", "similarQuestions": "[{\"title\": \"Number of Islands\", \"titleSlug\": \"number-of-islands\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Island Perimeter\", \"titleSlug\": \"island-perimeter\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "694", "name": "number-of-distinct-islands", "content": {"questionId": "694", "questionFrontendId": "694", "questionTitle": "Number of Distinct Islands", "questionTitleSlug": "number-of-distinct-islands", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"74K\", \"totalSubmission\": \"129.6K\", \"totalAcceptedRaw\": 74005, \"totalSubmissionRaw\": 129636, \"acRate\": \"57.1%\"}", "similarQuestions": "[{\"title\": \"Number of Islands\", \"titleSlug\": \"number-of-islands\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Distinct Islands II\", \"titleSlug\": \"number-of-distinct-islands-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "692", "name": "top-k-frequent-words", "content": {"questionId": "692", "questionFrontendId": "692", "questionTitle": "Top K Frequent Words", "questionTitleSlug": "top-k-frequent-words", "content": "<p>Given a non-empty list of words, return the <i>k</i> most frequent elements.</p>\r\n<p>Your answer should be sorted by frequency from highest to lowest. If two words have the same frequency, then the word with the lower alphabetical order comes first.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> [\"i\", \"love\", \"leetcode\", \"i\", \"love\", \"coding\"], k = 2\r\n<b>Output:</b> [\"i\", \"love\"]\r\n<b>Explanation:</b> \"i\" and \"love\" are the two most frequent words.\r\n    Note that \"i\" comes before \"love\" due to a lower alphabetical order.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> [\"the\", \"day\", \"is\", \"sunny\", \"the\", \"the\", \"the\", \"sunny\", \"is\", \"is\"], k = 4\r\n<b>Output:</b> [\"the\", \"is\", \"sunny\", \"day\"]\r\n<b>Explanation:</b> \"the\", \"is\", \"sunny\" and \"day\" are the four most frequent words,\r\n    with the number of occurrence being 4, 3, 2 and 1 respectively.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>You may assume <i>k</i> is always valid, 1 &le; <i>k</i> &le; number of unique elements.</li>\r\n<li>Input words contain only lowercase letters.</li>\r\n</ol>\r\n</p>\r\n\r\n<p><b>Follow up:</b><br />\r\n<ol>\r\n<li>Try to solve it in <i>O</i>(<i>n</i> log <i>k</i>) time and <i>O</i>(<i>n</i>) extra space.</li>\r\n</ol>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"235.8K\", \"totalSubmission\": \"446.8K\", \"totalAcceptedRaw\": 235783, \"totalSubmissionRaw\": 446784, \"acRate\": \"52.8%\"}", "similarQuestions": "[{\"title\": \"Top K Frequent Elements\", \"titleSlug\": \"top-k-frequent-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"K Closest Points to Origin\", \"titleSlug\": \"k-closest-points-to-origin\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Heap", "slug": "heap"}, {"name": "Trie", "slug": "trie"}]}}, {"id": "688", "name": "knight-probability-in-chessboard", "content": {"questionId": "688", "questionFrontendId": "688", "questionTitle": "Knight Probability in Chessboard", "questionTitleSlug": "knight-probability-in-chessboard", "content": "<p>On an <code>N</code>x<code>N</code> chessboard, a knight starts at the <code>r</code>-th row and <code>c</code>-th column and attempts to make exactly <code>K</code> moves. The rows and columns are 0 indexed, so the top-left square is <code>(0, 0)</code>, and the bottom-right square is <code>(N-1, N-1)</code>.</p>\r\n\r\n<p>A chess knight has 8 possible moves it can make, as illustrated below. Each move is two squares in a cardinal direction, then one square in an orthogonal direction.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/knight.png\" style=\"width: 200px; height: 200px;\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Each time the knight is to move, it chooses one of eight possible moves uniformly at random (even if the piece would go off the chessboard) and moves there.</p>\r\n\r\n<p>The knight continues moving until it has made exactly <code>K</code> moves or has moved off the chessboard. Return the probability that the knight remains on the board after it has stopped moving.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> 3, 2, 0, 0\r\n<b>Output:</b> 0.0625\r\n<b>Explanation:</b> There are two moves (to (1,2), (2,1)) that will keep the knight on the board.\r\nFrom each of those positions, there are also two moves that will keep the knight on the board.\r\nThe total probability the knight stays on the board is 0.0625.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ul>\r\n\t<li><code>N</code> will be between 1 and 25.</li>\r\n\t<li><code>K</code> will be between 0 and 100.</li>\r\n\t<li>The knight always initially starts on the board.</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"52.6K\", \"totalSubmission\": \"105.7K\", \"totalAcceptedRaw\": 52604, \"totalSubmissionRaw\": 105695, \"acRate\": \"49.8%\"}", "similarQuestions": "[{\"title\": \"Out of Boundary Paths\", \"titleSlug\": \"out-of-boundary-paths\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "687", "name": "longest-univalue-path", "content": {"questionId": "687", "questionFrontendId": "687", "questionTitle": "Longest Univalue Path", "questionTitleSlug": "longest-univalue-path", "content": "<p>Given the <code>root</code> of a binary tree, return <em>the length of the longest path, where each node in the path has the same value</em>. This path may or may not pass through the root.</p>\n\n<p><strong>The length of the path</strong> between two nodes is represented by the number of edges between them.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/13/ex1.jpg\" style=\"width: 571px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [5,4,5,1,1,5]\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/13/ex2.jpg\" style=\"width: 571px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [1,4,5,4,4,5]\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n\t<li>The depth of the tree will not exceed <code>1000</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"105.3K\", \"totalSubmission\": \"284.9K\", \"totalAcceptedRaw\": 105254, \"totalSubmissionRaw\": 284868, \"acRate\": \"36.9%\"}", "similarQuestions": "[{\"title\": \"Binary Tree Maximum Path Sum\", \"titleSlug\": \"binary-tree-maximum-path-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Univalue Subtrees\", \"titleSlug\": \"count-univalue-subtrees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Path Sum III\", \"titleSlug\": \"path-sum-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Recursion", "slug": "recursion"}]}}, {"id": "686", "name": "repeated-string-match", "content": {"questionId": "686", "questionFrontendId": "686", "questionTitle": "Repeated String Match", "questionTitleSlug": "repeated-string-match", "content": "<p>Given two strings&nbsp;<code>a</code> and <code>b</code>, return the minimum number of times you should repeat string&nbsp;<code>a</code>&nbsp;so that string&nbsp;<code>b</code>&nbsp;is a substring of it. If it is&nbsp;impossible for&nbsp;<code>b</code>\u200b\u200b\u200b\u200b\u200b\u200b to be a substring of&nbsp;<code>a</code> after repeating it, return&nbsp;<code>-1</code>.</p>\n\n<p><strong>Notice:</strong>&nbsp;string&nbsp;<code>&quot;abc&quot;</code>&nbsp;repeated 0 times is&nbsp;<code>&quot;&quot;</code>,&nbsp; repeated 1 time is&nbsp;<code>&quot;abc&quot;</code>&nbsp;and repeated 2 times is&nbsp;<code>&quot;abcabc&quot;</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = &quot;abcd&quot;, b = &quot;cdabcdab&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> We return 3 because by repeating a three times &quot;ab<strong>cdabcdab</strong>cd&quot;, b is a substring of it.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = &quot;a&quot;, b = &quot;aa&quot;\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = &quot;a&quot;, b = &quot;a&quot;\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = &quot;abc&quot;, b = &quot;wxyz&quot;\n<strong>Output:</strong> -1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= a.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= b.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>a</code>&nbsp;and&nbsp;<code>b</code>&nbsp;consist of lower-case English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"100.9K\", \"totalSubmission\": \"308.7K\", \"totalAcceptedRaw\": 100938, \"totalSubmissionRaw\": 308712, \"acRate\": \"32.7%\"}", "similarQuestions": "[{\"title\": \"Repeated Substring Pattern\", \"titleSlug\": \"repeated-substring-pattern\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "684", "name": "redundant-connection", "content": {"questionId": "684", "questionFrontendId": "684", "questionTitle": "Redundant Connection", "questionTitleSlug": "redundant-connection", "content": "<p>\r\nIn this problem, a tree is an <b>undirected</b> graph that is connected and has no cycles.\r\n</p><p>\r\nThe given input is a graph that started as a tree with N nodes (with distinct values 1, 2, ..., N), with one additional edge added.  The added edge has two different vertices chosen from 1 to N, and was not an edge that already existed.\r\n</p><p>\r\nThe resulting graph is given as a 2D-array of <code>edges</code>.  Each element of <code>edges</code> is a pair <code>[u, v]</code> with <code>u < v</code>, that represents an <b>undirected</b> edge connecting nodes <code>u</code> and <code>v</code>.\r\n</p><p>\r\nReturn an edge that can be removed so that the resulting graph is a tree of N nodes.  If there are multiple answers, return the answer that occurs last in the given 2D-array.  The answer edge <code>[u, v]</code> should be in the same format, with <code>u < v</code>.\r\n</p><p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> [[1,2], [1,3], [2,3]]\r\n<b>Output:</b> [2,3]\r\n<b>Explanation:</b> The given undirected graph will be like this:\r\n  1\r\n / \\\r\n2 - 3\r\n</pre>\r\n</p>\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> [[1,2], [2,3], [3,4], [1,4], [1,5]]\r\n<b>Output:</b> [1,4]\r\n<b>Explanation:</b> The given undirected graph will be like this:\r\n5 - 1 - 2\r\n    |   |\r\n    4 - 3\r\n</pre>\r\n</p>\r\n<p><b>Note:</b><br />\r\n<li>The size of the input 2D-array will be between 3 and 1000.</li>\r\n<li>Every integer represented in the 2D-array will be between 1 and N, where N is the size of the input array.</li>\r\n</p>\r\n\r\n<br />\r\n\r\n<p>\r\n<b><font color=\"red\">Update (2017-09-26):</font></b><br>\r\nWe have overhauled the problem description + test cases and specified clearly the graph is an <b><i>undirected</i></b> graph. For the <b><i>directed</i></b> graph follow up please see <b><a href=\"https://leetcode.com/problems/redundant-connection-ii/description/\">Redundant Connection II</a></b>). We apologize for any inconvenience caused.\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"114.1K\", \"totalSubmission\": \"194.8K\", \"totalAcceptedRaw\": 114111, \"totalSubmissionRaw\": 194801, \"acRate\": \"58.6%\"}", "similarQuestions": "[{\"title\": \"Redundant Connection II\", \"titleSlug\": \"redundant-connection-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Accounts Merge\", \"titleSlug\": \"accounts-merge\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Union Find", "slug": "union-find"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "681", "name": "next-closest-time", "content": {"questionId": "681", "questionFrontendId": "681", "questionTitle": "Next Closest Time", "questionTitleSlug": "next-closest-time", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"72.5K\", \"totalSubmission\": \"158.9K\", \"totalAcceptedRaw\": 72520, \"totalSubmissionRaw\": 158862, \"acRate\": \"45.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "678", "name": "valid-parenthesis-string", "content": {"questionId": "678", "questionFrontendId": "678", "questionTitle": "Valid Parenthesis String", "questionTitleSlug": "valid-parenthesis-string", "content": "<p>\r\nGiven a string containing only three types of characters: '(', ')' and '*', write a function to check whether this string is valid. We define the validity of a string by these rules:\r\n<ol>\r\n<li>Any left parenthesis <code>'('</code> must have a corresponding right parenthesis <code>')'</code>.</li>\r\n<li>Any right parenthesis <code>')'</code> must have a corresponding left parenthesis <code>'('</code>.</li>\r\n<li>Left parenthesis <code>'('</code> must go before the corresponding right parenthesis <code>')'</code>.</li>\r\n<li><code>'*'</code> could be treated as a single right parenthesis <code>')'</code> or a single left parenthesis <code>'('</code> or an empty string.</li>\r\n<li>An empty string is also valid.</li>\r\n</ol>\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> \"()\"\r\n<b>Output:</b> True\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> \"(*)\"\r\n<b>Output:</b> True\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 3:</b><br />\r\n<pre>\r\n<b>Input:</b> \"(*))\"\r\n<b>Output:</b> True\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The string size will be in the range [1, 100].</li>\r\n</ol>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"124.1K\", \"totalSubmission\": \"394.7K\", \"totalAcceptedRaw\": 124098, \"totalSubmissionRaw\": 394679, \"acRate\": \"31.4%\"}", "similarQuestions": "[{\"title\": \"Special Binary String\", \"titleSlug\": \"special-binary-string\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "677", "name": "map-sum-pairs", "content": {"questionId": "677", "questionFrontendId": "677", "questionTitle": "Map Sum Pairs", "questionTitleSlug": "map-sum-pairs", "content": "<p>Implement the <code>MapSum</code> class:</p>\n\n<ul>\n\t<li><code>MapSum()</code> Initializes the&nbsp;<code>MapSum</code> object.</li>\n\t<li><code>void insert(String key, int val)</code> Inserts the <code>key-val</code> pair into the map. If the <code>key</code> already existed, the original <code>key-value</code> pair will be overridden to the new one.</li>\n\t<li><code>int sum(string prefix)</code> Returns&nbsp;the sum of all the pairs&#39; value whose <code>key</code> starts with the <code>prefix</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;MapSum&quot;, &quot;insert&quot;, &quot;sum&quot;, &quot;insert&quot;, &quot;sum&quot;]\n[[], [&quot;apple&quot;, 3], [&quot;ap&quot;], [&quot;app&quot;, 2], [&quot;ap&quot;]]\n<strong>Output</strong>\n[null, null, 3, null, 5]\n\n<strong>Explanation</strong>\nMapSum mapSum = new MapSum();\nmapSum.insert(&quot;apple&quot;, 3);  \nmapSum.sum(&quot;ap&quot;);           // return 3 (<u>ap</u>ple = 3)\nmapSum.insert(&quot;app&quot;, 2);    \nmapSum.sum(&quot;ap&quot;);           // return 5 (<u>ap</u>ple + <u>ap</u>p = 3 + 2 = 5)\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= key.length, prefix.length &lt;= 50</code></li>\n\t<li><code>key</code> and <code>prefix</code> consist of only lowercase English letters.</li>\n\t<li><code>1 &lt;= val &lt;= 1000</code></li>\n\t<li>At most <code>50</code> calls will be made to <code>insert</code> and <code>sum</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"46.8K\", \"totalSubmission\": \"87K\", \"totalAcceptedRaw\": 46808, \"totalSubmissionRaw\": 86974, \"acRate\": \"53.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Trie", "slug": "trie"}]}}, {"id": "676", "name": "implement-magic-dictionary", "content": {"questionId": "676", "questionFrontendId": "676", "questionTitle": "Implement Magic Dictionary", "questionTitleSlug": "implement-magic-dictionary", "content": "<p>Design a data structure that is initialized with a list of <strong>different</strong> words. Provided a string, you should determine if you can change exactly one character in this string to match any word in the data structure.</p>\n\n<p>Implement the&nbsp;<code>MagicDictionary</code>&nbsp;class:</p>\n\n<ul>\n\t<li><code>MagicDictionary()</code>&nbsp;Initializes the object.</li>\n\t<li><code>void buildDict(String[]&nbsp;dictionary)</code>&nbsp;Sets the data structure&nbsp;with an array of distinct strings <code>dictionary</code>.</li>\n\t<li><code>bool search(String searchWord)</code> Returns <code>true</code> if you can change <strong>exactly one character</strong> in <code>searchWord</code> to match any string in the data structure, otherwise returns <code>false</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;MagicDictionary&quot;, &quot;buildDict&quot;, &quot;search&quot;, &quot;search&quot;, &quot;search&quot;, &quot;search&quot;]\n[[], [[&quot;hello&quot;, &quot;leetcode&quot;]], [&quot;hello&quot;], [&quot;hhllo&quot;], [&quot;hell&quot;], [&quot;leetcoded&quot;]]\n<strong>Output</strong>\n[null, null, false, true, false, false]\n\n<strong>Explanation</strong>\nMagicDictionary magicDictionary = new MagicDictionary();\nmagicDictionary.buildDict([&quot;hello&quot;, &quot;leetcode&quot;]);\nmagicDictionary.search(&quot;hello&quot;); // return False\nmagicDictionary.search(&quot;hhllo&quot;); // We can change the second &#39;h&#39; to &#39;e&#39; to match &quot;hello&quot; so we return True\nmagicDictionary.search(&quot;hell&quot;); // return False\nmagicDictionary.search(&quot;leetcoded&quot;); // return False\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;=&nbsp;dictionary.length &lt;= 100</code></li>\n\t<li><code>1 &lt;=&nbsp;dictionary[i].length &lt;= 100</code></li>\n\t<li><code>dictionary[i]</code> consists of only lower-case English letters.</li>\n\t<li>All the strings in&nbsp;<code>dictionary</code>&nbsp;are <strong>distinct</strong>.</li>\n\t<li><code>1 &lt;=&nbsp;searchWord.length &lt;= 100</code></li>\n\t<li><code>searchWord</code>&nbsp;consists of only lower-case English letters.</li>\n\t<li><code>buildDict</code>&nbsp;will be called only once before <code>search</code>.</li>\n\t<li>At most <code>100</code> calls will be made to <code>search</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"45.8K\", \"totalSubmission\": \"83.2K\", \"totalAcceptedRaw\": 45825, \"totalSubmissionRaw\": 83233, \"acRate\": \"55.1%\"}", "similarQuestions": "[{\"title\": \"Implement Trie (Prefix Tree)\", \"titleSlug\": \"implement-trie-prefix-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Word in Dictionary\", \"titleSlug\": \"longest-word-in-dictionary\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Trie", "slug": "trie"}]}}, {"id": "673", "name": "number-of-longest-increasing-subsequence", "content": {"questionId": "673", "questionFrontendId": "673", "questionTitle": "Number of Longest Increasing Subsequence", "questionTitleSlug": "number-of-longest-increasing-subsequence", "content": "<p>Given an integer array&nbsp;<code>nums</code>, return <em>the number of longest increasing subsequences.</em></p>\n\n<p><strong>Notice</strong> that the sequence has to be <strong>strictly</strong> increasing.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,5,4,7]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The two longest increasing subsequences are [1, 3, 4, 7] and [1, 3, 5, 7].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,2,2,2,2]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The length of longest continuous increasing subsequence is 1, and there are 5 subsequences&#39; length is 1, so output 5.\n\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 2000</code></li>\n\t<li><code>-10<sup>6</sup> &lt;= nums[i] &lt;= 10<sup>6</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"71.9K\", \"totalSubmission\": \"187.6K\", \"totalAcceptedRaw\": 71877, \"totalSubmissionRaw\": 187574, \"acRate\": \"38.3%\"}", "similarQuestions": "[{\"title\": \"Longest Increasing Subsequence\", \"titleSlug\": \"longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Continuous Increasing Subsequence\", \"titleSlug\": \"longest-continuous-increasing-subsequence\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "672", "name": "bulb-switcher-ii", "content": {"questionId": "672", "questionFrontendId": "672", "questionTitle": "Bulb Switcher II", "questionTitleSlug": "bulb-switcher-ii", "content": "<p>There is a room with <code>n</code> lights which are turned on initially and 4 buttons on the wall. After performing exactly <code>m</code> unknown operations towards buttons, you need to return how many different kinds of status of the <code>n</code> lights could be.</p>\r\n\r\n<p>Suppose <code>n</code> lights are labeled as number [1, 2, 3 ..., n], function of these 4 buttons are given below:</p>\r\n\r\n<ol>\r\n\t<li>Flip all the lights.</li>\r\n\t<li>Flip lights with even numbers.</li>\r\n\t<li>Flip lights with odd numbers.</li>\r\n\t<li>Flip lights with (3k + 1) numbers, k = 0, 1, 2, ...</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> n = 1, m = 1.\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> Status can be: [on], [off]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> n = 2, m = 1.\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> Status can be: [on, off], [off, on], [off, off]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 3:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> n = 3, m = 1.\r\n<b>Output:</b> 4\r\n<b>Explanation:</b> Status can be: [off, on, off], [on, off, on], [off, off, off], [off, on, on].\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b> <code>n</code> and <code>m</code> both fit in range [0, 1000].</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13.7K\", \"totalSubmission\": \"26.8K\", \"totalAcceptedRaw\": 13702, \"totalSubmissionRaw\": 26834, \"acRate\": \"51.1%\"}", "similarQuestions": "[{\"title\": \"Bulb Switcher\", \"titleSlug\": \"bulb-switcher\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Bulb Switcher III\", \"titleSlug\": \"bulb-switcher-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "670", "name": "maximum-swap", "content": {"questionId": "670", "questionFrontendId": "670", "questionTitle": "Maximum Swap", "questionTitleSlug": "maximum-swap", "content": "<p>\r\nGiven a non-negative integer, you could swap two digits <b>at most</b> once to get the maximum valued number. Return the maximum valued number you could get.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> 2736\r\n<b>Output:</b> 7236\r\n<b>Explanation:</b> Swap the number 2 and the number 7.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> 9973\r\n<b>Output:</b> 9973\r\n<b>Explanation:</b> No swap.\r\n</pre>\r\n</p>\r\n\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The given number is in the range [0, 10<sup>8</sup>]</li>\r\n</ol>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"86.3K\", \"totalSubmission\": \"192.9K\", \"totalAcceptedRaw\": 86262, \"totalSubmissionRaw\": 192919, \"acRate\": \"44.7%\"}", "similarQuestions": "[{\"title\": \"Create Maximum Number\", \"titleSlug\": \"create-maximum-number\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Math", "slug": "math"}]}}, {"id": "667", "name": "beautiful-arrangement-ii", "content": {"questionId": "667", "questionFrontendId": "667", "questionTitle": "Beautiful Arrangement II", "questionTitleSlug": "beautiful-arrangement-ii", "content": "<p>\r\nGiven two integers <code>n</code> and <code>k</code>, you need to construct a list which contains <code>n</code> different positive integers ranging from <code>1</code> to <code>n</code> and obeys the following requirement: <br/>\r\n\r\nSuppose this list is [a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>, ... , a<sub>n</sub>], then the list [|a<sub>1</sub> - a<sub>2</sub>|, |a<sub>2</sub> - a<sub>3</sub>|, |a<sub>3</sub> - a<sub>4</sub>|, ... , |a<sub>n-1</sub> - a<sub>n</sub>|] has exactly <code>k</code> distinct integers.\r\n</p>\r\n\r\n<p>\r\nIf there are multiple answers, print any of them.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br/>\r\n<pre>\r\n<b>Input:</b> n = 3, k = 1\r\n<b>Output:</b> [1, 2, 3]\r\n<b>Explanation:</b> The [1, 2, 3] has three different positive integers ranging from 1 to 3, and the [1, 1] has exactly 1 distinct integer: 1.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> n = 3, k = 2\r\n<b>Output:</b> [1, 3, 2]\r\n<b>Explanation:</b> The [1, 3, 2] has three different positive integers ranging from 1 to 3, and the [2, 1] has exactly 2 distinct integers: 1 and 2.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The <code>n</code> and <code>k</code> are in the range 1 <= k < n <= 10<sup>4</sup>.</li>\r\n</ol>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"25.9K\", \"totalSubmission\": \"47.2K\", \"totalAcceptedRaw\": 25856, \"totalSubmissionRaw\": 47175, \"acRate\": \"54.8%\"}", "similarQuestions": "[{\"title\": \"Beautiful Arrangement\", \"titleSlug\": \"beautiful-arrangement\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "666", "name": "path-sum-iv", "content": {"questionId": "666", "questionFrontendId": "666", "questionTitle": "Path Sum IV", "questionTitleSlug": "path-sum-iv", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"13.5K\", \"totalSubmission\": \"24.3K\", \"totalAcceptedRaw\": 13502, \"totalSubmissionRaw\": 24340, \"acRate\": \"55.5%\"}", "similarQuestions": "[{\"title\": \"Path Sum\", \"titleSlug\": \"path-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Path Sum II\", \"titleSlug\": \"path-sum-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Maximum Path Sum\", \"titleSlug\": \"binary-tree-maximum-path-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Path Sum III\", \"titleSlug\": \"path-sum-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "663", "name": "equal-tree-partition", "content": {"questionId": "663", "questionFrontendId": "663", "questionTitle": "Equal Tree Partition", "questionTitleSlug": "equal-tree-partition", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"19.8K\", \"totalSubmission\": \"50K\", \"totalAcceptedRaw\": 19803, \"totalSubmissionRaw\": 49955, \"acRate\": \"39.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "662", "name": "maximum-width-of-binary-tree", "content": {"questionId": "662", "questionFrontendId": "662", "questionTitle": "Maximum Width of Binary Tree", "questionTitleSlug": "maximum-width-of-binary-tree", "content": "<p>Given a binary tree, write a function to get the maximum width of the given tree. The maximum width of a tree is the maximum width among all levels.</p>\n\n<p>The width of one level is defined as the length between the end-nodes (the leftmost and right most non-null nodes in the level, where the <code>null</code> nodes between the end-nodes are also counted into the length calculation.</p>\n\n<p>It is <strong>guaranteed</strong> that the answer will in the range of 32-bit signed integer.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> \n\n           1\n         /   \\\n        3     2\n       / \\     \\  \n      5   3     9 \n\n<b>Output:</b> 4\n<b>Explanation:</b> The maximum width existing in the third level with the length 4 (5,3,null,9).\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> \n\n          1\n         /  \n        3    \n       / \\       \n      5   3     \n\n<b>Output:</b> 2\n<b>Explanation:</b> The maximum width existing in the third level with the length 2 (5,3).\n</pre>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<b>Input:</b> \n\n          1\n         / \\\n        3   2 \n       /        \n      5      \n\n<b>Output:</b> 2\n<b>Explanation:</b> The maximum width existing in the second level with the length 2 (3,2).\n</pre>\n\n<p><b>Example 4:</b></p>\n\n<pre>\n<b>Input:</b> \n\n          1\n         / \\\n        3   2\n       /     \\  \n      5       9 \n     /         \\\n    6           7\n<b>Output:</b> 8\n<b>Explanation:</b>The maximum width existing in the fourth level with the length 8 (6,null,null,null,null,null,null,7).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The&nbsp;given binary tree will have between&nbsp;<code>1</code>&nbsp;and&nbsp;<code>3000</code>&nbsp;nodes.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"102.1K\", \"totalSubmission\": \"254.7K\", \"totalAcceptedRaw\": 102075, \"totalSubmissionRaw\": 254691, \"acRate\": \"40.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "659", "name": "split-array-into-consecutive-subsequences", "content": {"questionId": "659", "questionFrontendId": "659", "questionTitle": "Split Array into Consecutive Subsequences", "questionTitleSlug": "split-array-into-consecutive-subsequences", "content": "<p>Given an array <code>nums</code>&nbsp;sorted in ascending order, return <code>true</code> if and only if you can split it into 1 or more subsequences such that each subsequence consists of consecutive integers&nbsp;and has length at least 3.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> [1,2,3,3,4,5]\n<b>Output:</b> True\n<b>Explanation:</b>\nYou can split them into two consecutive subsequences : \n1, 2, 3\n3, 4, 5\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> [1,2,3,3,4,4,5,5]\n<b>Output:</b> True\n<b>Explanation:</b>\nYou can split them into two consecutive subsequences : \n1, 2, 3, 4, 5\n3, 4, 5\n</pre>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<b>Input:</b> [1,2,3,4,4,5]\n<b>Output:</b> False\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Constraints:</b></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"53.6K\", \"totalSubmission\": \"121.4K\", \"totalAcceptedRaw\": 53620, \"totalSubmissionRaw\": 121375, \"acRate\": \"44.2%\"}", "similarQuestions": "[{\"title\": \"Top K Frequent Elements\", \"titleSlug\": \"top-k-frequent-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Divide Array in Sets of K Consecutive Numbers\", \"titleSlug\": \"divide-array-in-sets-of-k-consecutive-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Heap", "slug": "heap"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "658", "name": "find-k-closest-elements", "content": {"questionId": "658", "questionFrontendId": "658", "questionTitle": "Find K Closest Elements", "questionTitleSlug": "find-k-closest-elements", "content": "<p>Given a <strong>sorted</strong> integer&nbsp;array <code>arr</code>, two integers <code>k</code> and <code>x</code>, return the <code>k</code> closest integers to <code>x</code> in the array. The result should also be sorted in ascending order.</p>\n\n<p>An integer <code>a</code> is closer to <code>x</code> than an integer <code>b</code> if:</p>\n\n<ul>\n\t<li><code>|a - x| &lt; |b - x|</code>, or</li>\n\t<li><code>|a - x| == |b - x|</code> and <code>a &lt; b</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> arr = [1,2,3,4,5], k = 4, x = 3\n<strong>Output:</strong> [1,2,3,4]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> arr = [1,2,3,4,5], k = 4, x = -1\n<strong>Output:</strong> [1,2,3,4]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= arr.length</code></li>\n\t<li><code>1 &lt;= arr.length&nbsp;&lt;= 10<sup>4</sup></code></li>\n\t<li>Absolute value of elements in the array and <code>x</code> will not exceed <code>10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"129.9K\", \"totalSubmission\": \"312.2K\", \"totalAcceptedRaw\": 129922, \"totalSubmissionRaw\": 312239, \"acRate\": \"41.6%\"}", "similarQuestions": "[{\"title\": \"Guess Number Higher or Lower\", \"titleSlug\": \"guess-number-higher-or-lower\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Guess Number Higher or Lower II\", \"titleSlug\": \"guess-number-higher-or-lower-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find K-th Smallest Pair Distance\", \"titleSlug\": \"find-k-th-smallest-pair-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "655", "name": "print-binary-tree", "content": {"questionId": "655", "questionFrontendId": "655", "questionTitle": "Print Binary Tree", "questionTitleSlug": "print-binary-tree", "content": "<p>Print a binary tree in an m*n 2D string array following these rules: </p>\r\n\r\n<ol>\r\n<li>The row number <code>m</code> should be equal to the height of the given binary tree.</li>\r\n<li>The column number <code>n</code> should always be an odd number.</li>\r\n<li>The root node's value (in string format) should be put in the exactly middle of the first row it can be put. The column and the row where the root node belongs will separate the rest space into two parts (<b>left-bottom part and right-bottom part</b>). You should print the left subtree in the left-bottom part and print the right subtree in the right-bottom part. The left-bottom part and the right-bottom part should have the same size. Even if one subtree is none while the other is not, you don't need to print anything for the none subtree but still need to leave the space as large as that for the other subtree. However, if two subtrees are none, then you don't need to leave space for both of them. </li>\r\n<li>Each unused space should contain an empty string <code>\"\"</code>.</li>\r\n<li>Print the subtrees following the same rules.</li>\r\n</ol>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b>\r\n     1\r\n    /\r\n   2\r\n<b>Output:</b>\r\n[[\"\", \"1\", \"\"],\r\n [\"2\", \"\", \"\"]]\r\n</pre>\r\n</p>\r\n\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b>\r\n     1\r\n    / \\\r\n   2   3\r\n    \\\r\n     4\r\n<b>Output:</b>\r\n[[\"\", \"\", \"\", \"1\", \"\", \"\", \"\"],\r\n [\"\", \"2\", \"\", \"\", \"\", \"3\", \"\"],\r\n [\"\", \"\", \"4\", \"\", \"\", \"\", \"\"]]\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 3:</b><br />\r\n<pre>\r\n<b>Input:</b>\r\n      1\r\n     / \\\r\n    2   5\r\n   / \r\n  3 \r\n / \r\n4 \r\n<b>Output:</b>\r\n\r\n[[\"\",  \"\",  \"\", \"\",  \"\", \"\", \"\", \"1\", \"\",  \"\",  \"\",  \"\",  \"\", \"\", \"\"]\r\n [\"\",  \"\",  \"\", \"2\", \"\", \"\", \"\", \"\",  \"\",  \"\",  \"\",  \"5\", \"\", \"\", \"\"]\r\n [\"\",  \"3\", \"\", \"\",  \"\", \"\", \"\", \"\",  \"\",  \"\",  \"\",  \"\",  \"\", \"\", \"\"]\r\n [\"4\", \"\",  \"\", \"\",  \"\", \"\", \"\", \"\",  \"\",  \"\",  \"\",  \"\",  \"\", \"\", \"\"]]\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\nThe height of binary tree is in the range of [1, 10].\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"36K\", \"totalSubmission\": \"64.7K\", \"totalAcceptedRaw\": 36003, \"totalSubmissionRaw\": 64701, \"acRate\": \"55.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "654", "name": "maximum-binary-tree", "content": {"questionId": "654", "questionFrontendId": "654", "questionTitle": "Maximum Binary Tree", "questionTitleSlug": "maximum-binary-tree", "content": "<p>Given an integer array with no duplicates. A maximum tree building on this array is defined as follow:</p>\n\n<ol>\n\t<li>The root is the maximum number in the array.</li>\n\t<li>The left subtree is the maximum tree constructed from left part subarray divided by the maximum number.</li>\n\t<li>The right subtree is the maximum tree constructed from right part subarray divided by the maximum number.</li>\n</ol>\n\n<p>Construct the maximum tree by the given array and output the root node of this tree.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/24/tree1.jpg\" style=\"width: 302px; height: 421px;\" />\n<pre>\n<strong>Input:</strong> nums = [3,2,1,6,0,5]\n<strong>Output:</strong> [6,3,5,null,2,0,null,null,1]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/24/tree2.jpg\" style=\"width: 182px; height: 301px;\" />\n<pre>\n<strong>Input:</strong> nums = [3,2,1]\n<strong>Output:</strong> [3,null,2,null,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 1000</code></li>\n\t<li>All integers in <code>nums</code> are <strong>unique</strong>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"149.2K\", \"totalSubmission\": \"184.9K\", \"totalAcceptedRaw\": 149235, \"totalSubmissionRaw\": 184893, \"acRate\": \"80.7%\"}", "similarQuestions": "[{\"title\": \"Maximum Binary Tree II\", \"titleSlug\": \"maximum-binary-tree-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "652", "name": "find-duplicate-subtrees", "content": {"questionId": "652", "questionFrontendId": "652", "questionTitle": "Find Duplicate Subtrees", "questionTitleSlug": "find-duplicate-subtrees", "content": "<p>Given the <code>root</code>&nbsp;of a binary tree, return all <strong>duplicate subtrees</strong>.</p>\n\n<p>For each kind of duplicate subtrees, you only need to return the root node of any <b>one</b> of them.</p>\n\n<p>Two trees are <strong>duplicate</strong> if they have the <strong>same structure</strong> with the <strong>same node values</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/16/e1.jpg\" style=\"width: 450px; height: 354px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,null,2,4,null,null,4]\n<strong>Output:</strong> [[2,4],[4]]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/16/e2.jpg\" style=\"width: 321px; height: 201px;\" />\n<pre>\n<strong>Input:</strong> root = [2,1,1]\n<strong>Output:</strong> [[1]]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/16/e33.jpg\" style=\"width: 450px; height: 303px;\" />\n<pre>\n<strong>Input:</strong> root = [2,2,2,3,null,3,null]\n<strong>Output:</strong> [[2,3],[3]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of the nodes in the tree will be in the range <code>[1, 10^4]</code></li>\n\t<li><code>-200 &lt;= Node.val &lt;= 200</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"77.6K\", \"totalSubmission\": \"150.1K\", \"totalAcceptedRaw\": 77552, \"totalSubmissionRaw\": 150088, \"acRate\": \"51.7%\"}", "similarQuestions": "[{\"title\": \"Serialize and Deserialize Binary Tree\", \"titleSlug\": \"serialize-and-deserialize-binary-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Serialize and Deserialize BST\", \"titleSlug\": \"serialize-and-deserialize-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Construct String from Binary Tree\", \"titleSlug\": \"construct-string-from-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "651", "name": "4-keys-keyboard", "content": {"questionId": "651", "questionFrontendId": "651", "questionTitle": "4 Keys Keyboard", "questionTitleSlug": "4-keys-keyboard", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"17.4K\", \"totalSubmission\": \"33K\", \"totalAcceptedRaw\": 17422, \"totalSubmissionRaw\": 32956, \"acRate\": \"52.9%\"}", "similarQuestions": "[{\"title\": \"2 Keys Keyboard\", \"titleSlug\": \"2-keys-keyboard\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "650", "name": "2-keys-keyboard", "content": {"questionId": "650", "questionFrontendId": "650", "questionTitle": "2 Keys Keyboard", "questionTitleSlug": "2-keys-keyboard", "content": "<p>Initially on a notepad only one character &#39;A&#39; is present. You can perform two operations on this notepad for each step:</p>\r\n\r\n<ol>\r\n\t<li><code>Copy All</code>: You can copy all the characters present on the notepad (partial copy is not allowed).</li>\r\n\t<li><code>Paste</code>: You can paste the characters which are copied <b>last time</b>.</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Given a number <code>n</code>. You have to get <b>exactly</b> <code>n</code> &#39;A&#39; on the notepad by performing the minimum number of steps permitted. Output the minimum number of steps to get <code>n</code> &#39;A&#39;.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> 3\r\n<b>Output:</b> 3\r\n<b>Explanation:</b>\r\nIntitally, we have one character &#39;A&#39;.\r\nIn step 1, we use <b>Copy All</b> operation.\r\nIn step 2, we use <b>Paste</b> operation to get &#39;AA&#39;.\r\nIn step 3, we use <b>Paste</b> operation to get &#39;AAA&#39;.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>The <code>n</code> will be in the range [1, 1000].</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"67.1K\", \"totalSubmission\": \"135K\", \"totalAcceptedRaw\": 67140, \"totalSubmissionRaw\": 134997, \"acRate\": \"49.7%\"}", "similarQuestions": "[{\"title\": \"4 Keys Keyboard\", \"titleSlug\": \"4-keys-keyboard\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Broken Calculator\", \"titleSlug\": \"broken-calculator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "649", "name": "dota2-senate", "content": {"questionId": "649", "questionFrontendId": "649", "questionTitle": "Dota2 Senate", "questionTitleSlug": "dota2-senate", "content": "<p>In the world of Dota2, there are two parties: the <code>Radiant</code> and the <code>Dire</code>.</p>\r\n\r\n<p>The Dota2 senate consists of senators coming from two parties. Now the senate wants to make a decision about a change in the Dota2 game. The voting for this change is a round-based procedure. In each round, each senator can exercise <code>one</code> of the two rights:</p>\r\n\r\n<ol>\r\n\t<li><code>Ban one senator&#39;s right</code>:<br />\r\n\tA senator can make another senator lose <b>all his rights</b> in this and all the following rounds.</li>\r\n\t<li><code>Announce the victory</code>:<br />\r\n\tIf this senator found the senators who still have rights to vote are all from <b>the same party</b>, he can announce the victory and make the decision about the change in the game.</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Given a string representing each senator&#39;s party belonging. The character &#39;R&#39; and &#39;D&#39; represent the <code>Radiant</code> party and the <code>Dire</code> party respectively. Then if there are <code>n</code> senators, the size of the given string will be <code>n</code>.</p>\r\n\r\n<p>The round-based procedure starts from the first senator to the last senator in the given order. This procedure will last until the end of voting. All the senators who have lost their rights will be skipped during the procedure.</p>\r\n\r\n<p>Suppose every senator is smart enough and will play the best strategy for his own party, you need to predict which party will finally announce the victory and make the change in the Dota2 game. The output should be <code>Radiant</code> or <code>Dire</code>.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> &quot;RD&quot;\r\n<b>Output:</b> &quot;Radiant&quot;\r\n<b>Explanation:</b> The first senator comes from Radiant and he can just ban the next senator&#39;s right in the round 1. \r\nAnd the second senator can&#39;t exercise any rights any more since his right has been banned. \r\nAnd in the round 2, the first senator can just announce the victory since he is the only guy in the senate who can vote.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> &quot;RDD&quot;\r\n<b>Output:</b> &quot;Dire&quot;\r\n<b>Explanation:</b> \r\nThe first senator comes from Radiant and he can just ban the next senator&#39;s right in the round 1. \r\nAnd the second senator can&#39;t exercise any rights anymore since his right has been banned. \r\nAnd the third senator comes from Dire and he can ban the first senator&#39;s right in the round 1. \r\nAnd in the round 2, the third senator can just announce the victory since he is the only guy in the senate who can vote.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>The length of the given string will in the range [1, 10,000].</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.2K\", \"totalSubmission\": \"36K\", \"totalAcceptedRaw\": 14174, \"totalSubmissionRaw\": 36005, \"acRate\": \"39.4%\"}", "similarQuestions": "[{\"title\": \"Teemo Attacking\", \"titleSlug\": \"teemo-attacking\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "648", "name": "replace-words", "content": {"questionId": "648", "questionFrontendId": "648", "questionTitle": "Replace Words", "questionTitleSlug": "replace-words", "content": "<p>In English, we have a concept called <strong>root</strong>, which can be followed by some other word&nbsp;to form another longer word - let&#39;s call this word <strong>successor</strong>. For example, when the <strong>root</strong> <code>&quot;an&quot;</code> is&nbsp;followed by the <strong>successor</strong>&nbsp;word&nbsp;<code>&quot;other&quot;</code>, we&nbsp;can form a new word <code>&quot;another&quot;</code>.</p>\n\n<p>Given a <code>dictionary</code> consisting of many <strong>roots</strong> and a <code>sentence</code>&nbsp;consisting of words separated by spaces, replace all the <strong>successors</strong> in the sentence with the <strong>root</strong> forming it. If a <strong>successor</strong> can be replaced by more than one <strong>root</strong>,&nbsp;replace it with the <strong>root</strong> that has&nbsp;<strong>the shortest length</strong>.</p>\n\n<p>Return <em>the <code>sentence</code></em> after the replacement.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> dictionary = [\"cat\",\"bat\",\"rat\"], sentence = \"the cattle was rattled by the battery\"\n<strong>Output:</strong> \"the cat was rat by the bat\"\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> dictionary = [\"a\",\"b\",\"c\"], sentence = \"aadsfasf absbs bbab cadsfafs\"\n<strong>Output:</strong> \"a a b c\"\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> dictionary = [\"a\", \"aa\", \"aaa\", \"aaaa\"], sentence = \"a aa a aaaa aaa aaa aaa aaaaaa bbb baba ababa\"\n<strong>Output:</strong> \"a a a a a a a a bbb baba a\"\n</pre><p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> dictionary = [\"catt\",\"cat\",\"bat\",\"rat\"], sentence = \"the cattle was rattled by the battery\"\n<strong>Output:</strong> \"the cat was rat by the bat\"\n</pre><p><strong>Example 5:</strong></p>\n<pre><strong>Input:</strong> dictionary = [\"ac\",\"ab\"], sentence = \"it is abnormal that this solution is accepted\"\n<strong>Output:</strong> \"it is ab that this solution is ac\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= dictionary.length&nbsp;&lt;= 1000</code></li>\n\t<li><code>1 &lt;= dictionary[i].length &lt;= 100</code></li>\n\t<li><code>dictionary[i]</code>&nbsp;consists of only lower-case letters.</li>\n\t<li><code>1 &lt;= sentence.length &lt;= 10^6</code></li>\n\t<li><code>sentence</code>&nbsp;consists of only lower-case letters and spaces.</li>\n\t<li>The number of words in&nbsp;<code>sentence</code>&nbsp;is in the range <code>[1, 1000]</code></li>\n\t<li>The length of each word in&nbsp;<code>sentence</code>&nbsp;is in the range <code>[1, 1000]</code></li>\n\t<li>Each two consecutive words in&nbsp;<code>sentence</code>&nbsp;will be separated by exactly one space.</li>\n\t<li><code>sentence</code>&nbsp;does not have leading or trailing spaces.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"64K\", \"totalSubmission\": \"110.3K\", \"totalAcceptedRaw\": 63995, \"totalSubmissionRaw\": 110332, \"acRate\": \"58.0%\"}", "similarQuestions": "[{\"title\": \"Implement Trie (Prefix Tree)\", \"titleSlug\": \"implement-trie-prefix-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Trie", "slug": "trie"}]}}, {"id": "647", "name": "palindromic-substrings", "content": {"questionId": "647", "questionFrontendId": "647", "questionTitle": "Palindromic Substrings", "questionTitleSlug": "palindromic-substrings", "content": "<p>Given a string, your task is to count how many palindromic substrings in this string.</p>\r\n\r\n<p>The substrings with different start indexes or end indexes are counted as different substrings even they consist of same characters.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> &quot;abc&quot;\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> Three palindromic strings: &quot;a&quot;, &quot;b&quot;, &quot;c&quot;.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> &quot;aaa&quot;\r\n<b>Output:</b> 6\r\n<b>Explanation:</b> Six palindromic strings: &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;aa&quot;, &quot;aa&quot;, &quot;aaa&quot;.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>The input string length won&#39;t exceed 1000.</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"230.7K\", \"totalSubmission\": \"374.6K\", \"totalAcceptedRaw\": 230686, \"totalSubmissionRaw\": 374641, \"acRate\": \"61.6%\"}", "similarQuestions": "[{\"title\": \"Longest Palindromic Substring\", \"titleSlug\": \"longest-palindromic-substring\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Palindromic Subsequence\", \"titleSlug\": \"longest-palindromic-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "646", "name": "maximum-length-of-pair-chain", "content": {"questionId": "646", "questionFrontendId": "646", "questionTitle": "Maximum Length of Pair Chain", "questionTitleSlug": "maximum-length-of-pair-chain", "content": "<p>\r\nYou are given <code>n</code> pairs of numbers. In every pair, the first number is always smaller than the second number.\r\n</p>\r\n\r\n<p>\r\nNow, we define a pair <code>(c, d)</code> can follow another pair <code>(a, b)</code> if and only if <code>b < c</code>. Chain of pairs can be formed in this fashion. \r\n</p>\r\n\r\n<p>\r\nGiven a set of pairs, find the length longest chain which can be formed. You needn't use up all the given pairs. You can select pairs in any order.\r\n</p>\r\n\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> [[1,2], [2,3], [3,4]]\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> The longest chain is [1,2] -> [3,4]\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The number of given pairs will be in the range [1, 1000].</li>\r\n</ol>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"67.6K\", \"totalSubmission\": \"128.7K\", \"totalAcceptedRaw\": 67644, \"totalSubmissionRaw\": 128740, \"acRate\": \"52.5%\"}", "similarQuestions": "[{\"title\": \"Longest Increasing Subsequence\", \"titleSlug\": \"longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Increasing Subsequences\", \"titleSlug\": \"increasing-subsequences\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "640", "name": "solve-the-equation", "content": {"questionId": "640", "questionFrontendId": "640", "questionTitle": "Solve the Equation", "questionTitleSlug": "solve-the-equation", "content": "<p>\r\nSolve a given equation and return the value of <code>x</code> in the form of string \"x=#value\". The equation contains only '+', '-' operation, the variable <code>x</code> and its coefficient.\r\n</p>\r\n\r\n<p>\r\nIf there is no solution for the equation, return \"No solution\".\r\n</p>\r\n<p>\r\nIf there are infinite solutions for the equation, return \"Infinite solutions\".\r\n</p>\r\n<p>\r\nIf there is exactly one solution for the equation, we ensure that the value of <code>x</code> is an integer.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br/>\r\n<pre>\r\n<b>Input:</b> \"x+5-3+x=6+x-2\"\r\n<b>Output:</b> \"x=2\"\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br/>\r\n<pre>\r\n<b>Input:</b> \"x=x\"\r\n<b>Output:</b> \"Infinite solutions\"\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 3:</b><br/>\r\n<pre>\r\n<b>Input:</b> \"2x=x\"\r\n<b>Output:</b> \"x=0\"\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 4:</b><br/>\r\n<pre>\r\n<b>Input:</b> \"2x+3x-6x=x+2\"\r\n<b>Output:</b> \"x=-1\"\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 5:</b><br/>\r\n<pre>\r\n<b>Input:</b> \"x=x+2\"\r\n<b>Output:</b> \"No solution\"\r\n</pre>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"27K\", \"totalSubmission\": \"63.4K\", \"totalAcceptedRaw\": 26977, \"totalSubmissionRaw\": 63416, \"acRate\": \"42.5%\"}", "similarQuestions": "[{\"title\": \"Fraction Addition and Subtraction\", \"titleSlug\": \"fraction-addition-and-subtraction\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "638", "name": "shopping-offers", "content": {"questionId": "638", "questionFrontendId": "638", "questionTitle": "Shopping Offers", "questionTitleSlug": "shopping-offers", "content": "<p>\r\nIn LeetCode Store, there are some kinds of items to sell. Each item has a price.\r\n</p>\r\n\r\n<p>\r\nHowever, there are some special offers, and a special offer consists of one or more different kinds of items with a sale price.\r\n</p>\r\n\r\n<p>\r\nYou are given the each item's price, a set of special offers, and the number we need to buy for each item.\r\nThe job is to output the lowest price you have to pay for <b>exactly</b> certain items as given, where you could make optimal use of the special offers.\r\n</p>\r\n\r\n<p>\r\nEach special offer is represented in the form of an array, the last number represents the price you need to pay for this special offer, other numbers represents how many specific items you could get if you buy this offer.\r\n</p>\r\n\r\n<p>You could use any of special offers as many times as you want.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> [2,5], [[3,0,5],[1,2,10]], [3,2]\r\n<b>Output:</b> 14\r\n<b>Explanation:</b> \r\nThere are two kinds of items, A and B. Their prices are $2 and $5 respectively. \r\nIn special offer 1, you can pay $5 for 3A and 0B\r\nIn special offer 2, you can pay $10 for 1A and 2B. \r\nYou need to buy 3A and 2B, so you may pay $10 for 1A and 2B (special offer #2), and $4 for 2A.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> [2,3,4], [[1,1,0,4],[2,2,1,9]], [1,2,1]\r\n<b>Output:</b> 11\r\n<b>Explanation:</b> \r\nThe price of A is $2, and $3 for B, $4 for C. \r\nYou may pay $4 for 1A and 1B, and $9 for 2A ,2B and 1C. \r\nYou need to buy 1A ,2B and 1C, so you may pay $4 for 1A and 1B (special offer #1), and $3 for 1B, $4 for 1C. \r\nYou cannot add more items, though only $9 for 2A ,2B and 1C.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br />\r\n<ol>\r\n<li>There are at most 6 kinds of items, 100 special offers.</li>\r\n<li>For each item, you need to buy at most 6 of them.</li>\r\n<li>You are <b>not</b> allowed to buy more items than you want, even if that would lower the overall price.</li>\r\n</ol>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"33.8K\", \"totalSubmission\": \"64.7K\", \"totalAcceptedRaw\": 33823, \"totalSubmissionRaw\": 64677, \"acRate\": \"52.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "636", "name": "exclusive-time-of-functions", "content": {"questionId": "636", "questionFrontendId": "636", "questionTitle": "Exclusive Time of Functions", "questionTitleSlug": "exclusive-time-of-functions", "content": "<p>On a <strong>single-threaded</strong> CPU, we execute a program containing <code>n</code> functions. Each function has a unique ID between <code>0</code> and <code>n-1</code>.</p>\n\n<p>Function calls are <strong>stored in a <a href=\"https://en.wikipedia.org/wiki/Call_stack\">call stack</a></strong>: when a function call starts, its ID is pushed onto the stack, and when a function call ends, its ID is popped off the stack. The function whose ID is at the top of the stack is <strong>the current function being executed</strong>. Each time a function starts or ends, we write a log with the ID, whether it started or ended, and the timestamp.</p>\n\n<p>You are given a list <code>logs</code>, where <code>logs[i]</code> represents the <code>i<sup>th</sup></code> log message formatted as a string <code>&quot;{function_id}:{&quot;start&quot; | &quot;end&quot;}:{timestamp}&quot;</code>. For example, <code>&quot;0:start:3&quot;</code> means a function call with function ID <code>0</code> <strong>started at the beginning</strong> of timestamp <code>3</code>, and <code>&quot;1:end:2&quot;</code> means a function call with function ID <code>1</code> <strong>ended at the end</strong> of timestamp <code>2</code>. Note that a function can be called <b>multiple times, possibly recursively</b>.</p>\n\n<p>A function&#39;s <strong>exclusive time</strong> is the sum of execution times for all function calls in the program. For example, if a function is called twice, one call executing for <code>2</code> time units and another call executing for <code>1</code> time unit, the <strong>exclusive time</strong> is <code>2 + 1 = 3</code>.</p>\n\n<p>Return <em>the <strong>exclusive time</strong> of each function in an array, where the value at the </em><code>i<sup>th</sup></code><em> index represents the exclusive time for the function with ID </em><code>i</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/04/05/diag1b.png\" style=\"width: 550px; height: 239px;\" />\n<pre>\n<strong>Input:</strong> n = 2, logs = [&quot;0:start:0&quot;,&quot;1:start:2&quot;,&quot;1:end:5&quot;,&quot;0:end:6&quot;]\n<strong>Output:</strong> [3,4]\n<strong>Explanation:</strong>\nFunction 0 starts at the beginning of time 0, then it executes 2 for units of time and reaches the end of time 1.\nFunction 1 starts at the beginning of time 2, executes for 4 units of time, and ends at the end of time 5.\nFunction 0 resumes execution at the beginning of time 6 and executes for 1 unit of time.\nSo function 0 spends 2 + 1 = 3 units of total time executing, and function 1 spends 4 units of total time executing.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1, logs = [&quot;0:start:0&quot;,&quot;0:start:2&quot;,&quot;0:end:5&quot;,&quot;0:start:6&quot;,&quot;0:end:6&quot;,&quot;0:end:7&quot;]\n<strong>Output:</strong> [8]\n<strong>Explanation:</strong>\nFunction 0 starts at the beginning of time 0, executes for 2 units of time, and recursively calls itself.\nFunction 0 (recursive call) starts at the beginning of time 2 and executes for 4 units of time.\nFunction 0 (initial call) resumes execution then immediately calls itself again.\nFunction 0 (2nd recursive call) starts at the beginning of time 6 and executes for 1 unit of time.\nFunction 0 (initial call) resumes execution at the beginning of time 7 and executes for 1 unit of time.\nSo function 0 spends 2 + 4 + 1 + 1 = 8 units of total time executing.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, logs = [&quot;0:start:0&quot;,&quot;0:start:2&quot;,&quot;0:end:5&quot;,&quot;1:start:6&quot;,&quot;1:end:6&quot;,&quot;0:end:7&quot;]\n<strong>Output:</strong> [7,1]\n<strong>Explanation:</strong>\nFunction 0 starts at the beginning of time 0, executes for 2 units of time, and recursively calls itself.\nFunction 0 (recursive call) starts at the beginning of time 2 and executes for 4 units of time.\nFunction 0 (initial call) resumes execution then immediately calls function 1.\nFunction 1 starts at the beginning of time 6, executes 1 units of time, and ends at the end of time 6.\nFunction 0 resumes execution at the beginning of time 6 and executes for 2 units of time.\nSo function 0 spends 2 + 4 + 1 = 7 units of total time executing, and function 1 spends 1 unit of total time executing.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, logs = [&quot;0:start:0&quot;,&quot;0:start:2&quot;,&quot;0:end:5&quot;,&quot;1:start:7&quot;,&quot;1:end:7&quot;,&quot;0:end:8&quot;]\n<strong>Output:</strong> [8,1]\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1, logs = [&quot;0:start:0&quot;,&quot;0:end:0&quot;]\n<strong>Output:</strong> [1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>1 &lt;= logs.length &lt;= 500</code></li>\n\t<li><code>0 &lt;= function_id &lt; n</code></li>\n\t<li><code>0 &lt;= timestamp &lt;= 10<sup>9</sup></code></li>\n\t<li>No two start events will happen at the same timestamp.</li>\n\t<li>No two end events will happen at the same timestamp.</li>\n\t<li>Each function has an <code>&quot;end&quot;</code> log for each <code>&quot;start&quot;</code> log.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"94.6K\", \"totalSubmission\": \"176.5K\", \"totalAcceptedRaw\": 94638, \"totalSubmissionRaw\": 176520, \"acRate\": \"53.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}]}}, {"id": "635", "name": "design-log-storage-system", "content": {"questionId": "635", "questionFrontendId": "635", "questionTitle": "Design Log Storage System", "questionTitleSlug": "design-log-storage-system", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"19.8K\", \"totalSubmission\": \"33.4K\", \"totalAcceptedRaw\": 19800, \"totalSubmissionRaw\": 33449, \"acRate\": \"59.2%\"}", "similarQuestions": "[{\"title\": \"Design In-Memory File System\", \"titleSlug\": \"design-in-memory-file-system\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Design", "slug": "design"}]}}, {"id": "634", "name": "find-the-derangement-of-an-array", "content": {"questionId": "634", "questionFrontendId": "634", "questionTitle": "Find the Derangement of An Array", "questionTitleSlug": "find-the-derangement-of-an-array", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"7.1K\", \"totalSubmission\": \"17.6K\", \"totalAcceptedRaw\": 7121, \"totalSubmissionRaw\": 17647, \"acRate\": \"40.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "633", "name": "sum-of-square-numbers", "content": {"questionId": "633", "questionFrontendId": "633", "questionTitle": "Sum of Square Numbers", "questionTitleSlug": "sum-of-square-numbers", "content": "<p>Given a non-negative integer <code>c</code>, decide whether there&#39;re two integers <code>a</code> and <code>b</code> such that <code>a<sup>2</sup> + b<sup>2</sup> = c</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> c = 5\n<strong>Output:</strong> true\n<strong>Explanation:</strong> 1 * 1 + 2 * 2 = 5\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> c = 3\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> c = 4\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> c = 2\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> c = 1\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= c &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"77.3K\", \"totalSubmission\": \"238.9K\", \"totalAcceptedRaw\": 77322, \"totalSubmissionRaw\": 238886, \"acRate\": \"32.4%\"}", "similarQuestions": "[{\"title\": \"Valid Perfect Square\", \"titleSlug\": \"valid-perfect-square\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "626", "name": "exchange-seats", "content": {"questionId": "626", "questionFrontendId": "626", "questionTitle": "Exchange Seats", "questionTitleSlug": "exchange-seats", "content": "<p>Mary is a teacher in a middle school and she has a table <code>seat</code> storing students&#39; names and their corresponding seat ids.</p>\n\n<p>The column <b>id</b> is continuous increment.</p>\n\n<p>Mary wants to change seats for the adjacent students.</p>\n\n<p>Can you write a SQL query to output the result for Mary?</p>\n\n<p>&nbsp;</p>\n\n<pre>\n+---------+---------+\n|    id   | student |\n+---------+---------+\n|    1    | Abbot   |\n|    2    | Doris   |\n|    3    | Emerson |\n|    4    | Green   |\n|    5    | Jeames  |\n+---------+---------+\n</pre>\n\n<p>For the sample input, the output is:</p>\n\n<pre>\n+---------+---------+\n|    id   | student |\n+---------+---------+\n|    1    | Doris   |\n|    2    | Abbot   |\n|    3    | Green   |\n|    4    | Emerson |\n|    5    | Jeames  |\n+---------+---------+\n</pre>\n\n<p><b>Note:</b></p>\n\n<p>If the number of students is odd, there is no need to change the last one&#39;s seat.</p>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"59.3K\", \"totalSubmission\": \"91.7K\", \"totalAcceptedRaw\": 59288, \"totalSubmissionRaw\": 91742, \"acRate\": \"64.6%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "625", "name": "minimum-factorization", "content": {"questionId": "625", "questionFrontendId": "625", "questionTitle": "Minimum Factorization", "questionTitleSlug": "minimum-factorization", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"8.9K\", \"totalSubmission\": \"27K\", \"totalAcceptedRaw\": 8861, \"totalSubmissionRaw\": 27008, \"acRate\": \"32.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Recursion", "slug": "recursion"}]}}, {"id": "624", "name": "maximum-distance-in-arrays", "content": {"questionId": "624", "questionFrontendId": "624", "questionTitle": "Maximum Distance in Arrays", "questionTitleSlug": "maximum-distance-in-arrays", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"29.6K\", \"totalSubmission\": \"75.4K\", \"totalAcceptedRaw\": 29629, \"totalSubmissionRaw\": 75372, \"acRate\": \"39.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Hash Table", "slug": "hash-table"}]}}, {"id": "623", "name": "add-one-row-to-tree", "content": {"questionId": "623", "questionFrontendId": "623", "questionTitle": "Add One Row to Tree", "questionTitleSlug": "add-one-row-to-tree", "content": "<p>Given the root of a binary tree, then value <code>v</code> and depth <code>d</code>, you need to add a row of nodes with value <code>v</code> at the given depth <code>d</code>. The root node is at depth 1. </p>\r\n\r\n<p>The adding rule is: given a positive integer depth <code>d</code>, for each NOT null tree nodes <code>N</code> in depth <code>d-1</code>, create two tree nodes with value <code>v</code> as <code>N's</code> left subtree root and right subtree root. And <code>N's</code> <b>original left subtree</b> should be the left subtree of the new left subtree root, its <b>original right subtree</b> should be the right subtree of the new right subtree root. If depth <code>d</code> is 1 that means there is no depth d-1 at all, then create a tree node with value <b>v</b> as the new root of the whole original tree, and the original tree is the new root's left subtree.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> \r\nA binary tree as following:\r\n       4\r\n     /   \\\r\n    2     6\r\n   / \\   / \r\n  3   1 5   \r\n\r\n<b>v = 1</b>\r\n\r\n<b>d = 2</b>\r\n\r\n<b>Output:</b> \r\n       4\r\n      / \\\r\n     1   1\r\n    /     \\\r\n   2       6\r\n  / \\     / \r\n 3   1   5   \r\n\r\n</pre>\r\n</p>\r\n\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> \r\nA binary tree as following:\r\n      4\r\n     /   \r\n    2    \r\n   / \\   \r\n  3   1    \r\n\r\n<b>v = 1</b>\r\n\r\n<b>d = 3</b>\r\n\r\n<b>Output:</b> \r\n      4\r\n     /   \r\n    2\r\n   / \\    \r\n  1   1\r\n /     \\  \r\n3       1\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The given d is in range [1, maximum depth of the given tree + 1].</li>\r\n<li>The given binary tree has at least one tree node.</li>\r\n</ol>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"42.4K\", \"totalSubmission\": \"84.5K\", \"totalAcceptedRaw\": 42405, \"totalSubmissionRaw\": 84463, \"acRate\": \"50.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "621", "name": "task-scheduler", "content": {"questionId": "621", "questionFrontendId": "621", "questionTitle": "Task Scheduler", "questionTitleSlug": "task-scheduler", "content": "<p>Given a characters array <code>tasks</code>, representing the tasks a CPU needs to do, where each letter represents a different task. Tasks could be done in any order. Each task is done in one unit of time. For each unit of time, the CPU could complete either one task or just be idle.</p>\n\n<p>However, there is a non-negative integer&nbsp;<code>n</code> that represents the cooldown period between&nbsp;two <b>same tasks</b>&nbsp;(the same letter in the array), that is that there must be at least <code>n</code> units of time between any two same tasks.</p>\n\n<p>Return <em>the least number of units of times that the CPU will take to finish all the given tasks</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> tasks = [&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;B&quot;,&quot;B&quot;,&quot;B&quot;], n = 2\n<strong>Output:</strong> 8\n<strong>Explanation:</strong> \nA -&gt; B -&gt; idle -&gt; A -&gt; B -&gt; idle -&gt; A -&gt; B\nThere is at least 2 units of time between any two same tasks.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> tasks = [&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;B&quot;,&quot;B&quot;,&quot;B&quot;], n = 0\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> On this case any permutation of size 6 would work since n = 0.\n[&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;B&quot;,&quot;B&quot;,&quot;B&quot;]\n[&quot;A&quot;,&quot;B&quot;,&quot;A&quot;,&quot;B&quot;,&quot;A&quot;,&quot;B&quot;]\n[&quot;B&quot;,&quot;B&quot;,&quot;B&quot;,&quot;A&quot;,&quot;A&quot;,&quot;A&quot;]\n...\nAnd so on.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> tasks = [&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;,&quot;F&quot;,&quot;G&quot;], n = 2\n<strong>Output:</strong> 16\n<strong>Explanation:</strong> \nOne possible solution is\nA -&gt; B -&gt; C -&gt; A -&gt; D -&gt; E -&gt; A -&gt; F -&gt; G -&gt; A -&gt; idle -&gt; idle -&gt; A -&gt; idle -&gt; idle -&gt; A\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= task.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>tasks[i]</code> is upper-case English letter.</li>\n\t<li>The integer <code>n</code> is in the range <code>[0, 100]</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"228.7K\", \"totalSubmission\": \"445.8K\", \"totalAcceptedRaw\": 228694, \"totalSubmissionRaw\": 445780, \"acRate\": \"51.3%\"}", "similarQuestions": "[{\"title\": \"Rearrange String k Distance Apart\", \"titleSlug\": \"rearrange-string-k-distance-apart\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Reorganize String\", \"titleSlug\": \"reorganize-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Greedy", "slug": "greedy"}, {"name": "Queue", "slug": "queue"}]}}, {"id": "616", "name": "add-bold-tag-in-string", "content": {"questionId": "616", "questionFrontendId": "616", "questionTitle": "Add Bold Tag in String", "questionTitleSlug": "add-bold-tag-in-string", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"44.2K\", \"totalSubmission\": \"99.7K\", \"totalAcceptedRaw\": 44165, \"totalSubmissionRaw\": 99697, \"acRate\": \"44.3%\"}", "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Tag Validator\", \"titleSlug\": \"tag-validator\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "614", "name": "second-degree-follower", "content": {"questionId": "614", "questionFrontendId": "614", "questionTitle": "Second Degree Follower", "questionTitleSlug": "second-degree-follower", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23.4K\", \"totalSubmission\": \"73.3K\", \"totalAcceptedRaw\": 23380, \"totalSubmissionRaw\": 73320, \"acRate\": \"31.9%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "612", "name": "shortest-distance-in-a-plane", "content": {"questionId": "612", "questionFrontendId": "612", "questionTitle": "Shortest Distance in a Plane", "questionTitleSlug": "shortest-distance-in-a-plane", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"17.6K\", \"totalSubmission\": \"29.1K\", \"totalAcceptedRaw\": 17635, \"totalSubmissionRaw\": 29076, \"acRate\": \"60.7%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "611", "name": "valid-triangle-number", "content": {"questionId": "611", "questionFrontendId": "611", "questionTitle": "Valid Triangle Number", "questionTitleSlug": "valid-triangle-number", "content": "Given an array consists of non-negative integers,  your task is to count the number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle.\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> [2,2,3,4]\r\n<b>Output:</b> 3\r\n<b>Explanation:</b>\r\nValid combinations are: \r\n2,3,4 (using the first 2)\r\n2,3,4 (using the second 2)\r\n2,2,3\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The length of the given array won't exceed 1000.</li>\r\n<li>The integers in the given array are in the range of [0, 1000].</li>\r\n</ol>\r\n</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"73.6K\", \"totalSubmission\": \"150.4K\", \"totalAcceptedRaw\": 73632, \"totalSubmissionRaw\": 150368, \"acRate\": \"49.0%\"}", "similarQuestions": "[{\"title\": \"3Sum Smaller\", \"titleSlug\": \"3sum-smaller\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "609", "name": "find-duplicate-file-in-system", "content": {"questionId": "609", "questionFrontendId": "609", "questionTitle": "Find Duplicate File in System", "questionTitleSlug": "find-duplicate-file-in-system", "content": "<p>Given a list of directory info including directory path, and all the files with contents in this directory, you need to find out all the groups of duplicate files in the file system in terms of their paths.</p>\r\n\r\n<p>A group of duplicate files consists of at least <b>two</b> files that have exactly the same content.</p>\r\n\r\n<p>A single directory info string in the <b>input</b> list has the following format:</p>\r\n\r\n<p><code>&quot;root/d1/d2/.../dm f1.txt(f1_content) f2.txt(f2_content) ... fn.txt(fn_content)&quot;</code></p>\r\n\r\n<p>It means there are <b>n</b> files (<code>f1.txt</code>, <code>f2.txt</code> ... <code>fn.txt</code> with content <code>f1_content</code>, <code>f2_content</code> ... <code>fn_content</code>, respectively) in directory <code>root/d1/d2/.../dm</code>. Note that n &gt;= 1 and m &gt;= 0. If m = 0, it means the directory is just the root directory.</p>\r\n\r\n<p>The <b>output</b> is a list of group of duplicate file paths. For each group, it contains all the file paths of the files that have the same content. A file path is a string that has the following format:</p>\r\n\r\n<p><code>&quot;directory_path/file_name.txt&quot;</code></p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b>\r\n[&quot;root/a 1.txt(abcd) 2.txt(efgh)&quot;, &quot;root/c 3.txt(abcd)&quot;, &quot;root/c/d 4.txt(efgh)&quot;, &quot;root 4.txt(efgh)&quot;]\r\n<b>Output:</b>  \r\n[[&quot;root/a/2.txt&quot;,&quot;root/c/d/4.txt&quot;,&quot;root/4.txt&quot;],[&quot;root/a/1.txt&quot;,&quot;root/c/3.txt&quot;]]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>No order is required for the final output.</li>\r\n\t<li>You may assume the directory name, file name and file content only has letters and digits, and the length of file content is in the range of [1,50].</li>\r\n\t<li>The number of files given is in the range of [1,20000].</li>\r\n\t<li>You may assume no files or directories share the same name in the same directory.</li>\r\n\t<li>You may assume each given directory info represents a unique directory. Directory path and file info are separated by a single blank space.</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n<b>Follow-up beyond contest:</b>\r\n\r\n<ol>\r\n\t<li>Imagine you are given a real file system, how will you search files? DFS or BFS?</li>\r\n\t<li>If the file content is very large (GB level), how will you modify your solution?</li>\r\n\t<li>If you can only read the file by 1kb each time, how will you modify your solution?</li>\r\n\t<li>What is the time complexity of your modified solution? What is the most time-consuming part and memory consuming part of it? How to optimize?</li>\r\n\t<li>How to make sure the duplicated files you find are not false positive?</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"62.4K\", \"totalSubmission\": \"102.7K\", \"totalAcceptedRaw\": 62385, \"totalSubmissionRaw\": 102696, \"acRate\": \"60.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "String", "slug": "string"}]}}, {"id": "608", "name": "tree-node", "content": {"questionId": "608", "questionFrontendId": "608", "questionTitle": "Tree Node", "questionTitleSlug": "tree-node", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23.6K\", \"totalSubmission\": \"34.4K\", \"totalAcceptedRaw\": 23625, \"totalSubmissionRaw\": 34354, \"acRate\": \"68.8%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "602", "name": "friend-requests-ii-who-has-the-most-friends", "content": {"questionId": "602", "questionFrontendId": "602", "questionTitle": "Friend Requests II: Who Has the Most Friends", "questionTitleSlug": "friend-requests-ii-who-has-the-most-friends", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"28.6K\", \"totalSubmission\": \"50.8K\", \"totalAcceptedRaw\": 28575, \"totalSubmissionRaw\": 50782, \"acRate\": \"56.3%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "593", "name": "valid-square", "content": {"questionId": "593", "questionFrontendId": "593", "questionTitle": "Valid Square", "questionTitleSlug": "valid-square", "content": "<p>Given the coordinates of four points in 2D space <code>p1</code>, <code>p2</code>, <code>p3</code> and <code>p4</code>, return <code>true</code> <em>if&nbsp;the four points construct a square</em>.</p>\n\n<p>The coordinate of a point <code>p<sub>i</sub></code> is represented as <code>[x<sub>i</sub>, y<sub>i</sub>]</code>. The input is <strong>not</strong> given in any order.</p>\n\n<p>A <strong>valid square</strong> has four equal sides with positive length and four equal angles (90-degree angles).</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,1]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,12]\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> p1 = [1,0], p2 = [-1,0], p3 = [0,1], p4 = [0,-1]\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>p1.length == p2.length == p3.length == p4.length == 2</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= x<sub>i</sub>, y<sub>i</sub> &lt;= 10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"56.3K\", \"totalSubmission\": \"130K\", \"totalAcceptedRaw\": 56287, \"totalSubmissionRaw\": 130013, \"acRate\": \"43.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "592", "name": "fraction-addition-and-subtraction", "content": {"questionId": "592", "questionFrontendId": "592", "questionTitle": "Fraction Addition and Subtraction", "questionTitleSlug": "fraction-addition-and-subtraction", "content": "<p>Given a string representing an expression of fraction addition and subtraction, you need to return the calculation result in string format. The final result should be <a href = \"https://en.wikipedia.org/wiki/Irreducible_fraction\">irreducible fraction</a>. If your final result is an integer, say <code>2</code>, you need to change it to the format of fraction that has denominator <code>1</code>. So in this case, <code>2</code> should be converted to <code>2/1</code>.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b>\"-1/2+1/2\"\r\n<b>Output:</b> \"0/1\"\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b>\"-1/2+1/2+1/3\"\r\n<b>Output:</b> \"1/3\"\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 3:</b><br />\r\n<pre>\r\n<b>Input:</b>\"1/3-1/2\"\r\n<b>Output:</b> \"-1/6\"\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 4:</b><br />\r\n<pre>\r\n<b>Input:</b>\"5/3+1/3\"\r\n<b>Output:</b> \"2/1\"\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The input string only contains <code>'0'</code> to <code>'9'</code>, <code>'/'</code>, <code>'+'</code> and <code>'-'</code>. So does the output.</li>\r\n<li>Each fraction (input and output) has format <code>\u00b1numerator/denominator</code>. If the first input fraction or the output is positive, then <code>'+'</code> will be omitted.</li>\r\n<li>The input only contains valid <b>irreducible fractions</b>, where the <b>numerator</b> and <b>denominator</b> of each fraction will always be in the range [1,10]. If the denominator is 1, it means this fraction is actually an integer in a fraction format defined above.</li> \r\n<li>The number of given fractions will be in the range [1,10].</li>\r\n<li>The numerator and denominator of the <b>final result</b> are guaranteed to be valid and in the range of 32-bit int.</li>\r\n</ol>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"20.5K\", \"totalSubmission\": \"41.1K\", \"totalAcceptedRaw\": 20519, \"totalSubmissionRaw\": 41122, \"acRate\": \"49.9%\"}", "similarQuestions": "[{\"title\": \"Solve the Equation\", \"titleSlug\": \"solve-the-equation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "585", "name": "investments-in-2016", "content": {"questionId": "585", "questionFrontendId": "585", "questionTitle": "Investments in 2016", "questionTitleSlug": "investments-in-2016", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"19K\", \"totalSubmission\": \"33.7K\", \"totalAcceptedRaw\": 19003, \"totalSubmissionRaw\": 33726, \"acRate\": \"56.3%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "583", "name": "delete-operation-for-two-strings", "content": {"questionId": "583", "questionFrontendId": "583", "questionTitle": "Delete Operation for Two Strings", "questionTitleSlug": "delete-operation-for-two-strings", "content": "<p>\r\nGiven two words <i>word1</i> and <i>word2</i>, find the minimum number of steps required to make <i>word1</i> and <i>word2</i> the same, where in each step you can delete one character in either string.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> \"sea\", \"eat\"\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> You need one step to make \"sea\" to \"ea\" and another step to make \"eat\" to \"ea\".\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The length of given words won't exceed 500.</li>\r\n<li>Characters in given words can only be lower-case letters.</li>\r\n</ol>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"57.8K\", \"totalSubmission\": \"116.5K\", \"totalAcceptedRaw\": 57771, \"totalSubmissionRaw\": 116504, \"acRate\": \"49.6%\"}", "similarQuestions": "[{\"title\": \"Edit Distance\", \"titleSlug\": \"edit-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum ASCII Delete Sum for Two Strings\", \"titleSlug\": \"minimum-ascii-delete-sum-for-two-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Common Subsequence\", \"titleSlug\": \"longest-common-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "582", "name": "kill-process", "content": {"questionId": "582", "questionFrontendId": "582", "questionTitle": "Kill Process", "questionTitleSlug": "kill-process", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"39.3K\", \"totalSubmission\": \"63.2K\", \"totalAcceptedRaw\": 39325, \"totalSubmissionRaw\": 63196, \"acRate\": \"62.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Queue", "slug": "queue"}]}}, {"id": "581", "name": "shortest-unsorted-continuous-subarray", "content": {"questionId": "581", "questionFrontendId": "581", "questionTitle": "Shortest Unsorted Continuous Subarray", "questionTitleSlug": "shortest-unsorted-continuous-subarray", "content": "<p>Given an integer array <code>nums</code>, you need to find one <b>continuous subarray</b> that if you only sort this subarray in ascending order, then the whole array will be sorted in ascending order.</p>\n\n<p>Return&nbsp;<em>the shortest such subarray and output its length</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,6,4,8,10,9,15]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> You need to sort [6, 4, 8, 10, 9] in ascending order to make the whole array sorted in ascending order.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4]\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"146.4K\", \"totalSubmission\": \"464.4K\", \"totalAcceptedRaw\": 146442, \"totalSubmissionRaw\": 464388, \"acRate\": \"31.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "580", "name": "count-student-number-in-departments", "content": {"questionId": "580", "questionFrontendId": "580", "questionTitle": "Count Student Number in Departments", "questionTitleSlug": "count-student-number-in-departments", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23.7K\", \"totalSubmission\": \"46.8K\", \"totalAcceptedRaw\": 23735, \"totalSubmissionRaw\": 46829, \"acRate\": \"50.7%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "578", "name": "get-highest-answer-rate-question", "content": {"questionId": "578", "questionFrontendId": "578", "questionTitle": "Get Highest Answer Rate Question", "questionTitleSlug": "get-highest-answer-rate-question", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"21.9K\", \"totalSubmission\": \"53.5K\", \"totalAcceptedRaw\": 21936, \"totalSubmissionRaw\": 53530, \"acRate\": \"41.0%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "576", "name": "out-of-boundary-paths", "content": {"questionId": "576", "questionFrontendId": "576", "questionTitle": "Out of Boundary Paths", "questionTitleSlug": "out-of-boundary-paths", "content": "<p>There is an <b>m</b> by <b>n</b> grid with a ball. Given the start coordinate <b>(i,j)</b> of the ball, you can move the ball to <b>adjacent</b> cell or cross the grid boundary in four directions (up, down, left, right). However, you can <b>at most</b> move <b>N</b> times. Find out the number of paths to move the ball out of grid boundary. The answer may be very large, return it after mod 10<sup>9</sup> + 7.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input: </b>m = 2, n = 2, N = 2, i = 0, j = 0\r\n<b>Output:</b> 6\r\n<b>Explanation:</b>\r\n<img src=\"https://assets.leetcode.com/uploads/2018/10/13/out_of_boundary_paths_1.png\" style=\"width: 100%; max-width: 400px\" />\r\n</pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input: </b>m = 1, n = 3, N = 3, i = 0, j = 1\r\n<b>Output:</b> 12\r\n<b>Explanation:</b>\r\n<img src=\"https://assets.leetcode.com/uploads/2018/10/12/out_of_boundary_paths_2.png\" style=\"width: 100%; max-width: 400px\" />\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>Once you move the ball out of boundary, you cannot move it back.</li>\r\n\t<li>The length and height of the grid is in range [1,50].</li>\r\n\t<li>N is in range [0,50].</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"32.9K\", \"totalSubmission\": \"92.3K\", \"totalAcceptedRaw\": 32920, \"totalSubmissionRaw\": 92322, \"acRate\": \"35.7%\"}", "similarQuestions": "[{\"title\": \"Knight Probability in Chessboard\", \"titleSlug\": \"knight-probability-in-chessboard\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "574", "name": "winning-candidate", "content": {"questionId": "574", "questionFrontendId": "574", "questionTitle": "Winning Candidate", "questionTitleSlug": "winning-candidate", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"25.8K\", \"totalSubmission\": \"50.8K\", \"totalAcceptedRaw\": 25782, \"totalSubmissionRaw\": 50750, \"acRate\": \"50.8%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "573", "name": "squirrel-simulation", "content": {"questionId": "573", "questionFrontendId": "573", "questionTitle": "Squirrel Simulation", "questionTitleSlug": "squirrel-simulation", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"8.3K\", \"totalSubmission\": \"14.8K\", \"totalAcceptedRaw\": 8301, \"totalSubmissionRaw\": 14846, \"acRate\": \"55.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "570", "name": "managers-with-at-least-5-direct-reports", "content": {"questionId": "570", "questionFrontendId": "570", "questionTitle": "Managers with at Least 5 Direct Reports", "questionTitleSlug": "managers-with-at-least-5-direct-reports", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"29.6K\", \"totalSubmission\": \"44.4K\", \"totalAcceptedRaw\": 29588, \"totalSubmissionRaw\": 44376, \"acRate\": \"66.7%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "567", "name": "permutation-in-string", "content": {"questionId": "567", "questionFrontendId": "567", "questionTitle": "Permutation in String", "questionTitleSlug": "permutation-in-string", "content": "<p>Given two strings <b>s1</b> and <b>s2</b>, write a function to return true if <b>s2</b> contains the permutation of <b>s1</b>. In other words, one of the first string&#39;s permutations is the <b>substring</b> of the second string.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input: </b>s1 = &quot;ab&quot; s2 = &quot;eidbaooo&quot;\n<b>Output: </b>True\n<b>Explanation:</b> s2 contains one permutation of s1 (&quot;ba&quot;).\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b>s1= &quot;ab&quot; s2 = &quot;eidboaoo&quot;\n<b>Output:</b> False\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The input strings only contain lower case letters.</li>\n\t<li>The length of both given strings is in range [1, 10,000].</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"164.4K\", \"totalSubmission\": \"369.3K\", \"totalAcceptedRaw\": 164374, \"totalSubmissionRaw\": 369270, \"acRate\": \"44.5%\"}", "similarQuestions": "[{\"title\": \"Minimum Window Substring\", \"titleSlug\": \"minimum-window-substring\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find All Anagrams in a String\", \"titleSlug\": \"find-all-anagrams-in-a-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "565", "name": "array-nesting", "content": {"questionId": "565", "questionFrontendId": "565", "questionTitle": "Array Nesting", "questionTitleSlug": "array-nesting", "content": "<p>A zero-indexed array A of length N contains all integers from 0 to N-1. Find and return the longest length of set S, where S[i] = {A[i], A[A[i]], A[A[A[i]]], ... } subjected to the rule below.</p>\r\n\r\n<p>Suppose the first element in S starts with the selection of element A[i] of index = i, the next element in S should be A[A[i]], and then A[A[A[i]]]&hellip; By that analogy, we stop adding right before a duplicate element occurs in S.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> A = [5,4,0,3,1,6,2]\r\n<b>Output:</b> 4\r\n<b>Explanation:</b> \r\nA[0] = 5, A[1] = 4, A[2] = 0, A[3] = 3, A[4] = 1, A[5] = 6, A[6] = 2.\r\n\r\nOne of the longest S[K]:\r\nS[0] = {A[0], A[5], A[6], A[2]} = {5, 6, 2, 0}\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>N is an integer within the range [1, 20,000].</li>\r\n\t<li>The elements of A are all distinct.</li>\r\n\t<li>Each element of A is an integer within the range [0, N-1].</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"59.1K\", \"totalSubmission\": \"105.8K\", \"totalAcceptedRaw\": 59074, \"totalSubmissionRaw\": 105846, \"acRate\": \"55.8%\"}", "similarQuestions": "[{\"title\": \"Nested List Weight Sum\", \"titleSlug\": \"nested-list-weight-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Flatten Nested List Iterator\", \"titleSlug\": \"flatten-nested-list-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Nested List Weight Sum II\", \"titleSlug\": \"nested-list-weight-sum-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "562", "name": "longest-line-of-consecutive-one-in-matrix", "content": {"questionId": "562", "questionFrontendId": "562", "questionTitle": "Longest Line of Consecutive One in Matrix", "questionTitleSlug": "longest-line-of-consecutive-one-in-matrix", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"32.1K\", \"totalSubmission\": \"69.4K\", \"totalAcceptedRaw\": 32054, \"totalSubmissionRaw\": 69437, \"acRate\": \"46.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "560", "name": "subarray-sum-equals-k", "content": {"questionId": "560", "questionFrontendId": "560", "questionTitle": "Subarray Sum Equals K", "questionTitleSlug": "subarray-sum-equals-k", "content": "<p>Given an array of integers <code>nums</code> and an integer <code>k</code>, return <em>the total number of continuous subarrays whose sum equals to <code>k</code></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1,1], k = 2\n<strong>Output:</strong> 2\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3], k = 3\n<strong>Output:</strong> 2\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>-1000 &lt;= nums[i] &lt;= 1000</code></li>\n\t<li><code>-10<sup>7</sup> &lt;= k &lt;= 10<sup>7</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"413.6K\", \"totalSubmission\": \"943K\", \"totalAcceptedRaw\": 413628, \"totalSubmissionRaw\": 943008, \"acRate\": \"43.9%\"}", "similarQuestions": "[{\"title\": \"Two Sum\", \"titleSlug\": \"two-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Continuous Subarray Sum\", \"titleSlug\": \"continuous-subarray-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Subarray Product Less Than K\", \"titleSlug\": \"subarray-product-less-than-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Pivot Index\", \"titleSlug\": \"find-pivot-index\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Subarray Sums Divisible by K\", \"titleSlug\": \"subarray-sums-divisible-by-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Operations to Reduce X to Zero\", \"titleSlug\": \"minimum-operations-to-reduce-x-to-zero\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Hash Table", "slug": "hash-table"}]}}, {"id": "556", "name": "next-greater-element-iii", "content": {"questionId": "556", "questionFrontendId": "556", "questionTitle": "Next Greater Element III", "questionTitleSlug": "next-greater-element-iii", "content": "<p>Given a positive integer <code>n</code>, find <em>the smallest integer which has exactly the same digits existing in the integer</em> <code>n</code> <em>and is greater in value than</em> <code>n</code>. If no such positive integer exists, return <code>-1</code>.</p>\n\n<p><strong>Note</strong> that the returned integer should fit in <strong>32-bit integer</strong>, if there is a valid answer but it does not fit in <strong>32-bit integer</strong>, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 12\n<strong>Output:</strong> 21\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 21\n<strong>Output:</strong> -1\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"61.2K\", \"totalSubmission\": \"182.4K\", \"totalAcceptedRaw\": 61236, \"totalSubmissionRaw\": 182367, \"acRate\": \"33.6%\"}", "similarQuestions": "[{\"title\": \"Next Greater Element I\", \"titleSlug\": \"next-greater-element-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Next Greater Element II\", \"titleSlug\": \"next-greater-element-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "555", "name": "split-concatenated-strings", "content": {"questionId": "555", "questionFrontendId": "555", "questionTitle": "Split Concatenated Strings", "questionTitleSlug": "split-concatenated-strings", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"5.3K\", \"totalSubmission\": \"12.4K\", \"totalAcceptedRaw\": 5275, \"totalSubmissionRaw\": 12360, \"acRate\": \"42.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "554", "name": "brick-wall", "content": {"questionId": "554", "questionFrontendId": "554", "questionTitle": "Brick Wall", "questionTitleSlug": "brick-wall", "content": "<p>There is a brick wall in front of you. The wall is rectangular and has several rows of bricks. The bricks have the same height but different width. You want to draw a vertical line from the <b>top</b> to the <b>bottom</b> and cross the <b>least</b> bricks.</p>\r\n\r\n<p>The brick wall is represented by a list of rows. Each row is a list of integers representing the width of each brick in this row from left to right.</p>\r\n\r\n<p>If your line go through the edge of a brick, then the brick is not considered as crossed. You need to find out how to draw the line to cross the least bricks and return the number of crossed bricks.</p>\r\n\r\n<p><b>You cannot draw a line just along one of the two vertical edges of the wall, in which case the line will obviously cross no bricks. </b></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> [[1,2,2,1],\r\n        [3,1,2],\r\n        [1,3,2],\r\n        [2,4],\r\n        [3,1,2],\r\n        [1,3,1,1]]\r\n\r\n<b>Output:</b> 2\r\n\r\n<b>Explanation:</b> \r\n<img src=\"https://assets.leetcode.com/uploads/2018/10/12/brick_wall.png\" style=\"width: 100%; max-width: 350px\" />\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>The width sum of bricks in different rows are the same and won&#39;t exceed INT_MAX.</li>\r\n\t<li>The number of bricks in each row is in range [1,10,000]. The height of wall is in range [1,10,000]. Total number of bricks of the wall won&#39;t exceed 20,000.</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"64.7K\", \"totalSubmission\": \"128K\", \"totalAcceptedRaw\": 64665, \"totalSubmissionRaw\": 128021, \"acRate\": \"50.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}]}}, {"id": "553", "name": "optimal-division", "content": {"questionId": "553", "questionFrontendId": "553", "questionTitle": "Optimal Division", "questionTitleSlug": "optimal-division", "content": "<p>Given a list of <b>positive integers</b>, the adjacent integers will perform the float division. For example, [2,3,4] -> 2 / 3 / 4.</p>\r\n\r\n<p>However, you can add any number of parenthesis at any position to change the priority of operations. You should find out how to add parenthesis to get the <b>maximum</b> result, and return the corresponding expression in string format. <b>Your expression should NOT contain redundant parenthesis.</b></p>\r\n\r\n<p><b>Example:</b><br />\r\n<pre>\r\n<b>Input:</b> [1000,100,10,2]\r\n<b>Output:</b> \"1000/(100/10/2)\"\r\n<b>Explanation:</b>\r\n1000/(100/10/2) = 1000/((100/10)/2) = 200\r\nHowever, the bold parenthesis in \"1000/(<b>(</b>100/10<b>)</b>/2)\" are redundant, <br/>since they don't influence the operation priority. So you should return \"1000/(100/10/2)\". \r\n\r\nOther cases:\r\n1000/(100/10)/2 = 50\r\n1000/(100/(10/2)) = 50\r\n1000/100/10/2 = 0.5\r\n1000/100/(10/2) = 2\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<ol>\r\n<li>The length of the input array is [1, 10].</li>\r\n<li>Elements in the given array will be in range [2, 1000].</li>\r\n<li>There is only one optimal division for each test case.</li>\r\n</ol>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"26.7K\", \"totalSubmission\": \"46.6K\", \"totalAcceptedRaw\": 26668, \"totalSubmissionRaw\": 46580, \"acRate\": \"57.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "String", "slug": "string"}]}}, {"id": "549", "name": "binary-tree-longest-consecutive-sequence-ii", "content": {"questionId": "549", "questionFrontendId": "549", "questionTitle": "Binary Tree Longest Consecutive Sequence II", "questionTitleSlug": "binary-tree-longest-consecutive-sequence-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"29.7K\", \"totalSubmission\": \"63K\", \"totalAcceptedRaw\": 29723, \"totalSubmissionRaw\": 63014, \"acRate\": \"47.2%\"}", "similarQuestions": "[{\"title\": \"Binary Tree Longest Consecutive Sequence\", \"titleSlug\": \"binary-tree-longest-consecutive-sequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "548", "name": "split-array-with-equal-sum", "content": {"questionId": "548", "questionFrontendId": "548", "questionTitle": "Split Array with Equal Sum", "questionTitleSlug": "split-array-with-equal-sum", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"15.2K\", \"totalSubmission\": \"31.9K\", \"totalAcceptedRaw\": 15175, \"totalSubmissionRaw\": 31942, \"acRate\": \"47.5%\"}", "similarQuestions": "[{\"title\": \"Number of Ways to Split a String\", \"titleSlug\": \"number-of-ways-to-split-a-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "547", "name": "friend-circles", "content": {"questionId": "547", "questionFrontendId": "547", "questionTitle": "Friend Circles", "questionTitleSlug": "friend-circles", "content": "<p>There are <b>N</b> students in a class. Some of them are friends, while some are not. Their friendship is transitive in nature. For example, if A is a <b>direct</b> friend of B, and B is a <b>direct</b> friend of C, then A is an <b>indirect</b> friend of C. And we defined a friend circle is a group of students who are direct or indirect friends.</p>\n\n<p>Given a <b>N*N</b> matrix <b>M</b> representing the friend relationship between students in the class. If M[i][j] = 1, then the i<sub>th</sub> and j<sub>th</sub> students are <b>direct</b> friends with each other, otherwise not. And you have to output the total number of friend circles among all the students.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> \n[[1,1,0],\n [1,1,0],\n [0,0,1]]\n<b>Output:</b> 2\n<b>Explanation:</b>The 0<sub>th</sub> and 1<sub>st</sub> students are direct friends, so they are in a friend circle. \nThe 2<sub>nd</sub> student himself is in a friend circle. So return 2.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> \n[[1,1,0],\n [1,1,1],\n [0,1,1]]\n<b>Output:</b> 1\n<b>Explanation:</b>The 0<sub>th</sub> and 1<sub>st</sub> students are direct friends, the 1<sub>st</sub> and 2<sub>nd</sub> students are direct friends, \nso the 0<sub>th</sub> and 2<sub>nd</sub> students are indirect friends. All of them are in the same friend circle, so return 1.\n\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 200</code></li>\n\t<li><code>M[i][i] == 1</code></li>\n\t<li><code>M[i][j] == M[j][i]</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"217.6K\", \"totalSubmission\": \"363.8K\", \"totalAcceptedRaw\": 217614, \"totalSubmissionRaw\": 363815, \"acRate\": \"59.8%\"}", "similarQuestions": "[{\"title\": \"Number of Connected Components in an Undirected Graph\", \"titleSlug\": \"number-of-connected-components-in-an-undirected-graph\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Robot Return to Origin\", \"titleSlug\": \"robot-return-to-origin\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sentence Similarity\", \"titleSlug\": \"sentence-similarity\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sentence Similarity II\", \"titleSlug\": \"sentence-similarity-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"The Earliest Moment When Everyone Become Friends\", \"titleSlug\": \"the-earliest-moment-when-everyone-become-friends\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Union Find", "slug": "union-find"}]}}, {"id": "545", "name": "boundary-of-binary-tree", "content": {"questionId": "545", "questionFrontendId": "545", "questionTitle": "Boundary of Binary Tree", "questionTitleSlug": "boundary-of-binary-tree", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"60.5K\", \"totalSubmission\": \"153.7K\", \"totalAcceptedRaw\": 60498, \"totalSubmissionRaw\": 153714, \"acRate\": \"39.4%\"}", "similarQuestions": "[{\"title\": \"Binary Tree Right Side View\", \"titleSlug\": \"binary-tree-right-side-view\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "544", "name": "output-contest-matches", "content": {"questionId": "544", "questionFrontendId": "544", "questionTitle": "Output Contest Matches", "questionTitleSlug": "output-contest-matches", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"21.9K\", \"totalSubmission\": \"29K\", \"totalAcceptedRaw\": 21911, \"totalSubmissionRaw\": 28967, \"acRate\": \"75.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Recursion", "slug": "recursion"}]}}, {"id": "542", "name": "01-matrix", "content": {"questionId": "542", "questionFrontendId": "542", "questionTitle": "01 Matrix", "questionTitleSlug": "01-matrix", "content": "<p>Given a matrix consists of 0 and 1, find the distance of the nearest 0 for each cell.</p>\r\n\r\n<p>The distance between two adjacent cells is 1.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 1: </b></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>\r\n[[0,0,0],\r\n [0,1,0],\r\n [0,0,0]]\r\n\r\n<strong>Output:</strong>\r\n[[0,0,0],\r\n&nbsp;[0,1,0],\r\n&nbsp;[0,0,0]]\r\n</pre>\r\n\r\n<p><b>Example 2: </b></p>\r\n\r\n<pre>\r\n<b>Input:</b>\r\n[[0,0,0],\r\n [0,1,0],\r\n [1,1,1]]\r\n\r\n<strong>Output:</strong>\r\n[[0,0,0],\r\n [0,1,0],\r\n [1,2,1]]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>The number of elements of the given matrix will not exceed 10,000.</li>\r\n\t<li>There are at least one 0 in the given matrix.</li>\r\n\t<li>The cells are adjacent in only four directions: up, down, left and right.</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"107.9K\", \"totalSubmission\": \"266.6K\", \"totalAcceptedRaw\": 107854, \"totalSubmissionRaw\": 266597, \"acRate\": \"40.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "540", "name": "single-element-in-a-sorted-array", "content": {"questionId": "540", "questionFrontendId": "540", "questionTitle": "Single Element in a Sorted Array", "questionTitleSlug": "single-element-in-a-sorted-array", "content": "<p>You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly&nbsp;once. Find this single element that appears only once.</p>\r\n\r\n<p><b>Follow up:</b> Your solution should run in O(log n) time and O(1) space.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n<pre><strong>Input:</strong> nums = [1,1,2,3,3,4,4,8,8]\r\n<strong>Output:</strong> 2\r\n</pre><p><strong>Example 2:</strong></p>\r\n<pre><strong>Input:</strong> nums = [3,3,7,7,10,11,11]\r\n<strong>Output:</strong> 10\r\n</pre>\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= nums.length &lt;= 10^5</code></li>\r\n\t<li><code>0 &lt;= nums[i]&nbsp;&lt;= 10^5</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"171.8K\", \"totalSubmission\": \"296.7K\", \"totalAcceptedRaw\": 171787, \"totalSubmissionRaw\": 296711, \"acRate\": \"57.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "539", "name": "minimum-time-difference", "content": {"questionId": "539", "questionFrontendId": "539", "questionTitle": "Minimum Time Difference", "questionTitleSlug": "minimum-time-difference", "content": "Given a list of 24-hour clock time points in <strong>&quot;HH:MM&quot;</strong> format, return <em>the minimum <b>minutes</b> difference between any two time-points in the list</em>.\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> timePoints = [\"23:59\",\"00:00\"]\n<strong>Output:</strong> 1\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> timePoints = [\"00:00\",\"23:59\",\"00:00\"]\n<strong>Output:</strong> 0\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= timePoints &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>timePoints[i]</code> is in the format <strong>&quot;HH:MM&quot;</strong>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"56.7K\", \"totalSubmission\": \"108.9K\", \"totalAcceptedRaw\": 56733, \"totalSubmissionRaw\": 108933, \"acRate\": \"52.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "538", "name": "convert-bst-to-greater-tree", "content": {"questionId": "538", "questionFrontendId": "538", "questionTitle": "Convert BST to Greater Tree", "questionTitleSlug": "convert-bst-to-greater-tree", "content": "<p>Given the <code>root</code> of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus sum of all keys greater than the original key in BST.</p>\n\n<p>As a reminder, a <em>binary search tree</em> is a tree that satisfies these constraints:</p>\n\n<ul>\n\t<li>The left subtree of a node contains only nodes with keys&nbsp;<strong>less than</strong>&nbsp;the node&#39;s key.</li>\n\t<li>The right subtree of a node contains only nodes with keys&nbsp;<strong>greater than</strong>&nbsp;the node&#39;s key.</li>\n\t<li>Both the left and right subtrees must also be binary search trees.</li>\n</ul>\n\n<p><strong>Note:</strong> This question is the same as&nbsp;1038:&nbsp;<a href=\"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree/\">https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree/</a></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/05/02/tree.png\" style=\"width: 550px; height: 375px;\" />\n<pre>\n<strong>Input:</strong> root = [4,1,6,0,2,5,7,null,null,null,3,null,null,null,8]\n<strong>Output:</strong> [30,36,21,36,35,26,15,null,null,null,33,null,null,null,8]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [0,null,1]\n<strong>Output:</strong> [1,null,1]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,0,2]\n<strong>Output:</strong> [3,3,2]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [3,2,4,1]\n<strong>Output:</strong> [7,9,4,10]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>4</sup> &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li>All the values in the tree are <strong>unique</strong>.</li>\n\t<li><code>root</code> is guaranteed to be a valid binary search tree.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"132.9K\", \"totalSubmission\": \"235.8K\", \"totalAcceptedRaw\": 132890, \"totalSubmissionRaw\": 235819, \"acRate\": \"56.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "537", "name": "complex-number-multiplication", "content": {"questionId": "537", "questionFrontendId": "537", "questionTitle": "Complex Number Multiplication", "questionTitleSlug": "complex-number-multiplication", "content": "<p>\r\nGiven two strings representing two <a href = \"https://en.wikipedia.org/wiki/Complex_number\">complex numbers</a>.</p>\r\n\r\n<p>\r\nYou need to return a string representing their multiplication. Note i<sup>2</sup> = -1 according to the definition.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> \"1+1i\", \"1+1i\"\r\n<b>Output:</b> \"0+2i\"\r\n<b>Explanation:</b> (1 + i) * (1 + i) = 1 + i<sup>2</sup> + 2 * i = 2i, and you need convert it to the form of 0+2i.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> \"1+-1i\", \"1+-1i\"\r\n<b>Output:</b> \"0+-2i\"\r\n<b>Explanation:</b> (1 - i) * (1 - i) = 1 + i<sup>2</sup> - 2 * i = -2i, and you need convert it to the form of 0+-2i.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<ol>\r\n<li>The input strings will not have extra blank.</li>\r\n<li>The input strings will be given in the form of <b>a+bi</b>, where the integer <b>a</b> and <b>b</b> will both belong to the range of [-100, 100]. And <b>the output should be also in this form</b>.</li>\r\n</ol>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"52K\", \"totalSubmission\": \"76.2K\", \"totalAcceptedRaw\": 51999, \"totalSubmissionRaw\": 76250, \"acRate\": \"68.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "String", "slug": "string"}]}}, {"id": "536", "name": "construct-binary-tree-from-string", "content": {"questionId": "536", "questionFrontendId": "536", "questionTitle": "Construct Binary Tree from String", "questionTitleSlug": "construct-binary-tree-from-string", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"34.2K\", \"totalSubmission\": \"68.1K\", \"totalAcceptedRaw\": 34174, \"totalSubmissionRaw\": 68116, \"acRate\": \"50.2%\"}", "similarQuestions": "[{\"title\": \"Construct String from Binary Tree\", \"titleSlug\": \"construct-string-from-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "535", "name": "encode-and-decode-tinyurl", "content": {"questionId": "535", "questionFrontendId": "535", "questionTitle": "Encode and Decode TinyURL", "questionTitleSlug": "encode-and-decode-tinyurl", "content": "<blockquote>Note: This is a companion problem to the <a href=\"https://leetcode.com/discuss/interview-question/system-design/\" target=\"_blank\">System Design</a> problem: <a href=\"https://leetcode.com/discuss/interview-question/124658/Design-a-URL-Shortener-(-TinyURL-)-System/\" target=\"_blank\">Design TinyURL</a>.</blockquote>\r\n\r\n<p>TinyURL is a URL shortening service where you enter a URL such as <code>https://leetcode.com/problems/design-tinyurl</code> and it returns a short URL such as <code>http://tinyurl.com/4e9iAk</code>.</p>\r\n\r\n<p>Design the <code>encode</code> and <code>decode</code> methods for the TinyURL service. There is no restriction on how your encode/decode algorithm should work. You just need to ensure that a URL can be encoded to a tiny URL and the tiny URL can be decoded to the original URL.</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"117.4K\", \"totalSubmission\": \"145.6K\", \"totalAcceptedRaw\": 117360, \"totalSubmissionRaw\": 145614, \"acRate\": \"80.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Math", "slug": "math"}]}}, {"id": "533", "name": "lonely-pixel-ii", "content": {"questionId": "533", "questionFrontendId": "533", "questionTitle": "Lonely Pixel II", "questionTitleSlug": "lonely-pixel-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"10.8K\", \"totalSubmission\": \"22.5K\", \"totalAcceptedRaw\": 10819, \"totalSubmissionRaw\": 22546, \"acRate\": \"48.0%\"}", "similarQuestions": "[{\"title\": \"Lonely Pixel I\", \"titleSlug\": \"lonely-pixel-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "532", "name": "k-diff-pairs-in-an-array", "content": {"questionId": "532", "questionFrontendId": "532", "questionTitle": "K-diff Pairs in an Array", "questionTitleSlug": "k-diff-pairs-in-an-array", "content": "<p>Given an array of integers <code>nums</code> and an integer <code>k</code>, return <em>the number of <b>unique</b> k-diff pairs in the array</em>.</p>\n\n<p>A <b>k-diff</b> pair is&nbsp;an integer pair <code>(nums[i], nums[j])</code>, where the following are true:</p>\n\n<ul>\n\t<li><code>0 &lt;= i, j &lt; nums.length</code></li>\n\t<li><code>i != j</code></li>\n\t<li><code>|nums[i] - nums[j]| == k</code></li>\n</ul>\n\n<p><strong>Notice</strong>&nbsp;that <code>|val|</code> denotes the absolute value of <code>val</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,1,4,1,5], k = 2\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There are two 2-diff pairs in the array, (1, 3) and (3, 5).\nAlthough we have two 1s in the input, we should only return the number of <strong>unique</strong> pairs.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,5], k = 1\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> There are four 1-diff pairs in the array, (1, 2), (2, 3), (3, 4) and (4, 5).\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,1,5,4], k = 0\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> There is one 0-diff pair in the array, (1, 1).\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,4,4,3,3,0,9,2,3], k = 3\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,-2,-3], k = 1\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>7</sup> &lt;= nums[i] &lt;= 10<sup>7</sup></code></li>\n\t<li><code>0 &lt;= k &lt;= 10<sup>7</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"150.9K\", \"totalSubmission\": \"435K\", \"totalAcceptedRaw\": 150887, \"totalSubmissionRaw\": 435031, \"acRate\": \"34.7%\"}", "similarQuestions": "[{\"title\": \"Minimum Absolute Difference in BST\", \"titleSlug\": \"minimum-absolute-difference-in-bst\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "531", "name": "lonely-pixel-i", "content": {"questionId": "531", "questionFrontendId": "531", "questionTitle": "Lonely Pixel I", "questionTitleSlug": "lonely-pixel-i", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23.2K\", \"totalSubmission\": \"39.2K\", \"totalAcceptedRaw\": 23232, \"totalSubmissionRaw\": 39183, \"acRate\": \"59.3%\"}", "similarQuestions": "[{\"title\": \"Lonely Pixel II\", \"titleSlug\": \"lonely-pixel-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "529", "name": "minesweeper", "content": {"questionId": "529", "questionFrontendId": "529", "questionTitle": "Minesweeper", "questionTitleSlug": "minesweeper", "content": "<p>Let&#39;s play the minesweeper game (<a href=\"https://en.wikipedia.org/wiki/Minesweeper_(video_game)\">Wikipedia</a>, <a href=\"http://minesweeperonline.com\">online game</a>)!</p>\r\n\r\n<p>You are given a 2D char matrix representing the game board. <b>&#39;M&#39;</b> represents an <b>unrevealed</b> mine, <b>&#39;E&#39;</b> represents an <b>unrevealed</b> empty square, <b>&#39;B&#39;</b> represents a <b>revealed</b> blank square that has no adjacent (above, below, left, right, and all 4 diagonals) mines, <b>digit</b> (&#39;1&#39; to &#39;8&#39;) represents how many mines are adjacent to this <b>revealed</b> square, and finally <b>&#39;X&#39;</b> represents a <b>revealed</b> mine.</p>\r\n\r\n<p>Now given the next click position (row and column indices) among all the <b>unrevealed</b> squares (&#39;M&#39; or &#39;E&#39;), return the board after revealing this position according to the following rules:</p>\r\n\r\n<ol>\r\n\t<li>If a mine (&#39;M&#39;) is revealed, then the game is over - change it to <b>&#39;X&#39;</b>.</li>\r\n\t<li>If an empty square (&#39;E&#39;) with <b>no adjacent mines</b> is revealed, then change it to revealed blank (&#39;B&#39;) and all of its adjacent <b>unrevealed</b> squares should be revealed recursively.</li>\r\n\t<li>If an empty square (&#39;E&#39;) with <b>at least one adjacent mine</b> is revealed, then change it to a digit (&#39;1&#39; to &#39;8&#39;) representing the number of adjacent mines.</li>\r\n\t<li>Return the board when no more squares will be revealed.</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> \r\n\r\n[[&#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;],\r\n [&#39;E&#39;, &#39;E&#39;, &#39;M&#39;, &#39;E&#39;, &#39;E&#39;],\r\n [&#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;],\r\n [&#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;]]\r\n\r\nClick : [3,0]\r\n\r\n<b>Output:</b> \r\n\r\n[[&#39;B&#39;, &#39;1&#39;, &#39;E&#39;, &#39;1&#39;, &#39;B&#39;],\r\n [&#39;B&#39;, &#39;1&#39;, &#39;M&#39;, &#39;1&#39;, &#39;B&#39;],\r\n [&#39;B&#39;, &#39;1&#39;, &#39;1&#39;, &#39;1&#39;, &#39;B&#39;],\r\n [&#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;]]\r\n\r\n<b>Explanation:</b>\r\n<img src=\"https://assets.leetcode.com/uploads/2018/10/12/minesweeper_example_1.png\" style=\"width: 100%; max-width: 400px\" />\r\n</pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> \r\n\r\n[[&#39;B&#39;, &#39;1&#39;, &#39;E&#39;, &#39;1&#39;, &#39;B&#39;],\r\n [&#39;B&#39;, &#39;1&#39;, &#39;M&#39;, &#39;1&#39;, &#39;B&#39;],\r\n [&#39;B&#39;, &#39;1&#39;, &#39;1&#39;, &#39;1&#39;, &#39;B&#39;],\r\n [&#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;]]\r\n\r\nClick : [1,2]\r\n\r\n<b>Output:</b> \r\n\r\n[[&#39;B&#39;, &#39;1&#39;, &#39;E&#39;, &#39;1&#39;, &#39;B&#39;],\r\n [&#39;B&#39;, &#39;1&#39;, &#39;X&#39;, &#39;1&#39;, &#39;B&#39;],\r\n [&#39;B&#39;, &#39;1&#39;, &#39;1&#39;, &#39;1&#39;, &#39;B&#39;],\r\n [&#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;]]\r\n\r\n<b>Explanation:</b>\r\n<img src=\"https://assets.leetcode.com/uploads/2018/10/12/minesweeper_example_2.png\" style=\"width: 100%; max-width: 400px\" />\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>The range of the input matrix&#39;s height and width is [1,50].</li>\r\n\t<li>The click position will only be an unrevealed square (&#39;M&#39; or &#39;E&#39;), which also means the input board contains at least one clickable square.</li>\r\n\t<li>The input board won&#39;t be a stage when game is over (some mines have been revealed).</li>\r\n\t<li>For simplicity, not mentioned rules should be ignored in this problem. For example, you <b>don&#39;t</b> need to reveal all the unrevealed mines when the game is over, consider any cases that you will win the game or flag any squares.</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"73.9K\", \"totalSubmission\": \"122.1K\", \"totalAcceptedRaw\": 73852, \"totalSubmissionRaw\": 122104, \"acRate\": \"60.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "526", "name": "beautiful-arrangement", "content": {"questionId": "526", "questionFrontendId": "526", "questionTitle": "Beautiful Arrangement", "questionTitleSlug": "beautiful-arrangement", "content": "<p>Suppose you have <b>N</b> integers from 1 to N. We define a beautiful arrangement as an array that is constructed by these <b>N</b> numbers successfully if one of the following is true for the i<sub>th</sub> position (1 &lt;= i &lt;= N) in this array:</p>\r\n\r\n<ol>\r\n\t<li>The number at the i<sub>th</sub> position is divisible by <b>i</b>.</li>\r\n\t<li><b>i</b> is divisible by the number at the i<sub>th</sub> position.</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Now given N, how many beautiful arrangements can you construct?</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> 2\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> \r\n\r\nThe first beautiful arrangement is [1, 2]:\r\n\r\nNumber at the 1st position (i=1) is 1, and 1 is divisible by i (i=1).\r\n\r\nNumber at the 2nd position (i=2) is 2, and 2 is divisible by i (i=2).\r\n\r\nThe second beautiful arrangement is [2, 1]:\r\n\r\nNumber at the 1st position (i=1) is 2, and 2 is divisible by i (i=1).\r\n\r\nNumber at the 2nd position (i=2) is 1, and i (i=2) is divisible by 1.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li><b>N</b> is a positive integer and will not exceed 15.</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"60.1K\", \"totalSubmission\": \"100.8K\", \"totalAcceptedRaw\": 60065, \"totalSubmissionRaw\": 100765, \"acRate\": \"59.6%\"}", "similarQuestions": "[{\"title\": \"Beautiful Arrangement II\", \"titleSlug\": \"beautiful-arrangement-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "525", "name": "contiguous-array", "content": {"questionId": "525", "questionFrontendId": "525", "questionTitle": "Contiguous Array", "questionTitleSlug": "contiguous-array", "content": "<p>Given a binary array, find the maximum length of a contiguous subarray with equal number of 0 and 1. </p>\r\n\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> [0,1]\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> [0, 1] is the longest contiguous subarray with equal number of 0 and 1.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> [0,1,0]\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\nThe length of the given binary array will not exceed 50,000.\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"176.7K\", \"totalSubmission\": \"408.2K\", \"totalAcceptedRaw\": 176676, \"totalSubmissionRaw\": 408183, \"acRate\": \"43.3%\"}", "similarQuestions": "[{\"title\": \"Maximum Size Subarray Sum Equals k\", \"titleSlug\": \"maximum-size-subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}]}}, {"id": "524", "name": "longest-word-in-dictionary-through-deleting", "content": {"questionId": "524", "questionFrontendId": "524", "questionTitle": "Longest Word in Dictionary through Deleting", "questionTitleSlug": "longest-word-in-dictionary-through-deleting", "content": "<p>\r\nGiven a string and a string dictionary, find the longest string in the dictionary that can be formed by deleting some characters of the given string. If there are more than one possible results, return the longest word with the smallest lexicographical order. If there is no possible result, return the empty string.\r\n</p>\r\n<p><b>Example 1:</b><br>\r\n<pre>\r\n<b>Input:</b>\r\ns = \"abpcplea\", d = [\"ale\",\"apple\",\"monkey\",\"plea\"]\r\n\r\n<b>Output:</b> \r\n\"apple\"\r\n</pre>\r\n</p>\r\n\r\n</p>\r\n<p><b>Example 2:</b><br>\r\n<pre>\r\n<b>Input:</b>\r\ns = \"abpcplea\", d = [\"a\",\"b\",\"c\"]\r\n\r\n<b>Output:</b> \r\n\"a\"\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>All the strings in the input will only contain lower-case letters.</li>\r\n<li>The size of the dictionary won't exceed 1,000.</li>\r\n<li>The length of all the strings in the input won't exceed 1,000.</li>\r\n</ol>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"76.1K\", \"totalSubmission\": \"155.8K\", \"totalAcceptedRaw\": 76081, \"totalSubmissionRaw\": 155798, \"acRate\": \"48.8%\"}", "similarQuestions": "[{\"title\": \"Longest Word in Dictionary\", \"titleSlug\": \"longest-word-in-dictionary\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "523", "name": "continuous-subarray-sum", "content": {"questionId": "523", "questionFrontendId": "523", "questionTitle": "Continuous Subarray Sum", "questionTitleSlug": "continuous-subarray-sum", "content": "<p>Given a list of <b>non-negative</b> numbers and a target <b>integer</b> k, write a function to check if the array has a continuous subarray of size at least 2 that sums up to a multiple of <b>k</b>, that is, sums up to n*k where n is also an <b>integer</b>.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> [23, 2, 4, 6, 7],  k=6\n<b>Output:</b> True\n<b>Explanation:</b> Because [2, 4] is a continuous subarray of size 2 and sums up to 6.\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> [23, 2, 6, 4, 7],  k=6\n<b>Output:</b> True\n<b>Explanation:</b> Because [23, 2, 6, 4, 7] is an continuous subarray of size 5 and sums up to 42.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The length of the array won&#39;t exceed 10,000.</li>\n\t<li>You may assume the sum of all the numbers is in the range of a signed 32-bit integer.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"164.9K\", \"totalSubmission\": \"668.4K\", \"totalAcceptedRaw\": 164948, \"totalSubmissionRaw\": 668387, \"acRate\": \"24.7%\"}", "similarQuestions": "[{\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "522", "name": "longest-uncommon-subsequence-ii", "content": {"questionId": "522", "questionFrontendId": "522", "questionTitle": "Longest Uncommon Subsequence II", "questionTitleSlug": "longest-uncommon-subsequence-ii", "content": "<p>\r\nGiven a list of strings, you need to find the longest uncommon subsequence among them. The longest uncommon subsequence is defined as the longest subsequence of one of these strings and this subsequence should not be <b>any</b> subsequence of the other strings.\r\n</p>\r\n\r\n<p>\r\nA <b>subsequence</b> is a sequence that can be derived from one sequence by deleting some characters without changing the order of the remaining elements. Trivially, any string is a subsequence of itself and an empty string is a subsequence of any string.\r\n</p>\r\n\r\n<p>\r\nThe input will be a list of strings, and the output needs to be the length of the longest uncommon subsequence. If the longest uncommon subsequence doesn't exist, return -1.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> \"aba\", \"cdc\", \"eae\"\r\n<b>Output:</b> 3\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<ol>\r\n<li>All the given strings' lengths will not exceed 10.</li>\r\n<li>The length of the given list will be in the range of [2, 50].</li>\r\n</ol>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23.4K\", \"totalSubmission\": \"68.7K\", \"totalAcceptedRaw\": 23370, \"totalSubmissionRaw\": 68715, \"acRate\": \"34.0%\"}", "similarQuestions": "[{\"title\": \"Longest Uncommon Subsequence I\", \"titleSlug\": \"longest-uncommon-subsequence-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "518", "name": "coin-change-2", "content": {"questionId": "518", "questionFrontendId": "518", "questionTitle": "Coin Change 2", "questionTitleSlug": "coin-change-2", "content": "<p>You are given coins of different denominations and a total amount of money. Write a function to compute the number of combinations that make up that amount. You may assume that you have infinite number of each kind of coin.</p>\r\n\r\n<ul>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> amount = 5, coins = [1, 2, 5]\r\n<b>Output:</b> 4\r\n<b>Explanation:</b> there are four ways to make up the amount:\r\n5=5\r\n5=2+2+1\r\n5=2+1+1+1\r\n5=1+1+1+1+1\r\n</pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> amount = 3, coins = [2]\r\n<b>Output:</b> 0\r\n<b>Explanation:</b> the amount of 3 cannot be made up just with coins of 2.\r\n</pre>\r\n\r\n<p><b>Example 3:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> amount = 10, coins = [10] \r\n<b>Output:</b> 1\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<p>You can assume that</p>\r\n\r\n<ul>\r\n\t<li>0 &lt;= amount &lt;= 5000</li>\r\n\t<li>1 &lt;= coin &lt;= 5000</li>\r\n\t<li>the number of coins is less than 500</li>\r\n\t<li>the answer is guaranteed to fit into signed 32-bit integer</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"165.4K\", \"totalSubmission\": \"322.8K\", \"totalAcceptedRaw\": 165433, \"totalSubmissionRaw\": 322777, \"acRate\": \"51.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "516", "name": "longest-palindromic-subsequence", "content": {"questionId": "516", "questionFrontendId": "516", "questionTitle": "Longest Palindromic Subsequence", "questionTitleSlug": "longest-palindromic-subsequence", "content": "<p>Given a string s, find the longest palindromic subsequence&#39;s length in s. You may assume that the maximum length of s is 1000.</p>\n\n<p><b>Example 1:</b><br />\nInput:</p>\n\n<pre>\n&quot;bbbab&quot;\n</pre>\nOutput:\n\n<pre>\n4\n</pre>\nOne possible longest palindromic subsequence is &quot;bbbb&quot;.\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b><br />\nInput:</p>\n\n<pre>\n&quot;cbbd&quot;\n</pre>\nOutput:\n\n<pre>\n2\n</pre>\nOne possible longest palindromic subsequence is &quot;bb&quot;.\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s</code> consists only of lowercase English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"145.7K\", \"totalSubmission\": \"266.3K\", \"totalAcceptedRaw\": 145709, \"totalSubmissionRaw\": 266320, \"acRate\": \"54.7%\"}", "similarQuestions": "[{\"title\": \"Longest Palindromic Substring\", \"titleSlug\": \"longest-palindromic-substring\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Palindromic Substrings\", \"titleSlug\": \"palindromic-substrings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Different Palindromic Subsequences\", \"titleSlug\": \"count-different-palindromic-subsequences\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Longest Common Subsequence\", \"titleSlug\": \"longest-common-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Palindromic Subsequence II\", \"titleSlug\": \"longest-palindromic-subsequence-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "515", "name": "find-largest-value-in-each-tree-row", "content": {"questionId": "515", "questionFrontendId": "515", "questionTitle": "Find Largest Value in Each Tree Row", "questionTitleSlug": "find-largest-value-in-each-tree-row", "content": "<p>Given the <code>root</code> of a binary tree, return <em>an array of the largest value in each row</em> of the tree <strong>(0-indexed)</strong>.</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/21/largest_e1.jpg\" style=\"width: 450px; height: 258px;\" />\n<pre>\n<strong>Input:</strong> root = [1,3,2,5,3,null,9]\n<strong>Output:</strong> [1,3,9]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,2,3]\n<strong>Output:</strong> [1,3]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1]\n<strong>Output:</strong> [1]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,null,2]\n<strong>Output:</strong> [1,2]\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree will be in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-2<sup>31</sup> &lt;= Node.val &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"120.9K\", \"totalSubmission\": \"195.3K\", \"totalAcceptedRaw\": 120877, \"totalSubmissionRaw\": 195305, \"acRate\": \"61.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "513", "name": "find-bottom-left-tree-value", "content": {"questionId": "513", "questionFrontendId": "513", "questionTitle": "Find Bottom Left Tree Value", "questionTitleSlug": "find-bottom-left-tree-value", "content": "<p>Given the <code>root</code> of a binary tree, return the leftmost value in the last row of the tree.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/14/tree1.jpg\" style=\"width: 302px; height: 182px;\" />\n<pre>\n<strong>Input:</strong> root = [2,1,3]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/14/tree2.jpg\" style=\"width: 432px; height: 421px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,null,5,6,null,null,7]\n<strong>Output:</strong> 7\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-2<sup>31</sup> &lt;= Node.val &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"118.8K\", \"totalSubmission\": \"191.1K\", \"totalAcceptedRaw\": 118842, \"totalSubmissionRaw\": 191089, \"acRate\": \"62.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1059", "name": "all-paths-from-source-lead-to-destination", "content": {"questionId": "511", "questionFrontendId": "1059", "questionTitle": "All Paths from Source Lead to Destination", "questionTitleSlug": "all-paths-from-source-lead-to-destination", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"11.7K\", \"totalSubmission\": \"27K\", \"totalAcceptedRaw\": 11706, \"totalSubmissionRaw\": 27043, \"acRate\": \"43.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "510", "name": "inorder-successor-in-bst-ii", "content": {"questionId": "509", "questionFrontendId": "510", "questionTitle": "Inorder Successor in BST II", "questionTitleSlug": "inorder-successor-in-bst-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"27.1K\", \"totalSubmission\": \"45.5K\", \"totalAcceptedRaw\": 27142, \"totalSubmissionRaw\": 45505, \"acRate\": \"59.6%\"}", "similarQuestions": "[{\"title\": \"Inorder Successor in BST\", \"titleSlug\": \"inorder-successor-in-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "508", "name": "most-frequent-subtree-sum", "content": {"questionId": "508", "questionFrontendId": "508", "questionTitle": "Most Frequent Subtree Sum", "questionTitleSlug": "most-frequent-subtree-sum", "content": "<p>\r\nGiven the root of a tree, you are asked to find the most frequent subtree sum. The subtree sum of a node is defined as the sum of all the node values formed by the subtree rooted at that node (including the node itself). So what is the most frequent subtree sum value? If there is a tie, return all the values with the highest frequency in any order.\r\n</p>\r\n\r\n<p><b>Examples 1</b><br>\r\nInput:\r\n<pre>\r\n  5\r\n /  \\\r\n2   -3\r\n</pre>\r\nreturn [2, -3, 4], since all the values happen only once, return all of them in any order.\r\n</p>\r\n\r\n<p><b>Examples 2</b><br>\r\nInput:\r\n<pre>\r\n  5\r\n /  \\\r\n2   -5\r\n</pre>\r\nreturn [2], since 2 happens twice, however -5 only occur once.\r\n</p>\r\n\r\n<p><b>Note:</b>\r\nYou may assume the sum of values in any subtree is in the range of 32-bit signed integer.\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"78.6K\", \"totalSubmission\": \"133.7K\", \"totalAcceptedRaw\": 78624, \"totalSubmissionRaw\": 133724, \"acRate\": \"58.8%\"}", "similarQuestions": "[{\"title\": \"Subtree of Another Tree\", \"titleSlug\": \"subtree-of-another-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "505", "name": "the-maze-ii", "content": {"questionId": "505", "questionFrontendId": "505", "questionTitle": "The Maze II", "questionTitleSlug": "the-maze-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"54.6K\", \"totalSubmission\": \"113.3K\", \"totalAcceptedRaw\": 54619, \"totalSubmissionRaw\": 113262, \"acRate\": \"48.2%\"}", "similarQuestions": "[{\"title\": \"The Maze\", \"titleSlug\": \"the-maze\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"The Maze III\", \"titleSlug\": \"the-maze-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "503", "name": "next-greater-element-ii", "content": {"questionId": "503", "questionFrontendId": "503", "questionTitle": "Next Greater Element II", "questionTitleSlug": "next-greater-element-ii", "content": "<p>\r\nGiven a circular array (the next element of the last element is the first element of the array), print the Next Greater Number for every element. The Next Greater Number of a number x is the first greater number to its traversing-order next in the array, which means you could search circularly to find its next greater number. If it doesn't exist, output -1 for this number.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> [1,2,1]\r\n<b>Output:</b> [2,-1,2]\r\n<b>Explanation:</b> The first 1's next greater number is 2; </br>The number 2 can't find next greater number; </br>The second 1's next greater number needs to search circularly, which is also 2.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\nThe length of given array won't exceed 10000.\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"117.8K\", \"totalSubmission\": \"203.3K\", \"totalAcceptedRaw\": 117793, \"totalSubmissionRaw\": 203275, \"acRate\": \"57.9%\"}", "similarQuestions": "[{\"title\": \"Next Greater Element I\", \"titleSlug\": \"next-greater-element-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Next Greater Element III\", \"titleSlug\": \"next-greater-element-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}]}}, {"id": "498", "name": "diagonal-traverse", "content": {"questionId": "498", "questionFrontendId": "498", "questionTitle": "Diagonal Traverse", "questionTitleSlug": "diagonal-traverse", "content": "<p>Given a matrix of M x N elements (M rows, N columns), return all elements of the matrix in diagonal order as shown in the below image.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b>\r\n[\r\n [ 1, 2, 3 ],\r\n [ 4, 5, 6 ],\r\n [ 7, 8, 9 ]\r\n]\r\n\r\n<b>Output:</b>  [1,2,4,7,5,3,6,8,9]\r\n\r\n<b>Explanation:</b>\r\n<img src=\"https://assets.leetcode.com/uploads/2018/10/12/diagonal_traverse.png\" style=\"width: 220px;\" />\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<p>The total number of elements of the given matrix will not exceed 10,000.</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"100.2K\", \"totalSubmission\": \"204.2K\", \"totalAcceptedRaw\": 100234, \"totalSubmissionRaw\": 204203, \"acRate\": \"49.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "495", "name": "teemo-attacking", "content": {"questionId": "495", "questionFrontendId": "495", "questionTitle": "Teemo Attacking", "questionTitleSlug": "teemo-attacking", "content": "<p>In LOL world, there is a hero called Teemo and his attacking can make his enemy Ashe be in poisoned condition. Now, given the Teemo&#39;s attacking <b>ascending</b> time series towards Ashe and the poisoning time duration per Teemo&#39;s attacking, you need to output the total time that Ashe is in poisoned condition.</p>\r\n\r\n<p>You may assume that Teemo attacks at the very beginning of a specific time point, and makes Ashe be in poisoned condition immediately.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> [1,4], 2\r\n<b>Output:</b> 4\r\n<b>Explanation:</b> At time point 1, Teemo starts attacking Ashe and makes Ashe be poisoned immediately. \r\nThis poisoned status will last 2 seconds until the end of time point 2. \r\nAnd at time point 4, Teemo attacks Ashe again, and causes Ashe to be in poisoned status for another 2 seconds. \r\nSo you finally need to output 4.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> [1,2], 2\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> At time point 1, Teemo starts attacking Ashe and makes Ashe be poisoned. \r\nThis poisoned status will last 2 seconds until the end of time point 2. \r\nHowever, at the beginning of time point 2, Teemo attacks Ashe again who is already in poisoned status. \r\nSince the poisoned status won&#39;t add up together, though the second poisoning attack will still work at time point 2, it will stop at the end of time point 3. \r\nSo you finally need to output 3.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>You may assume the length of given time series array won&#39;t exceed 10000.</li>\r\n\t<li>You may assume the numbers in the Teemo&#39;s attacking time series and his poisoning time duration per attacking are non-negative integers, which won&#39;t exceed 10,000,000.</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"70.7K\", \"totalSubmission\": \"126K\", \"totalAcceptedRaw\": 70657, \"totalSubmissionRaw\": 126028, \"acRate\": \"56.1%\"}", "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Can Place Flowers\", \"titleSlug\": \"can-place-flowers\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Dota2 Senate\", \"titleSlug\": \"dota2-senate\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "494", "name": "target-sum", "content": {"questionId": "494", "questionFrontendId": "494", "questionTitle": "Target Sum", "questionTitleSlug": "target-sum", "content": "<p>You are given a list of non-negative integers, a1, a2, ..., an, and a target, S. Now you have 2 symbols <code>+</code> and <code>-</code>. For each integer, you should choose one from <code>+</code> and <code>-</code> as its new symbol.</p>\n\n<p>Find out how many ways to assign symbols to make sum of integers equal to target S.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> nums is [1, 1, 1, 1, 1], S is 3. \n<b>Output:</b> 5\n<b>Explanation:</b> \n\n-1+1+1+1+1 = 3\n+1-1+1+1+1 = 3\n+1+1-1+1+1 = 3\n+1+1+1-1+1 = 3\n+1+1+1+1-1 = 3\n\nThere are 5 ways to assign symbols to make the sum of nums be target 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The length of the given array is positive and will not exceed 20.</li>\n\t<li>The sum of elements in the given array will not exceed 1000.</li>\n\t<li>Your output answer is guaranteed to be fitted in a 32-bit integer.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"203.4K\", \"totalSubmission\": \"443.1K\", \"totalAcceptedRaw\": 203375, \"totalSubmissionRaw\": 443066, \"acRate\": \"45.9%\"}", "similarQuestions": "[{\"title\": \"Expression Add Operators\", \"titleSlug\": \"expression-add-operators\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "491", "name": "increasing-subsequences", "content": {"questionId": "491", "questionFrontendId": "491", "questionTitle": "Increasing Subsequences", "questionTitleSlug": "increasing-subsequences", "content": "<p>Given an integer array, your task is to find all the different possible increasing subsequences of the given array, and the length of an increasing subsequence should be at least 2.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b> [4, 6, 7, 7]\n<b>Output:</b> [[4, 6], [4, 7], [4, 6, 7], [4, 6, 7, 7], [6, 7], [6, 7, 7], [7,7], [4,7,7]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The length of the given array will not exceed 15.</li>\n\t<li>The range of integer in the given array is [-100,100].</li>\n\t<li>The given array may contain duplicates, and two equal integers should also be considered as a special case of increasing sequence.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"52.9K\", \"totalSubmission\": \"112.2K\", \"totalAcceptedRaw\": 52933, \"totalSubmissionRaw\": 112217, \"acRate\": \"47.2%\"}", "similarQuestions": "[{\"title\": \"Maximum Length of Pair Chain\", \"titleSlug\": \"maximum-length-of-pair-chain\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "490", "name": "the-maze", "content": {"questionId": "490", "questionFrontendId": "490", "questionTitle": "The Maze", "questionTitleSlug": "the-maze", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"79.5K\", \"totalSubmission\": \"151.4K\", \"totalAcceptedRaw\": 79476, \"totalSubmissionRaw\": 151446, \"acRate\": \"52.5%\"}", "similarQuestions": "[{\"title\": \"The Maze III\", \"titleSlug\": \"the-maze-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"The Maze II\", \"titleSlug\": \"the-maze-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "487", "name": "max-consecutive-ones-ii", "content": {"questionId": "487", "questionFrontendId": "487", "questionTitle": "Max Consecutive Ones II", "questionTitleSlug": "max-consecutive-ones-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"47.2K\", \"totalSubmission\": \"98.8K\", \"totalAcceptedRaw\": 47246, \"totalSubmissionRaw\": 98753, \"acRate\": \"47.8%\"}", "similarQuestions": "[{\"title\": \"Max Consecutive Ones\", \"titleSlug\": \"max-consecutive-ones\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Max Consecutive Ones III\", \"titleSlug\": \"max-consecutive-ones-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "486", "name": "predict-the-winner", "content": {"questionId": "486", "questionFrontendId": "486", "questionTitle": "Predict the Winner", "questionTitleSlug": "predict-the-winner", "content": "<p>Given an array of scores that are non-negative integers. Player 1 picks one of the numbers from either end of the array followed by the player 2 and then player 1 and so on. Each time a player picks a number, that number will not be available for the next player. This continues until all the scores have been chosen. The player with the maximum score wins.</p>\n\n<p>Given an array of scores, predict whether player 1 is the winner. You can assume each player plays to maximize his score.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> [1, 5, 2]\n<b>Output:</b> False\n<b>Explanation:</b> Initially, player 1 can choose between 1 and 2. \nIf he chooses 2 (or 1), then player 2 can choose from 1 (or 2) and 5. If player 2 chooses 5, then player 1 will be left with 1 (or 2). \nSo, final score of player 1 is 1 + 2 = 3, and player 2 is 5. \nHence, player 1 will never be the winner and you need to return False.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> [1, 5, 233, 7]\n<b>Output:</b> True\n<b>Explanation:</b> Player 1 first chooses 1. Then player 2 have to choose between 5 and 7. No matter which number player 2 choose, player 1 can choose 233.\nFinally, player 1 has more score (234) than player 2 (12), so you need to return True representing player1 can win.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>1 &lt;= length of the array &lt;= 20.</li>\n\t<li>Any scores in the given array are non-negative integers and will not exceed 10,000,000.</li>\n\t<li>If the scores of both players are equal, then player 1 is still the winner.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"78.7K\", \"totalSubmission\": \"162.7K\", \"totalAcceptedRaw\": 78706, \"totalSubmissionRaw\": 162665, \"acRate\": \"48.4%\"}", "similarQuestions": "[{\"title\": \"Can I Win\", \"titleSlug\": \"can-i-win\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Minimax", "slug": "minimax"}]}}, {"id": "484", "name": "find-permutation", "content": {"questionId": "484", "questionFrontendId": "484", "questionTitle": "Find Permutation", "questionTitleSlug": "find-permutation", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"24.1K\", \"totalSubmission\": \"37.7K\", \"totalAcceptedRaw\": 24121, \"totalSubmissionRaw\": 37682, \"acRate\": \"64.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "481", "name": "magical-string", "content": {"questionId": "481", "questionFrontendId": "481", "questionTitle": "Magical String", "questionTitleSlug": "magical-string", "content": "<p>\r\nA magical string <b>S</b> consists of only '1' and '2' and obeys the following rules:\r\n</p>\r\n<p>\r\nThe string <b>S</b> is magical because concatenating the number of contiguous occurrences of characters '1' and '2' generates the string <b>S</b> itself.\r\n</p>\r\n\r\n<p>\r\nThe first few elements of string <b>S</b> is the following:\r\n<b>S</b> = \"1221121221221121122\u2026\u2026\"\r\n</p>\r\n\r\n<p>\r\nIf we group the consecutive '1's and '2's in <b>S</b>, it will be:\r\n</p>\r\n<p>\r\n1   22  11  2  1  22  1  22  11  2  11  22 ......\r\n</p>\r\n<p>\r\nand the occurrences of '1's or '2's in each group are:\r\n</p>\r\n<p>\r\n1   2\t   2    1   1    2     1    2     2    1    2    2 ......\r\n</p>\r\n\r\n<p>\r\nYou can see that the occurrence sequence above is the <b>S</b> itself. \r\n</p>\r\n\r\n<p>\r\nGiven an integer N as input, return the number of '1's in the first N number in the magical string <b>S</b>.\r\n</p>\r\n\r\n<p><b>Note:</b>\r\nN will not exceed 100,000.\r\n</p>\r\n\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> 6\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> The first 6 elements of magical string S is \"12211\" and it contains three 1's, so return 3.\r\n</pre>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"23.5K\", \"totalSubmission\": \"49K\", \"totalAcceptedRaw\": 23467, \"totalSubmissionRaw\": 48975, \"acRate\": \"47.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "477", "name": "total-hamming-distance", "content": {"questionId": "477", "questionFrontendId": "477", "questionTitle": "Total Hamming Distance", "questionTitleSlug": "total-hamming-distance", "content": "<p>The <a href=\"https://en.wikipedia.org/wiki/Hamming_distance\" target=\"_blank\">Hamming distance</a> between two integers is the number of positions at which the corresponding bits are different.</p>\r\n\r\n<p>Now your job is to find the total Hamming distance between all pairs of the given numbers.</p\u0010\u0010\u0010\u0010>\r\n\r\n\r\n<p><b>Example:</b><br />\r\n<pre>\r\n<b>Input:</b> 4, 14, 2\r\n\r\n<b>Output:</b> 6\r\n\r\n<b>Explanation:</b> In binary representation, the 4 is 0100, 14 is 1110, and 2 is 0010 (just\r\nshowing the four bits relevant in this case). So the answer will be:\r\nHammingDistance(4, 14) + HammingDistance(4, 2) + HammingDistance(14, 2) = 2 + 2 + 2 = 6.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>Elements of the given array are in the range of <code>0 </code> to <code>10^9</code>\r\n<li>Length of the array will not exceed <code>10^4</code>. </li>\r\n</ol>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"68.5K\", \"totalSubmission\": \"135.5K\", \"totalAcceptedRaw\": 68543, \"totalSubmissionRaw\": 135474, \"acRate\": \"50.6%\"}", "similarQuestions": "[{\"title\": \"Hamming Distance\", \"titleSlug\": \"hamming-distance\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "475", "name": "heaters", "content": {"questionId": "475", "questionFrontendId": "475", "questionTitle": "Heaters", "questionTitleSlug": "heaters", "content": "<p>Winter is coming! During the contest, your first job is to design a standard heater with a fixed warm radius to warm all the houses.</p>\n\n<p>Every house can be warmed, as long as the house is within the heater&#39;s warm radius range.&nbsp;</p>\n\n<p>Given the positions of <code>houses</code> and <code>heaters</code> on a horizontal line, return <em>the minimum radius standard of heaters&nbsp;so that those heaters could cover all houses.</em></p>\n\n<p><strong>Notice</strong> that&nbsp;all the <code>heaters</code> follow your radius standard, and the warm radius will the same.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> houses = [1,2,3], heaters = [2]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The only heater was placed in the position 2, and if we use the radius 1 standard, then all the houses can be warmed.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> houses = [1,2,3,4], heaters = [1,4]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The two heater was placed in the position 1 and 4. We need to use radius 1 standard, then all the houses can be warmed.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> houses = [1,5], heaters = [2]\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= houses.length, heaters.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= houses[i], heaters[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"70.5K\", \"totalSubmission\": \"210.7K\", \"totalAcceptedRaw\": 70494, \"totalSubmissionRaw\": 210655, \"acRate\": \"33.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "474", "name": "ones-and-zeroes", "content": {"questionId": "474", "questionFrontendId": "474", "questionTitle": "Ones and Zeroes", "questionTitleSlug": "ones-and-zeroes", "content": "<p>You are given an array of binary strings <code>strs</code> and two integers <code>m</code> and <code>n</code>.</p>\n\n<p>Return <em>the size of the largest subset of <code>strs</code> such that there are <strong>at most</strong> </em><code>m</code><em> </em><code>0</code><em>&#39;s and </em><code>n</code><em> </em><code>1</code><em>&#39;s in the subset</em>.</p>\n\n<p>A set <code>x</code> is a <strong>subset</strong> of a set <code>y</code> if all elements of <code>x</code> are also elements of <code>y</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> strs = [&quot;10&quot;,&quot;0001&quot;,&quot;111001&quot;,&quot;1&quot;,&quot;0&quot;], m = 5, n = 3\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The largest subset with at most 5 0&#39;s and 3 1&#39;s is {&quot;10&quot;, &quot;0001&quot;, &quot;1&quot;, &quot;0&quot;}, so the answer is 4.\nOther valid but smaller subsets include {&quot;0001&quot;, &quot;1&quot;} and {&quot;10&quot;, &quot;1&quot;, &quot;0&quot;}.\n{&quot;111001&quot;} is an invalid subset because it contains 4 1&#39;s, greater than the maximum of 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> strs = [&quot;10&quot;,&quot;0&quot;,&quot;1&quot;], m = 1, n = 1\n<strong>Output:</strong> 2\n<b>Explanation:</b> The largest subset is {&quot;0&quot;, &quot;1&quot;}, so the answer is 2.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= strs.length &lt;= 600</code></li>\n\t<li><code>1 &lt;= strs[i].length &lt;= 100</code></li>\n\t<li><code>strs[i]</code> consists only of digits <code>&#39;0&#39;</code> and <code>&#39;1&#39;</code>.</li>\n\t<li><code>1 &lt;= m, n &lt;= 100</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"56.2K\", \"totalSubmission\": \"129.5K\", \"totalAcceptedRaw\": 56187, \"totalSubmissionRaw\": 129525, \"acRate\": \"43.4%\"}", "similarQuestions": "[{\"title\": \"Non-negative Integers without Consecutive Ones\", \"titleSlug\": \"non-negative-integers-without-consecutive-ones\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "473", "name": "matchsticks-to-square", "content": {"questionId": "473", "questionFrontendId": "473", "questionTitle": "Matchsticks to Square", "questionTitleSlug": "matchsticks-to-square", "content": "<p>Remember the story of Little Match Girl? By now, you know exactly what matchsticks the little match girl has, please find out a way you can make one square by using up all those matchsticks. You should not break any stick, but you can link them up, and each matchstick must be used <b>exactly</b> one time.</P>\r\n\r\n<p> Your input will be several matchsticks the girl has, represented with their stick length. Your output will either be true or false, to represent whether you could make one square using all the matchsticks the little match girl has.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> [1,1,2,2,2]\r\n<b>Output:</b> true\r\n\r\n<b>Explanation:</b> You can form a square with length 2, one side of the square came two sticks with length 1.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> [3,3,3,3,4]\r\n<b>Output:</b> false\r\n\r\n<b>Explanation:</b> You cannot find a way to form a square with all the matchsticks.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The length sum of the given matchsticks is in the range of <code>0</code> to <code>10^9</code>.\r\n<li>The length of the given matchstick array will not exceed <code>15</code>.</li>\r\n</ol>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"40.5K\", \"totalSubmission\": \"106.5K\", \"totalAcceptedRaw\": 40517, \"totalSubmissionRaw\": 106454, \"acRate\": \"38.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "469", "name": "convex-polygon", "content": {"questionId": "469", "questionFrontendId": "469", "questionTitle": "Convex Polygon", "questionTitleSlug": "convex-polygon", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"8.6K\", \"totalSubmission\": \"23.1K\", \"totalAcceptedRaw\": 8621, \"totalSubmissionRaw\": 23107, \"acRate\": \"37.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "468", "name": "validate-ip-address", "content": {"questionId": "468", "questionFrontendId": "468", "questionTitle": "Validate IP Address", "questionTitleSlug": "validate-ip-address", "content": "<p>Given a string <code>IP</code>, return <code>&quot;IPv4&quot;</code> if IP is a valid IPv4 address,&nbsp;<code>&quot;IPv6&quot;</code> if&nbsp;IP is a valid IPv6 address or <code>&quot;Neither&quot;</code> if IP is not a correct IP of any type.</p>\n\n<p><strong>A valid IPv4</strong> address&nbsp;is an IP in the form <code>&quot;x<sub>1</sub>.x<sub>2</sub>.x<sub>3</sub>.x<sub>4</sub>&quot;</code> where <code>0 &lt;=&nbsp;x<sub><span style=\"font-size: 10.8333px;\">i</span></sub>&nbsp;&lt;= 255</code> and <code>x<sub>i</sub></code> <strong>cannot contain</strong> leading zeros. For example, <code>&quot;192.168.1.1&quot;</code> and&nbsp;<code>&quot;192.168.1.0&quot;</code> are valid IPv4 addresses but <code>&quot;192.168.01.1&quot;</code>, while <code>&quot;192.168.1.00&quot;</code>&nbsp;and <code>&quot;192.168@1.1&quot;</code> are invalid IPv4 addresses.</p>\n\n<p><strong>A valid IPv6</strong> address&nbsp;is an IP in the form <code>&quot;x<sub>1</sub>:x<sub>2</sub>:x<sub>3</sub>:x<sub>4:</sub>x<sub>5</sub>:x<sub>6</sub>:x<sub>7</sub>:x<sub>8</sub>&quot;</code> where:</p>\n\n<ul>\n\t<li><code>1 &lt;= x<sub>i</sub>.length &lt;= 4</code></li>\n\t<li><code>x<sub>i</sub></code> is a&nbsp;<strong>hexadecimal string</strong> which may contain digits, lower-case English letter (<code>&#39;a&#39;</code> to <code>&#39;f&#39;</code>) and upper-case English letters (<code>&#39;A&#39;</code> to <code>&#39;F&#39;</code>).</li>\n\t<li>Leading zeros are allowed in <code>x<sub>i</sub></code>.</li>\n</ul>\n\n<p>For example,&nbsp;&quot;<code>2001:0db8:85a3:0000:0000:8a2e:0370:7334&quot;</code>&nbsp;and &quot;<code>2001:db8:85a3:0:0:8A2E:0370:7334&quot;</code> are valid IPv6 addresses, while &quot;<code>2001:0db8:85a3::8A2E:037j:7334&quot;</code>&nbsp;and &quot;<code>02001:0db8:85a3:0000:0000:8a2e:0370:7334&quot;</code> are invalid IPv6 addresses.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> IP = &quot;172.16.254.1&quot;\n<strong>Output:</strong> &quot;IPv4&quot;\n<strong>Explanation:</strong> This is a valid IPv4 address, return &quot;IPv4&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> IP = &quot;2001:0db8:85a3:0:0:8A2E:0370:7334&quot;\n<strong>Output:</strong> &quot;IPv6&quot;\n<strong>Explanation:</strong> This is a valid IPv6 address, return &quot;IPv6&quot;.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> IP = &quot;256.256.256.256&quot;\n<strong>Output:</strong> &quot;Neither&quot;\n<strong>Explanation:</strong> This is neither a IPv4 address nor a IPv6 address.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> IP = &quot;2001:0db8:85a3:0:0:8A2E:0370:7334:&quot;\n<strong>Output:</strong> &quot;Neither&quot;\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> IP = &quot;1e1.4.5.6&quot;\n<strong>Output:</strong> &quot;Neither&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>IP</code> consists only of English letters, digits and the characters <code>&#39;.&#39;</code> and <code>&#39;:&#39;</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"90.2K\", \"totalSubmission\": \"365.3K\", \"totalAcceptedRaw\": 90239, \"totalSubmissionRaw\": 365257, \"acRate\": \"24.7%\"}", "similarQuestions": "[{\"title\": \"IP to CIDR\", \"titleSlug\": \"ip-to-cidr\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "467", "name": "unique-substrings-in-wraparound-string", "content": {"questionId": "467", "questionFrontendId": "467", "questionTitle": "Unique Substrings in Wraparound String", "questionTitleSlug": "unique-substrings-in-wraparound-string", "content": "<p>Consider the string <code>s</code> to be the infinite wraparound string of \"abcdefghijklmnopqrstuvwxyz\", so <code>s</code> will look like this: \"...zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd....\".</p>\r\n\r\n<p>Now we have another string <code>p</code>. Your job is to find out how many unique non-empty substrings of <code>p</code> are present in <code>s</code>. In particular, your input is the string <code>p</code> and you need to output the number of different non-empty substrings of <code>p</code> in the string <code>s</code>.</p>\r\n\r\n<p><b>Note:</b> <code>p</code> consists of only lowercase English letters and the size of p might be over 10000.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> \"a\"\r\n<b>Output:</b> 1\r\n\r\n<b>Explanation:</b> Only the substring \"a\" of string \"a\" is in the string \u0010s.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> \"cac\"\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> There are two substrings \"a\", \"c\" of string \"cac\" in the string s.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 3:</b><br />\r\n<pre>\r\n<b>Input:</b> \"zab\"\r\n<b>Output:</b> 6\r\n<b>Explanation:</b> There are six substrings \"z\", \"a\", \"b\", \"za\", \"ab\", \"zab\" of string \"zab\" in the string s.\r\n</pre>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"27.7K\", \"totalSubmission\": \"77.2K\", \"totalAcceptedRaw\": 27741, \"totalSubmissionRaw\": 77171, \"acRate\": \"35.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "464", "name": "can-i-win", "content": {"questionId": "464", "questionFrontendId": "464", "questionTitle": "Can I Win", "questionTitleSlug": "can-i-win", "content": "<p>In the &quot;100 game&quot; two players take turns adding, to a running total, any integer from <code>1</code> to <code>10</code>. The player who first causes the running total to <strong>reach or exceed</strong> 100 wins.</p>\n\n<p>What if we change the game so that players <strong>cannot</strong> re-use integers?</p>\n\n<p>For example, two players might take turns drawing from a common pool of numbers from 1 to 15 without replacement until they reach a total &gt;= 100.</p>\n\n<p>Given two integers maxChoosableInteger and&nbsp;desiredTotal, return <code>true</code> if the first player to move can force a win, otherwise return <code>false</code>.&nbsp;Assume&nbsp;both players play <strong>optimally</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> maxChoosableInteger = 10, desiredTotal = 11\n<strong>Output:</strong> false\n<strong>Explanation:</strong>\nNo matter which integer the first player choose, the first player will lose.\nThe first player can choose an integer from 1 up to 10.\nIf the first player choose 1, the second player can only choose integers from 2 up to 10.\nThe second player will win by choosing 10 and get a total = 11, which is &gt;= desiredTotal.\nSame with other integers chosen by the first player, the second player will always win.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> maxChoosableInteger = 10, desiredTotal = 0\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> maxChoosableInteger = 10, desiredTotal = 1\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;=&nbsp;maxChoosableInteger &lt;= 20</code></li>\n\t<li><code>0 &lt;=&nbsp;desiredTotal &lt;= 300</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"57.6K\", \"totalSubmission\": \"195.4K\", \"totalAcceptedRaw\": 57640, \"totalSubmissionRaw\": 195392, \"acRate\": \"29.5%\"}", "similarQuestions": "[{\"title\": \"Flip Game II\", \"titleSlug\": \"flip-game-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Guess Number Higher or Lower II\", \"titleSlug\": \"guess-number-higher-or-lower-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Predict the Winner\", \"titleSlug\": \"predict-the-winner\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Minimax", "slug": "minimax"}]}}, {"id": "462", "name": "minimum-moves-to-equal-array-elements-ii", "content": {"questionId": "462", "questionFrontendId": "462", "questionTitle": "Minimum Moves to Equal Array Elements II", "questionTitleSlug": "minimum-moves-to-equal-array-elements-ii", "content": "<p><p>Given a <b>non-empty</b> integer array, find the minimum number of moves required to make all array elements equal, where a move is incrementing a selected element by 1 or decrementing a selected element by 1.</p>\r\n\r\n<p>You may assume the array's length is at most 10,000.</p>\r\n\r\n<p><b>Example:</b>\r\n<pre>\r\n<b>Input:</b>\r\n[1,2,3]\r\n\r\n<b>Output:</b>\r\n2\r\n\r\n<b>Explanation:</b>\r\nOnly two moves are needed (remember each move increments or decrements one element):\r\n\r\n[1,2,3]  =>  [2,2,3]  =>  [2,2,2]\r\n</pre>\r\n</p></p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"49.6K\", \"totalSubmission\": \"91.5K\", \"totalAcceptedRaw\": 49617, \"totalSubmissionRaw\": 91514, \"acRate\": \"54.2%\"}", "similarQuestions": "[{\"title\": \"Best Meeting Point\", \"titleSlug\": \"best-meeting-point\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Moves to Equal Array Elements\", \"titleSlug\": \"minimum-moves-to-equal-array-elements\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "457", "name": "circular-array-loop", "content": {"questionId": "457", "questionFrontendId": "457", "questionTitle": "Circular Array Loop", "questionTitleSlug": "circular-array-loop", "content": "<p>You are given a <b>circular</b> array <code>nums</code> of positive and negative integers. If a number <i>k</i> at an index is positive, then move forward <i>k</i> steps. Conversely, if it&#39;s negative (-<i>k</i>), move backward <i>k</i>&nbsp;steps. Since the array is circular, you may assume that the last element&#39;s next element is the first element, and the first element&#39;s previous element is the last element.</p>\r\n\r\n<p>Determine if there is a loop (or a cycle) in <code>nums</code>. A cycle must start and end at the same index and the cycle&#39;s length &gt; 1. Furthermore, movements in a cycle must all follow a single direction. In other words, a cycle must not consist of both forward and backward movements.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> [2,-1,1,2,2]\r\n<b>Output:</b> true\r\n<b>Explanation:</b> There is a cycle, from index 0 -&gt; 2 -&gt; 3 -&gt; 0. The cycle&#39;s length is 3.\r\n</pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> [-1,2]\r\n<b>Output:</b> false\r\n<b>Explanation:</b> The movement from index 1 -&gt; 1 -&gt; 1 ... is not a cycle, because the cycle&#39;s length is 1. By definition the cycle&#39;s length must be greater than 1.\r\n</pre>\r\n\r\n<p><b>Example 3:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> [-2,1,-1,-2,-2]\r\n<b>Output:</b> false\r\n<b>Explanation:</b> The movement from index 1 -&gt; 2 -&gt; 1 -&gt; ... is not a cycle, because movement from index 1 -&gt; 2 is a forward movement, but movement from index 2 -&gt; 1 is a backward movement. All movements in a cycle must follow a single direction.</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>-1000 &le;&nbsp;nums[i] &le;&nbsp;1000</li>\r\n\t<li>nums[i] &ne;&nbsp;0</li>\r\n\t<li>1 &le;&nbsp;nums.length &le; 5000</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Follow up:</b></p>\r\n\r\n<p>Could you solve it in <b>O(n)</b> time complexity and&nbsp;<strong>O(1)</strong> extra space complexity?</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"40.3K\", \"totalSubmission\": \"134.7K\", \"totalAcceptedRaw\": 40252, \"totalSubmissionRaw\": 134739, \"acRate\": \"29.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "456", "name": "132-pattern", "content": {"questionId": "456", "questionFrontendId": "456", "questionTitle": "132 Pattern", "questionTitleSlug": "132-pattern", "content": "<p>Given an array&nbsp;of <code>n</code> integers <code>nums</code>, a <strong>132 pattern</strong> is a subsequence of three integers <code>nums[i]</code>, <code>nums[j]</code> and <code>nums[k]</code> such that <code>i &lt; j &lt; k</code> and <code>nums[i] &lt; nums[k] &lt; nums[j]</code>.</p>\n\n<p>Return <em><code>true</code> if there is a <strong>132 pattern</strong> in <code>nums</code>, otherwise, return <code>false</code>.</em></p>\n\n<p><strong>Follow up: </strong>The <code>O(n^2)</code> is trivial, could you come up with the <code>O(n logn)</code> or the <code>O(n)</code> solution?</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There is no 132 pattern in the sequence.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,1,4,2]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> There is a 132 pattern in the sequence: [1, 4, 2].\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,3,2,0]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> There are three 132 patterns in the sequence: [-1, 3, 2], [-1, 3, 0] and [-1, 2, 0].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"80.6K\", \"totalSubmission\": \"264.2K\", \"totalAcceptedRaw\": 80624, \"totalSubmissionRaw\": 264159, \"acRate\": \"30.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}]}}, {"id": "454", "name": "4sum-ii", "content": {"questionId": "454", "questionFrontendId": "454", "questionTitle": "4Sum II", "questionTitleSlug": "4sum-ii", "content": "<p>Given four lists A, B, C, D of integer values, compute how many tuples <code>(i, j, k, l)</code> there are such that <code>A[i] + B[j] + C[k] + D[l]</code> is zero.</p>\r\n\r\n<p>To make problem a bit easier, all A, B, C, D have same length of N where 0 &le; N &le; 500. All integers are in the range of -2<sup>28</sup> to 2<sup>28</sup> - 1 and the result is guaranteed to be at most 2<sup>31</sup> - 1.</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b>\r\nA = [ 1, 2]\r\nB = [-2,-1]\r\nC = [-1, 2]\r\nD = [ 0, 2]\r\n\r\n<b>Output:</b>\r\n2\r\n\r\n<b>Explanation:</b>\r\nThe two tuples are:\r\n1. (0, 0, 0, 1) -&gt; A[0] + B[0] + C[0] + D[1] = 1 + (-2) + (-1) + 2 = 0\r\n2. (1, 1, 0, 0) -&gt; A[1] + B[1] + C[0] + D[0] = 2 + (-1) + (-1) + 0 = 0\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"146.2K\", \"totalSubmission\": \"268.3K\", \"totalAcceptedRaw\": 146212, \"totalSubmissionRaw\": 268288, \"acRate\": \"54.5%\"}", "similarQuestions": "[{\"title\": \"4Sum\", \"titleSlug\": \"4sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "452", "name": "minimum-number-of-arrows-to-burst-balloons", "content": {"questionId": "452", "questionFrontendId": "452", "questionTitle": "Minimum Number of Arrows to Burst Balloons", "questionTitleSlug": "minimum-number-of-arrows-to-burst-balloons", "content": "<p>There are some spherical balloons spread in two-dimensional space. For each balloon, provided input is the start and end coordinates of the horizontal diameter. Since it&#39;s horizontal, y-coordinates don&#39;t matter, and hence the x-coordinates of start and end of the diameter suffice. The start is always smaller than the end.</p>\n\n<p>An arrow can be shot up exactly vertically from different points along the x-axis. A balloon with <code>x<sub>start</sub></code> and <code>x<sub>end</sub></code> bursts by an arrow shot at <code>x</code> if <code>x<sub>start</sub> &le; x &le; x<sub>end</sub></code>. There is no limit to the number of arrows that can be shot. An arrow once shot keeps traveling up infinitely.</p>\n\n<p>Given an array <code>points</code> where <code>points[i] = [x<sub>start</sub>, x<sub>end</sub>]</code>, return&nbsp;<em>the minimum number of arrows that must be shot to burst all balloons</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[10,16],[2,8],[1,6],[7,12]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> One way is to shoot one arrow for example at x = 6 (bursting the balloons [2,8] and [1,6]) and another arrow at x = 11 (bursting the other two balloons).\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[1,2],[3,4],[5,6],[7,8]]\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[1,2],[2,3],[3,4],[4,5]]\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[1,2]]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[2,3],[2,3]]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= points.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>points[i].length == 2</code></li>\n\t<li><code>-2<sup>31</sup> &lt;= x<sub>start</sub> &lt;&nbsp;x<sub>end</sub> &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"101.1K\", \"totalSubmission\": \"203.4K\", \"totalAcceptedRaw\": 101068, \"totalSubmissionRaw\": 203393, \"acRate\": \"49.7%\"}", "similarQuestions": "[{\"title\": \"Meeting Rooms II\", \"titleSlug\": \"meeting-rooms-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Non-overlapping Intervals\", \"titleSlug\": \"non-overlapping-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "451", "name": "sort-characters-by-frequency", "content": {"questionId": "451", "questionFrontendId": "451", "questionTitle": "Sort Characters By Frequency", "questionTitleSlug": "sort-characters-by-frequency", "content": "<p>Given a string, sort it in decreasing order based on the frequency of characters.</p>\r\n\r\n<p><b>Example 1:</b>\r\n<pre>\r\n<b>Input:</b>\r\n\"tree\"\r\n\r\n<b>Output:</b>\r\n\"eert\"\r\n\r\n<b>Explanation:</b>\r\n'e' appears twice while 'r' and 't' both appear once.\r\nSo 'e' must appear before both 'r' and 't'. Therefore \"eetr\" is also a valid answer.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b>\r\n<pre>\r\n<b>Input:</b>\r\n\"cccaaa\"\r\n\r\n<b>Output:</b>\r\n\"cccaaa\"\r\n\r\n<b>Explanation:</b>\r\nBoth 'c' and 'a' appear three times, so \"aaaccc\" is also a valid answer.\r\nNote that \"cacaca\" is incorrect, as the same characters must be together.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 3:</b>\r\n<pre>\r\n<b>Input:</b>\r\n\"Aabb\"\r\n\r\n<b>Output:</b>\r\n\"bbAa\"\r\n\r\n<b>Explanation:</b>\r\n\"bbaA\" is also a valid answer, but \"Aabb\" is incorrect.\r\nNote that 'A' and 'a' are treated as two different characters.\r\n</pre>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"229.5K\", \"totalSubmission\": \"358.6K\", \"totalAcceptedRaw\": 229451, \"totalSubmissionRaw\": 358575, \"acRate\": \"64.0%\"}", "similarQuestions": "[{\"title\": \"Top K Frequent Elements\", \"titleSlug\": \"top-k-frequent-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"First Unique Character in a String\", \"titleSlug\": \"first-unique-character-in-a-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sort Array by Increasing Frequency\", \"titleSlug\": \"sort-array-by-increasing-frequency\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Heap", "slug": "heap"}]}}, {"id": "450", "name": "delete-node-in-a-bst", "content": {"questionId": "450", "questionFrontendId": "450", "questionTitle": "Delete Node in a BST", "questionTitleSlug": "delete-node-in-a-bst", "content": "<p>Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.</p>\n\n<p>Basically, the deletion can be divided into two stages:</p>\n\n<ol>\n\t<li>Search for a node to remove.</li>\n\t<li>If the node is found, delete the node.</li>\n</ol>\n\n<p><b>Follow up:</b>&nbsp;Can you solve it with time complexity <code>O(height of tree)</code>?</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/04/del_node_1.jpg\" style=\"width: 800px; height: 214px;\" />\n<pre>\n<strong>Input:</strong> root = [5,3,6,2,4,null,7], key = 3\n<strong>Output:</strong> [5,4,6,2,null,null,7]\n<strong>Explanation:</strong> Given key to delete is 3. So we find the node with value 3 and delete it.\nOne valid answer is [5,4,6,2,null,null,7], shown in the above BST.\nPlease notice that another valid answer is [5,2,6,null,4,null,7] and it&#39;s also accepted.\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/04/del_node_supp.jpg\" style=\"width: 350px; height: 255px;\" />\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [5,3,6,2,4,null,7], key = 0\n<strong>Output:</strong> [5,3,6,2,4,null,7]\n<strong>Explanation:</strong> The tree does not contain a node with value = 0.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [], key = 0\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n\t<li>Each node has a <strong>unique</strong> value.</li>\n\t<li><code>root</code> is a valid binary search tree.</li>\n\t<li><code>-10<sup>5</sup> &lt;= key &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"150K\", \"totalSubmission\": \"333.2K\", \"totalAcceptedRaw\": 149978, \"totalSubmissionRaw\": 333231, \"acRate\": \"45.0%\"}", "similarQuestions": "[{\"title\": \"Split BST\", \"titleSlug\": \"split-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "449", "name": "serialize-and-deserialize-bst", "content": {"questionId": "449", "questionFrontendId": "449", "questionTitle": "Serialize and Deserialize BST", "questionTitleSlug": "serialize-and-deserialize-bst", "content": "<p>Serialization is converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment.</p>\n\n<p>Design an algorithm to serialize and deserialize a <b>binary search tree</b>. There is no restriction on how your serialization/deserialization algorithm should work. You need to ensure that a binary search tree can be serialized to a string, and this string can be deserialized to the original tree structure.</p>\n\n<p><b>The encoded string should be as compact as possible.</b></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> root = [2,1,3]\n<strong>Output:</strong> [2,1,3]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li>The input tree is <strong>guaranteed</strong> to be a binary search tree.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"138.4K\", \"totalSubmission\": \"257.9K\", \"totalAcceptedRaw\": 138408, \"totalSubmissionRaw\": 257924, \"acRate\": \"53.7%\"}", "similarQuestions": "[{\"title\": \"Serialize and Deserialize Binary Tree\", \"titleSlug\": \"serialize-and-deserialize-binary-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find Duplicate Subtrees\", \"titleSlug\": \"find-duplicate-subtrees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Serialize and Deserialize N-ary Tree\", \"titleSlug\": \"serialize-and-deserialize-n-ary-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "447", "name": "number-of-boomerangs", "content": {"questionId": "447", "questionFrontendId": "447", "questionTitle": "Number of Boomerangs", "questionTitleSlug": "number-of-boomerangs", "content": "<p>You are given&nbsp;<code>n</code> <code>points</code> in the plane that are all <strong>distinct</strong>, where <code>points[i] = [x<sub>i</sub>, y<sub>i</sub>]</code>. A <strong>boomerang</strong>&nbsp;is a tuple of points <code>(i, j, k)</code> such that the distance between <code>i</code> and <code>j</code> equals the distance between <code>i</code> and <code>k</code> <strong>(the order of the tuple matters)</strong>.</p>\n\n<p>Return&nbsp;<em>the number of boomerangs</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[0,0],[1,0],[2,0]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The two boomerangs are [[1,0],[0,0],[2,0]] and [[1,0],[2,0],[0,0]].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[1,1],[2,2],[3,3]]\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[1,1]]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n ==&nbsp;points.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 500</code></li>\n\t<li><code>points[i].length == 2</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= x<sub>i</sub>, y<sub>i</sub> &lt;= 10<sup>4</sup></code></li>\n\t<li>All the points are <strong>unique</strong>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"71.5K\", \"totalSubmission\": \"136.8K\", \"totalAcceptedRaw\": 71502, \"totalSubmissionRaw\": 136802, \"acRate\": \"52.3%\"}", "similarQuestions": "[{\"title\": \"Line Reflection\", \"titleSlug\": \"line-reflection\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Math", "slug": "math"}]}}, {"id": "445", "name": "add-two-numbers-ii", "content": {"questionId": "445", "questionFrontendId": "445", "questionTitle": "Add Two Numbers II", "questionTitleSlug": "add-two-numbers-ii", "content": "<p>You are given two <b>non-empty</b> linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.</p>\r\n\r\n<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>\r\n\r\n<p><b>Follow up:</b><br />\r\nWhat if you cannot modify the input lists? In other words, reversing the lists is not allowed.\r\n</p>\r\n\r\n<p>\r\n<b>Example:</b>\r\n<pre>\r\n<b>Input:</b> (7 -> 2 -> 4 -> 3) + (5 -> 6 -> 4)\r\n<b>Output:</b> 7 -> 8 -> 0 -> 7\r\n</pre>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"209.6K\", \"totalSubmission\": \"375.1K\", \"totalAcceptedRaw\": 209610, \"totalSubmissionRaw\": 375051, \"acRate\": \"55.9%\"}", "similarQuestions": "[{\"title\": \"Add Two Numbers\", \"titleSlug\": \"add-two-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Add Two Polynomials Represented as Linked Lists\", \"titleSlug\": \"add-two-polynomials-represented-as-linked-lists\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}]}}, {"id": "444", "name": "sequence-reconstruction", "content": {"questionId": "444", "questionFrontendId": "444", "questionTitle": "Sequence Reconstruction", "questionTitleSlug": "sequence-reconstruction", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"33.9K\", \"totalSubmission\": \"145.3K\", \"totalAcceptedRaw\": 33924, \"totalSubmissionRaw\": 145316, \"acRate\": \"23.3%\"}", "similarQuestions": "[{\"title\": \"Course Schedule II\", \"titleSlug\": \"course-schedule-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Graph", "slug": "graph"}, {"name": "Topological Sort", "slug": "topological-sort"}]}}, {"id": "443", "name": "string-compression", "content": {"questionId": "443", "questionFrontendId": "443", "questionTitle": "String Compression", "questionTitleSlug": "string-compression", "content": "<p>Given an array of characters <code>chars</code>, compress it using the following algorithm:</p>\n\n<p>Begin with an empty string <code>s</code>. For each group of <strong>consecutive repeating characters</strong> in <code>chars</code>:</p>\n\n<ul>\n\t<li>If the group&#39;s length is 1, append the character to&nbsp;<code>s</code>.</li>\n\t<li>Otherwise, append the character followed by the group&#39;s length.</li>\n</ul>\n\n<p>The compressed string&nbsp;<code>s</code> <strong>should not be returned separately</strong>, but instead be stored&nbsp;<strong>in the input character array&nbsp;<code>chars</code></strong>. Note that group lengths that are 10 or longer will be split into multiple characters in&nbsp;<code>chars</code>.</p>\n\n<p>After you are done <b>modifying the input array</b>, return <em>the new length of the array</em>.</p>\n&nbsp;\n\n<p><b>Follow up:</b><br />\nCould you solve it using only <code>O(1)</code> extra space?</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> chars = [&quot;a&quot;,&quot;a&quot;,&quot;b&quot;,&quot;b&quot;,&quot;c&quot;,&quot;c&quot;,&quot;c&quot;]\n<strong>Output:</strong> Return 6, and the first 6 characters of the input array should be: [&quot;a&quot;,&quot;2&quot;,&quot;b&quot;,&quot;2&quot;,&quot;c&quot;,&quot;3&quot;]\n<strong>Explanation:</strong>&nbsp;The groups are &quot;aa&quot;, &quot;bb&quot;, and &quot;ccc&quot;. This compresses to &quot;a2b2c3&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> chars = [&quot;a&quot;]\n<strong>Output:</strong> Return 1, and the first character of the input array should be: [&quot;a&quot;]\n<strong>Explanation:</strong>&nbsp;The only group is &quot;a&quot;, which remains uncompressed since it&#39;s a single character.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> chars = [&quot;a&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;]\n<strong>Output:</strong> Return 4, and the first 4 characters of the input array should be: [&quot;a&quot;,&quot;b&quot;,&quot;1&quot;,&quot;2&quot;].\n<strong>Explanation:</strong>&nbsp;The groups are &quot;a&quot; and &quot;bbbbbbbbbbbb&quot;. This compresses to &quot;ab12&quot;.</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> chars = [&quot;a&quot;,&quot;a&quot;,&quot;a&quot;,&quot;b&quot;,&quot;b&quot;,&quot;a&quot;,&quot;a&quot;]\n<strong>Output:</strong> Return 6, and the first 6 characters of the input array should be: [&quot;a&quot;,&quot;3&quot;,&quot;b&quot;,&quot;2&quot;,&quot;a&quot;,&quot;2&quot;].\n<strong>Explanation:</strong>&nbsp;The groups are &quot;aaa&quot;, &quot;bb&quot;, and &quot;aa&quot;. This compresses to &quot;a3b2a2&quot;. Note that each group is independent even if two groups have the same character.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= chars.length &lt;= 2000</code></li>\n\t<li><code>chars[i]</code> is a lower-case English letter, upper-case English letter, digit, or symbol.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"140.9K\", \"totalSubmission\": \"329.4K\", \"totalAcceptedRaw\": 140883, \"totalSubmissionRaw\": 329427, \"acRate\": \"42.8%\"}", "similarQuestions": "[{\"title\": \"Count and Say\", \"titleSlug\": \"count-and-say\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Encode and Decode Strings\", \"titleSlug\": \"encode-and-decode-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Design Compressed String Iterator\", \"titleSlug\": \"design-compressed-string-iterator\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Decompress Run-Length Encoded List\", \"titleSlug\": \"decompress-run-length-encoded-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "442", "name": "find-all-duplicates-in-an-array", "content": {"questionId": "442", "questionFrontendId": "442", "questionTitle": "Find All Duplicates in an Array", "questionTitleSlug": "find-all-duplicates-in-an-array", "content": "<p>Given an array of integers, 1 &le; a[i] &le; <i>n</i> (<i>n</i> = size of array), some elements appear <b>twice</b> and others appear <b>once</b>.</p>\r\n\r\n<p>Find all the elements that appear <b>twice</b> in this array.</p>\r\n\r\n<p>Could you do it without extra space and in O(<i>n</i>) runtime?</p>\r\n</p>\r\n<p><b>Example:</b><br/>\r\n<pre>\r\n<b>Input:</b>\r\n[4,3,2,7,8,2,3,1]\r\n\r\n<b>Output:</b>\r\n[2,3]\r\n</pre>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"244.9K\", \"totalSubmission\": \"356.7K\", \"totalAcceptedRaw\": 244866, \"totalSubmissionRaw\": 356726, \"acRate\": \"68.6%\"}", "similarQuestions": "[{\"title\": \"Find All Numbers Disappeared in an Array\", \"titleSlug\": \"find-all-numbers-disappeared-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "439", "name": "ternary-expression-parser", "content": {"questionId": "439", "questionFrontendId": "439", "questionTitle": "Ternary Expression Parser", "questionTitleSlug": "ternary-expression-parser", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"20.7K\", \"totalSubmission\": \"36.7K\", \"totalAcceptedRaw\": 20743, \"totalSubmissionRaw\": 36719, \"acRate\": \"56.5%\"}", "similarQuestions": "[{\"title\": \"Mini Parser\", \"titleSlug\": \"mini-parser\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Remove Comments\", \"titleSlug\": \"remove-comments\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Parse Lisp Expression\", \"titleSlug\": \"parse-lisp-expression\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "438", "name": "find-all-anagrams-in-a-string", "content": {"questionId": "438", "questionFrontendId": "438", "questionTitle": "Find All Anagrams in a String", "questionTitleSlug": "find-all-anagrams-in-a-string", "content": "<p>Given a string <b>s</b> and a <b>non-empty</b> string <b>p</b>, find all the start indices of <b>p</b>'s anagrams in <b>s</b>.</p>\r\n\r\n<p>Strings consists of lowercase English letters only and the length of both strings <b>s</b> and <b>p</b> will not be larger than 20,100.</p>\r\n\r\n<p>The order of output does not matter.</p>\r\n\r\n<p><b>Example 1:</b>\r\n<pre>\r\n<b>Input:</b>\r\ns: \"cbaebabacd\" p: \"abc\"\r\n\r\n<b>Output:</b>\r\n[0, 6]\r\n\r\n<b>Explanation:</b>\r\nThe substring with start index = 0 is \"cba\", which is an anagram of \"abc\".\r\nThe substring with start index = 6 is \"bac\", which is an anagram of \"abc\".\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b>\r\n<pre>\r\n<b>Input:</b>\r\ns: \"abab\" p: \"ab\"\r\n\r\n<b>Output:</b>\r\n[0, 1, 2]\r\n\r\n<b>Explanation:</b>\r\nThe substring with start index = 0 is \"ab\", which is an anagram of \"ab\".\r\nThe substring with start index = 1 is \"ba\", which is an anagram of \"ab\".\r\nThe substring with start index = 2 is \"ab\", which is an anagram of \"ab\".\r\n</pre>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"322.6K\", \"totalSubmission\": \"725.1K\", \"totalAcceptedRaw\": 322604, \"totalSubmissionRaw\": 725114, \"acRate\": \"44.5%\"}", "similarQuestions": "[{\"title\": \"Valid Anagram\", \"titleSlug\": \"valid-anagram\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Permutation in String\", \"titleSlug\": \"permutation-in-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}]}}, {"id": "437", "name": "path-sum-iii", "content": {"questionId": "437", "questionFrontendId": "437", "questionTitle": "Path Sum III", "questionTitleSlug": "path-sum-iii", "content": "<p>You are given a binary tree in which each node contains an integer value.</p>\r\n\r\n<p>Find the number of paths that sum to a given value.</p>\r\n\r\n<p>The path does not need to start or end at the root or a leaf, but it must go downwards\r\n(traveling only from parent nodes to child nodes).</p>\r\n\r\n<p>The tree has no more than 1,000 nodes and the values are in the range -1,000,000 to 1,000,000.\r\n\r\n<p><b>Example:</b>\r\n<pre>\r\nroot = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\r\n\r\n      10\r\n     /  \\\r\n    <b>5</b>   <b>-3</b>\r\n   <b>/</b> <b>\\</b>    <b>\\</b>\r\n  <b>3</b>   <b>2</b>   <b>11</b>\r\n / \\   <b>\\</b>\r\n3  -2   <b>1</b>\r\n\r\nReturn 3. The paths that sum to 8 are:\r\n\r\n1.  5 -> 3\r\n2.  5 -> 2 -> 1\r\n3. -3 -> 11\r\n</pre>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"244.3K\", \"totalSubmission\": \"510.8K\", \"totalAcceptedRaw\": 244343, \"totalSubmissionRaw\": 510804, \"acRate\": \"47.8%\"}", "similarQuestions": "[{\"title\": \"Path Sum\", \"titleSlug\": \"path-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Path Sum II\", \"titleSlug\": \"path-sum-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Path Sum IV\", \"titleSlug\": \"path-sum-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Univalue Path\", \"titleSlug\": \"longest-univalue-path\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "436", "name": "find-right-interval", "content": {"questionId": "436", "questionFrontendId": "436", "questionTitle": "Find Right Interval", "questionTitleSlug": "find-right-interval", "content": "<p>You are given an array of&nbsp;<code>intervals</code>, where <code>intervals[i] = [start<sub>i</sub>, end<sub>i</sub>]</code>&nbsp;and each <code>start<sub>i</sub></code>&nbsp;is <strong>unique</strong>.</p>\n\n<p>The <strong>r</strong><strong>ight</strong><strong>&nbsp;interval</strong>&nbsp;for an interval <code>i</code> is an interval&nbsp;<code>j</code>&nbsp;such that <code>start<sub>j</sub></code><code>&nbsp;&gt;= end<sub>i</sub></code>&nbsp;and&nbsp;<code>start<sub>j</sub></code>&nbsp;is&nbsp;<strong>minimized</strong>.</p>\n\n<p>Return&nbsp;<em>an array of&nbsp;<strong>right interval</strong>&nbsp;indices for each interval&nbsp;<code>i</code></em>. If no&nbsp;<strong>right interval</strong>&nbsp;exists for interval&nbsp;<code>i</code>, then put&nbsp;<code>-1</code>&nbsp;at index <code>i</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,2]]\n<strong>Output:</strong> [-1]\n<strong>Explanation:</strong> There is only one interval in the collection, so it outputs -1.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[3,4],[2,3],[1,2]]\n<strong>Output:</strong> [-1,0,1]\n<strong>Explanation:</strong> There is no right interval for [3,4].\nThe right interval for [2,3] is [3,4] since start<sub>0</sub>&nbsp;= 3 is the smallest start that is &gt;= end<sub>1</sub>&nbsp;= 3.\nThe right interval for [1,2] is [2,3] since start<sub>1</sub>&nbsp;= 2 is the smallest start that is &gt;= end<sub>2</sub>&nbsp;= 2.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,4],[2,3],[3,4]]\n<strong>Output:</strong> [-1,2,-1]\n<strong>Explanation:</strong> There is no right interval for [1,4] and [3,4].\nThe right interval for [2,3] is [3,4] since start<sub>2</sub> = 3 is the smallest start that is &gt;= end<sub>1</sub>&nbsp;= 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;=&nbsp;intervals.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>intervals[i].length == 2</code></li>\n\t<li><code>-10<sup>6</sup> &lt;= start<sub>i</sub> &lt;= end<sub>i</sub> &lt;= 10<sup>6</sup></code></li>\n\t<li>The start point&nbsp;of each interval is <strong>unique</strong>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"59.8K\", \"totalSubmission\": \"123.7K\", \"totalAcceptedRaw\": 59788, \"totalSubmissionRaw\": 123738, \"acRate\": \"48.3%\"}", "similarQuestions": "[{\"title\": \"Data Stream as Disjoint Intervals\", \"titleSlug\": \"data-stream-as-disjoint-intervals\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "435", "name": "non-overlapping-intervals", "content": {"questionId": "435", "questionFrontendId": "435", "questionTitle": "Non-overlapping Intervals", "questionTitleSlug": "non-overlapping-intervals", "content": "<p>Given a collection of intervals, find the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.</p>\n\n<ol>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> [[1,2],[2,3],[3,4],[1,3]]\n<b>Output:</b> 1\n<b>Explanation:</b> [1,3] can be removed and the rest of intervals are non-overlapping.\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> [[1,2],[1,2],[1,2]]\n<b>Output:</b> 2\n<b>Explanation:</b> You need to remove two [1,2] to make the rest of intervals non-overlapping.\n</pre>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<b>Input:</b> [[1,2],[2,3]]\n<b>Output:</b> 0\n<b>Explanation:</b> You don&#39;t need to remove any of the intervals since they&#39;re already non-overlapping.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>You may assume the interval&#39;s end point is always bigger than its start point.</li>\n\t<li>Intervals like [1,2] and [2,3] have borders &quot;touching&quot; but they don&#39;t overlap each other.</li>\n</ol>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"120.5K\", \"totalSubmission\": \"275.6K\", \"totalAcceptedRaw\": 120484, \"totalSubmissionRaw\": 275631, \"acRate\": \"43.7%\"}", "similarQuestions": "[{\"title\": \"Minimum Number of Arrows to Burst Balloons\", \"titleSlug\": \"minimum-number-of-arrows-to-burst-balloons\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "433", "name": "minimum-genetic-mutation", "content": {"questionId": "433", "questionFrontendId": "433", "questionTitle": "Minimum Genetic Mutation", "questionTitleSlug": "minimum-genetic-mutation", "content": "<p>A gene string can be represented by an 8-character long string, with choices from <code>&quot;A&quot;</code>, <code>&quot;C&quot;</code>, <code>&quot;G&quot;</code>, <code>&quot;T&quot;</code>.</p>\r\n\r\n<p>Suppose we need to investigate about a mutation (mutation from &quot;start&quot; to &quot;end&quot;), where ONE mutation is defined as ONE single character changed in the gene string.</p>\r\n\r\n<p>For example, <code>&quot;AACCGGTT&quot;</code> -&gt; <code>&quot;AACCGGTA&quot;</code> is 1 mutation.</p>\r\n\r\n<p>Also, there is a given gene &quot;bank&quot;, which records all the valid gene mutations. A gene must be in the bank to make it a valid gene string.</p>\r\n\r\n<p>Now, given 3 things - start, end, bank, your task is to determine what is the minimum number of mutations needed to mutate from &quot;start&quot; to &quot;end&quot;. If there is no such a mutation, return -1.</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>Starting point is assumed to be valid, so it might not be included in the bank.</li>\r\n\t<li>If multiple mutations are needed, all mutations during in the sequence must be valid.</li>\r\n\t<li>You may assume start and end string is not the same.</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\nstart: &quot;AACCGGTT&quot;\r\nend:   &quot;AACCGGTA&quot;\r\nbank: [&quot;AACCGGTA&quot;]\r\n\r\nreturn: 1\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\nstart: &quot;AACCGGTT&quot;\r\nend:   &quot;AAACGGTA&quot;\r\nbank: [&quot;AACCGGTA&quot;, &quot;AACCGCTA&quot;, &quot;AAACGGTA&quot;]\r\n\r\nreturn: 2\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 3:</b></p>\r\n\r\n<pre>\r\nstart: &quot;AAAAACCC&quot;\r\nend:   &quot;AACCCCCC&quot;\r\nbank: [&quot;AAAACCCC&quot;, &quot;AAACCCCC&quot;, &quot;AACCCCCC&quot;]\r\n\r\nreturn: 3\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"35.6K\", \"totalSubmission\": \"83.2K\", \"totalAcceptedRaw\": 35623, \"totalSubmissionRaw\": 83199, \"acRate\": \"42.8%\"}", "similarQuestions": "[{\"title\": \"Word Ladder\", \"titleSlug\": \"word-ladder\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "424", "name": "longest-repeating-character-replacement", "content": {"questionId": "424", "questionFrontendId": "424", "questionTitle": "Longest Repeating Character Replacement", "questionTitleSlug": "longest-repeating-character-replacement", "content": "<p>Given a string <code>s</code>&nbsp;that consists of only uppercase English letters, you can perform at most <code>k</code> operations on that string.</p>\r\n\r\n<p>In one operation, you can choose <strong>any</strong> character of the string and change it to any other uppercase English character.</p>\r\n\r\n<p>Find the length of the longest sub-string containing all repeating letters you can get after performing the above operations.</p>\r\n\r\n<p><b>Note:</b><br />\r\nBoth the string&#39;s length and <i>k</i> will not exceed 10<sup>4</sup>.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b>\r\ns = &quot;ABAB&quot;, k = 2\r\n\r\n<b>Output:</b>\r\n4\r\n\r\n<b>Explanation:</b>\r\nReplace the two &#39;A&#39;s with two &#39;B&#39;s or vice versa.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b>\r\ns = &quot;AABABBA&quot;, k = 1\r\n\r\n<b>Output:</b>\r\n4\r\n\r\n<b>Explanation:</b>\r\nReplace the one &#39;A&#39; in the middle with &#39;B&#39; and form &quot;AABBBBA&quot;.\r\nThe substring &quot;BBBB&quot; has the longest repeating letters, which is 4.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"91.7K\", \"totalSubmission\": \"191.4K\", \"totalAcceptedRaw\": 91742, \"totalSubmissionRaw\": 191444, \"acRate\": \"47.9%\"}", "similarQuestions": "[{\"title\": \"Longest Substring with At Most K Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-k-distinct-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Max Consecutive Ones III\", \"titleSlug\": \"max-consecutive-ones-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "423", "name": "reconstruct-original-digits-from-english", "content": {"questionId": "423", "questionFrontendId": "423", "questionTitle": "Reconstruct Original Digits from English", "questionTitleSlug": "reconstruct-original-digits-from-english", "content": "<p>Given a <b>non-empty</b> string containing an out-of-order English representation of digits <code>0-9</code>, output the digits in ascending order.</p>\r\n\r\n<p><b>Note:</b><br />\r\n<ol>\r\n<li>Input contains only lowercase English letters.</li>\r\n<li>Input is guaranteed to be valid and can be transformed to its original digits. That means invalid inputs such as \"abc\" or \"zerone\" are not permitted.</li>\r\n<li>Input length is less than 50,000.</li>\r\n</ol>\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\nInput: \"owoztneoer\"\r\n\r\nOutput: \"012\"\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\nInput: \"fviefuro\"\r\n\r\nOutput: \"45\"\r\n</pre>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"25.8K\", \"totalSubmission\": \"54.6K\", \"totalAcceptedRaw\": 25832, \"totalSubmissionRaw\": 54603, \"acRate\": \"47.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "421", "name": "maximum-xor-of-two-numbers-in-an-array", "content": {"questionId": "421", "questionFrontendId": "421", "questionTitle": "Maximum XOR of Two Numbers in an Array", "questionTitleSlug": "maximum-xor-of-two-numbers-in-an-array", "content": "<p>Given an integer array <code>nums</code>, return <em>the maximum result of <code>nums[i] XOR nums[j]</code></em>, where <code>0 &le; i &le; j &lt; n</code>.</p>\n\n<p><strong>Follow up:</strong> Could you do this in <code>O(n)</code> runtime?</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,10,5,25,2,8]\n<strong>Output:</strong> 28\n<strong>Explanation:</strong> The maximum result is 5 XOR 25 = 28.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0]\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,4]\n<strong>Output:</strong> 6\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [8,10,2]\n<strong>Output:</strong> 10\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [14,70,53,83,49,91,36,80,92,51,66,70]\n<strong>Output:</strong> 127\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"75.4K\", \"totalSubmission\": \"140.6K\", \"totalAcceptedRaw\": 75449, \"totalSubmissionRaw\": 140568, \"acRate\": \"53.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Bit Manipulation", "slug": "bit-manipulation"}, {"name": "Trie", "slug": "trie"}]}}, {"id": "419", "name": "battleships-in-a-board", "content": {"questionId": "419", "questionFrontendId": "419", "questionTitle": "Battleships in a Board", "questionTitleSlug": "battleships-in-a-board", "content": "Given an 2D board, count how many battleships are in it. The battleships are represented with <code>'X'</code>s, empty slots are represented with <code>'.'</code>s. You may assume the following rules:\r\n\r\n<ul>\r\n<li>You receive a valid board, made of only battleships or empty slots.</li>\r\n<li>Battleships can only be placed horizontally or vertically. In other words, they can only be made of the shape <code>1xN</code> (1 row, N columns) or <code>Nx1</code> (N rows, 1 column), where N can be of any size.</li>\r\n<li>At least one horizontal or vertical cell separates between two battleships - there are no adjacent battleships.</li>\r\n</ul>\r\n\r\n<p><b>Example:</b><br />\r\n<pre>X..X\r\n...X\r\n...X\r\n</pre>\r\nIn the above board there are 2 battleships.\r\n\r\n<p><b>Invalid Example:</b><br />\r\n<pre>...X\r\nXXXX\r\n...X\r\n</pre>\r\nThis is an invalid board that you will not receive - as battleships will always have a cell separating between them.\r\n<p></p>\r\n<p><b>Follow up:</b><br>Could you do it in <b>one-pass</b>, using only <b>O(1) extra memory</b> and <b>without modifying</b> the value of the board?</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"105.7K\", \"totalSubmission\": \"149.3K\", \"totalAcceptedRaw\": 105702, \"totalSubmissionRaw\": 149337, \"acRate\": \"70.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "418", "name": "sentence-screen-fitting", "content": {"questionId": "418", "questionFrontendId": "418", "questionTitle": "Sentence Screen Fitting", "questionTitleSlug": "sentence-screen-fitting", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"47.6K\", \"totalSubmission\": \"144.6K\", \"totalAcceptedRaw\": 47606, \"totalSubmissionRaw\": 144626, \"acRate\": \"32.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "417", "name": "pacific-atlantic-water-flow", "content": {"questionId": "417", "questionFrontendId": "417", "questionTitle": "Pacific Atlantic Water Flow", "questionTitleSlug": "pacific-atlantic-water-flow", "content": "<p>Given an <code>m x n</code> matrix of non-negative integers representing the height of each unit cell in a continent, the &quot;Pacific ocean&quot; touches the left and top edges of the matrix and the &quot;Atlantic ocean&quot; touches the right and bottom edges.</p>\r\n\r\n<p>Water can only flow in four directions (up, down, left, or right) from a cell to another one with height equal or lower.</p>\r\n\r\n<p>Find the list of grid coordinates where water can flow to both the Pacific and Atlantic ocean.</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>The order of returned grid coordinates does not matter.</li>\r\n\t<li>Both <i>m</i> and <i>n</i> are less than 150.</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\nGiven the following 5x5 matrix:\r\n\r\n  Pacific ~   ~   ~   ~   ~ \r\n       ~  1   2   2   3  (5) *\r\n       ~  3   2   3  (4) (4) *\r\n       ~  2   4  (5)  3   1  *\r\n       ~ (6) (7)  1   4   5  *\r\n       ~ (5)  1   1   2   4  *\r\n          *   *   *   *   * Atlantic\r\n\r\nReturn:\r\n\r\n[[0, 4], [1, 3], [1, 4], [2, 2], [3, 0], [3, 1], [4, 0]] (positions with parentheses in above matrix).\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"92K\", \"totalSubmission\": \"218.5K\", \"totalAcceptedRaw\": 92013, \"totalSubmissionRaw\": 218456, \"acRate\": \"42.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "416", "name": "partition-equal-subset-sum", "content": {"questionId": "416", "questionFrontendId": "416", "questionTitle": "Partition Equal Subset Sum", "questionTitleSlug": "partition-equal-subset-sum", "content": "<p>Given a <b>non-empty</b> array <code>nums</code> containing <b>only positive integers</b>, find if the array can be partitioned into two subsets such that the sum of elements in both subsets is equal.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,5,11,5]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The array can be partitioned as [1, 5, 5] and [11].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,5]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The array cannot be partitioned into equal sum subsets.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 200</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"243.8K\", \"totalSubmission\": \"546.4K\", \"totalAcceptedRaw\": 243796, \"totalSubmissionRaw\": 546351, \"acRate\": \"44.6%\"}", "similarQuestions": "[{\"title\": \"Partition to K Equal Sum Subsets\", \"titleSlug\": \"partition-to-k-equal-sum-subsets\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "413", "name": "arithmetic-slices", "content": {"questionId": "413", "questionFrontendId": "413", "questionTitle": "Arithmetic Slices", "questionTitleSlug": "arithmetic-slices", "content": "<p>A sequence of numbers is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.</p>\n\n<p>For example, these are arithmetic sequences:</p>\n\n<pre>\n1, 3, 5, 7, 9\n7, 7, 7, 7\n3, -1, -5, -9</pre>\n\n<p>The following sequence is not arithmetic.</p>\n\n<pre>\n1, 1, 2, 5, 7</pre>\n&nbsp;\n\n<p>A zero-indexed array A consisting of N numbers is given. A slice of that array is any pair of integers (P, Q) such that 0 &lt;= P &lt; Q &lt; N.</p>\n\n<p>A slice (P, Q) of the array A is called arithmetic if the sequence:<br />\nA[P], A[P&nbsp;+ 1], ..., A[Q - 1], A[Q] is arithmetic. In particular, this means that P + 1 &lt; Q.</p>\n\n<p>The function should return the number of arithmetic slices in the array A.</p>\n&nbsp;\n\n<p><b>Example:</b></p>\n\n<pre>\nA = [1, 2, 3, 4]\n\nreturn: 3, for 3 arithmetic slices in A: [1, 2, 3], [2, 3, 4] and [1, 2, 3, 4] itself.\n</pre>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"101.3K\", \"totalSubmission\": \"173.6K\", \"totalAcceptedRaw\": 101348, \"totalSubmissionRaw\": 173628, \"acRate\": \"58.4%\"}", "similarQuestions": "[{\"title\": \"Arithmetic Slices II - Subsequence\", \"titleSlug\": \"arithmetic-slices-ii-subsequence\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "406", "name": "queue-reconstruction-by-height", "content": {"questionId": "406", "questionFrontendId": "406", "questionTitle": "Queue Reconstruction by Height", "questionTitleSlug": "queue-reconstruction-by-height", "content": "<p>You are given an array of people, <code>people</code>, which are the attributes of some people in a queue (not necessarily in order). Each <code>people[i] = [h<sub>i</sub>, k<sub>i</sub>]</code> represents the <code>i<sup>th</sup></code> person of height <code>h<sub>i</sub></code> with <strong>exactly</strong> <code>k<sub>i</sub></code> other people in front who have a height greater than or equal to <code>h<sub>i</sub></code>.</p>\n\n<p>Reconstruct and return <em>the queue that is represented by the input array </em><code>people</code>. The returned queue should be formatted as an array <code>queue</code>, where <code>queue[j] = [h<sub>j</sub>, k<sub>j</sub>]</code> is the attributes of the <code>j<sup>th</sup></code> person in the queue (<code>queue[0]</code> is the person at the front of the queue).</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> people = [[7,0],[4,4],[7,1],[5,0],[6,1],[5,2]]\n<strong>Output:</strong> [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]]\n<strong>Explanation:</strong>\nPerson 0 has height 5 with no other people taller or the same height in front.\nPerson 1 has height 7 with no other people taller or the same height in front.\nPerson 2 has height 5 with two persons taller or the same height in front, which is person 0 and 1.\nPerson 3 has height 6 with one person taller or the same height in front, which is person 1.\nPerson 4 has height 4 with four people taller or the same height in front, which are people 0, 1, 2, and 3.\nPerson 5 has height 7 with one person taller or the same height in front, which is person 1.\nHence [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]] is the reconstructed queue.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> people = [[6,0],[5,0],[4,0],[3,2],[2,2],[1,4]]\n<strong>Output:</strong> [[4,0],[5,0],[2,2],[3,2],[1,4],[6,0]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= people.length &lt;= 2000</code></li>\n\t<li><code>0 &lt;= h<sub>i</sub> &lt;= 10<sup>6</sup></code></li>\n\t<li><code>0 &lt;= k<sub>i</sub> &lt; people.length</code></li>\n\t<li>It is guaranteed that the queue can be reconstructed.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"181.2K\", \"totalSubmission\": \"266.8K\", \"totalAcceptedRaw\": 181215, \"totalSubmissionRaw\": 266843, \"acRate\": \"67.9%\"}", "similarQuestions": "[{\"title\": \"Count of Smaller Numbers After Self\", \"titleSlug\": \"count-of-smaller-numbers-after-self\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "402", "name": "remove-k-digits", "content": {"questionId": "402", "questionFrontendId": "402", "questionTitle": "Remove K Digits", "questionTitleSlug": "remove-k-digits", "content": "<p>Given a non-negative integer <i>num</i> represented as a string, remove <i>k</i> digits from the number so that the new number is the smallest possible.\r\n</p>\r\n\r\n<p><b>Note:</b><br />\r\n<ul>\r\n<li>The length of <i>num</i> is less than 10002 and will be &ge; <i>k</i>.</li>\r\n<li>The given <i>num</i> does not contain any leading zero.</li>\r\n</ul>\r\n</b>\r\n</p>\r\n\r\n<p><b>Example 1:</b>\r\n<pre>\r\nInput: num = \"1432219\", k = 3\r\nOutput: \"1219\"\r\nExplanation: Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b>\r\n<pre>\r\nInput: num = \"10200\", k = 1\r\nOutput: \"200\"\r\nExplanation: Remove the leading 1 and the number is 200. Note that the output must not contain leading zeroes.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 3:</b>\r\n<pre>\r\nInput: num = \"10\", k = 2\r\nOutput: \"0\"\r\nExplanation: Remove all the digits from the number and it is left with nothing which is 0.\r\n</pre>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"165.1K\", \"totalSubmission\": \"578.1K\", \"totalAcceptedRaw\": 165085, \"totalSubmissionRaw\": 578084, \"acRate\": \"28.6%\"}", "similarQuestions": "[{\"title\": \"Create Maximum Number\", \"titleSlug\": \"create-maximum-number\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Monotone Increasing Digits\", \"titleSlug\": \"monotone-increasing-digits\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Most Competitive Subsequence\", \"titleSlug\": \"find-the-most-competitive-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "400", "name": "nth-digit", "content": {"questionId": "400", "questionFrontendId": "400", "questionTitle": "Nth Digit", "questionTitleSlug": "nth-digit", "content": "<p>Find the <i>n</i><sup>th</sup> digit of the infinite integer sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... </p>\r\n\r\n<p><b>Note:</b><br />\r\n<i>n</i> is positive and will fit within the range of a 32-bit signed integer (<i>n</i> < 2<sup>31</sup>).\r\n</p>\r\n\r\n<p><b>Example 1:</b>\r\n<pre>\r\n<b>Input:</b>\r\n3\r\n\r\n<b>Output:</b>\r\n3\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b>\r\n<pre>\r\n<b>Input:</b>\r\n11\r\n\r\n<b>Output:</b>\r\n0\r\n\r\n<b>Explanation:</b>\r\nThe 11th digit of the sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... is a 0, which is part of the number 10.\r\n</pre>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"63.6K\", \"totalSubmission\": \"196.9K\", \"totalAcceptedRaw\": 63562, \"totalSubmissionRaw\": 196930, \"acRate\": \"32.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "399", "name": "evaluate-division", "content": {"questionId": "399", "questionFrontendId": "399", "questionTitle": "Evaluate Division", "questionTitleSlug": "evaluate-division", "content": "<p>You are given an array of variable pairs <code>equations</code> and an array of real numbers <code>values</code>, where <code>equations[i] = [A<sub>i</sub>, B<sub>i</sub>]</code> and <code>values[i]</code> represent the equation <code>A<sub>i</sub> / B<sub>i</sub> = values[i]</code>. Each <code>A<sub>i</sub></code> or <code>B<sub>i</sub></code> is a string that represents a single variable.</p>\n\n<p>You are also given some <code>queries</code>, where <code>queries[j] = [C<sub>j</sub>, D<sub>j</sub>]</code> represents the <code>j<sup>th</sup></code> query where you must find the answer for <code>C<sub>j</sub> / D<sub>j</sub> = ?</code>.</p>\n\n<p>Return <em>the answers to all queries</em>. If a single answer cannot be determined, return <code>-1.0</code>.</p>\n\n<p><strong>Note:</strong> The input is always valid. You may assume that evaluating the queries will not result in division by zero and that there is no contradiction.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> equations = [[&quot;a&quot;,&quot;b&quot;],[&quot;b&quot;,&quot;c&quot;]], values = [2.0,3.0], queries = [[&quot;a&quot;,&quot;c&quot;],[&quot;b&quot;,&quot;a&quot;],[&quot;a&quot;,&quot;e&quot;],[&quot;a&quot;,&quot;a&quot;],[&quot;x&quot;,&quot;x&quot;]]\n<strong>Output:</strong> [6.00000,0.50000,-1.00000,1.00000,-1.00000]\n<strong>Explanation:</strong> \nGiven: <em>a / b = 2.0</em>, <em>b / c = 3.0</em>\nqueries are: <em>a / c = ?</em>, <em>b / a = ?</em>, <em>a / e = ?</em>, <em>a / a = ?</em>, <em>x / x = ?</em>\nreturn: [6.0, 0.5, -1.0, 1.0, -1.0 ]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> equations = [[&quot;a&quot;,&quot;b&quot;],[&quot;b&quot;,&quot;c&quot;],[&quot;bc&quot;,&quot;cd&quot;]], values = [1.5,2.5,5.0], queries = [[&quot;a&quot;,&quot;c&quot;],[&quot;c&quot;,&quot;b&quot;],[&quot;bc&quot;,&quot;cd&quot;],[&quot;cd&quot;,&quot;bc&quot;]]\n<strong>Output:</strong> [3.75000,0.40000,5.00000,0.20000]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> equations = [[&quot;a&quot;,&quot;b&quot;]], values = [0.5], queries = [[&quot;a&quot;,&quot;b&quot;],[&quot;b&quot;,&quot;a&quot;],[&quot;a&quot;,&quot;c&quot;],[&quot;x&quot;,&quot;y&quot;]]\n<strong>Output:</strong> [0.50000,2.00000,-1.00000,-1.00000]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= equations.length &lt;= 20</code></li>\n\t<li><code>equations[i].length == 2</code></li>\n\t<li><code>1 &lt;= A<sub>i</sub>.length, B<sub>i</sub>.length &lt;= 5</code></li>\n\t<li><code>values.length == equations.length</code></li>\n\t<li><code>0.0 &lt; values[i] &lt;= 20.0</code></li>\n\t<li><code>1 &lt;= queries.length &lt;= 20</code></li>\n\t<li><code>queries[i].length == 2</code></li>\n\t<li><code>1 &lt;= C<sub>j</sub>.length, D<sub>j</sub>.length &lt;= 5</code></li>\n\t<li><code>A<sub>i</sub>, B<sub>i</sub>, C<sub>j</sub>, D<sub>j</sub></code> consist of lower case English letters and digits.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"164.7K\", \"totalSubmission\": \"306.2K\", \"totalAcceptedRaw\": 164681, \"totalSubmissionRaw\": 306179, \"acRate\": \"53.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Union Find", "slug": "union-find"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "398", "name": "random-pick-index", "content": {"questionId": "398", "questionFrontendId": "398", "questionTitle": "Random Pick Index", "questionTitleSlug": "random-pick-index", "content": "<p>Given an array of integers with possible duplicates, randomly output the index of a given target number. You can assume that the given target number must exist in the array.</p>\r\n\r\n<p><b>Note:</b><br />\r\nThe array size can be very large. Solution that uses too much extra space will not pass the judge.</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\nint[] nums = new int[] {1,2,3,3,3};\r\nSolution solution = new Solution(nums);\r\n\r\n// pick(3) should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.\r\nsolution.pick(3);\r\n\r\n// pick(1) should return 0. Since in the array only nums[0] is equal to 1.\r\nsolution.pick(1);\r\n</pre>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"107.6K\", \"totalSubmission\": \"187.5K\", \"totalAcceptedRaw\": 107615, \"totalSubmissionRaw\": 187539, \"acRate\": \"57.4%\"}", "similarQuestions": "[{\"title\": \"Linked List Random Node\", \"titleSlug\": \"linked-list-random-node\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Random Pick with Blacklist\", \"titleSlug\": \"random-pick-with-blacklist\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Random Pick with Weight\", \"titleSlug\": \"random-pick-with-weight\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Reservoir Sampling", "slug": "reservoir-sampling"}]}}, {"id": "397", "name": "integer-replacement", "content": {"questionId": "397", "questionFrontendId": "397", "questionTitle": "Integer Replacement", "questionTitleSlug": "integer-replacement", "content": "<p>Given a positive integer <code>n</code>,&nbsp;you can apply one of the following&nbsp;operations:</p>\n\n<ol>\n\t<li>If <code>n</code> is even, replace <code>n</code> with <code>n / 2</code>.</li>\n\t<li>If <code>n</code> is odd, replace <code>n</code> with either <code>n + 1</code> or <code>n - 1</code>.</li>\n</ol>\n\n<p>Return <em>the minimum number of operations needed for <code>n</code> to become <code>1</code></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 8\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> 8 -&gt; 4 -&gt; 2 -&gt; 1\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 7\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>7 -&gt; 8 -&gt; 4 -&gt; 2 -&gt; 1\nor 7 -&gt; 6 -&gt; 3 -&gt; 2 -&gt; 1\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"60.9K\", \"totalSubmission\": \"182.7K\", \"totalAcceptedRaw\": 60873, \"totalSubmissionRaw\": 182682, \"acRate\": \"33.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "396", "name": "rotate-function", "content": {"questionId": "396", "questionFrontendId": "396", "questionTitle": "Rotate Function", "questionTitleSlug": "rotate-function", "content": "<p>\r\nGiven an array of integers <code>A</code> and let <i>n</i> to be its length.\r\n</p>\r\n\r\n<p>\r\nAssume <code>B<sub>k</sub></code> to be an array obtained by rotating the array <code>A</code> <i>k</i> positions clock-wise, we define a \"rotation function\" <code>F</code> on <code>A</code> as follow:\r\n</p>\r\n\r\n<p>\r\n<code>F(k) = 0 * B<sub>k</sub>[0] + 1 * B<sub>k</sub>[1] + ... + (n-1) * B<sub>k</sub>[n-1]</code>.</p>\r\n\r\n<p>Calculate the maximum value of <code>F(0), F(1), ..., F(n-1)</code>. \r\n</p>\r\n\r\n<p><b>Note:</b><br />\r\n<i>n</i> is guaranteed to be less than 10<sup>5</sup>.\r\n</p>\r\n\r\n<p><b>Example:</b>\r\n<pre>\r\nA = [4, 3, 2, 6]\r\n\r\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\r\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\r\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\r\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\r\n\r\nSo the maximum value of F(0), F(1), F(2), F(3) is F(3) = 26.\r\n</pre>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"46.9K\", \"totalSubmission\": \"128.2K\", \"totalAcceptedRaw\": 46877, \"totalSubmissionRaw\": 128178, \"acRate\": \"36.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "395", "name": "longest-substring-with-at-least-k-repeating-characters", "content": {"questionId": "395", "questionFrontendId": "395", "questionTitle": "Longest Substring with At Least K Repeating Characters", "questionTitleSlug": "longest-substring-with-at-least-k-repeating-characters", "content": "<p>Given a string <code>s</code> and an integer <code>k</code>, return <em>the length of the longest substring of</em> <code>s</code> <em>such that the frequency of each character in this substring is greater than or equal to</em> <code>k</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aaabb&quot;, k = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The longest substring is &quot;aaa&quot;, as &#39;a&#39; is repeated 3 times.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ababbc&quot;, k = 2\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The longest substring is &quot;ababb&quot;, as &#39;a&#39; is repeated 2 times and &#39;b&#39; is repeated 3 times.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of only lowercase English letters.</li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"107K\", \"totalSubmission\": \"247.7K\", \"totalAcceptedRaw\": 107050, \"totalSubmissionRaw\": 247672, \"acRate\": \"43.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Divide and Conquer", "slug": "divide-and-conquer"}, {"name": "Recursion", "slug": "recursion"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "394", "name": "decode-string", "content": {"questionId": "394", "questionFrontendId": "394", "questionTitle": "Decode String", "questionTitleSlug": "decode-string", "content": "<p>Given an encoded string, return its decoded string.</p>\n\n<p>The encoding rule is: <code>k[encoded_string]</code>, where the <code>encoded_string</code> inside the square brackets is being repeated exactly <code>k</code> times. Note that <code>k</code> is guaranteed to be a positive integer.</p>\n\n<p>You may assume that the input string is always valid; No extra white spaces, square brackets are well-formed, etc.</p>\n\n<p>Furthermore, you may assume that the original data does not contain any digits and that digits are only for those repeat numbers, <code>k</code>. For example, there won&#39;t be input like <code>3a</code> or <code>2[4]</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"3[a]2[bc]\"\n<strong>Output:</strong> \"aaabcbc\"\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"3[a2[c]]\"\n<strong>Output:</strong> \"accaccacc\"\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"2[abc]3[cd]ef\"\n<strong>Output:</strong> \"abcabccdcdcdef\"\n</pre><p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> s = \"abc3[cd]xyz\"\n<strong>Output:</strong> \"abccdcdcdxyz\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 30</code></li>\n\t<li><code>s</code> consists of lowercase English letters, digits, and square brackets <code>&#39;[]&#39;</code>.</li>\n\t<li><code>s</code> is guaranteed to be <strong>a valid</strong> input.</li>\n\t<li>All the integers in <code>s</code> are in the range <code>[1, 300]</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"282K\", \"totalSubmission\": \"541.3K\", \"totalAcceptedRaw\": 282047, \"totalSubmissionRaw\": 541261, \"acRate\": \"52.1%\"}", "similarQuestions": "[{\"title\": \"Encode String with Shortest Length\", \"titleSlug\": \"encode-string-with-shortest-length\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Atoms\", \"titleSlug\": \"number-of-atoms\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Brace Expansion\", \"titleSlug\": \"brace-expansion\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "393", "name": "utf-8-validation", "content": {"questionId": "393", "questionFrontendId": "393", "questionTitle": "UTF-8 Validation", "questionTitleSlug": "utf-8-validation", "content": "<p>A character in UTF8 can be from <b>1 to 4 bytes</b> long, subjected to the following rules:</p>\r\n<ol>\r\n<li>For 1-byte character, the first bit is a 0, followed by its unicode code.</li>\r\n<li>For n-bytes character, the first n-bits are all one's, the n+1 bit is 0, followed by n-1 bytes with most significant 2 bits being 10.</li>\r\n</ol>\r\n<p>This is how the UTF-8 encoding would work:</p>\r\n\r\n<pre><code>   Char. number range  |        UTF-8 octet sequence\r\n      (hexadecimal)    |              (binary)\r\n   --------------------+---------------------------------------------\r\n   0000 0000-0000 007F | 0xxxxxxx\r\n   0000 0080-0000 07FF | 110xxxxx 10xxxxxx\r\n   0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx\r\n   0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\r\n</code></pre>\r\n<p>\r\nGiven an array of integers representing the data, return whether it is a valid utf-8 encoding.\r\n</p>\r\n<p>\r\n<b>Note:</b><br />\r\nThe input is an array of integers. Only the <b>least significant 8 bits</b> of each integer is used to store the data. This means each integer represents only 1 byte of data.\r\n</p>\r\n\r\n<p>\r\n<b>Example 1:</b>\r\n<pre>\r\ndata = [197, 130, 1], which represents the octet sequence: <b>11000101 10000010 00000001</b>.\r\n\r\nReturn <b>true</b>.\r\nIt is a valid utf-8 encoding for a 2-bytes character followed by a 1-byte character.\r\n</pre>\r\n</p>\r\n\r\n<p>\r\n<b>Example 2:</b>\r\n<pre>\r\ndata = [235, 140, 4], which represented the octet sequence: <b>11101011 10001100 00000100</b>.\r\n\r\nReturn <b>false</b>.\r\nThe first 3 bits are all one's and the 4th bit is 0 means it is a 3-bytes character.\r\nThe next byte is a continuation byte which starts with 10 and that's correct.\r\nBut the second continuation byte does not start with 10, so it is invalid.\r\n</pre>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"53.8K\", \"totalSubmission\": \"142.2K\", \"totalAcceptedRaw\": 53809, \"totalSubmissionRaw\": 142165, \"acRate\": \"37.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "390", "name": "elimination-game", "content": {"questionId": "390", "questionFrontendId": "390", "questionTitle": "Elimination Game", "questionTitleSlug": "elimination-game", "content": "<p>\r\nThere is a list of sorted integers from 1 to <i>n</i>. Starting from left to right, remove the first number and every other number afterward until you reach the end of the list.</p>\r\n\r\n<p>Repeat the previous step again, but this time from right to left, remove the right most number and every other number from the remaining numbers.</p>\r\n\r\n<p>We keep repeating the steps again, alternating left to right and right to left, until a single number remains.</p>\r\n\r\n<p>Find the last number that remains starting with a list of length <i>n</i>.</p>\r\n\r\n<p><b>Example:</b>\r\n<pre>\r\nInput:\r\nn = 9,\r\n<u>1</u> 2 <u>3</u> 4 <u>5</u> 6 <u>7</u> 8 <u>9</u>\r\n2 <u>4</u> 6 <u>8</u>\r\n<u>2</u> 6\r\n6\r\n\r\nOutput:\r\n6\r\n</pre>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"35.3K\", \"totalSubmission\": \"78.8K\", \"totalAcceptedRaw\": 35270, \"totalSubmissionRaw\": 78758, \"acRate\": \"44.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "388", "name": "longest-absolute-file-path", "content": {"questionId": "388", "questionFrontendId": "388", "questionTitle": "Longest Absolute File Path", "questionTitleSlug": "longest-absolute-file-path", "content": "<p>Suppose we have a file system that stores both files and directories. An example of one system is represented in the following picture:</p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/28/mdir.jpg\" style=\"width: 681px; height: 322px;\" /></p>\n\n<p>Here, we have <code>dir</code> as the only directory in the root. <code>dir</code> contains two subdirectories, <code>subdir1</code> and <code>subdir2</code>. <code>subdir1</code> contains a file <code>file1.ext</code> and subdirectory <code>subsubdir1</code>. <code>subdir2</code> contains a subdirectory <code>subsubdir2</code>, which contains a file <code>file2.ext</code>.</p>\n\n<p>In text form, it looks like this (with \u27f6 representing the tab character):</p>\n\n<pre>\ndir\n\u27f6 subdir1\n\u27f6 \u27f6 file1.ext\n\u27f6 \u27f6 subsubdir1\n\u27f6 subdir2\n\u27f6 \u27f6 subsubdir2\n\u27f6 \u27f6 \u27f6 file2.ext\n</pre>\n\n<p>If we were to write this representation in code, it will look like this: <code>&quot;dir\\n\\tsubdir1\\n\\t\\tfile1.ext\\n\\t\\tsubsubdir1\\n\\tsubdir2\\n\\t\\tsubsubdir2\\n\\t\\t\\tfile2.ext&quot;</code>. Note that the <code>&#39;\\n&#39;</code> and <code>&#39;\\t&#39;</code> are the new-line and tab characters.</p>\n\n<p>Every file and directory has a unique <strong>absolute path</strong> in the file system, which is the order of directories that must be opened to reach the file/directory itself, all concatenated by <code>&#39;/&#39;s</code>. Using the above example, the <strong>absolute path</strong> to <code>file2.ext</code> is <code>&quot;dir/subdir2/subsubdir2/file2.ext&quot;</code>. Each directory name consists of letters, digits, and/or spaces. Each file name is of the form <code>name.extension</code>, where <code>name</code> and <code>extension</code> consist of letters, digits, and/or spaces.</p>\n\n<p>Given a string <code>input</code> representing the file system in the explained format, return <em>the length of the <strong>longest absolute path</strong> to a <strong>file</strong> in the abstracted file system</em>. If there is no file in the system, return <code>0</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/28/dir1.jpg\" style=\"width: 401px; height: 202px;\" />\n<pre>\n<strong>Input:</strong> input = &quot;dir\\n\\tsubdir1\\n\\tsubdir2\\n\\t\\tfile.ext&quot;\n<strong>Output:</strong> 20\n<strong>Explanation:</strong> We have only one file, and the absolute path is &quot;dir/subdir2/file.ext&quot; of length 20.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/28/dir2.jpg\" style=\"width: 641px; height: 322px;\" />\n<pre>\n<strong>Input:</strong> input = &quot;dir\\n\\tsubdir1\\n\\t\\tfile1.ext\\n\\t\\tsubsubdir1\\n\\tsubdir2\\n\\t\\tsubsubdir2\\n\\t\\t\\tfile2.ext&quot;\n<strong>Output:</strong> 32\n<strong>Explanation:</strong> We have two files:\n&quot;dir/subdir1/file1.ext&quot; of length 21\n&quot;dir/subdir2/subsubdir2/file2.ext&quot; of length 32.\nWe return 32 since it is the longest absolute path to a file.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> input = &quot;a&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> We do not have any files, just a single directory named &quot;a&quot;.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> input = &quot;file1.txt\\nfile2.txt\\nlongfile.txt&quot;\n<strong>Output:</strong> 12\n<strong>Explanation:</strong> There are 3 files at the root directory.\nSince the absolute path for anything at the root directory is just the name itself, the answer is &quot;longfile.txt&quot; with length 12.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= input.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>input</code> may contain lowercase or uppercase English letters, a new line character <code>&#39;\\n&#39;</code>, a tab character <code>&#39;\\t&#39;</code>, a dot <code>&#39;.&#39;</code>, a space <code>&#39; &#39;</code>, and digits.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"94.5K\", \"totalSubmission\": \"223.3K\", \"totalAcceptedRaw\": 94547, \"totalSubmissionRaw\": 223300, \"acRate\": \"42.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "386", "name": "lexicographical-numbers", "content": {"questionId": "386", "questionFrontendId": "386", "questionTitle": "Lexicographical Numbers", "questionTitleSlug": "lexicographical-numbers", "content": "<p>Given an integer <i>n</i>, return 1 - <i>n</i> in lexicographical order.</p>\r\n\r\n<p>For example, given 13, return: [1,10,11,12,13,2,3,4,5,6,7,8,9].</p>\r\n\r\n<p>Please optimize your algorithm to use less time and space. The input size may be as large as 5,000,000.</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"60.3K\", \"totalSubmission\": \"112.9K\", \"totalAcceptedRaw\": 60278, \"totalSubmissionRaw\": 112929, \"acRate\": \"53.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "385", "name": "mini-parser", "content": {"questionId": "385", "questionFrontendId": "385", "questionTitle": "Mini Parser", "questionTitleSlug": "mini-parser", "content": "<p>Given a nested list of integers represented as a string, implement a parser to deserialize it.</p>\r\n\r\n<p>Each element is either an integer, or a list -- whose elements may also be integers or other lists.</p>\r\n\r\n<p><b>Note:</b> You may assume that the string is well-formed:</p>\r\n\r\n<ul>\r\n\t<li>String is non-empty.</li>\r\n\t<li>String does not contain white spaces.</li>\r\n\t<li>String contains only digits <code>0-9</code>, <code>[</code>, <code>-</code> <code>,</code>, <code>]</code>.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\nGiven s = &quot;324&quot;,\r\n\r\nYou should return a NestedInteger object which contains a single integer 324.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\nGiven s = &quot;[123,[456,[789]]]&quot;,\r\n\r\nReturn a NestedInteger object containing a nested list with 2 elements:\r\n\r\n1. An integer containing value 123.\r\n2. A nested list containing two elements:\r\n    i.  An integer containing value 456.\r\n    ii. A nested list with one element:\r\n         a. An integer containing value 789.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"40.8K\", \"totalSubmission\": \"119.3K\", \"totalAcceptedRaw\": 40844, \"totalSubmissionRaw\": 119262, \"acRate\": \"34.2%\"}", "similarQuestions": "[{\"title\": \"Flatten Nested List Iterator\", \"titleSlug\": \"flatten-nested-list-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Ternary Expression Parser\", \"titleSlug\": \"ternary-expression-parser\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Remove Comments\", \"titleSlug\": \"remove-comments\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Stack", "slug": "stack"}]}}, {"id": "384", "name": "shuffle-an-array", "content": {"questionId": "384", "questionFrontendId": "384", "questionTitle": "Shuffle an Array", "questionTitleSlug": "shuffle-an-array", "content": "<p>Given an integer array <code>nums</code>, design an algorithm to randomly shuffle the array.</p>\n\n<p>Implement the <code>Solution</code> class:</p>\n\n<ul>\n\t<li><code>Solution(int[] nums)</code> Initializes the object with the integer array nums.</li>\n\t<li><code>int[] reset()</code> Resets the array to its original configuration and returns it.</li>\n\t<li><code>int[] shuffle()</code> Returns a random shuffling of the array.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;Solution&quot;, &quot;shuffle&quot;, &quot;reset&quot;, &quot;shuffle&quot;]\n[[[1, 2, 3]], [], [], []]\n<strong>Output</strong>\n[null, [3, 1, 2], [1, 2, 3], [1, 3, 2]]\n\n<strong>Explanation</strong>\nSolution solution = new Solution([1, 2, 3]);\nsolution.shuffle();    // Shuffle the array [1,2,3] and return its result. Any permutation of [1,2,3] must be equally likely to be returned. Example: return [3, 1, 2]\nsolution.reset();      // Resets the array back to its original configuration [1,2,3]. Return [1, 2, 3]\nsolution.shuffle();    // Returns the random shuffling of array [1,2,3]. Example: return [1, 3, 2]\n\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 200</code></li>\n\t<li><code>-10<sup>6</sup> &lt;= nums[i] &lt;= 10<sup>6</sup></code></li>\n\t<li>All the elements of <code>nums</code> are <strong>unique</strong>.</li>\n\t<li>At most <code>5 * 10<sup>4</sup></code> calls will be made to <code>reset</code> and <code>shuffle</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"153.2K\", \"totalSubmission\": \"285.6K\", \"totalAcceptedRaw\": 153186, \"totalSubmissionRaw\": 285637, \"acRate\": \"53.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "382", "name": "linked-list-random-node", "content": {"questionId": "382", "questionFrontendId": "382", "questionTitle": "Linked List Random Node", "questionTitleSlug": "linked-list-random-node", "content": "<p>Given a singly linked list, return a random node&#39;s value from the linked list. Each node must have the <strong>same probability</strong> of being chosen.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;Solution&quot;, &quot;getRandom&quot;, &quot;getRandom&quot;, &quot;getRandom&quot;, &quot;getRandom&quot;, &quot;getRandom&quot;]\n[[[1, 2, 3]], [], [], [], [], []]\n<strong>Output</strong>\n[null, 1, 3, 2, 2, 3]\n\n<strong>Explanation</strong>\nSolution solution = new Solution([1, 2, 3]);\nsolution.getRandom(); // return 1\nsolution.getRandom(); // return 3\nsolution.getRandom(); // return 2\nsolution.getRandom(); // return 2\nsolution.getRandom(); // return 3\n// getRandom() should return either 1, 2, or 3 randomly. Each element should have equal probability of returning.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the linked list will be in the range <code>[1, 10<sup>4</sup>]</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li>At most <code>10<sup>4</sup></code> calls will be made to <code>getRandom</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>What if the linked list is extremely large and its length is unknown to you?</li>\n\t<li>Could you solve this efficiently without using extra space?</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"99.4K\", \"totalSubmission\": \"185K\", \"totalAcceptedRaw\": 99448, \"totalSubmissionRaw\": 184997, \"acRate\": \"53.8%\"}", "similarQuestions": "[{\"title\": \"Random Pick Index\", \"titleSlug\": \"random-pick-index\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Reservoir Sampling", "slug": "reservoir-sampling"}]}}, {"id": "380", "name": "insert-delete-getrandom-o1", "content": {"questionId": "380", "questionFrontendId": "380", "questionTitle": "Insert Delete GetRandom O(1)", "questionTitleSlug": "insert-delete-getrandom-o1", "content": "<p>Implement the&nbsp;<code>RandomizedSet</code> class:</p>\n\n<ul>\n\t<li><code>bool insert(int val)</code> Inserts an item <code>val</code> into the set if not present. Returns <code>true</code> if the item was not present, <code>false</code> otherwise.</li>\n\t<li><code>bool remove(int val)</code> Removes an item <code>val</code> from the set if present. Returns <code>true</code> if the item was present, <code>false</code> otherwise.</li>\n\t<li><code>int getRandom()</code> Returns a random element from the current set of elements (it&#39;s guaranteed that at least one element exists when this method is called). Each element must have the <b>same probability</b> of being returned.</li>\n</ul>\n\n<p><strong>Follow up:</strong> Could you implement the functions of the class with each function works in <strong>average</strong> <code>O(1)</code> time?</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;RandomizedSet&quot;, &quot;insert&quot;, &quot;remove&quot;, &quot;insert&quot;, &quot;getRandom&quot;, &quot;remove&quot;, &quot;insert&quot;, &quot;getRandom&quot;]\n[[], [1], [2], [2], [], [1], [2], []]\n<strong>Output</strong>\n[null, true, false, true, 2, true, false, 2]\n\n<strong>Explanation</strong>\nRandomizedSet randomizedSet = new RandomizedSet();\nrandomizedSet.insert(1); // Inserts 1 to the set. Returns true as 1 was inserted successfully.\nrandomizedSet.remove(2); // Returns false as 2 does not exist in the set.\nrandomizedSet.insert(2); // Inserts 2 to the set, returns true. Set now contains [1,2].\nrandomizedSet.getRandom(); // getRandom() should return either 1 or 2 randomly.\nrandomizedSet.remove(1); // Removes 1 from the set, returns true. Set now contains [2].\nrandomizedSet.insert(2); // 2 was already in the set, so return false.\nrandomizedSet.getRandom(); // Since 2 is the only number in the set, getRandom() will always return 2.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup> &lt;= val &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li>At most <code>10<sup>5</sup></code> calls will be made to <code>insert</code>, <code>remove</code>, and <code>getRandom</code>.</li>\n\t<li>There will be <strong>at least one</strong> element in the data structure when <code>getRandom</code>&nbsp;is called.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"291.3K\", \"totalSubmission\": \"601.2K\", \"totalAcceptedRaw\": 291269, \"totalSubmissionRaw\": 601162, \"acRate\": \"48.5%\"}", "similarQuestions": "[{\"title\": \"Insert Delete GetRandom O(1) - Duplicates allowed\", \"titleSlug\": \"insert-delete-getrandom-o1-duplicates-allowed\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Hash Table", "slug": "hash-table"}, {"name": "Design", "slug": "design"}]}}, {"id": "379", "name": "design-phone-directory", "content": {"questionId": "379", "questionFrontendId": "379", "questionTitle": "Design Phone Directory", "questionTitleSlug": "design-phone-directory", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"40.4K\", \"totalSubmission\": \"85K\", \"totalAcceptedRaw\": 40407, \"totalSubmissionRaw\": 84979, \"acRate\": \"47.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}, {"name": "Design", "slug": "design"}]}}, {"id": "378", "name": "kth-smallest-element-in-a-sorted-matrix", "content": {"questionId": "378", "questionFrontendId": "378", "questionTitle": "Kth Smallest Element in a Sorted Matrix", "questionTitleSlug": "kth-smallest-element-in-a-sorted-matrix", "content": "<p>Given a <i>n</i> x <i>n</i> matrix where each of the rows and columns are sorted in ascending order, find the kth smallest element in the matrix.</p>\r\n\r\n<p>\r\nNote that it is the kth smallest element in the sorted order, not the kth distinct element.\r\n</p>\r\n\r\n<p><b>Example:</b>\r\n<pre>\r\nmatrix = [\r\n   [ 1,  5,  9],\r\n   [10, 11, 13],\r\n   [12, 13, 15]\r\n],\r\nk = 8,\r\n\r\nreturn 13.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note: </b><br>\r\nYou may assume k is always valid, 1 &le; k &le; n<sup>2</sup>.</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"228K\", \"totalSubmission\": \"409.7K\", \"totalAcceptedRaw\": 227987, \"totalSubmissionRaw\": 409682, \"acRate\": \"55.6%\"}", "similarQuestions": "[{\"title\": \"Find K Pairs with Smallest Sums\", \"titleSlug\": \"find-k-pairs-with-smallest-sums\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Smallest Number in Multiplication Table\", \"titleSlug\": \"kth-smallest-number-in-multiplication-table\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find K-th Smallest Pair Distance\", \"titleSlug\": \"find-k-th-smallest-pair-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"K-th Smallest Prime Fraction\", \"titleSlug\": \"k-th-smallest-prime-fraction\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Heap", "slug": "heap"}]}}, {"id": "377", "name": "combination-sum-iv", "content": {"questionId": "377", "questionFrontendId": "377", "questionTitle": "Combination Sum IV", "questionTitleSlug": "combination-sum-iv", "content": "<p>Given an integer array with all positive numbers and no duplicates, find the number of possible combinations that add up to a positive integer target.</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\n<i><b>nums</b></i> = [1, 2, 3]\r\n<i><b>target</b></i> = 4\r\n\r\nThe possible combination ways are:\r\n(1, 1, 1, 1)\r\n(1, 1, 2)\r\n(1, 2, 1)\r\n(1, 3)\r\n(2, 1, 1)\r\n(2, 2)\r\n(3, 1)\r\n\r\nNote that different sequences are counted as different combinations.\r\n\r\nTherefore the output is <i><b>7</b></i>.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Follow up:</b><br />\r\nWhat if negative numbers are allowed in the given array?<br />\r\nHow does it change the problem?<br />\r\nWhat limitation we need to add to the question to allow negative numbers?</p>\r\n\r\n<p><b>Credits:</b><br />\r\nSpecial thanks to <a href=\"https://leetcode.com/pbrother/\">@pbrother</a> for adding this problem and creating all test cases.</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"142.4K\", \"totalSubmission\": \"311.1K\", \"totalAcceptedRaw\": 142406, \"totalSubmissionRaw\": 311111, \"acRate\": \"45.8%\"}", "similarQuestions": "[{\"title\": \"Combination Sum\", \"titleSlug\": \"combination-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "376", "name": "wiggle-subsequence", "content": {"questionId": "376", "questionFrontendId": "376", "questionTitle": "Wiggle Subsequence", "questionTitleSlug": "wiggle-subsequence", "content": "<p>A sequence of numbers is called a <strong>wiggle sequence</strong> if the differences between successive numbers strictly alternate between positive and negative. The first difference (if one exists) may be either positive or negative. A sequence with fewer than two elements is trivially a wiggle sequence.</p>\r\n\r\n<p>For example, <code>[1,7,4,9,2,5]</code> is a wiggle sequence because the differences <code>(6,-3,5,-7,3)</code> are alternately positive and negative. In contrast, <code>[1,4,7,2,5]</code> and <code>[1,7,4,5,5]</code> are not wiggle sequences, the first because its first two differences are positive and the second because its last difference is zero.</p>\r\n\r\n<p>Given a sequence of integers, return the length of the longest subsequence that is a wiggle sequence. A subsequence is obtained by deleting some number of elements (eventually, also zero) from the original sequence, leaving the remaining elements in their original order.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,7,4,9,2,5]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">6\r\n<strong>Explanation:</strong> </span>The entire sequence is a wiggle sequence.</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,17,5,10,13,15,10,5,16,8]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">7\r\n</span><span id=\"example-output-1\"><strong>Explanation: </strong></span>There are several subsequences that achieve this length. One is [1,17,10,13,10,16,8].</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[1,2,3,4,5,6,7,8,9]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">2</span></pre>\r\n\r\n<p><b>Follow up:</b><br />\r\nCan you do it in O(<i>n</i>) time?</p>\r\n</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"77.8K\", \"totalSubmission\": \"194.3K\", \"totalAcceptedRaw\": 77800, \"totalSubmissionRaw\": 194265, \"acRate\": \"40.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "375", "name": "guess-number-higher-or-lower-ii", "content": {"questionId": "375", "questionFrontendId": "375", "questionTitle": "Guess Number Higher or Lower II", "questionTitleSlug": "guess-number-higher-or-lower-ii", "content": "<p>We are playing the Guessing Game. The game will work as follows:</p>\n\n<ol>\n\t<li>I pick a number between&nbsp;<code>1</code>&nbsp;and&nbsp;<code>n</code>.</li>\n\t<li>You guess a number.</li>\n\t<li>If you guess the right number, <strong>you win the game</strong>.</li>\n\t<li>If you guess the wrong number, then I will tell you whether the number I picked is <strong>higher or lower</strong>, and you will continue guessing.</li>\n\t<li>Every time you guess a wrong number&nbsp;<code>x</code>, you will pay&nbsp;<code>x</code>&nbsp;dollars. If you run out of money, <strong>you lose the game</strong>.</li>\n</ol>\n\n<p>Given a particular&nbsp;<code>n</code>, return&nbsp;<em>the minimum amount of money you need to&nbsp;<strong>guarantee a win regardless of what number I pick</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/10/graph.png\" style=\"width: 505px; height: 388px;\" />\n<pre>\n<strong>Input:</strong> n = 10\n<strong>Output:</strong> 16\n<strong>Explanation:</strong> The winning strategy is as follows:\n- The range is [1,10]. Guess 7.\n&nbsp;   - If this is my number, your total is $0. Otherwise, you pay $7.\n&nbsp;   - If my number is higher, the range is [8,10]. Guess 9.\n&nbsp;       - If this is my number, your total is $7. Otherwise, you pay $9.\n&nbsp;       - If my number is higher, it must be 10. Guess 10. Your total is $7 + $9 = $16.\n&nbsp;       - If my number is lower, it must be 8. Guess 8. Your total is $7 + $9 = $16.\n&nbsp;   - If my number is lower, the range is [1,6]. Guess 3.\n&nbsp;       - If this is my number, your total is $7. Otherwise, you pay $3.\n&nbsp;       - If my number is higher, the range is [4,6]. Guess 5.\n&nbsp;           - If this is my number, your total is $7 + $3 = $10. Otherwise, you pay $5.\n&nbsp;           - If my number is higher, it must be 6. Guess 6. Your total is $7 + $3 + $5 = $15.\n&nbsp;           - If my number is lower, it must be 4. Guess 4. Your total is $7 + $3 + $5 = $15.\n&nbsp;       - If my number is lower, the range is [1,2]. Guess 1.\n&nbsp;           - If this is my number, your total is $7 + $3 = $10. Otherwise, you pay $1.\n&nbsp;           - If my number is higher, it must be 2. Guess 2. Your total is $7 + $3 + $1 = $11.\nThe worst case in all these scenarios is that you pay $16. Hence, you only need $16 to guarantee a win.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> 0\n<strong>Explanation:</strong>&nbsp;There is only one possible number, so you can guess 1 and not have to pay anything.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> 1\n<strong>Explanation:</strong>&nbsp;There are two possible numbers, 1 and 2.\n- Guess 1.\n&nbsp;   - If this is my number, your total is $0. Otherwise, you pay $1.\n&nbsp;   - If my number is higher, it must be 2. Guess 2. Your total is $1.\nThe worst case is that you pay $1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 200</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"71.3K\", \"totalSubmission\": \"170.9K\", \"totalAcceptedRaw\": 71256, \"totalSubmissionRaw\": 170892, \"acRate\": \"41.7%\"}", "similarQuestions": "[{\"title\": \"Flip Game II\", \"titleSlug\": \"flip-game-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Guess Number Higher or Lower\", \"titleSlug\": \"guess-number-higher-or-lower\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Can I Win\", \"titleSlug\": \"can-i-win\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find K Closest Elements\", \"titleSlug\": \"find-k-closest-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Minimax", "slug": "minimax"}]}}, {"id": "373", "name": "find-k-pairs-with-smallest-sums", "content": {"questionId": "373", "questionFrontendId": "373", "questionTitle": "Find K Pairs with Smallest Sums", "questionTitleSlug": "find-k-pairs-with-smallest-sums", "content": "<p>You are given two integer arrays <b>nums1</b> and <b>nums2</b> sorted in ascending order and an integer <b>k</b>.</p>\r\n\r\n<p>Define a pair <b>(u,v)</b> which consists of one element from the first array and one element from the second array.</p>\r\n\r\n<p>Find the k pairs <b>(u<sub>1</sub>,v<sub>1</sub>),(u<sub>2</sub>,v<sub>2</sub>) ...(u<sub>k</sub>,v<sub>k</sub>)</b> with the smallest sums.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>nums1 = <span id=\"example-input-1-1\">[1,7,11]</span>, nums2 = <span id=\"example-input-1-2\">[2,4,6]</span>, k = <span id=\"example-input-1-3\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[[1,2],[1,4],[1,6]] \r\n<strong>Explanation: </strong></span>The first 3 pairs are returned from the sequence: \r\n&nbsp;            [1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>nums1 = [1,1,2], nums2 = [1,2,3], k = 2\r\n<strong>Output: </strong>[1,1],[1,1]<span>\r\n<strong>Explanation: </strong></span>The first 2 pairs are returned from the sequence: \r\n&nbsp;            [1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>nums1 = [1,2], nums2 = [3], k = 3\r\n<strong>Output: </strong>[1,3],[2,3]<span>\r\n<strong>Explanation: </strong></span>All possible pairs are returned from the sequence: [1,3],[2,3]\r\n</pre>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"115.9K\", \"totalSubmission\": \"310.4K\", \"totalAcceptedRaw\": 115917, \"totalSubmissionRaw\": 310353, \"acRate\": \"37.4%\"}", "similarQuestions": "[{\"title\": \"Kth Smallest Element in a Sorted Matrix\", \"titleSlug\": \"kth-smallest-element-in-a-sorted-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find K-th Smallest Pair Distance\", \"titleSlug\": \"find-k-th-smallest-pair-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Heap", "slug": "heap"}]}}, {"id": "372", "name": "super-pow", "content": {"questionId": "372", "questionFrontendId": "372", "questionTitle": "Super Pow", "questionTitleSlug": "super-pow", "content": "<p>Your task is to calculate <code>a<sup>b</sup></code> mod <code>1337</code> where <code>a</code> is a positive integer and <code>b</code> is an extremely large positive integer given in the form of an array.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> a = 2, b = [3]\n<strong>Output:</strong> 8\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> a = 2, b = [1,0]\n<strong>Output:</strong> 1024\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> a = 1, b = [4,3,3,8,5,2]\n<strong>Output:</strong> 1\n</pre><p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> a = 2147483647, b = [2,0,0]\n<strong>Output:</strong> 1198\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= a &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>1 &lt;= b.length &lt;= 2000</code></li>\n\t<li><code>0 &lt;= b[i] &lt;= 9</code></li>\n\t<li><code>b</code> doesn&#39;t contain leading zeros.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"38.3K\", \"totalSubmission\": \"104.7K\", \"totalAcceptedRaw\": 38343, \"totalSubmissionRaw\": 104701, \"acRate\": \"36.6%\"}", "similarQuestions": "[{\"title\": \"Pow(x, n)\", \"titleSlug\": \"powx-n\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "371", "name": "sum-of-two-integers", "content": {"questionId": "371", "questionFrontendId": "371", "questionTitle": "Sum of Two Integers", "questionTitleSlug": "sum-of-two-integers", "content": "<p>Calculate the sum of two integers <i>a</i> and <i>b</i>, but you are <b>not allowed</b> to use the operator <code>+</code> and <code>-</code>.</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>a = <span id=\"example-input-1-1\">1</span>, b = <span id=\"example-input-1-2\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>a = -<span id=\"example-input-2-1\">2</span>, b = <span id=\"example-input-2-2\">3</span>\r\n<strong>Output: </strong>1\r\n</pre>\r\n</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"207.2K\", \"totalSubmission\": \"409.4K\", \"totalAcceptedRaw\": 207198, \"totalSubmissionRaw\": 409389, \"acRate\": \"50.6%\"}", "similarQuestions": "[{\"title\": \"Add Two Numbers\", \"titleSlug\": \"add-two-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "370", "name": "range-addition", "content": {"questionId": "370", "questionFrontendId": "370", "questionTitle": "Range Addition", "questionTitleSlug": "range-addition", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"32.4K\", \"totalSubmission\": \"51.1K\", \"totalAcceptedRaw\": 32372, \"totalSubmissionRaw\": 51117, \"acRate\": \"63.3%\"}", "similarQuestions": "[{\"title\": \"Range Addition II\", \"titleSlug\": \"range-addition-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "369", "name": "plus-one-linked-list", "content": {"questionId": "369", "questionFrontendId": "369", "questionTitle": "Plus One Linked List", "questionTitleSlug": "plus-one-linked-list", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"55.9K\", \"totalSubmission\": \"94.3K\", \"totalAcceptedRaw\": 55946, \"totalSubmissionRaw\": 94268, \"acRate\": \"59.3%\"}", "similarQuestions": "[{\"title\": \"Plus One\", \"titleSlug\": \"plus-one\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}, {"name": "Recursion", "slug": "recursion"}]}}, {"id": "368", "name": "largest-divisible-subset", "content": {"questionId": "368", "questionFrontendId": "368", "questionTitle": "Largest Divisible Subset", "questionTitleSlug": "largest-divisible-subset", "content": "<p>Given a set of <b>distinct</b> positive integers, find the largest subset such that every pair (S<sub>i</sub>, S<sub>j</sub>) of elements in this subset satisfies:</p>\r\n\r\n<p>S<sub>i</sub> % S<sub>j</sub> = 0 or S<sub>j</sub> % S<sub>i</sub> = 0.</p>\r\n\r\n<p>If there are multiple solutions, return any subset is fine.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<div>\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,3]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[1,2] </span>(of course, [1,3] will also be ok)\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,2,4,8]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[1,2,4,8]</span>\r\n</pre>\r\n</div>\r\n</div>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"105K\", \"totalSubmission\": \"275.6K\", \"totalAcceptedRaw\": 105014, \"totalSubmissionRaw\": 275553, \"acRate\": \"38.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "366", "name": "find-leaves-of-binary-tree", "content": {"questionId": "366", "questionFrontendId": "366", "questionTitle": "Find Leaves of Binary Tree", "questionTitleSlug": "find-leaves-of-binary-tree", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"80.1K\", \"totalSubmission\": \"112K\", \"totalAcceptedRaw\": 80058, \"totalSubmissionRaw\": 112048, \"acRate\": \"71.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "365", "name": "water-and-jug-problem", "content": {"questionId": "365", "questionFrontendId": "365", "questionTitle": "Water and Jug Problem", "questionTitleSlug": "water-and-jug-problem", "content": "<p>You are given two jugs with capacities <i>x</i> and <i>y</i> litres. There is an infinite amount of water supply available. You need to determine whether it is possible to measure exactly <i>z</i> litres using these two jugs.</p>\r\n\r\n<p>If <i>z</i> liters of water is measurable, you must have <i>z</i> liters of water contained within <b>one or both buckets</b> by the end.</p>\r\n\r\n<p>Operations allowed:</p>\r\n\r\n<ul>\r\n\t<li>Fill any of the jugs completely with water.</li>\r\n\t<li>Empty any of the jugs.</li>\r\n\t<li>Pour water from one jug into another till the other jug is completely full or the first jug itself is empty.</li>\r\n</ul>\r\n\r\n<p><b>Example 1:</b> (From the famous <a href=\"https://www.youtube.com/watch?v=BVtQNK_ZUJg\" target=\"_blank\"><i>&quot;Die Hard&quot;</i> example</a>)</p>\r\n\r\n<pre>\r\nInput: x = 3, y = 5, z = 4\r\nOutput: True\r\n</pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\nInput: x = 2, y = 6, z = 5\r\nOutput: False\r\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= x &lt;= 10^6</code></li>\n\t<li><code>0 &lt;= y&nbsp;&lt;= 10^6</code></li>\n\t<li><code>0 &lt;= z&nbsp;&lt;= 10^6</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"44K\", \"totalSubmission\": \"142.5K\", \"totalAcceptedRaw\": 44047, \"totalSubmissionRaw\": 142493, \"acRate\": \"30.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "364", "name": "nested-list-weight-sum-ii", "content": {"questionId": "364", "questionFrontendId": "364", "questionTitle": "Nested List Weight Sum II", "questionTitleSlug": "nested-list-weight-sum-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"70.8K\", \"totalSubmission\": \"111.8K\", \"totalAcceptedRaw\": 70789, \"totalSubmissionRaw\": 111820, \"acRate\": \"63.3%\"}", "similarQuestions": "[{\"title\": \"Nested List Weight Sum\", \"titleSlug\": \"nested-list-weight-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Array Nesting\", \"titleSlug\": \"array-nesting\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "362", "name": "design-hit-counter", "content": {"questionId": "362", "questionFrontendId": "362", "questionTitle": "Design Hit Counter", "questionTitleSlug": "design-hit-counter", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"104.6K\", \"totalSubmission\": \"161.5K\", \"totalAcceptedRaw\": 104631, \"totalSubmissionRaw\": 161509, \"acRate\": \"64.8%\"}", "similarQuestions": "[{\"title\": \"Logger Rate Limiter\", \"titleSlug\": \"logger-rate-limiter\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}]}}, {"id": "361", "name": "bomb-enemy", "content": {"questionId": "361", "questionFrontendId": "361", "questionTitle": "Bomb Enemy", "questionTitleSlug": "bomb-enemy", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"49K\", \"totalSubmission\": \"105.5K\", \"totalAcceptedRaw\": 49022, \"totalSubmissionRaw\": 105479, \"acRate\": \"46.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "360", "name": "sort-transformed-array", "content": {"questionId": "360", "questionFrontendId": "360", "questionTitle": "Sort Transformed Array", "questionTitleSlug": "sort-transformed-array", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"37.5K\", \"totalSubmission\": \"75.8K\", \"totalAcceptedRaw\": 37462, \"totalSubmissionRaw\": 75778, \"acRate\": \"49.4%\"}", "similarQuestions": "[{\"title\": \"Squares of a Sorted Array\", \"titleSlug\": \"squares-of-a-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Two Pointers", "slug": "two-pointers"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "357", "name": "count-numbers-with-unique-digits", "content": {"questionId": "357", "questionFrontendId": "357", "questionTitle": "Count Numbers with Unique Digits", "questionTitleSlug": "count-numbers-with-unique-digits", "content": "<p>Given a <b>non-negative</b> integer n, count all numbers with unique digits, x, where 0 &le; x &lt; 10<sup>n</sup>.</p>\r\n\r\n<div>\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">91 \r\n<strong>Explanation: </strong></span>The answer should be the total numbers in the range of 0 &le; x &lt; 100, \r\n&nbsp;            excluding <code>11,22,33,44,55,66,77,88,99</code>\r\n</pre>\r\n</div>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 8</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"83.6K\", \"totalSubmission\": \"171.6K\", \"totalAcceptedRaw\": 83563, \"totalSubmissionRaw\": 171567, \"acRate\": \"48.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "356", "name": "line-reflection", "content": {"questionId": "356", "questionFrontendId": "356", "questionTitle": "Line Reflection", "questionTitleSlug": "line-reflection", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"24.6K\", \"totalSubmission\": \"75.7K\", \"totalAcceptedRaw\": 24629, \"totalSubmissionRaw\": 75726, \"acRate\": \"32.5%\"}", "similarQuestions": "[{\"title\": \"Max Points on a Line\", \"titleSlug\": \"max-points-on-a-line\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Boomerangs\", \"titleSlug\": \"number-of-boomerangs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Math", "slug": "math"}]}}, {"id": "355", "name": "design-twitter", "content": {"questionId": "355", "questionFrontendId": "355", "questionTitle": "Design Twitter", "questionTitleSlug": "design-twitter", "content": "<p>Design a simplified version of Twitter where users can post tweets, follow/unfollow another user and is able to see the 10 most recent tweets in the user's news feed. Your design should support the following methods:</p>\r\n\r\n<p>\r\n<ol>\r\n<li><b>postTweet(userId, tweetId)</b>: Compose a new tweet.</li>\r\n<li><b>getNewsFeed(userId)</b>: Retrieve the 10 most recent tweet ids in the user's news feed. Each item in the news feed must be posted by users who the user followed or by the user herself. Tweets must be ordered from most recent to least recent.</li>\r\n<li><b>follow(followerId, followeeId)</b>: Follower follows a followee.</li>\r\n<li><b>unfollow(followerId, followeeId)</b>: Follower unfollows a followee.</li>\r\n</ol>\r\n</p>\r\n\r\n<p><b>Example:</b>\r\n<pre>\r\nTwitter twitter = new Twitter();\r\n\r\n// User 1 posts a new tweet (id = 5).\r\ntwitter.postTweet(1, 5);\r\n\r\n// User 1's news feed should return a list with 1 tweet id -> [5].\r\ntwitter.getNewsFeed(1);\r\n\r\n// User 1 follows user 2.\r\ntwitter.follow(1, 2);\r\n\r\n// User 2 posts a new tweet (id = 6).\r\ntwitter.postTweet(2, 6);\r\n\r\n// User 1's news feed should return a list with 2 tweet ids -> [6, 5].\r\n// Tweet id 6 should precede tweet id 5 because it is posted after tweet id 5.\r\ntwitter.getNewsFeed(1);\r\n\r\n// User 1 unfollows user 2.\r\ntwitter.unfollow(1, 2);\r\n\r\n// User 1's news feed should return a list with 1 tweet id -> [5],\r\n// since user 1 is no longer following user 2.\r\ntwitter.getNewsFeed(1);\r\n</pre>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"58.8K\", \"totalSubmission\": \"190.1K\", \"totalAcceptedRaw\": 58838, \"totalSubmissionRaw\": 190090, \"acRate\": \"31.0%\"}", "similarQuestions": "[{\"title\": \"Design a File Sharing System\", \"titleSlug\": \"design-a-file-sharing-system\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Heap", "slug": "heap"}, {"name": "Design", "slug": "design"}]}}, {"id": "353", "name": "design-snake-game", "content": {"questionId": "353", "questionFrontendId": "353", "questionTitle": "Design Snake Game", "questionTitleSlug": "design-snake-game", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"40.6K\", \"totalSubmission\": \"115.7K\", \"totalAcceptedRaw\": 40606, \"totalSubmissionRaw\": 115704, \"acRate\": \"35.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}, {"name": "Queue", "slug": "queue"}]}}, {"id": "351", "name": "android-unlock-patterns", "content": {"questionId": "351", "questionFrontendId": "351", "questionTitle": "Android Unlock Patterns", "questionTitleSlug": "android-unlock-patterns", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"48.9K\", \"totalSubmission\": \"99.2K\", \"totalAcceptedRaw\": 48857, \"totalSubmissionRaw\": 99239, \"acRate\": \"49.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "348", "name": "design-tic-tac-toe", "content": {"questionId": "348", "questionFrontendId": "348", "questionTitle": "Design Tic-Tac-Toe", "questionTitleSlug": "design-tic-tac-toe", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"113.9K\", \"totalSubmission\": \"206.4K\", \"totalAcceptedRaw\": 113912, \"totalSubmissionRaw\": 206361, \"acRate\": \"55.2%\"}", "similarQuestions": "[{\"title\": \"Valid Tic-Tac-Toe State\", \"titleSlug\": \"valid-tic-tac-toe-state\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}]}}, {"id": "347", "name": "top-k-frequent-elements", "content": {"questionId": "347", "questionFrontendId": "347", "questionTitle": "Top K Frequent Elements", "questionTitleSlug": "top-k-frequent-elements", "content": "<p>Given a non-empty array of integers, return the <b><i>k</i></b> most frequent elements.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>nums = <span id=\"example-input-1-1\">[1,1,1,2,2,3]</span>, k = <span id=\"example-input-1-2\">2</span>\n<strong>Output: </strong><span id=\"example-output-1\">[1,2]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>nums = <span id=\"example-input-2-1\">[1]</span>, k = <span id=\"example-input-2-2\">1</span>\n<strong>Output: </strong><span id=\"example-output-2\">[1]</span></pre>\n</div>\n\n<p><b>Note: </b></p>\n\n<ul>\n\t<li>You may assume <i>k</i> is always valid, 1 &le; <i>k</i> &le; number of unique elements.</li>\n\t<li>Your algorithm&#39;s time complexity <b>must be</b> better than O(<i>n</i> log <i>n</i>), where <i>n</i> is the array&#39;s size.</li>\n\t<li>It&#39;s guaranteed that the answer is unique, in other words the set of the top k frequent elements is unique.</li>\n\t<li>You can return the answer in any order.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"510.7K\", \"totalSubmission\": \"822.9K\", \"totalAcceptedRaw\": 510748, \"totalSubmissionRaw\": 822872, \"acRate\": \"62.1%\"}", "similarQuestions": "[{\"title\": \"Word Frequency\", \"titleSlug\": \"word-frequency\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Largest Element in an Array\", \"titleSlug\": \"kth-largest-element-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sort Characters By Frequency\", \"titleSlug\": \"sort-characters-by-frequency\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Split Array into Consecutive Subsequences\", \"titleSlug\": \"split-array-into-consecutive-subsequences\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Top K Frequent Words\", \"titleSlug\": \"top-k-frequent-words\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"K Closest Points to Origin\", \"titleSlug\": \"k-closest-points-to-origin\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Heap", "slug": "heap"}]}}, {"id": "343", "name": "integer-break", "content": {"questionId": "343", "questionFrontendId": "343", "questionTitle": "Integer Break", "questionTitleSlug": "integer-break", "content": "<p>Given a positive integer <i>n</i>, break it into the sum of <b>at least</b> two positive integers and maximize the product of those integers. Return the maximum product you can get.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<div>\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\r\n<strong>Explanation: </strong>2 = 1 + 1, 1 &times; 1 = 1.</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">10</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">36</span>\r\n<strong>Explanation: </strong>10 = 3 + 3 + 4, 3 &times;&nbsp;3 &times;&nbsp;4 = 36.</pre>\r\n\r\n<p><b>Note</b>: You may assume that <i>n</i> is not less than 2 and not larger than 58.</p>\r\n</div>\r\n</div>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"120.7K\", \"totalSubmission\": \"237K\", \"totalAcceptedRaw\": 120689, \"totalSubmissionRaw\": 236953, \"acRate\": \"50.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "341", "name": "flatten-nested-list-iterator", "content": {"questionId": "341", "questionFrontendId": "341", "questionTitle": "Flatten Nested List Iterator", "questionTitleSlug": "flatten-nested-list-iterator", "content": "<p>Given a nested list of integers, implement an iterator to flatten it.</p>\r\n\r\n<p>Each element is either an integer, or a list -- whose elements may also be integers or other lists.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<div>\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[[1,1],2,[1,1]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[1,1,2,1,1]\r\n</span><strong>Explanation: </strong>By calling <i>next</i> repeatedly until <i>hasNext</i> returns false, \r\n&nbsp;            the order of elements returned by <i>next</i> should be: <code>[1,1,2,1,1]</code>.</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,[4,[6]]]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[1,4,6]\r\n</span><strong>Explanation: </strong>By calling <i>next</i> repeatedly until <i>hasNext</i> returns false, \r\n&nbsp;            the order of elements returned by <i>next</i> should be: <code>[1,4,6]</code>.\r\n</pre>\r\n</div>\r\n</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"192.5K\", \"totalSubmission\": \"356.4K\", \"totalAcceptedRaw\": 192487, \"totalSubmissionRaw\": 356407, \"acRate\": \"54.0%\"}", "similarQuestions": "[{\"title\": \"Flatten 2D Vector\", \"titleSlug\": \"flatten-2d-vector\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Zigzag Iterator\", \"titleSlug\": \"zigzag-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Mini Parser\", \"titleSlug\": \"mini-parser\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Array Nesting\", \"titleSlug\": \"array-nesting\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}, {"name": "Design", "slug": "design"}]}}, {"id": "338", "name": "counting-bits", "content": {"questionId": "338", "questionFrontendId": "338", "questionTitle": "Counting Bits", "questionTitleSlug": "counting-bits", "content": "<p>Given a non negative integer number <b>num</b>. For every numbers <b>i</b> in the range <b>0 &le; i &le; num</b> calculate the number of 1&#39;s in their binary representation and return them as an array.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[0,1,1]</span></pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">5</span>\r\n<strong>Output: </strong><code>[0,1,1,2,1,2]</code>\r\n</pre>\r\n\r\n<p><b>Follow up:</b></p>\r\n\r\n<ul>\r\n\t<li>It is very easy to come up with a solution with run time <b>O(n*sizeof(integer))</b>. But can you do it in linear time <b>O(n)</b> /possibly in a single pass?</li>\r\n\t<li>Space complexity should be <b>O(n)</b>.</li>\r\n\t<li>Can you do it like a boss? Do it without using any builtin function like <b>__builtin_popcount</b> in c++ or in any other language.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"323.9K\", \"totalSubmission\": \"462K\", \"totalAcceptedRaw\": 323920, \"totalSubmissionRaw\": 461987, \"acRate\": \"70.1%\"}", "similarQuestions": "[{\"title\": \"Number of 1 Bits\", \"titleSlug\": \"number-of-1-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "337", "name": "house-robber-iii", "content": {"questionId": "337", "questionFrontendId": "337", "questionTitle": "House Robber III", "questionTitleSlug": "house-robber-iii", "content": "<p>The thief has found himself a new place for his thievery again. There is only one entrance to this area, called the &quot;root.&quot; Besides the root, each house has one and only one parent house. After a tour, the smart thief realized that &quot;all houses in this place forms a binary tree&quot;. It will automatically contact the police if two directly-linked houses were broken into on the same night.</p>\r\n\r\n<p>Determine the maximum amount of money the thief can rob tonight without alerting the police.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[3,2,3,null,3,null,1]\r\n\r\n     <font color=\"red\">3</font>\r\n    / \\\r\n   2   3\r\n    \\   \\ \r\n     <font color=\"red\">3   1\r\n</font>\r\n<strong>Output:</strong> 7 \r\n<strong>Explanation:</strong>&nbsp;Maximum amount of money the thief can rob = <font color=\"red\" style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\">3</font><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\"> + </span><font color=\"red\" style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\">3</font><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\"> + </span><font color=\"red\" style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\">1</font><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\"> = </span><b style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\">7</b><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\">.</span></pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[3,4,5,1,3,null,1]\r\n\r\n&nbsp;    3\r\n    / \\\r\n   <font color=\"red\">4</font>   <font color=\"red\">5</font>\r\n  / \\   \\ \r\n 1   3   1\r\n\r\n<strong>Output:</strong> 9\r\n<strong>Explanation:</strong>&nbsp;Maximum amount of money the thief can rob = <font color=\"red\">4</font> + <font color=\"red\">5</font> = <b>9</b>.\r\n</pre>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"193.6K\", \"totalSubmission\": \"375.2K\", \"totalAcceptedRaw\": 193641, \"totalSubmissionRaw\": 375182, \"acRate\": \"51.6%\"}", "similarQuestions": "[{\"title\": \"House Robber\", \"titleSlug\": \"house-robber\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"House Robber II\", \"titleSlug\": \"house-robber-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "334", "name": "increasing-triplet-subsequence", "content": {"questionId": "334", "questionFrontendId": "334", "questionTitle": "Increasing Triplet Subsequence", "questionTitleSlug": "increasing-triplet-subsequence", "content": "<p>Given an integer array <code>nums</code>, return <code>true</code><em> if there exists a triple of indices </em><code>(i, j, k)</code><em> such that </em><code>i &lt; j &lt; k</code><em> and </em><code>nums[i] &lt; nums[j] &lt; nums[k]</code>. If no such indices exists, return <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,5]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Any triplet where i &lt; j &lt; k is valid.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,4,3,2,1]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> No triplet exists.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,1,5,0,4,6]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The triplet (3, 4, 5) is valid because nums[3] == 0 &lt; nums[4] == 4 &lt; nums[5] == 6.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you implement a solution that runs in <code>O(n)</code> time complexity and <code>O(1)</code> space complexity?", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"183K\", \"totalSubmission\": \"452.1K\", \"totalAcceptedRaw\": 183012, \"totalSubmissionRaw\": 452133, \"acRate\": \"40.5%\"}", "similarQuestions": "[{\"title\": \"Longest Increasing Subsequence\", \"titleSlug\": \"longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "333", "name": "largest-bst-subtree", "content": {"questionId": "333", "questionFrontendId": "333", "questionTitle": "Largest BST Subtree", "questionTitleSlug": "largest-bst-subtree", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"54.3K\", \"totalSubmission\": \"146.4K\", \"totalAcceptedRaw\": 54330, \"totalSubmissionRaw\": 146394, \"acRate\": \"37.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "332", "name": "reconstruct-itinerary", "content": {"questionId": "332", "questionFrontendId": "332", "questionTitle": "Reconstruct Itinerary", "questionTitleSlug": "reconstruct-itinerary", "content": "<p>Given a list of airline tickets represented by pairs of departure and arrival airports <code>[from, to]</code>, reconstruct the itinerary in order. All of the tickets belong to a man who departs from <code>JFK</code>. Thus, the itinerary must begin with <code>JFK</code>.</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>If there are multiple valid itineraries, you should return the itinerary that has the smallest lexical order when read as a single string. For example, the itinerary <code>[&quot;JFK&quot;, &quot;LGA&quot;]</code> has a smaller lexical order than <code>[&quot;JFK&quot;, &quot;LGB&quot;]</code>.</li>\n\t<li>All airports are represented by three capital letters (IATA code).</li>\n\t<li>You may assume all tickets form at least one valid itinerary.</li>\n\t<li>One must use all the tickets once and only once.</li>\n</ol>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<code><strong>Input: </strong></code><code>[[&quot;MUC&quot;, &quot;LHR&quot;], [&quot;JFK&quot;, &quot;MUC&quot;], [&quot;SFO&quot;, &quot;SJC&quot;], [&quot;LHR&quot;, &quot;SFO&quot;]]</code>\n<strong>Output: </strong><code>[&quot;JFK&quot;, &quot;MUC&quot;, &quot;LHR&quot;, &quot;SFO&quot;, &quot;SJC&quot;]</code>\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<code><strong>Input: </strong></code><code>[[&quot;JFK&quot;,&quot;SFO&quot;],[&quot;JFK&quot;,&quot;ATL&quot;],[&quot;SFO&quot;,&quot;ATL&quot;],[&quot;ATL&quot;,&quot;JFK&quot;],[&quot;ATL&quot;,&quot;SFO&quot;]]</code>\n<strong>Output: </strong><code>[&quot;JFK&quot;,&quot;ATL&quot;,&quot;JFK&quot;,&quot;SFO&quot;,&quot;ATL&quot;,&quot;SFO&quot;]</code>\n<strong>Explanation: </strong>Another possible reconstruction is <code>[&quot;JFK&quot;,&quot;SFO&quot;,&quot;ATL&quot;,&quot;JFK&quot;,&quot;ATL&quot;,&quot;SFO&quot;]</code>.\n&nbsp;            But it is larger in lexical order.\n</pre>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"187.5K\", \"totalSubmission\": \"499.6K\", \"totalAcceptedRaw\": 187485, \"totalSubmissionRaw\": 499641, \"acRate\": \"37.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "331", "name": "verify-preorder-serialization-of-a-binary-tree", "content": {"questionId": "331", "questionFrontendId": "331", "questionTitle": "Verify Preorder Serialization of a Binary Tree", "questionTitleSlug": "verify-preorder-serialization-of-a-binary-tree", "content": "<p>One way to serialize a binary tree is to use pre-order traversal. When we encounter a non-null node, we record the node&#39;s value. If it is a null node, we record using a sentinel value such as <code>#</code>.</p>\r\n\r\n<pre>\r\n     _9_\r\n    /   \\\r\n   3     2\r\n  / \\   / \\\r\n 4   1  #  6\r\n/ \\ / \\   / \\\r\n# # # #   # #\r\n</pre>\r\n\r\n<p>For example, the above binary tree can be serialized to the string <code>&quot;9,3,4,#,#,1,#,#,2,#,6,#,#&quot;</code>, where <code>#</code> represents a null node.</p>\r\n\r\n<p>Given a string of comma separated values, verify whether it is a correct preorder traversal serialization of a binary tree. Find an algorithm without reconstructing the tree.</p>\r\n\r\n<p>Each comma separated value in the string must be either an integer or a character <code>&#39;#&#39;</code> representing <code>null</code> pointer.</p>\r\n\r\n<p>You may assume that the input format is always valid, for example it could never contain two consecutive commas such as <code>&quot;1,,3&quot;</code>.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><code>&quot;9,3,4,#,#,1,#,#,2,#,6,#,#&quot;</code>\r\n<strong>Output: </strong><code>true</code></pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><code>&quot;1,#&quot;</code>\r\n<strong>Output: </strong><code>false</code>\r\n</pre>\r\n\r\n<p><b>Example 3:</b></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><code>&quot;9,#,#,1&quot;</code>\r\n<strong>Output: </strong><code>false</code></pre>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"76.4K\", \"totalSubmission\": \"187.2K\", \"totalAcceptedRaw\": 76427, \"totalSubmissionRaw\": 187225, \"acRate\": \"40.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}]}}, {"id": "328", "name": "odd-even-linked-list", "content": {"questionId": "328", "questionFrontendId": "328", "questionTitle": "Odd Even Linked List", "questionTitleSlug": "odd-even-linked-list", "content": "<p>Given a singly linked list, group all odd nodes together followed by the even nodes. Please note here we are talking about the node number and not the value in the nodes.</p>\n\n<p>You should try to do it in place. The program should run in O(1) space complexity and O(nodes) time complexity.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<strong>Input: </strong><code>1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL</code>\n<strong>Output: </strong><code>1-&gt;3-&gt;5-&gt;2-&gt;4-&gt;NULL</code>\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<strong>Input: </strong>2<code>-&gt;1-&gt;3-&gt;5-&gt;6-&gt;4-&gt;7-&gt;NULL</code>\n<strong>Output: </strong><code>2-&gt;3-&gt;6-&gt;7-&gt;1-&gt;5-&gt;4-&gt;NULL</code>\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The relative order inside both the even and odd groups should remain as it was in the input.</li>\n\t<li>The first node is considered odd, the second node even and so on ...</li>\n\t<li>The length of the linked list is between <code>[0, 10^4]</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"332.7K\", \"totalSubmission\": \"586.7K\", \"totalAcceptedRaw\": 332744, \"totalSubmissionRaw\": 586682, \"acRate\": \"56.7%\"}", "similarQuestions": "[{\"title\": \"Split Linked List in Parts\", \"titleSlug\": \"split-linked-list-in-parts\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}]}}, {"id": "325", "name": "maximum-size-subarray-sum-equals-k", "content": {"questionId": "325", "questionFrontendId": "325", "questionTitle": "Maximum Size Subarray Sum Equals k", "questionTitleSlug": "maximum-size-subarray-sum-equals-k", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"113.5K\", \"totalSubmission\": \"241K\", \"totalAcceptedRaw\": 113548, \"totalSubmissionRaw\": 241034, \"acRate\": \"47.1%\"}", "similarQuestions": "[{\"title\": \"Minimum Size Subarray Sum\", \"titleSlug\": \"minimum-size-subarray-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Range Sum Query - Immutable\", \"titleSlug\": \"range-sum-query-immutable\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Contiguous Array\", \"titleSlug\": \"contiguous-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Subarray Product Less Than K\", \"titleSlug\": \"subarray-product-less-than-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}]}}, {"id": "324", "name": "wiggle-sort-ii", "content": {"questionId": "324", "questionFrontendId": "324", "questionTitle": "Wiggle Sort II", "questionTitleSlug": "wiggle-sort-ii", "content": "<p>Given an unsorted array <code>nums</code>, reorder it such that <code>nums[0] &lt; nums[1] &gt; nums[2] &lt; nums[3]...</code>.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><code>nums = [1, 5, 1, 1, 6, 4]</code>\r\n<strong>Output: </strong>One possible answer is <code>[1, 4, 1, 5, 1, 6]</code>.</pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><code>nums = [1, 3, 2, 2, 3, 1]</code>\r\n<strong>Output:</strong> One possible answer is <code>[2, 3, 1, 3, 1, 2]</code>.</pre>\r\n\r\n<p><b>Note:</b><br />\r\nYou may assume all input has valid answer.</p>\r\n\r\n<p><b>Follow Up:</b><br />\r\nCan you do it in O(n) time and/or in-place with O(1) extra space?</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"91.8K\", \"totalSubmission\": \"301.3K\", \"totalAcceptedRaw\": 91759, \"totalSubmissionRaw\": 301347, \"acRate\": \"30.4%\"}", "similarQuestions": "[{\"title\": \"Sort Colors\", \"titleSlug\": \"sort-colors\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Largest Element in an Array\", \"titleSlug\": \"kth-largest-element-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Wiggle Sort\", \"titleSlug\": \"wiggle-sort\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Sort", "slug": "sort"}]}}, {"id": "323", "name": "number-of-connected-components-in-an-undirected-graph", "content": {"questionId": "323", "questionFrontendId": "323", "questionTitle": "Number of Connected Components in an Undirected Graph", "questionTitleSlug": "number-of-connected-components-in-an-undirected-graph", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"118.9K\", \"totalSubmission\": \"207.9K\", \"totalAcceptedRaw\": 118866, \"totalSubmissionRaw\": 207883, \"acRate\": \"57.2%\"}", "similarQuestions": "[{\"title\": \"Number of Islands\", \"titleSlug\": \"number-of-islands\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Graph Valid Tree\", \"titleSlug\": \"graph-valid-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Friend Circles\", \"titleSlug\": \"friend-circles\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}, {"name": "Union Find", "slug": "union-find"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "322", "name": "coin-change", "content": {"questionId": "322", "questionFrontendId": "322", "questionTitle": "Coin Change", "questionTitleSlug": "coin-change", "content": "<p>You are given coins of different denominations and a total amount of money <i>amount</i>. Write a function to compute the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return <code>-1</code>.</p>\n\n<p>You may assume that you have an infinite number of each kind of coin.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> coins = [1,2,5], amount = 11\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> 11 = 5 + 5 + 1\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> coins = [2], amount = 3\n<strong>Output:</strong> -1\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> coins = [1], amount = 0\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> coins = [1], amount = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> coins = [1], amount = 2\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= coins.length &lt;= 12</code></li>\n\t<li><code>1 &lt;= coins[i] &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>0 &lt;= amount &lt;= 10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"526.7K\", \"totalSubmission\": \"1.4M\", \"totalAcceptedRaw\": 526727, \"totalSubmissionRaw\": 1434622, \"acRate\": \"36.7%\"}", "similarQuestions": "[{\"title\": \"Minimum Cost For Tickets\", \"titleSlug\": \"minimum-cost-for-tickets\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "320", "name": "generalized-abbreviation", "content": {"questionId": "320", "questionFrontendId": "320", "questionTitle": "Generalized Abbreviation", "questionTitleSlug": "generalized-abbreviation", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"50.9K\", \"totalSubmission\": \"95.8K\", \"totalAcceptedRaw\": 50911, \"totalSubmissionRaw\": 95789, \"acRate\": \"53.1%\"}", "similarQuestions": "[{\"title\": \"Subsets\", \"titleSlug\": \"subsets\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Unique Word Abbreviation\", \"titleSlug\": \"unique-word-abbreviation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Unique Word Abbreviation\", \"titleSlug\": \"minimum-unique-word-abbreviation\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "319", "name": "bulb-switcher", "content": {"questionId": "319", "questionFrontendId": "319", "questionTitle": "Bulb Switcher", "questionTitleSlug": "bulb-switcher", "content": "<p>There are <code>n</code> bulbs that are initially off. You first turn on all the bulbs, then&nbsp;you turn off every second bulb.</p>\n\n<p>On the third round, you toggle every third bulb (turning on if it&#39;s off or turning off if it&#39;s on). For the <code>i<sup>th</sup></code> round, you toggle every <code>i</code> bulb. For the <code>n<sup>th</sup></code> round, you only toggle the last bulb.</p>\n\n<p>Return <em>the number of bulbs that are on after <code>n</code> rounds</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/05/bulb.jpg\" style=\"width: 421px; height: 321px;\" />\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> At first, the three bulbs are [off, off, off].\nAfter the first round, the three bulbs are [on, on, on].\nAfter the second round, the three bulbs are [on, off, on].\nAfter the third round, the three bulbs are [on, off, off]. \nSo you should return 1 because there is only one bulb is on.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 0\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"86.7K\", \"totalSubmission\": \"191.6K\", \"totalAcceptedRaw\": 86728, \"totalSubmissionRaw\": 191624, \"acRate\": \"45.3%\"}", "similarQuestions": "[{\"title\": \"Bulb Switcher II\", \"titleSlug\": \"bulb-switcher-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of K Consecutive Bit Flips\", \"titleSlug\": \"minimum-number-of-k-consecutive-bit-flips\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Bulb Switcher III\", \"titleSlug\": \"bulb-switcher-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Brainteaser", "slug": "brainteaser"}]}}, {"id": "318", "name": "maximum-product-of-word-lengths", "content": {"questionId": "318", "questionFrontendId": "318", "questionTitle": "Maximum Product of Word Lengths", "questionTitleSlug": "maximum-product-of-word-lengths", "content": "<p>Given a string array <code>words</code>, find the maximum value of <code>length(word[i]) * length(word[j])</code> where the two words do not share common letters. You may assume that each word will contain only lower case letters. If no such two words exist, return 0.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> <code>[&quot;abcw&quot;,&quot;baz&quot;,&quot;foo&quot;,&quot;bar&quot;,&quot;xtfn&quot;,&quot;abcdef&quot;]</code>\r\n<b>Output: </b><code>16 \r\n<strong>Explanation: </strong></code>The two words can be <code>&quot;abcw&quot;, &quot;xtfn&quot;</code><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\">.</span></pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> <code>[&quot;a&quot;,&quot;ab&quot;,&quot;abc&quot;,&quot;d&quot;,&quot;cd&quot;,&quot;bcd&quot;,&quot;abcd&quot;]</code>\r\n<b>Output: </b><code>4 \r\n<strong>Explanation: </strong></code>The two words can be <code>&quot;ab&quot;, &quot;cd&quot;</code><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\">.</span></pre>\r\n\r\n<p><b>Example 3:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> <code>[&quot;a&quot;,&quot;aa&quot;,&quot;aaa&quot;,&quot;aaaa&quot;]</code>\r\n<b>Output: </b><code>0 \r\n<strong>Explanation: </strong></code>No such pair of words.\r\n</pre>\r\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= words.length &lt;= 10^3</code></li>\n\t<li><code>0 &lt;= words[i].length &lt;= 10^3</code></li>\n\t<li><code>words[i]</code> consists only of lowercase English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"103.8K\", \"totalSubmission\": \"200K\", \"totalAcceptedRaw\": 103823, \"totalSubmissionRaw\": 199973, \"acRate\": \"51.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "316", "name": "remove-duplicate-letters", "content": {"questionId": "316", "questionFrontendId": "316", "questionTitle": "Remove Duplicate Letters", "questionTitleSlug": "remove-duplicate-letters", "content": "<p>Given a string <code>s</code>, remove duplicate letters so that every letter appears once and only once. You must make sure your result is <strong>the smallest in lexicographical order</strong> among all possible results.</p>\n\n<p><strong>Note:</strong> This question is the same as 1081:&nbsp;<a href=\"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\" target=\"_blank\">https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/</a></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;bcabc&quot;\n<strong>Output:</strong> &quot;abc&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;cbacdcbc&quot;\n<strong>Output:</strong> &quot;acdb&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"108.3K\", \"totalSubmission\": \"279.8K\", \"totalAcceptedRaw\": 108302, \"totalSubmissionRaw\": 279756, \"acRate\": \"38.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Stack", "slug": "stack"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "314", "name": "binary-tree-vertical-order-traversal", "content": {"questionId": "314", "questionFrontendId": "314", "questionTitle": "Binary Tree Vertical Order Traversal", "questionTitleSlug": "binary-tree-vertical-order-traversal", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"145.1K\", \"totalSubmission\": \"312.1K\", \"totalAcceptedRaw\": 145126, \"totalSubmissionRaw\": 312058, \"acRate\": \"46.5%\"}", "similarQuestions": "[{\"title\": \"Binary Tree Level Order Traversal\", \"titleSlug\": \"binary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "313", "name": "super-ugly-number", "content": {"questionId": "313", "questionFrontendId": "313", "questionTitle": "Super Ugly Number", "questionTitleSlug": "super-ugly-number", "content": "<p>Write a program to find the <code>n<sup>th</sup></code> super ugly number.</p>\r\n\r\n<p>Super ugly numbers are positive numbers whose all prime factors are in the given prime list <code>primes</code> of size <code>k</code>.</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> n = 12, <code>primes</code> = <code>[2,7,13,19]</code>\r\n<b>Output:</b> 32 \r\n<strong>Explanation: </strong><code>[1,2,4,7,8,13,14,16,19,26,28,32] </code>is the sequence of the first 12 \r\n             super ugly numbers given <code>primes</code> = <code>[2,7,13,19]</code> of size 4.</pre>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ul>\r\n\t<li><code>1</code> is a super ugly number for any given <code>primes</code>.</li>\r\n\t<li>The given numbers in <code>primes</code> are in ascending order.</li>\r\n\t<li>0 &lt; <code>k</code> &le; 100, 0 &lt; <code>n</code> &le; 10<sup>6</sup>, 0 &lt; <code>primes[i]</code> &lt; 1000.</li>\r\n\t<li>The n<sup>th</sup> super ugly number is guaranteed to fit in a 32-bit signed integer.</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"83K\", \"totalSubmission\": \"181.2K\", \"totalAcceptedRaw\": 82965, \"totalSubmissionRaw\": 181154, \"acRate\": \"45.8%\"}", "similarQuestions": "[{\"title\": \"Ugly Number II\", \"titleSlug\": \"ugly-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Heap", "slug": "heap"}]}}, {"id": "311", "name": "sparse-matrix-multiplication", "content": {"questionId": "311", "questionFrontendId": "311", "questionTitle": "Sparse Matrix Multiplication", "questionTitleSlug": "sparse-matrix-multiplication", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"115.5K\", \"totalSubmission\": \"182.4K\", \"totalAcceptedRaw\": 115533, \"totalSubmissionRaw\": 182391, \"acRate\": \"63.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}]}}, {"id": "310", "name": "minimum-height-trees", "content": {"questionId": "310", "questionFrontendId": "310", "questionTitle": "Minimum Height Trees", "questionTitleSlug": "minimum-height-trees", "content": "<p>A tree is an undirected graph in which any two vertices are connected by&nbsp;<i>exactly</i>&nbsp;one path. In other words, any connected graph without simple cycles is a tree.</p>\n\n<p>Given a tree of <code>n</code> nodes&nbsp;labelled from <code>0</code> to <code>n - 1</code>, and an array of&nbsp;<code>n - 1</code>&nbsp;<code>edges</code> where <code>edges[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> indicates that there is an undirected edge between the two nodes&nbsp;<code>a<sub>i</sub></code> and&nbsp;<code>b<sub>i</sub></code> in the tree,&nbsp;you can choose any node of the tree as the root. When you select a node <code>x</code> as the root, the result tree has height <code>h</code>. Among all possible rooted trees, those with minimum height (i.e. <code>min(h)</code>)&nbsp; are called <strong>minimum height trees</strong> (MHTs).</p>\n\n<p>Return <em>a list of all <strong>MHTs&#39;</strong> root labels</em>.&nbsp;You can return the answer in <strong>any order</strong>.</p>\n\n<p>The <strong>height</strong> of a rooted tree is the number of edges on the longest downward path between the root and a leaf.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/01/e1.jpg\" style=\"width: 800px; height: 213px;\" />\n<pre>\n<strong>Input:</strong> n = 4, edges = [[1,0],[1,2],[1,3]]\n<strong>Output:</strong> [1]\n<strong>Explanation:</strong> As shown, the height of the tree is 1 when the root is the node with label 1 which is the only MHT.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/01/e2.jpg\" style=\"width: 800px; height: 321px;\" />\n<pre>\n<strong>Input:</strong> n = 6, edges = [[3,0],[3,1],[3,2],[3,4],[5,4]]\n<strong>Output:</strong> [3,4]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1, edges = []\n<strong>Output:</strong> [0]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, edges = [[0,1]]\n<strong>Output:</strong> [0,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>edges.length == n - 1</code></li>\n\t<li><code>0 &lt;= a<sub>i</sub>, b<sub>i</sub> &lt; n</code></li>\n\t<li><code>a<sub>i</sub> != b<sub>i</sub></code></li>\n\t<li>All the pairs <code>(a<sub>i</sub>, b<sub>i</sub>)</code> are distinct.</li>\n\t<li>The given input is <strong>guaranteed</strong> to be a tree and there will be <strong>no repeated</strong> edges.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"124.3K\", \"totalSubmission\": \"361.7K\", \"totalAcceptedRaw\": 124345, \"totalSubmissionRaw\": 361722, \"acRate\": \"34.4%\"}", "similarQuestions": "[{\"title\": \"Course Schedule\", \"titleSlug\": \"course-schedule\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Course Schedule II\", \"titleSlug\": \"course-schedule-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "309", "name": "best-time-to-buy-and-sell-stock-with-cooldown", "content": {"questionId": "309", "questionFrontendId": "309", "questionTitle": "Best Time to Buy and Sell Stock with Cooldown", "questionTitleSlug": "best-time-to-buy-and-sell-stock-with-cooldown", "content": "<p>Say you have an array for which the <i>i</i><sup>th</sup> element is the price of a given stock on day <i>i</i>.</p>\r\n\r\n<p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times) with the following restrictions:</p>\r\n\r\n<ul>\r\n\t<li>You may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</li>\r\n\t<li>After you sell your stock, you cannot buy stock on next day. (ie, cooldown 1 day)</li>\r\n</ul>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [1,2,3,0,2]\r\n<strong>Output: </strong>3 \r\n<strong>Explanation:</strong> transactions = [buy, sell, cooldown, buy, sell]\r\n</pre>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"176.5K\", \"totalSubmission\": \"368.1K\", \"totalAcceptedRaw\": 176496, \"totalSubmissionRaw\": 368130, \"acRate\": \"47.9%\"}", "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock\", \"titleSlug\": \"best-time-to-buy-and-sell-stock\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock II\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "307", "name": "range-sum-query-mutable", "content": {"questionId": "307", "questionFrontendId": "307", "questionTitle": "Range Sum Query - Mutable", "questionTitleSlug": "range-sum-query-mutable", "content": "<p>Given an integer array <i>nums</i>, find the sum of the elements between indices <i>i</i> and <i>j</i> (<i>i</i> &le; <i>j</i>), inclusive.</p>\n\n<p>The <i>update(i, val)</i> function modifies <i>nums</i> by updating the element at index <i>i</i> to <i>val</i>.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\nGiven nums = [1, 3, 5]\n\nsumRange(0, 2) -&gt; 9\nupdate(1, 2)\nsumRange(0, 2) -&gt; 8\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The array is only modifiable by the <i>update</i> function.</li>\n\t<li>You may assume the number of calls to <i>update</i> and <i>sumRange</i> function is distributed evenly.</li>\n\t<li><code>0 &lt;= i &lt;= j &lt;= nums.length - 1</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"124.1K\", \"totalSubmission\": \"342K\", \"totalAcceptedRaw\": 124080, \"totalSubmissionRaw\": 342044, \"acRate\": \"36.3%\"}", "similarQuestions": "[{\"title\": \"Range Sum Query - Immutable\", \"titleSlug\": \"range-sum-query-immutable\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Range Sum Query 2D - Mutable\", \"titleSlug\": \"range-sum-query-2d-mutable\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Indexed Tree", "slug": "binary-indexed-tree"}, {"name": "Segment Tree", "slug": "segment-tree"}]}}, {"id": "306", "name": "additive-number", "content": {"questionId": "306", "questionFrontendId": "306", "questionTitle": "Additive Number", "questionTitleSlug": "additive-number", "content": "<p>Additive number is a string whose digits can form additive sequence.</p>\n\n<p>A valid additive sequence should contain <b>at least</b> three numbers. Except for the first two numbers, each subsequent number in the sequence must be the sum of the preceding two.</p>\n\n<p>Given a string containing only digits <code>&#39;0&#39;-&#39;9&#39;</code>, write a function to determine if it&#39;s an additive number.</p>\n\n<p><b>Note:</b> Numbers in the additive sequence <b>cannot</b> have leading zeros, so sequence <code>1, 2, 03</code> or <code>1, 02, 3</code> is invalid.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;112358&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The digits can form an additive sequence: 1, 1, 2, 3, 5, 8. \n&nbsp;            1 + 1 = 2, 1 + 2 = 3, 2 + 3 = 5, 3 + 5 = 8\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;199100199&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The additive sequence is: 1, 99, 100, 199.&nbsp;\n&nbsp;            1 + 99 = 100, 99 + 100 = 199\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><font face=\"monospace\"><code>num</code>&nbsp;</font>consists only of digits <code>&#39;0&#39;-&#39;9&#39;</code>.</li>\n\t<li><code>1 &lt;= num.length &lt;= 35</code></li>\n</ul>\n\n<p><b>Follow up:</b><br />\nHow would you handle overflow for very large input integers?</p>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"55.5K\", \"totalSubmission\": \"188K\", \"totalAcceptedRaw\": 55480, \"totalSubmissionRaw\": 188025, \"acRate\": \"29.5%\"}", "similarQuestions": "[{\"title\": \"Split Array into Fibonacci Sequence\", \"titleSlug\": \"split-array-into-fibonacci-sequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "304", "name": "range-sum-query-2d-immutable", "content": {"questionId": "304", "questionFrontendId": "304", "questionTitle": "Range Sum Query 2D - Immutable", "questionTitleSlug": "range-sum-query-2d-immutable", "content": "<p>Given a 2D matrix <i>matrix</i>, find the sum of the elements inside the rectangle defined by its upper left corner (<i>row</i>1, <i>col</i>1) and lower right corner (<i>row</i>2, <i>col</i>2).</p>\r\n\r\n<p>\r\n<img src=\"/static/images/courses/range_sum_query_2d.png\" border=\"0\" alt=\"Range Sum Query 2D\" /><br />\r\n<small>The above rectangle (with the red border) is defined by (row1, col1) = <b>(2, 1)</b> and (row2, col2) = <b>(4, 3)</b>, which contains sum = <b>8</b>.</small>\r\n</p>\r\n\r\n<p><b>Example:</b><br>\r\n<pre>\r\nGiven matrix = [\r\n  [3, 0, 1, 4, 2],\r\n  [5, 6, 3, 2, 1],\r\n  [1, 2, 0, 1, 5],\r\n  [4, 1, 0, 1, 7],\r\n  [1, 0, 3, 0, 5]\r\n]\r\n\r\nsumRegion(2, 1, 4, 3) -> 8\r\nsumRegion(1, 1, 2, 2) -> 11\r\nsumRegion(1, 2, 2, 4) -> 12\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>You may assume that the matrix does not change.</li>\r\n<li>There are many calls to <i>sumRegion</i> function.</li>\r\n<li>You may assume that <i>row</i>1 &le; <i>row</i>2 and <i>col</i>1 &le; <i>col</i>2.</li>\r\n</ol>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"136.2K\", \"totalSubmission\": \"340.4K\", \"totalAcceptedRaw\": 136223, \"totalSubmissionRaw\": 340419, \"acRate\": \"40.0%\"}", "similarQuestions": "[{\"title\": \"Range Sum Query - Immutable\", \"titleSlug\": \"range-sum-query-immutable\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Range Sum Query 2D - Mutable\", \"titleSlug\": \"range-sum-query-2d-mutable\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "300", "name": "longest-increasing-subsequence", "content": {"questionId": "300", "questionFrontendId": "300", "questionTitle": "Longest Increasing Subsequence", "questionTitleSlug": "longest-increasing-subsequence", "content": "<p>Given an integer array <code>nums</code>, return the length of the longest strictly increasing subsequence.</p>\n\n<p>A <strong>subsequence</strong> is a sequence that can be derived from an array by deleting some or no elements without changing the order of the remaining elements. For example, <code>[3,6,2,7]</code> is a subsequence of the array <code>[0,3,1,6,2,2,7]</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [10,9,2,5,3,7,101,18]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The longest increasing subsequence is [2,3,7,101], therefore the length is 4.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,1,0,3,2,3]\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [7,7,7,7,7,7,7]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 2500</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><b>Follow up:</b></p>\n\n<ul>\n\t<li>Could you come up with the <code>O(n<sup>2</sup>)</code> solution?</li>\n\t<li>Could you improve it to <code>O(n log(n))</code> time complexity?</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"468.1K\", \"totalSubmission\": \"1.1M\", \"totalAcceptedRaw\": 468146, \"totalSubmissionRaw\": 1079796, \"acRate\": \"43.4%\"}", "similarQuestions": "[{\"title\": \"Increasing Triplet Subsequence\", \"titleSlug\": \"increasing-triplet-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Russian Doll Envelopes\", \"titleSlug\": \"russian-doll-envelopes\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Length of Pair Chain\", \"titleSlug\": \"maximum-length-of-pair-chain\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Longest Increasing Subsequence\", \"titleSlug\": \"number-of-longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum ASCII Delete Sum for Two Strings\", \"titleSlug\": \"minimum-ascii-delete-sum-for-two-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Removals to Make Mountain Array\", \"titleSlug\": \"minimum-number-of-removals-to-make-mountain-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "299", "name": "bulls-and-cows", "content": {"questionId": "299", "questionFrontendId": "299", "questionTitle": "Bulls and Cows", "questionTitleSlug": "bulls-and-cows", "content": "<p>You are playing the <strong><a href=\"https://en.wikipedia.org/wiki/Bulls_and_Cows\" target=\"_blank\">Bulls and Cows</a></strong> game with your friend.</p>\n\n<p>You write down a secret number and ask your friend to guess what the number is. When your friend makes a guess, you provide a hint with the following info:</p>\n\n<ul>\n\t<li>The number of &quot;bulls&quot;, which are digits in the guess that are in the correct position.</li>\n\t<li>The number of &quot;cows&quot;, which are digits in the guess that are in your secret number but are located in the wrong position. Specifically, the non-bull digits in the guess that could be rearranged such that they become bulls.</li>\n</ul>\n\n<p>Given the secret number <code>secret</code> and your friend&#39;s guess <code>guess</code>, return <em>the hint for your friend&#39;s guess</em>.</p>\n\n<p>The hint should be formatted as <code>&quot;xAyB&quot;</code>, where <code>x</code> is the number of bulls and <code>y</code> is the number of cows. Note that both <code>secret</code> and <code>guess</code> may contain duplicate digits.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> secret = &quot;1807&quot;, guess = &quot;7810&quot;\n<strong>Output:</strong> &quot;1A3B&quot;\n<strong>Explanation:</strong> Bulls are connected with a &#39;|&#39; and cows are underlined:\n&quot;1807&quot;\n  |\n&quot;<u>7</u>8<u>10</u>&quot;</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> secret = &quot;1123&quot;, guess = &quot;0111&quot;\n<strong>Output:</strong> &quot;1A1B&quot;\n<strong>Explanation:</strong> Bulls are connected with a &#39;|&#39; and cows are underlined:\n&quot;1123&quot;        &quot;1123&quot;\n  |      or     |\n&quot;01<u>1</u>1&quot;        &quot;011<u>1</u>&quot;\nNote that only one of the two unmatched 1s is counted as a cow since the non-bull digits can only be rearranged to allow one 1 to be a bull.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> secret = &quot;1&quot;, guess = &quot;0&quot;\n<strong>Output:</strong> &quot;0A0B&quot;\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> secret = &quot;1&quot;, guess = &quot;1&quot;\n<strong>Output:</strong> &quot;1A0B&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= secret.length, guess.length &lt;= 1000</code></li>\n\t<li><code>secret.length == guess.length</code></li>\n\t<li><code>secret</code> and <code>guess</code> consist of digits only.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"199.4K\", \"totalSubmission\": \"451.8K\", \"totalAcceptedRaw\": 199434, \"totalSubmissionRaw\": 451797, \"acRate\": \"44.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}]}}, {"id": "298", "name": "binary-tree-longest-consecutive-sequence", "content": {"questionId": "298", "questionFrontendId": "298", "questionTitle": "Binary Tree Longest Consecutive Sequence", "questionTitleSlug": "binary-tree-longest-consecutive-sequence", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"89.9K\", \"totalSubmission\": \"188.5K\", \"totalAcceptedRaw\": 89928, \"totalSubmissionRaw\": 188482, \"acRate\": \"47.7%\"}", "similarQuestions": "[{\"title\": \"Longest Consecutive Sequence\", \"titleSlug\": \"longest-consecutive-sequence\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Longest Consecutive Sequence II\", \"titleSlug\": \"binary-tree-longest-consecutive-sequence-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "294", "name": "flip-game-ii", "content": {"questionId": "294", "questionFrontendId": "294", "questionTitle": "Flip Game II", "questionTitleSlug": "flip-game-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"55.6K\", \"totalSubmission\": \"110.2K\", \"totalAcceptedRaw\": 55631, \"totalSubmissionRaw\": 110230, \"acRate\": \"50.5%\"}", "similarQuestions": "[{\"title\": \"Nim Game\", \"titleSlug\": \"nim-game\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Flip Game\", \"titleSlug\": \"flip-game\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Guess Number Higher or Lower II\", \"titleSlug\": \"guess-number-higher-or-lower-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Can I Win\", \"titleSlug\": \"can-i-win\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}, {"name": "Minimax", "slug": "minimax"}]}}, {"id": "289", "name": "game-of-life", "content": {"questionId": "289", "questionFrontendId": "289", "questionTitle": "Game of Life", "questionTitleSlug": "game-of-life", "content": "<p>According to the <a href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\" target=\"_blank\">Wikipedia&#39;s article</a>: &quot;The <b>Game of Life</b>, also known simply as <b>Life</b>, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.&quot;</p>\r\n\r\n<p>Given a <i>board</i> with <i>m</i> by <i>n</i> cells, each cell has an initial state <i>live</i> (1) or <i>dead</i> (0). Each cell interacts with its <a href=\"https://en.wikipedia.org/wiki/Moore_neighborhood\" target=\"_blank\">eight neighbors</a> (horizontal, vertical, diagonal) using the following four rules (taken from the above Wikipedia article):</p>\r\n\r\n<ol>\r\n\t<li>Any live cell with fewer than two live neighbors dies, as if caused by under-population.</li>\r\n\t<li>Any live cell with two or three live neighbors lives on to the next generation.</li>\r\n\t<li>Any live cell with more than three live neighbors dies, as if by over-population..</li>\r\n\t<li>Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.</li>\r\n</ol>\r\n\r\n<p>Write a function to compute the next state (after one update) of the board given its current state.&nbsp;<span>The next state is created by applying the above rules simultaneously to every cell in the current state, where&nbsp;births and deaths occur simultaneously.</span></p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: \r\n</strong><span id=\"example-input-1-1\">[\r\n&nbsp; [0,1,0],\r\n&nbsp; [0,0,1],\r\n&nbsp; [1,1,1],\r\n&nbsp; [0,0,0]\r\n]</span>\r\n<strong>Output: \r\n</strong><span id=\"example-output-1\">[\r\n&nbsp; [0,0,0],\r\n&nbsp; [1,0,1],\r\n&nbsp; [0,1,1],\r\n&nbsp; [0,1,0]\r\n]</span>\r\n</pre>\r\n\r\n<p><b>Follow up</b>:</p>\r\n\r\n<ol>\r\n\t<li>Could you solve it in-place? Remember that the board needs to be updated at the same time: You cannot update some cells first and then use their updated values to update other cells.</li>\r\n\t<li>In this question, we represent the board using a 2D array. In principle, the board is infinite, which would cause problems when the active area encroaches the border of the array. How would you address these problems?</li>\r\n</ol>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"205.1K\", \"totalSubmission\": \"364K\", \"totalAcceptedRaw\": 205127, \"totalSubmissionRaw\": 364015, \"acRate\": \"56.4%\"}", "similarQuestions": "[{\"title\": \"Set Matrix Zeroes\", \"titleSlug\": \"set-matrix-zeroes\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "288", "name": "unique-word-abbreviation", "content": {"questionId": "288", "questionFrontendId": "288", "questionTitle": "Unique Word Abbreviation", "questionTitleSlug": "unique-word-abbreviation", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"54.7K\", \"totalSubmission\": \"241.2K\", \"totalAcceptedRaw\": 54662, \"totalSubmissionRaw\": 241247, \"acRate\": \"22.7%\"}", "similarQuestions": "[{\"title\": \"Two Sum III - Data structure design\", \"titleSlug\": \"two-sum-iii-data-structure-design\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Generalized Abbreviation\", \"titleSlug\": \"generalized-abbreviation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Design", "slug": "design"}]}}, {"id": "287", "name": "find-the-duplicate-number", "content": {"questionId": "287", "questionFrontendId": "287", "questionTitle": "Find the Duplicate Number", "questionTitleSlug": "find-the-duplicate-number", "content": "<p>Given an array of integers <code>nums</code> containing&nbsp;<code>n + 1</code> integers where each integer is in the range <code>[1, n]</code> inclusive.</p>\n\n<p>There is only <strong>one duplicate number</strong> in <code>nums</code>, return <em>this&nbsp;duplicate number</em>.</p>\n\n<p><b>Follow-ups:</b></p>\n\n<ol>\n\t<li>How can we prove that at least one duplicate number must exist in <code>nums</code>?&nbsp;</li>\n\t<li>Can you solve the problem <strong>without</strong>&nbsp;modifying&nbsp;the array <code>nums</code>?</li>\n\t<li>Can you solve the problem using&nbsp;only constant, <code>O(1)</code> extra space?</li>\n\t<li>Can you solve the problem with runtime complexity less than <code>O(n<sup>2</sup>)</code>?</li>\n</ol>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,3,4,2,2]\n<strong>Output:</strong> 2\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [3,1,3,4,2]\n<strong>Output:</strong> 3\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1]\n<strong>Output:</strong> 1\n</pre><p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1,2]\n<strong>Output:</strong> 1\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>nums.length == n + 1</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= n</code></li>\n\t<li>All the integers in <code>nums</code> appear only <strong>once</strong> except for <strong>precisely one integer</strong> which appears <strong>two or more</strong> times.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"432.8K\", \"totalSubmission\": \"760.6K\", \"totalAcceptedRaw\": 432845, \"totalSubmissionRaw\": 760621, \"acRate\": \"56.9%\"}", "similarQuestions": "[{\"title\": \"First Missing Positive\", \"titleSlug\": \"first-missing-positive\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Single Number\", \"titleSlug\": \"single-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Linked List Cycle II\", \"titleSlug\": \"linked-list-cycle-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Missing Number\", \"titleSlug\": \"missing-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Set Mismatch\", \"titleSlug\": \"set-mismatch\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Two Pointers", "slug": "two-pointers"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "286", "name": "walls-and-gates", "content": {"questionId": "286", "questionFrontendId": "286", "questionTitle": "Walls and Gates", "questionTitleSlug": "walls-and-gates", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"143.5K\", \"totalSubmission\": \"257.4K\", \"totalAcceptedRaw\": 143475, \"totalSubmissionRaw\": 257414, \"acRate\": \"55.7%\"}", "similarQuestions": "[{\"title\": \"Surrounded Regions\", \"titleSlug\": \"surrounded-regions\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Islands\", \"titleSlug\": \"number-of-islands\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Shortest Distance from All Buildings\", \"titleSlug\": \"shortest-distance-from-all-buildings\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Robot Room Cleaner\", \"titleSlug\": \"robot-room-cleaner\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Rotting Oranges\", \"titleSlug\": \"rotting-oranges\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "285", "name": "inorder-successor-in-bst", "content": {"questionId": "285", "questionFrontendId": "285", "questionTitle": "Inorder Successor in BST", "questionTitleSlug": "inorder-successor-in-bst", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"178.2K\", \"totalSubmission\": \"423.3K\", \"totalAcceptedRaw\": 178210, \"totalSubmissionRaw\": 423302, \"acRate\": \"42.1%\"}", "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Search Tree Iterator\", \"titleSlug\": \"binary-search-tree-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Inorder Successor in BST II\", \"titleSlug\": \"inorder-successor-in-bst-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "284", "name": "peeking-iterator", "content": {"questionId": "284", "questionFrontendId": "284", "questionTitle": "Peeking Iterator", "questionTitleSlug": "peeking-iterator", "content": "<p>Given an Iterator class interface with methods: <code>next()</code> and <code>hasNext()</code>, design and implement a PeekingIterator that support the <code>peek()</code> operation -- it essentially peek() at the element that will be returned by the next call to next().</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\nAssume that the iterator is initialized to the beginning of the list: <strong><code>[1,2,3]</code></strong>.\r\n\r\nCall <strong><code>next()</code></strong> gets you <strong>1</strong>, the first element in the list.\r\nNow you call <strong><code>peek()</code></strong> and it returns <strong>2</strong>, the next element. Calling <strong><code>next()</code></strong> after that <i><b>still</b></i> return <strong>2</strong>. \r\nYou call <strong><code>next()</code></strong> the final time and it returns <strong>3</strong>, the last element. \r\nCalling <strong><code>hasNext()</code></strong> after that should return <strong>false</strong>.\r\n</pre>\r\n\r\n<p><b>Follow up</b>: How would you extend your design to be generic and work with all types, not just integer?</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"109.6K\", \"totalSubmission\": \"232K\", \"totalAcceptedRaw\": 109603, \"totalSubmissionRaw\": 232047, \"acRate\": \"47.2%\"}", "similarQuestions": "[{\"title\": \"Binary Search Tree Iterator\", \"titleSlug\": \"binary-search-tree-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Flatten 2D Vector\", \"titleSlug\": \"flatten-2d-vector\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Zigzag Iterator\", \"titleSlug\": \"zigzag-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}]}}, {"id": "281", "name": "zigzag-iterator", "content": {"questionId": "281", "questionFrontendId": "281", "questionTitle": "Zigzag Iterator", "questionTitleSlug": "zigzag-iterator", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"67.9K\", \"totalSubmission\": \"114.8K\", \"totalAcceptedRaw\": 67886, \"totalSubmissionRaw\": 114839, \"acRate\": \"59.1%\"}", "similarQuestions": "[{\"title\": \"Binary Search Tree Iterator\", \"titleSlug\": \"binary-search-tree-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Flatten 2D Vector\", \"titleSlug\": \"flatten-2d-vector\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Peeking Iterator\", \"titleSlug\": \"peeking-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Flatten Nested List Iterator\", \"titleSlug\": \"flatten-nested-list-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}]}}, {"id": "280", "name": "wiggle-sort", "content": {"questionId": "280", "questionFrontendId": "280", "questionTitle": "Wiggle Sort", "questionTitleSlug": "wiggle-sort", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"94.5K\", \"totalSubmission\": \"146.7K\", \"totalAcceptedRaw\": 94469, \"totalSubmissionRaw\": 146662, \"acRate\": \"64.4%\"}", "similarQuestions": "[{\"title\": \"Sort Colors\", \"titleSlug\": \"sort-colors\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Wiggle Sort II\", \"titleSlug\": \"wiggle-sort-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "279", "name": "perfect-squares", "content": {"questionId": "279", "questionFrontendId": "279", "questionTitle": "Perfect Squares", "questionTitleSlug": "perfect-squares", "content": "<p>Given a positive integer <i>n</i>, find the least number of perfect square numbers (for example, <code>1, 4, 9, 16, ...</code>) which sum to <i>n</i>.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> <i>n</i> = <code>12</code>\r\n<b>Output:</b> 3 \r\n<strong>Explanation: </strong><code>12 = 4 + 4 + 4.</code></pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> <i>n</i> = <code>13</code>\r\n<b>Output:</b> 2\r\n<strong>Explanation: </strong><code>13 = 4 + 9.</code></pre>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"359.5K\", \"totalSubmission\": \"742.3K\", \"totalAcceptedRaw\": 359470, \"totalSubmissionRaw\": 742309, \"acRate\": \"48.4%\"}", "similarQuestions": "[{\"title\": \"Count Primes\", \"titleSlug\": \"count-primes\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Ugly Number II\", \"titleSlug\": \"ugly-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "277", "name": "find-the-celebrity", "content": {"questionId": "277", "questionFrontendId": "277", "questionTitle": "Find the Celebrity", "questionTitleSlug": "find-the-celebrity", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"144.6K\", \"totalSubmission\": \"336.7K\", \"totalAcceptedRaw\": 144613, \"totalSubmissionRaw\": 336708, \"acRate\": \"42.9%\"}", "similarQuestions": "[{\"title\": \"Find the Town Judge\", \"titleSlug\": \"find-the-town-judge\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "275", "name": "h-index-ii", "content": {"questionId": "275", "questionFrontendId": "275", "questionTitle": "H-Index II", "questionTitleSlug": "h-index-ii", "content": "<p>Given an array of citations <strong>sorted&nbsp;in ascending order </strong>(each citation is a non-negative integer) of a researcher, write a function to compute the researcher&#39;s h-index.</p>\r\n\r\n<p>According to the&nbsp;<a href=\"https://en.wikipedia.org/wiki/H-index\" target=\"_blank\">definition of h-index on Wikipedia</a>: &quot;A scientist has index&nbsp;<i>h</i>&nbsp;if&nbsp;<i>h</i>&nbsp;of his/her&nbsp;<i>N</i>&nbsp;papers have&nbsp;<b>at least</b>&nbsp;<i>h</i>&nbsp;citations each, and the other&nbsp;<i>N &minus; h</i>&nbsp;papers have&nbsp;<b>no more than</b>&nbsp;<i>h&nbsp;</i>citations each.&quot;</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> <code>citations = [0,1,3,5,6]</code>\r\n<b>Output:</b> 3 \r\n<strong>Explanation: </strong><code>[0,1,3,5,6] </code>means the researcher has <code>5</code> papers in total and each of them had \r\n             received 0<code>, 1, 3, 5, 6</code> citations respectively. \r\n&nbsp;            Since the researcher has <code>3</code> papers with <b>at least</b> <code>3</code> citations each and the remaining \r\n&nbsp;            two with <b>no more than</b> <code>3</code> citations each, her h-index is <code>3</code>.</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<p>If there are several possible values for&nbsp;<em>h</em>, the maximum one is taken as the h-index.</p>\r\n\r\n<p><strong>Follow up:</strong></p>\r\n\r\n<ul>\r\n\t<li>This is a follow up problem to&nbsp;<a href=\"/problems/h-index/description/\">H-Index</a>, where <code>citations</code> is now guaranteed to be sorted in ascending order.</li>\r\n\t<li>Could you solve it in logarithmic time complexity?</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"136.1K\", \"totalSubmission\": \"376K\", \"totalAcceptedRaw\": 136096, \"totalSubmissionRaw\": 376008, \"acRate\": \"36.2%\"}", "similarQuestions": "[{\"title\": \"H-Index\", \"titleSlug\": \"h-index\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "274", "name": "h-index", "content": {"questionId": "274", "questionFrontendId": "274", "questionTitle": "H-Index", "questionTitleSlug": "h-index", "content": "<p>Given an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher&#39;s h-index.</p>\r\n\r\n<p>According to the <a href=\"https://en.wikipedia.org/wiki/H-index\" target=\"_blank\">definition of h-index on Wikipedia</a>: &quot;A scientist has index <i>h</i> if <i>h</i> of his/her <i>N</i> papers have <b>at least</b> <i>h</i> citations each, and the other <i>N &minus; h</i> papers have <b>no more than</b> <i>h</i> citations each.&quot;</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> <code>citations = [3,0,6,1,5]</code>\r\n<b>Output:</b> 3 \r\n<strong>Explanation: </strong><code>[3,0,6,1,5] </code>means the researcher has <code>5</code> papers in total and each of them had \r\n             received <code>3, 0, 6, 1, 5</code> citations respectively. \r\n&nbsp;            Since the researcher has <code>3</code> papers with <b>at least</b> <code>3</code> citations each and the remaining \r\n&nbsp;            two with <b>no more than</b> <code>3</code> citations each, her h-index is <code>3</code>.</pre>\r\n\r\n<p><strong>Note:&nbsp;</strong>If there are several possible values for <em>h</em>, the maximum one is taken as the h-index.</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"193.4K\", \"totalSubmission\": \"532.4K\", \"totalAcceptedRaw\": 193421, \"totalSubmissionRaw\": 532420, \"acRate\": \"36.3%\"}", "similarQuestions": "[{\"title\": \"H-Index II\", \"titleSlug\": \"h-index-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "271", "name": "encode-and-decode-strings", "content": {"questionId": "271", "questionFrontendId": "271", "questionTitle": "Encode and Decode Strings", "questionTitleSlug": "encode-and-decode-strings", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"64.5K\", \"totalSubmission\": \"199.2K\", \"totalAcceptedRaw\": 64463, \"totalSubmissionRaw\": 199219, \"acRate\": \"32.4%\"}", "similarQuestions": "[{\"title\": \"Count and Say\", \"titleSlug\": \"count-and-say\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Serialize and Deserialize Binary Tree\", \"titleSlug\": \"serialize-and-deserialize-binary-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"String Compression\", \"titleSlug\": \"string-compression\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Binary Substrings\", \"titleSlug\": \"count-binary-substrings\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "267", "name": "palindrome-permutation-ii", "content": {"questionId": "267", "questionFrontendId": "267", "questionTitle": "Palindrome Permutation II", "questionTitleSlug": "palindrome-permutation-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"41.6K\", \"totalSubmission\": \"112.1K\", \"totalAcceptedRaw\": 41595, \"totalSubmissionRaw\": 112089, \"acRate\": \"37.1%\"}", "similarQuestions": "[{\"title\": \"Next Permutation\", \"titleSlug\": \"next-permutation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutations II\", \"titleSlug\": \"permutations-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Palindrome Permutation\", \"titleSlug\": \"palindrome-permutation\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "264", "name": "ugly-number-ii", "content": {"questionId": "264", "questionFrontendId": "264", "questionTitle": "Ugly Number II", "questionTitleSlug": "ugly-number-ii", "content": "<p>Write a program to find the <code>n</code>-th ugly number.</p>\r\n\r\n<p>Ugly numbers are<strong> positive numbers</strong> whose prime factors only include <code>2, 3, 5</code>.&nbsp;</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 10\r\n<strong>Output:</strong> 12\r\n<strong>Explanation: </strong><code>1, 2, 3, 4, 5, 6, 8, 9, 10, 12</code> is the sequence of the first <code>10</code> ugly numbers.</pre>\r\n\r\n<p><strong>Note: </strong>&nbsp;</p>\r\n\r\n<ol>\r\n\t<li><code>1</code> is typically treated as an ugly number.</li>\r\n\t<li><code>n</code> <b>does not exceed 1690</b>.</li>\r\n</ol>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"194.2K\", \"totalSubmission\": \"455.4K\", \"totalAcceptedRaw\": 194227, \"totalSubmissionRaw\": 455430, \"acRate\": \"42.6%\"}", "similarQuestions": "[{\"title\": \"Merge k Sorted Lists\", \"titleSlug\": \"merge-k-sorted-lists\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Primes\", \"titleSlug\": \"count-primes\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Ugly Number\", \"titleSlug\": \"ugly-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Perfect Squares\", \"titleSlug\": \"perfect-squares\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Super Ugly Number\", \"titleSlug\": \"super-ugly-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Ugly Number III\", \"titleSlug\": \"ugly-number-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Heap", "slug": "heap"}]}}, {"id": "261", "name": "graph-valid-tree", "content": {"questionId": "261", "questionFrontendId": "261", "questionTitle": "Graph Valid Tree", "questionTitleSlug": "graph-valid-tree", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"145.6K\", \"totalSubmission\": \"340K\", \"totalAcceptedRaw\": 145587, \"totalSubmissionRaw\": 340009, \"acRate\": \"42.8%\"}", "similarQuestions": "[{\"title\": \"Course Schedule\", \"titleSlug\": \"course-schedule\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Connected Components in an Undirected Graph\", \"titleSlug\": \"number-of-connected-components-in-an-undirected-graph\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}, {"name": "Union Find", "slug": "union-find"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "260", "name": "single-number-iii", "content": {"questionId": "260", "questionFrontendId": "260", "questionTitle": "Single Number III", "questionTitleSlug": "single-number-iii", "content": "<p>Given an integer array <code>nums</code>, in which exactly two elements appear only once and all the other elements appear exactly twice. Find the two elements that appear only once. You can return the answer in <strong>any order</strong>.</p>\n\n<p><strong>Follow up:&nbsp;</strong>Your algorithm should run in linear runtime complexity. Could you implement it using only constant space complexity?</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,1,3,2,5]\n<strong>Output:</strong> [3,5]\n<strong>Explanation: </strong> [5, 3] is also a valid answer.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,0]\n<strong>Output:</strong> [-1,0]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,1]\n<strong>Output:</strong> [1,0]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li>Each integer in <code>nums</code> will appear twice, only two integers will appear once.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"179.3K\", \"totalSubmission\": \"274.9K\", \"totalAcceptedRaw\": 179291, \"totalSubmissionRaw\": 274939, \"acRate\": \"65.2%\"}", "similarQuestions": "[{\"title\": \"Single Number\", \"titleSlug\": \"single-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Single Number II\", \"titleSlug\": \"single-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "259", "name": "3sum-smaller", "content": {"questionId": "259", "questionFrontendId": "259", "questionTitle": "3Sum Smaller", "questionTitleSlug": "3sum-smaller", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"78.1K\", \"totalSubmission\": \"160.9K\", \"totalAcceptedRaw\": 78106, \"totalSubmissionRaw\": 160861, \"acRate\": \"48.6%\"}", "similarQuestions": "[{\"title\": \"3Sum\", \"titleSlug\": \"3sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"3Sum Closest\", \"titleSlug\": \"3sum-closest\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Valid Triangle Number\", \"titleSlug\": \"valid-triangle-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum Less Than K\", \"titleSlug\": \"two-sum-less-than-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "256", "name": "paint-house", "content": {"questionId": "256", "questionFrontendId": "256", "questionTitle": "Paint House", "questionTitleSlug": "paint-house", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"99.4K\", \"totalSubmission\": \"187.4K\", \"totalAcceptedRaw\": 99437, \"totalSubmissionRaw\": 187386, \"acRate\": \"53.1%\"}", "similarQuestions": "[{\"title\": \"House Robber\", \"titleSlug\": \"house-robber\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"House Robber II\", \"titleSlug\": \"house-robber-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paint House II\", \"titleSlug\": \"paint-house-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Paint Fence\", \"titleSlug\": \"paint-fence\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "255", "name": "verify-preorder-sequence-in-binary-search-tree", "content": {"questionId": "255", "questionFrontendId": "255", "questionTitle": "Verify Preorder Sequence in Binary Search Tree", "questionTitleSlug": "verify-preorder-sequence-in-binary-search-tree", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"52.4K\", \"totalSubmission\": \"113.9K\", \"totalAcceptedRaw\": 52382, \"totalSubmissionRaw\": 113896, \"acRate\": \"46.0%\"}", "similarQuestions": "[{\"title\": \"Binary Tree Preorder Traversal\", \"titleSlug\": \"binary-tree-preorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "254", "name": "factor-combinations", "content": {"questionId": "254", "questionFrontendId": "254", "questionTitle": "Factor Combinations", "questionTitleSlug": "factor-combinations", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"78K\", \"totalSubmission\": \"165.4K\", \"totalAcceptedRaw\": 77975, \"totalSubmissionRaw\": 165386, \"acRate\": \"47.1%\"}", "similarQuestions": "[{\"title\": \"Combination Sum\", \"titleSlug\": \"combination-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "253", "name": "meeting-rooms-ii", "content": {"questionId": "253", "questionFrontendId": "253", "questionTitle": "Meeting Rooms II", "questionTitleSlug": "meeting-rooms-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"362.8K\", \"totalSubmission\": \"781.1K\", \"totalAcceptedRaw\": 362772, \"totalSubmissionRaw\": 781125, \"acRate\": \"46.4%\"}", "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Meeting Rooms\", \"titleSlug\": \"meeting-rooms\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Arrows to Burst Balloons\", \"titleSlug\": \"minimum-number-of-arrows-to-burst-balloons\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Car Pooling\", \"titleSlug\": \"car-pooling\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Heap", "slug": "heap"}, {"name": "Greedy", "slug": "greedy"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "251", "name": "flatten-2d-vector", "content": {"questionId": "251", "questionFrontendId": "251", "questionTitle": "Flatten 2D Vector", "questionTitleSlug": "flatten-2d-vector", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"82.7K\", \"totalSubmission\": \"179.2K\", \"totalAcceptedRaw\": 82699, \"totalSubmissionRaw\": 179181, \"acRate\": \"46.2%\"}", "similarQuestions": "[{\"title\": \"Binary Search Tree Iterator\", \"titleSlug\": \"binary-search-tree-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Zigzag Iterator\", \"titleSlug\": \"zigzag-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Peeking Iterator\", \"titleSlug\": \"peeking-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Flatten Nested List Iterator\", \"titleSlug\": \"flatten-nested-list-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}]}}, {"id": "250", "name": "count-univalue-subtrees", "content": {"questionId": "250", "questionFrontendId": "250", "questionTitle": "Count Univalue Subtrees", "questionTitleSlug": "count-univalue-subtrees", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"78.1K\", \"totalSubmission\": \"147.6K\", \"totalAcceptedRaw\": 78077, \"totalSubmissionRaw\": 147564, \"acRate\": \"52.9%\"}", "similarQuestions": "[{\"title\": \"Subtree of Another Tree\", \"titleSlug\": \"subtree-of-another-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Longest Univalue Path\", \"titleSlug\": \"longest-univalue-path\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "249", "name": "group-shifted-strings", "content": {"questionId": "249", "questionFrontendId": "249", "questionTitle": "Group Shifted Strings", "questionTitleSlug": "group-shifted-strings", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"89.8K\", \"totalSubmission\": \"156.7K\", \"totalAcceptedRaw\": 89793, \"totalSubmissionRaw\": 156650, \"acRate\": \"57.3%\"}", "similarQuestions": "[{\"title\": \"Group Anagrams\", \"titleSlug\": \"group-anagrams\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "String", "slug": "string"}]}}, {"id": "247", "name": "strobogrammatic-number-ii", "content": {"questionId": "247", "questionFrontendId": "247", "questionTitle": "Strobogrammatic Number II", "questionTitleSlug": "strobogrammatic-number-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"85.3K\", \"totalSubmission\": \"177K\", \"totalAcceptedRaw\": 85296, \"totalSubmissionRaw\": 176954, \"acRate\": \"48.2%\"}", "similarQuestions": "[{\"title\": \"Strobogrammatic Number\", \"titleSlug\": \"strobogrammatic-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Strobogrammatic Number III\", \"titleSlug\": \"strobogrammatic-number-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Recursion", "slug": "recursion"}]}}, {"id": "245", "name": "shortest-word-distance-iii", "content": {"questionId": "245", "questionFrontendId": "245", "questionTitle": "Shortest Word Distance III", "questionTitleSlug": "shortest-word-distance-iii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"52.6K\", \"totalSubmission\": \"94.3K\", \"totalAcceptedRaw\": 52591, \"totalSubmissionRaw\": 94346, \"acRate\": \"55.7%\"}", "similarQuestions": "[{\"title\": \"Shortest Word Distance\", \"titleSlug\": \"shortest-word-distance\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Shortest Word Distance II\", \"titleSlug\": \"shortest-word-distance-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "244", "name": "shortest-word-distance-ii", "content": {"questionId": "244", "questionFrontendId": "244", "questionTitle": "Shortest Word Distance II", "questionTitleSlug": "shortest-word-distance-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"77K\", \"totalSubmission\": \"144.5K\", \"totalAcceptedRaw\": 77041, \"totalSubmissionRaw\": 144490, \"acRate\": \"53.3%\"}", "similarQuestions": "[{\"title\": \"Merge Two Sorted Lists\", \"titleSlug\": \"merge-two-sorted-lists\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Shortest Word Distance\", \"titleSlug\": \"shortest-word-distance\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Shortest Word Distance III\", \"titleSlug\": \"shortest-word-distance-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Design", "slug": "design"}]}}, {"id": "241", "name": "different-ways-to-add-parentheses", "content": {"questionId": "241", "questionFrontendId": "241", "questionTitle": "Different Ways to Add Parentheses", "questionTitleSlug": "different-ways-to-add-parentheses", "content": "<p>Given a string of numbers and operators, return all possible results from computing all the different possible ways to group numbers and operators. The valid operators are <code>+</code>, <code>-</code> and <code>*</code>.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> <code>&quot;2-1-1&quot;</code>\r\n<b>Output:</b> <code>[0, 2]</code>\r\n<strong>Explanation: </strong>\r\n((2-1)-1) = 0 \r\n(2-(1-1)) = 2</pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input: </b><code>&quot;2*3-4*5&quot;</code>\r\n<b>Output:</b> <code>[-34, -14, -10, -10, 10]</code>\r\n<strong>Explanation: \r\n</strong>(2*(3-(4*5))) = -34 \r\n((2*3)-(4*5)) = -14 \r\n((2*(3-4))*5) = -10 \r\n(2*((3-4)*5)) = -10 \r\n(((2*3)-4)*5) = 10<strong>\r\n</strong></pre>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"113.8K\", \"totalSubmission\": \"200.5K\", \"totalAcceptedRaw\": 113758, \"totalSubmissionRaw\": 200515, \"acRate\": \"56.7%\"}", "similarQuestions": "[{\"title\": \"Unique Binary Search Trees II\", \"titleSlug\": \"unique-binary-search-trees-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator\", \"titleSlug\": \"basic-calculator\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Expression Add Operators\", \"titleSlug\": \"expression-add-operators\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Divide and Conquer", "slug": "divide-and-conquer"}]}}, {"id": "240", "name": "search-a-2d-matrix-ii", "content": {"questionId": "240", "questionFrontendId": "240", "questionTitle": "Search a 2D Matrix II", "questionTitleSlug": "search-a-2d-matrix-ii", "content": "<p>Write an efficient algorithm that searches for a <code>target</code> value in an <code>m x n</code>&nbsp;integer <code>matrix</code>. The <code>matrix</code> has the following properties:</p>\n\n<ul>\n\t<li>Integers in each row are sorted in ascending from left to right.</li>\n\t<li>Integers in each column are sorted in ascending from top to bottom.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/24/searchgrid2.jpg\" style=\"width: 300px; height: 300px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 5\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/24/searchgrid.jpg\" style=\"width: 300px; height: 300px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 20\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[i].length</code></li>\n\t<li><code>1 &lt;= n, m &lt;= 300</code></li>\n\t<li><code>-10<sup>9</sup> &lt;= matix[i][j] &lt;= 10<sup>9</sup></code></li>\n\t<li>All the integers in each row are <strong>sorted</strong> in ascending order.</li>\n\t<li>All the integers in each column are <strong>sorted</strong> in ascending order.</li>\n\t<li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"380.9K\", \"totalSubmission\": \"868.2K\", \"totalAcceptedRaw\": 380881, \"totalSubmissionRaw\": 868248, \"acRate\": \"43.9%\"}", "similarQuestions": "[{\"title\": \"Search a 2D Matrix\", \"titleSlug\": \"search-a-2d-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Divide and Conquer", "slug": "divide-and-conquer"}]}}, {"id": "238", "name": "product-of-array-except-self", "content": {"questionId": "238", "questionFrontendId": "238", "questionTitle": "Product of Array Except Self", "questionTitleSlug": "product-of-array-except-self", "content": "<p>Given an array <code>nums</code> of <em>n</em> integers where <em>n</em> &gt; 1, &nbsp;return an array <code>output</code> such that <code>output[i]</code> is equal to the product of all the elements of <code>nums</code> except <code>nums[i]</code>.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b>  <code>[1,2,3,4]</code>\n<b>Output:</b> <code>[24,12,8,6]</code>\n</pre>\n\n<p><strong>Constraint:</strong>&nbsp;It&#39;s guaranteed that the product of the elements of any prefix or suffix of the array (including the whole array) fits in a 32 bit integer.</p>\n\n<p><strong>Note: </strong>Please solve it <strong>without division</strong> and in O(<em>n</em>).</p>\n\n<p><strong>Follow up:</strong><br />\nCould you solve it with constant space complexity? (The output array <strong>does not</strong> count as extra space for the purpose of space complexity analysis.)</p>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"664.7K\", \"totalSubmission\": \"1.1M\", \"totalAcceptedRaw\": 664689, \"totalSubmissionRaw\": 1087912, \"acRate\": \"61.1%\"}", "similarQuestions": "[{\"title\": \"Trapping Rain Water\", \"titleSlug\": \"trapping-rain-water\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Product Subarray\", \"titleSlug\": \"maximum-product-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paint House II\", \"titleSlug\": \"paint-house-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "236", "name": "lowest-common-ancestor-of-a-binary-tree", "content": {"questionId": "236", "questionFrontendId": "236", "questionTitle": "Lowest Common Ancestor of a Binary Tree", "questionTitleSlug": "lowest-common-ancestor-of-a-binary-tree", "content": "<p>Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.</p>\n\n<p>According to the <a href=\"https://en.wikipedia.org/wiki/Lowest_common_ancestor\" target=\"_blank\">definition of LCA on Wikipedia</a>: &ldquo;The lowest common ancestor is defined between two nodes p&nbsp;and q&nbsp;as the lowest node in T that has both p&nbsp;and q&nbsp;as descendants (where we allow <b>a node to be a descendant of itself</b>).&rdquo;</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/14/binarytree.png\" style=\"width: 200px; height: 190px;\" />\n<pre>\n<strong>Input:</strong> root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The LCA of nodes 5 and 1 is 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/14/binarytree.png\" style=\"width: 200px; height: 190px;\" />\n<pre>\n<strong>Input:</strong> root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The LCA of nodes 5 and 4 is 5, since a node can be a descendant of itself according to the LCA definition.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,2], p = 1, q = 2\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[2, 10<sup>5</sup>]</code>.</li>\n\t<li><code>-10<sup>9</sup> &lt;= Node.val &lt;= 10<sup>9</sup></code></li>\n\t<li>All <code>Node.val</code> are <strong>unique</strong>.</li>\n\t<li><code>p != q</code></li>\n\t<li><code>p</code> and <code>q</code> will&nbsp;exist in the tree.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"563.9K\", \"totalSubmission\": \"1.2M\", \"totalAcceptedRaw\": 563948, \"totalSubmissionRaw\": 1179627, \"acRate\": \"47.8%\"}", "similarQuestions": "[{\"title\": \"Lowest Common Ancestor of a Binary Search Tree\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-search-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Smallest Common Region\", \"titleSlug\": \"smallest-common-region\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree II\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree III\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree IV\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "230", "name": "kth-smallest-element-in-a-bst", "content": {"questionId": "230", "questionFrontendId": "230", "questionTitle": "Kth Smallest Element in a BST", "questionTitleSlug": "kth-smallest-element-in-a-bst", "content": "<p>Given a binary search tree, write a function <code>kthSmallest</code> to find the <b>k</b>th smallest element in it.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [3,1,4,null,2], k = 1\n   3\n  / \\\n 1   4\n  \\\n&nbsp;  2\n<strong>Output:</strong> 1</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [5,3,6,2,4,null,null,1], k = 3\n       5\n      / \\\n     3   6\n    / \\\n   2   4\n  /\n 1\n<strong>Output:</strong> 3\n</pre>\n\n<p><b>Follow up:</b><br />\nWhat if the BST is modified (insert/delete operations) often and you need to find the kth smallest frequently? How would you optimize the kthSmallest routine?</p>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of elements of the BST is between <code>1</code> to <code>10^4</code>.</li>\n\t<li>You may assume <code>k</code> is always valid, <code>1 &le; k &le; BST&#39;s total elements</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"475.9K\", \"totalSubmission\": \"768.8K\", \"totalAcceptedRaw\": 475918, \"totalSubmissionRaw\": 768849, \"acRate\": \"61.9%\"}", "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Second Minimum Node In a Binary Tree\", \"titleSlug\": \"second-minimum-node-in-a-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "229", "name": "majority-element-ii", "content": {"questionId": "229", "questionFrontendId": "229", "questionTitle": "Majority Element II", "questionTitleSlug": "majority-element-ii", "content": "<p>Given an integer array of size <code>n</code>, find all elements that appear more than <code>&lfloor; n/3 &rfloor;</code> times.</p>\n\n<p><strong>Follow-up: </strong>Could you solve the problem&nbsp;in linear time and in O(1) space?</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,3]\n<strong>Output:</strong> [3]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1]\n<strong>Output:</strong> [1]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2]\n<strong>Output:</strong> [1,2]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"185.9K\", \"totalSubmission\": \"484.9K\", \"totalAcceptedRaw\": 185946, \"totalSubmissionRaw\": 484924, \"acRate\": \"38.3%\"}", "similarQuestions": "[{\"title\": \"Majority Element\", \"titleSlug\": \"majority-element\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Check If a Number Is Majority Element in a Sorted Array\", \"titleSlug\": \"check-if-a-number-is-majority-element-in-a-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "227", "name": "basic-calculator-ii", "content": {"questionId": "227", "questionFrontendId": "227", "questionTitle": "Basic Calculator II", "questionTitleSlug": "basic-calculator-ii", "content": "<p>Given a string <code>s</code> which represents an expression, <em>evaluate this expression and return its value</em>.&nbsp;</p>\n\n<p>The integer division should truncate toward zero.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"3+2*2\"\n<strong>Output:</strong> 7\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \" 3/2 \"\n<strong>Output:</strong> 1\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \" 3+5 / 2 \"\n<strong>Output:</strong> 5\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 3 * 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists of integers and operators <code>(&#39;+&#39;, &#39;-&#39;, &#39;*&#39;, &#39;/&#39;)</code> separated by some number of spaces.</li>\n\t<li><code>s</code> represents <strong>a valid expression</strong>.</li>\n\t<li>All the integers in the expression are non-negative integers in the range <code>[0, 2<sup>31</sup> - 1]</code>.</li>\n\t<li>The answer is <strong>guaranteed</strong> to fit in a <strong>32-bit integer</strong>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"235.5K\", \"totalSubmission\": \"617.6K\", \"totalAcceptedRaw\": 235547, \"totalSubmissionRaw\": 617556, \"acRate\": \"38.1%\"}", "similarQuestions": "[{\"title\": \"Basic Calculator\", \"titleSlug\": \"basic-calculator\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Expression Add Operators\", \"titleSlug\": \"expression-add-operators\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator III\", \"titleSlug\": \"basic-calculator-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Stack", "slug": "stack"}]}}, {"id": "223", "name": "rectangle-area", "content": {"questionId": "223", "questionFrontendId": "223", "questionTitle": "Rectangle Area", "questionTitleSlug": "rectangle-area", "content": "<p>Find the total area covered by two <strong>rectilinear</strong> rectangles in a <strong>2D</strong> plane.</p>\r\n\r\n<p>Each rectangle is defined by its bottom left corner and top right corner as shown in the figure.</p>\r\n\r\n<p><img alt=\"Rectangle Area\" src=\"https://assets.leetcode.com/uploads/2018/10/22/rectangle_area.png\" style=\"width: 542px; height: 304px;\" /></p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">-3</span>, B = <span id=\"example-input-1-2\">0</span>, C = <span id=\"example-input-1-3\">3</span>, D = <span id=\"example-input-1-4\">4</span>, E = <span id=\"example-input-1-5\">0</span>, F = <span id=\"example-input-1-6\">-1</span>, G = <span id=\"example-input-1-7\">9</span>, H = <span id=\"example-input-1-8\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">45</span></pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<p>Assume that the total area is never beyond the maximum possible value of <strong>int</strong>.</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"114K\", \"totalSubmission\": \"299.5K\", \"totalAcceptedRaw\": 113978, \"totalSubmissionRaw\": 299452, \"acRate\": \"38.1%\"}", "similarQuestions": "[{\"title\": \"Rectangle Overlap\", \"titleSlug\": \"rectangle-overlap\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "222", "name": "count-complete-tree-nodes", "content": {"questionId": "222", "questionFrontendId": "222", "questionTitle": "Count Complete Tree Nodes", "questionTitleSlug": "count-complete-tree-nodes", "content": "<p>Given a <b>complete</b> binary tree, count the number of nodes.</p>\r\n\r\n<p><b>Note: </b></p>\r\n\r\n<p><b><u>Definition of a complete binary tree from <a href=\"http://en.wikipedia.org/wiki/Binary_tree#Types_of_binary_trees\" target=\"_blank\">Wikipedia</a>:</u></b><br />\r\nIn a complete binary tree every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between 1 and 2<sup>h</sup> nodes inclusive at the last level h.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> \r\n    1\r\n   / \\\r\n  2   3\r\n / \\  /\r\n4  5 6\r\n\r\n<strong>Output:</strong> 6</pre>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"269.2K\", \"totalSubmission\": \"554.9K\", \"totalAcceptedRaw\": 269206, \"totalSubmissionRaw\": 554929, \"acRate\": \"48.5%\"}", "similarQuestions": "[{\"title\": \"Closest Binary Search Tree Value\", \"titleSlug\": \"closest-binary-search-tree-value\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "221", "name": "maximal-square", "content": {"questionId": "221", "questionFrontendId": "221", "questionTitle": "Maximal Square", "questionTitleSlug": "maximal-square", "content": "<p>Given an <code>m x n</code> binary <code>matrix</code> filled with <code>0</code>&#39;s and <code>1</code>&#39;s, <em>find the largest square containing only</em> <code>1</code>&#39;s <em>and return its area</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/26/max1grid.jpg\" style=\"width: 400px; height: 319px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;],[&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],[&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],[&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;]]\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/26/max2grid.jpg\" style=\"width: 165px; height: 165px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[&quot;0&quot;,&quot;1&quot;],[&quot;1&quot;,&quot;0&quot;]]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix = [[&quot;0&quot;]]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 300</code></li>\n\t<li><code>matrix[i][j]</code> is <code>&#39;0&#39;</code> or <code>&#39;1&#39;</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"313.7K\", \"totalSubmission\": \"816K\", \"totalAcceptedRaw\": 313709, \"totalSubmissionRaw\": 816050, \"acRate\": \"38.4%\"}", "similarQuestions": "[{\"title\": \"Maximal Rectangle\", \"titleSlug\": \"maximal-rectangle\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Largest Plus Sign\", \"titleSlug\": \"largest-plus-sign\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "220", "name": "contains-duplicate-iii", "content": {"questionId": "220", "questionFrontendId": "220", "questionTitle": "Contains Duplicate III", "questionTitleSlug": "contains-duplicate-iii", "content": "<p>Given an array of integers, find out whether there are two distinct indices <i>i</i> and <i>j</i> in the array such that the <b>absolute</b> difference between <b>nums[i]</b> and <b>nums[j]</b> is at most <i>t</i> and the <b>absolute</b> difference between <i>i</i> and <i>j</i> is at most <i>k</i>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3,1], k = 3, t = 0\n<strong>Output:</strong> true\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [1,0,1,1], k = 1, t = 2\n<strong>Output:</strong> true\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1,5,9,1,5,9], k = 2, t = 3\n<strong>Output:</strong> false\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= nums.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i]&nbsp;&lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>0 &lt;= k &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= t &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"161.9K\", \"totalSubmission\": \"759.8K\", \"totalAcceptedRaw\": 161936, \"totalSubmissionRaw\": 759820, \"acRate\": \"21.3%\"}", "similarQuestions": "[{\"title\": \"Contains Duplicate\", \"titleSlug\": \"contains-duplicate\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Contains Duplicate II\", \"titleSlug\": \"contains-duplicate-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Sort", "slug": "sort"}, {"name": "Ordered Map", "slug": "ordered-map"}]}}, {"id": "216", "name": "combination-sum-iii", "content": {"questionId": "216", "questionFrontendId": "216", "questionTitle": "Combination Sum III", "questionTitleSlug": "combination-sum-iii", "content": "<p>Find all valid combinations of <code>k</code> numbers that sum up to <code>n</code> such that the following conditions are true:</p>\n\n<ul>\n\t<li>Only numbers <code>1</code> through <code>9</code> are used.</li>\n\t<li>Each number is used <strong>at most once</strong>.</li>\n</ul>\n\n<p>Return <em>a list of all possible valid combinations</em>. The list must not contain the same combination twice, and the combinations may be returned in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 3, n = 7\n<strong>Output:</strong> [[1,2,4]]\n<strong>Explanation:</strong>\n1 + 2 + 4 = 7\nThere are no other valid combinations.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 3, n = 9\n<strong>Output:</strong> [[1,2,6],[1,3,5],[2,3,4]]\n<strong>Explanation:</strong>\n1 + 2 + 6 = 9\n1 + 3 + 5 = 9\n2 + 3 + 4 = 9\nThere are no other valid combinations.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 4, n = 1\n<strong>Output:</strong> []\n<strong>Explanation:</strong> There are no valid combinations. [1,2,1] is not valid because 1 is used twice.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 3, n = 2\n<strong>Output:</strong> []\n<strong>Explanation:</strong> There are no valid combinations.\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 9, n = 45\n<strong>Output:</strong> [[1,2,3,4,5,6,7,8,9]]\n<strong>Explanation:</strong>\n1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 = 45\n\u200b\u200b\u200b\u200b\u200b\u200b\u200bThere are no other valid combinations.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= k &lt;= 9</code></li>\n\t<li><code>1 &lt;= n &lt;= 60</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"209.8K\", \"totalSubmission\": \"351.4K\", \"totalAcceptedRaw\": 209766, \"totalSubmissionRaw\": 351428, \"acRate\": \"59.7%\"}", "similarQuestions": "[{\"title\": \"Combination Sum\", \"titleSlug\": \"combination-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "215", "name": "kth-largest-element-in-an-array", "content": {"questionId": "215", "questionFrontendId": "215", "questionTitle": "Kth Largest Element in an Array", "questionTitleSlug": "kth-largest-element-in-an-array", "content": "<p>Find the <strong>k</strong>th largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> <code>[3,2,1,5,6,4] </code>and k = 2\r\n<strong>Output:</strong> 5\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> <code>[3,2,3,1,2,4,5,5,6] </code>and k = 4\r\n<strong>Output:</strong> 4</pre>\r\n\r\n<p><strong>Note: </strong><br />\r\nYou may assume k is always valid, 1 &le; k &le; array&#39;s length.</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"764.9K\", \"totalSubmission\": \"1.3M\", \"totalAcceptedRaw\": 764941, \"totalSubmissionRaw\": 1336486, \"acRate\": \"57.2%\"}", "similarQuestions": "[{\"title\": \"Wiggle Sort II\", \"titleSlug\": \"wiggle-sort-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Top K Frequent Elements\", \"titleSlug\": \"top-k-frequent-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Third Maximum Number\", \"titleSlug\": \"third-maximum-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Kth Largest Element in a Stream\", \"titleSlug\": \"kth-largest-element-in-a-stream\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"K Closest Points to Origin\", \"titleSlug\": \"k-closest-points-to-origin\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Divide and Conquer", "slug": "divide-and-conquer"}, {"name": "Heap", "slug": "heap"}]}}, {"id": "213", "name": "house-robber-ii", "content": {"questionId": "213", "questionFrontendId": "213", "questionTitle": "House Robber II", "questionTitleSlug": "house-robber-ii", "content": "<p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed. All houses at this place are <strong>arranged in a circle.</strong> That means the first house is the neighbor of the last one. Meanwhile, adjacent houses have a security system connected, and&nbsp;<b>it will automatically contact the police if two adjacent houses were broken into on the same night</b>.</p>\n\n<p>Given a list of non-negative integers <code>nums</code> representing the amount of money of each house, return <em>the maximum amount of money you can rob tonight <strong>without alerting the police</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,2]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> You cannot rob house 1 (money = 2) and then rob house 3 (money = 2), because they are adjacent houses.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,1]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Rob house 1 (money = 1) and then rob house 3 (money = 3).\nTotal amount you can rob = 1 + 3 = 4.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 1000</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"219.8K\", \"totalSubmission\": \"588.7K\", \"totalAcceptedRaw\": 219788, \"totalSubmissionRaw\": 588671, \"acRate\": \"37.3%\"}", "similarQuestions": "[{\"title\": \"House Robber\", \"titleSlug\": \"house-robber\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paint House\", \"titleSlug\": \"paint-house\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paint Fence\", \"titleSlug\": \"paint-fence\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"House Robber III\", \"titleSlug\": \"house-robber-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Non-negative Integers without Consecutive Ones\", \"titleSlug\": \"non-negative-integers-without-consecutive-ones\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Coin Path\", \"titleSlug\": \"coin-path\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "211", "name": "design-add-and-search-words-data-structure", "content": {"questionId": "211", "questionFrontendId": "211", "questionTitle": "Design Add and Search Words Data Structure", "questionTitleSlug": "design-add-and-search-words-data-structure", "content": "<p>Design a data structure that supports adding new words and finding if a string matches any previously added string.</p>\n\n<p>Implement the <code>WordDictionary</code> class:</p>\n\n<ul>\n\t<li><code>WordDictionary()</code>&nbsp;Initializes the object.</li>\n\t<li><code>void addWord(word)</code> Adds <code>word</code> to the data structure, it can be matched later.</li>\n\t<li><code>bool search(word)</code>&nbsp;Returns <code>true</code> if there is any string in the data structure that matches <code>word</code>&nbsp;or <code>false</code> otherwise. <code>word</code> may contain dots <code>&#39;.&#39;</code> where dots can be matched with any letter.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;WordDictionary&quot;,&quot;addWord&quot;,&quot;addWord&quot;,&quot;addWord&quot;,&quot;search&quot;,&quot;search&quot;,&quot;search&quot;,&quot;search&quot;]\n[[],[&quot;bad&quot;],[&quot;dad&quot;],[&quot;mad&quot;],[&quot;pad&quot;],[&quot;bad&quot;],[&quot;.ad&quot;],[&quot;b..&quot;]]\n<strong>Output</strong>\n[null,null,null,null,false,true,true,true]\n\n<strong>Explanation</strong>\nWordDictionary wordDictionary = new WordDictionary();\nwordDictionary.addWord(&quot;bad&quot;);\nwordDictionary.addWord(&quot;dad&quot;);\nwordDictionary.addWord(&quot;mad&quot;);\nwordDictionary.search(&quot;pad&quot;); // return False\nwordDictionary.search(&quot;bad&quot;); // return True\nwordDictionary.search(&quot;.ad&quot;); // return True\nwordDictionary.search(&quot;b..&quot;); // return True\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word.length &lt;= 500</code></li>\n\t<li><code>word</code> in <code>addWord</code> consists lower-case English letters.</li>\n\t<li><code>word</code> in <code>search</code> consist of&nbsp; <code>&#39;.&#39;</code> or lower-case English letters.</li>\n\t<li>At most <code>50000</code>&nbsp;calls will be made to <code>addWord</code>&nbsp;and <code>search</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"253.9K\", \"totalSubmission\": \"641.9K\", \"totalAcceptedRaw\": 253897, \"totalSubmissionRaw\": 641863, \"acRate\": \"39.6%\"}", "similarQuestions": "[{\"title\": \"Implement Trie (Prefix Tree)\", \"titleSlug\": \"implement-trie-prefix-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Prefix and Suffix Search\", \"titleSlug\": \"prefix-and-suffix-search\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Design", "slug": "design"}, {"name": "Trie", "slug": "trie"}]}}, {"id": "210", "name": "course-schedule-ii", "content": {"questionId": "210", "questionFrontendId": "210", "questionTitle": "Course Schedule II", "questionTitleSlug": "course-schedule-ii", "content": "<p>There are a total of <code>n</code> courses you have to take labelled from <code>0</code> to <code>n - 1</code>.</p>\n\n<p>Some courses may have <code>prerequisites</code>, for example, if&nbsp;<code>prerequisites[i] = [a<sub>i</sub>, b<sub>i</sub>]</code>&nbsp;this means you must take the course <code>b<sub>i</sub></code> before the course <code>a<sub>i</sub></code>.</p>\n\n<p>Given the total number of courses&nbsp;<code>numCourses</code> and a list of the <code>prerequisite</code> pairs, return the ordering of courses you should take to finish all courses.</p>\n\n<p>If there are many valid answers, return <strong>any</strong> of them.&nbsp;If it is impossible to finish all courses, return <strong>an empty array</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> numCourses = 2, prerequisites = [[1,0]]\n<strong>Output:</strong> [0,1]\n<strong>Explanation:</strong> There are a total of 2 courses to take. To take course 1 you should have finished course 0. So the correct course order is [0,1].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> numCourses = 4, prerequisites = [[1,0],[2,0],[3,1],[3,2]]\n<strong>Output:</strong> [0,2,1,3]\n<strong>Explanation:</strong> There are a total of 4 courses to take. To take course 3 you should have finished both courses 1 and 2. Both courses 1 and 2 should be taken after you finished course 0.\nSo one correct course order is [0,1,2,3]. Another correct ordering is [0,2,1,3].\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> numCourses = 1, prerequisites = []\n<strong>Output:</strong> [0]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= numCourses &lt;= 2000</code></li>\n\t<li><code>0 &lt;=&nbsp;prerequisites.length &lt;= numCourses * (numCourses - 1)</code></li>\n\t<li><code>prerequisites[i].length == 2</code></li>\n\t<li><code>0 &lt;= a<sub>i</sub>, b<sub>i</sub> &lt;&nbsp;numCourses</code></li>\n\t<li><code>a<sub>i</sub>&nbsp;!=&nbsp;b<sub>i</sub></code></li>\n\t<li>All the pairs <code>[a<sub>i</sub>, b<sub>i</sub>]</code> are <strong>distinct</strong>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"343.2K\", \"totalSubmission\": \"816.6K\", \"totalAcceptedRaw\": 343233, \"totalSubmissionRaw\": 816573, \"acRate\": \"42.0%\"}", "similarQuestions": "[{\"title\": \"Course Schedule\", \"titleSlug\": \"course-schedule\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Alien Dictionary\", \"titleSlug\": \"alien-dictionary\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Height Trees\", \"titleSlug\": \"minimum-height-trees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sequence Reconstruction\", \"titleSlug\": \"sequence-reconstruction\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Course Schedule III\", \"titleSlug\": \"course-schedule-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}, {"name": "Graph", "slug": "graph"}, {"name": "Topological Sort", "slug": "topological-sort"}]}}, {"id": "209", "name": "minimum-size-subarray-sum", "content": {"questionId": "209", "questionFrontendId": "209", "questionTitle": "Minimum Size Subarray Sum", "questionTitleSlug": "minimum-size-subarray-sum", "content": "<p>Given an array of <strong>n</strong> positive integers and a positive integer <strong>s</strong>, find the minimal length of a <b>contiguous</b> subarray of which the sum &ge; <strong>s</strong>. If there isn&#39;t one, return 0 instead.</p>\r\n\r\n<p><strong>Example:&nbsp;</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> <code>s = 7, nums = [2,3,1,2,4,3]</code>\r\n<strong>Output:</strong> 2\r\n<strong>Explanation: </strong>the subarray <code>[4,3]</code> has the minimal length under the problem constraint.</pre>\r\n\r\n<div class=\"spoilers\"><b>Follow up:</b></div>\r\n\r\n<div class=\"spoilers\">If you have figured out the <i>O</i>(<i>n</i>) solution, try coding another solution of which the time complexity is <i>O</i>(<i>n</i> log <i>n</i>).&nbsp;</div>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"317.6K\", \"totalSubmission\": \"813.5K\", \"totalAcceptedRaw\": 317600, \"totalSubmissionRaw\": 813534, \"acRate\": \"39.0%\"}", "similarQuestions": "[{\"title\": \"Minimum Window Substring\", \"titleSlug\": \"minimum-window-substring\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Size Subarray Sum Equals k\", \"titleSlug\": \"maximum-size-subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Length of Repeated Subarray\", \"titleSlug\": \"maximum-length-of-repeated-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Operations to Reduce X to Zero\", \"titleSlug\": \"minimum-operations-to-reduce-x-to-zero\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Two Pointers", "slug": "two-pointers"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "208", "name": "implement-trie-prefix-tree", "content": {"questionId": "208", "questionFrontendId": "208", "questionTitle": "Implement Trie (Prefix Tree)", "questionTitleSlug": "implement-trie-prefix-tree", "content": "<p>Implement a trie with <code>insert</code>, <code>search</code>, and <code>startsWith</code> methods.</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\nTrie trie = new Trie();\r\n\r\ntrie.insert(&quot;apple&quot;);\r\ntrie.search(&quot;apple&quot;);   // returns true\r\ntrie.search(&quot;app&quot;);     // returns false\r\ntrie.startsWith(&quot;app&quot;); // returns true\r\ntrie.insert(&quot;app&quot;);   \r\ntrie.search(&quot;app&quot;);     // returns true\r\n</pre>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ul>\r\n\t<li>You may assume that all inputs are consist of lowercase letters <code>a-z</code>.</li>\r\n\t<li>All inputs are guaranteed to be non-empty strings.</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"374.2K\", \"totalSubmission\": \"730.2K\", \"totalAcceptedRaw\": 374154, \"totalSubmissionRaw\": 730204, \"acRate\": \"51.2%\"}", "similarQuestions": "[{\"title\": \"Design Add and Search Words Data Structure\", \"titleSlug\": \"design-add-and-search-words-data-structure\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Design Search Autocomplete System\", \"titleSlug\": \"design-search-autocomplete-system\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Replace Words\", \"titleSlug\": \"replace-words\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Implement Magic Dictionary\", \"titleSlug\": \"implement-magic-dictionary\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}, {"name": "Trie", "slug": "trie"}]}}, {"id": "207", "name": "course-schedule", "content": {"questionId": "207", "questionFrontendId": "207", "questionTitle": "Course Schedule", "questionTitleSlug": "course-schedule", "content": "<p>There are a total of <code>numCourses</code> courses you have to take, labeled from <code>0</code> to <code>numCourses-1</code>.</p>\n\n<p>Some courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: <code>[0,1]</code></p>\n\n<p>Given the total number of courses and a list of prerequisite <b>pairs</b>, is it possible for you to finish all courses?</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> numCourses = 2, prerequisites = [[1,0]]\n<strong>Output:</strong> true\n<strong>Explanation:</strong>&nbsp;There are a total of 2 courses to take. \n&nbsp;            To take course 1 you should have finished course 0. So it is possible.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> numCourses = 2, prerequisites = [[1,0],[0,1]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong>&nbsp;There are a total of 2 courses to take. \n&nbsp;            To take course 1 you should have finished course 0, and to take course 0 you should\n&nbsp;            also have finished course 1. So it is impossible.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The input prerequisites is a graph represented by <b>a list of edges</b>, not adjacency matrices. Read more about <a href=\"https://www.khanacademy.org/computing/computer-science/algorithms/graph-representation/a/representing-graphs\" target=\"_blank\">how a graph is represented</a>.</li>\n\t<li>You may assume that there are no duplicate edges in the input prerequisites.</li>\n\t<li><code>1 &lt;=&nbsp;numCourses &lt;= 10^5</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"510.7K\", \"totalSubmission\": \"1.2M\", \"totalAcceptedRaw\": 510696, \"totalSubmissionRaw\": 1158684, \"acRate\": \"44.1%\"}", "similarQuestions": "[{\"title\": \"Course Schedule II\", \"titleSlug\": \"course-schedule-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Graph Valid Tree\", \"titleSlug\": \"graph-valid-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Height Trees\", \"titleSlug\": \"minimum-height-trees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Course Schedule III\", \"titleSlug\": \"course-schedule-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}, {"name": "Graph", "slug": "graph"}, {"name": "Topological Sort", "slug": "topological-sort"}]}}, {"id": "201", "name": "bitwise-and-of-numbers-range", "content": {"questionId": "201", "questionFrontendId": "201", "questionTitle": "Bitwise AND of Numbers Range", "questionTitleSlug": "bitwise-and-of-numbers-range", "content": "<p>Given a range [m, n] where 0 &lt;= m &lt;= n &lt;= 2147483647, return the bitwise AND of all numbers in this range, inclusive.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [5,7]\r\n<strong>Output:</strong> 4\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [0,1]\r\n<strong>Output:</strong> 0</pre>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"164.3K\", \"totalSubmission\": \"415.3K\", \"totalAcceptedRaw\": 164316, \"totalSubmissionRaw\": 415296, \"acRate\": \"39.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "200", "name": "number-of-islands", "content": {"questionId": "200", "questionFrontendId": "200", "questionTitle": "Number of Islands", "questionTitleSlug": "number-of-islands", "content": "<p>Given an <code>m x n</code> 2d <code>grid</code> map of <code>&#39;1&#39;</code>s (land) and <code>&#39;0&#39;</code>s (water), return <em>the number of islands</em>.</p>\n\n<p>An <strong>island</strong> is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [\n  [&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;0&quot;],\n  [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;],\n  [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],\n  [&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;]\n]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [\n  [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],\n  [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],\n  [&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;],\n  [&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;]\n]\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 300</code></li>\n\t<li><code>grid[i][j]</code> is <code>&#39;0&#39;</code> or <code>&#39;1&#39;</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"904.5K\", \"totalSubmission\": \"1.9M\", \"totalAcceptedRaw\": 904467, \"totalSubmissionRaw\": 1872267, \"acRate\": \"48.3%\"}", "similarQuestions": "[{\"title\": \"Surrounded Regions\", \"titleSlug\": \"surrounded-regions\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Walls and Gates\", \"titleSlug\": \"walls-and-gates\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Islands II\", \"titleSlug\": \"number-of-islands-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Connected Components in an Undirected Graph\", \"titleSlug\": \"number-of-connected-components-in-an-undirected-graph\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Distinct Islands\", \"titleSlug\": \"number-of-distinct-islands\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Max Area of Island\", \"titleSlug\": \"max-area-of-island\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}, {"name": "Union Find", "slug": "union-find"}]}}, {"id": "199", "name": "binary-tree-right-side-view", "content": {"questionId": "199", "questionFrontendId": "199", "questionTitle": "Binary Tree Right Side View", "questionTitleSlug": "binary-tree-right-side-view", "content": "<p>Given a binary tree, imagine yourself standing on the <em>right</em> side of it, return the values of the nodes you can see ordered from top to bottom.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>&nbsp;[1,2,3,null,5,null,4]\r\n<strong>Output:</strong>&nbsp;[1, 3, 4]\r\n<strong>Explanation:\r\n</strong>\r\n   1            &lt;---\r\n /   \\\r\n2     3         &lt;---\r\n \\     \\\r\n  5     4       &lt;---\r\n</pre>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"364.2K\", \"totalSubmission\": \"656.1K\", \"totalAcceptedRaw\": 364185, \"totalSubmissionRaw\": 656140, \"acRate\": \"55.5%\"}", "similarQuestions": "[{\"title\": \"Populating Next Right Pointers in Each Node\", \"titleSlug\": \"populating-next-right-pointers-in-each-node\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Boundary of Binary Tree\", \"titleSlug\": \"boundary-of-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "198", "name": "house-robber", "content": {"questionId": "198", "questionFrontendId": "198", "questionTitle": "House Robber", "questionTitleSlug": "house-robber", "content": "<p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and <b>it will automatically contact the police if two adjacent houses were broken into on the same night</b>.</p>\n\n<p>Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight <b>without alerting the police</b>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,1]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Rob house 1 (money = 1) and then rob house 3 (money = 3).\n&nbsp;            Total amount you can rob = 1 + 3 = 4.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,7,9,3,1]\n<strong>Output:</strong> 12\n<strong>Explanation:</strong> Rob house 1 (money = 2), rob house 3 (money = 9) and rob house 5 (money = 1).\n&nbsp;            Total amount you can rob = 2 + 9 + 1 = 12.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 400</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"647.1K\", \"totalSubmission\": \"1.5M\", \"totalAcceptedRaw\": 647105, \"totalSubmissionRaw\": 1517896, \"acRate\": \"42.6%\"}", "similarQuestions": "[{\"title\": \"Maximum Product Subarray\", \"titleSlug\": \"maximum-product-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"House Robber II\", \"titleSlug\": \"house-robber-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paint House\", \"titleSlug\": \"paint-house\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paint Fence\", \"titleSlug\": \"paint-fence\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"House Robber III\", \"titleSlug\": \"house-robber-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Non-negative Integers without Consecutive Ones\", \"titleSlug\": \"non-negative-integers-without-consecutive-ones\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Coin Path\", \"titleSlug\": \"coin-path\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Delete and Earn\", \"titleSlug\": \"delete-and-earn\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "194", "name": "transpose-file", "content": {"questionId": "194", "questionFrontendId": "194", "questionTitle": "Transpose File", "questionTitleSlug": "transpose-file", "content": "<p>Given a text file <code>file.txt</code>, transpose its content.</p>\r\n\r\n<p>You may assume that each row has the same number of columns and each field is separated by the <code>&#39; &#39;</code> character.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<p>If <code>file.txt</code> has the following content:</p>\r\n\r\n<pre>\r\nname age\r\nalice 21\r\nryan 30\r\n</pre>\r\n\r\n<p>Output the following:</p>\r\n\r\n<pre>\r\nname alice ryan\r\nage 21 30\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"14.7K\", \"totalSubmission\": \"60.2K\", \"totalAcceptedRaw\": 14718, \"totalSubmissionRaw\": 60199, \"acRate\": \"24.4%\"}", "similarQuestions": "[]", "categoryTitle": "Shell", "topicTags": []}}, {"id": "192", "name": "word-frequency", "content": {"questionId": "192", "questionFrontendId": "192", "questionTitle": "Word Frequency", "questionTitleSlug": "word-frequency", "content": "<p>Write a bash script to calculate the frequency of each word in a text file <code>words.txt</code>.</p>\r\n\r\n<p>For simplicity sake, you may assume:</p>\r\n\r\n<ul>\r\n\t<li><code>words.txt</code> contains only lowercase characters and space <code>&#39; &#39;</code> characters.</li>\r\n\t<li>Each word must consist of lowercase characters only.</li>\r\n\t<li>Words are separated by one or more whitespace characters.</li>\r\n</ul>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<p>Assume that <code>words.txt</code> has the following content:</p>\r\n\r\n<pre>\r\nthe day is sunny the the\r\nthe sunny is is\r\n</pre>\r\n\r\n<p>Your script should output the following, sorted by descending frequency:</p>\r\n\r\n<pre>\r\nthe 4\r\nis 3\r\nsunny 2\r\nday 1\r\n</pre>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ul>\r\n\t<li>Don&#39;t worry about handling ties, it is guaranteed that each word&#39;s frequency count is unique.</li>\r\n\t<li>Could you write it in one-line using <a href=\"http://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO-4.html\">Unix pipes</a>?</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"29.1K\", \"totalSubmission\": \"112.6K\", \"totalAcceptedRaw\": 29057, \"totalSubmissionRaw\": 112641, \"acRate\": \"25.8%\"}", "similarQuestions": "[{\"title\": \"Top K Frequent Elements\", \"titleSlug\": \"top-k-frequent-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Shell", "topicTags": []}}, {"id": "189", "name": "rotate-array", "content": {"questionId": "189", "questionFrontendId": "189", "questionTitle": "Rotate Array", "questionTitleSlug": "rotate-array", "content": "<p>Given an array, rotate the array to the right by <em>k</em> steps, where&nbsp;<em>k</em>&nbsp;is non-negative.</p>\n\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>Try to come up as many solutions as you can, there are at least 3 different ways to solve this problem.</li>\n\t<li>Could you do it in-place with O(1) extra space?</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,5,6,7], k = 3\n<strong>Output:</strong> [5,6,7,1,2,3,4]\n<strong>Explanation:</strong>\nrotate 1 steps to the right: [7,1,2,3,4,5,6]\nrotate 2 steps to the right: [6,7,1,2,3,4,5]\nrotate 3 steps to the right: [5,6,7,1,2,3,4]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,-100,3,99], k = 2\n<strong>Output:</strong> [3,99,-1,-100]\n<strong>Explanation:</strong> \nrotate 1 steps to the right: [99,-1,-100,3]\nrotate 2 steps to the right: [3,99,-1,-100]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>0 &lt;= k &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"613.1K\", \"totalSubmission\": \"1.7M\", \"totalAcceptedRaw\": 613143, \"totalSubmissionRaw\": 1691183, \"acRate\": \"36.3%\"}", "similarQuestions": "[{\"title\": \"Rotate List\", \"titleSlug\": \"rotate-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Reverse Words in a String II\", \"titleSlug\": \"reverse-words-in-a-string-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "187", "name": "repeated-dna-sequences", "content": {"questionId": "187", "questionFrontendId": "187", "questionTitle": "Repeated DNA Sequences", "questionTitleSlug": "repeated-dna-sequences", "content": "<p>All DNA is composed of a series of nucleotides abbreviated as <code>&#39;A&#39;</code>, <code>&#39;C&#39;</code>, <code>&#39;G&#39;</code>, and <code>&#39;T&#39;</code>, for example: <code>&quot;ACGAATTCCG&quot;</code>. When studying DNA, it is sometimes useful to identify repeated sequences within the DNA.</p>\n\n<p>Write a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT\"\n<strong>Output:</strong> [\"AAAAACCCCC\",\"CCCCCAAAAA\"]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"AAAAAAAAAAAAA\"\n<strong>Output:</strong> [\"AAAAAAAAAA\"]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s[i]</code> is <code>&#39;A&#39;</code>, <code>&#39;C&#39;</code>, <code>&#39;G&#39;</code>, or <code>&#39;T&#39;</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"196.7K\", \"totalSubmission\": \"478.8K\", \"totalAcceptedRaw\": 196706, \"totalSubmissionRaw\": 478792, \"acRate\": \"41.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "186", "name": "reverse-words-in-a-string-ii", "content": {"questionId": "186", "questionFrontendId": "186", "questionTitle": "Reverse Words in a String II", "questionTitleSlug": "reverse-words-in-a-string-ii", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"95.9K\", \"totalSubmission\": \"213.8K\", \"totalAcceptedRaw\": 95881, \"totalSubmissionRaw\": 213798, \"acRate\": \"44.8%\"}", "similarQuestions": "[{\"title\": \"Reverse Words in a String\", \"titleSlug\": \"reverse-words-in-a-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Rotate Array\", \"titleSlug\": \"rotate-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "184", "name": "department-highest-salary", "content": {"questionId": "184", "questionFrontendId": "184", "questionTitle": "Department Highest Salary", "questionTitleSlug": "department-highest-salary", "content": "<p>The <code>Employee</code> table holds all employees. Every employee has an Id, a salary, and there is also a column for the department Id.</p>\r\n\r\n<pre>\r\n+----+-------+--------+--------------+\r\n| Id | Name  | Salary | DepartmentId |\r\n+----+-------+--------+--------------+\r\n| 1  | Joe   | 70000  | 1            |\r\n| 2 &nbsp;| Jim &nbsp; | 90000 &nbsp;| 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|\r\n| 3  | Henry | 80000  | 2            |\r\n| 4  | Sam   | 60000  | 2            |\r\n| 5  | Max   | 90000  | 1            |\r\n+----+-------+--------+--------------+\r\n</pre>\r\n\r\n<p>The <code>Department</code> table holds all departments of the company.</p>\r\n\r\n<pre>\r\n+----+----------+\r\n| Id | Name     |\r\n+----+----------+\r\n| 1  | IT       |\r\n| 2  | Sales    |\r\n+----+----------+\r\n</pre>\r\n\r\n<p>Write a SQL query to find employees who have the highest salary in each of the departments.&nbsp;For the above tables, your SQL query should return the following rows (order of rows does not matter).</p>\r\n\r\n<pre>\r\n+------------+----------+--------+\r\n| Department | Employee | Salary |\r\n+------------+----------+--------+\r\n| IT         | Max      | 90000  |\r\n| IT &nbsp; &nbsp; &nbsp; &nbsp; | Jim &nbsp; &nbsp; &nbsp;| 90000 &nbsp;|\r\n| Sales      | Henry    | 80000  |\r\n+------------+----------+--------+\r\n</pre>\r\n\r\n<p><strong>Explanation:</strong></p>\r\n\r\n<p>Max and Jim both have&nbsp;the highest salary in the IT department and Henry has the highest salary in the Sales department.</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"128.5K\", \"totalSubmission\": \"329.5K\", \"totalAcceptedRaw\": 128528, \"totalSubmissionRaw\": 329518, \"acRate\": \"39.0%\"}", "similarQuestions": "[{\"title\": \"Highest Grade For Each Student\", \"titleSlug\": \"highest-grade-for-each-student\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "180", "name": "consecutive-numbers", "content": {"questionId": "180", "questionFrontendId": "180", "questionTitle": "Consecutive Numbers", "questionTitleSlug": "consecutive-numbers", "content": "<p>Table: <code>Logs</code></p>\n\n<pre>\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| num         | varchar |\n+-------------+---------+\nid is the primary key for this table.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to find all numbers that appear at least three times consecutively.</p>\n\n<p>Return the result table in <strong>any order</strong>.</p>\n\n<p>The query result format is in the following example:</p>\n\n<p>&nbsp;</p>\n\n<pre>\nLogs table:\n+----+-----+\n| Id | Num |\n+----+-----+\n| 1  | 1   |\n| 2  | 1   |\n| 3  | 1   |\n| 4  | 2   |\n| 5  | 1   |\n| 6  | 2   |\n| 7  | 2   |\n+----+-----+\n\nResult table:\n+-----------------+\n| ConsecutiveNums |\n+-----------------+\n| 1               |\n+-----------------+\n1 is the only number that appears consecutively for at least three times.\n</pre>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"110.4K\", \"totalSubmission\": \"266.5K\", \"totalAcceptedRaw\": 110390, \"totalSubmissionRaw\": 266468, \"acRate\": \"41.4%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "179", "name": "largest-number", "content": {"questionId": "179", "questionFrontendId": "179", "questionTitle": "Largest Number", "questionTitleSlug": "largest-number", "content": "<p>Given a list of non-negative integers <code>nums</code>, arrange them such that they form the largest number.</p>\n\n<p><strong>Note:</strong> The result may be very large, so you need to return a string instead of an integer.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [10,2]\n<strong>Output:</strong> &quot;210&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,30,34,5,9]\n<strong>Output:</strong> &quot;9534330&quot;\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1]\n<strong>Output:</strong> &quot;1&quot;\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [10]\n<strong>Output:</strong> &quot;10&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"228.5K\", \"totalSubmission\": \"754.5K\", \"totalAcceptedRaw\": 228525, \"totalSubmissionRaw\": 754545, \"acRate\": \"30.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Sort", "slug": "sort"}]}}, {"id": "178", "name": "rank-scores", "content": {"questionId": "178", "questionFrontendId": "178", "questionTitle": "Rank Scores", "questionTitleSlug": "rank-scores", "content": "<p>Write a SQL query to rank scores. If there is a tie between two scores, both should have the same ranking. Note that after a tie, the next ranking number should be the next consecutive integer value. In other words, there should be no &quot;holes&quot; between ranks.</p>\n\n<pre>\n+----+-------+\n| Id | Score |\n+----+-------+\n| 1  | 3.50  |\n| 2  | 3.65  |\n| 3  | 4.00  |\n| 4  | 3.85  |\n| 5  | 4.00  |\n| 6  | 3.65  |\n+----+-------+\n</pre>\n\n<p>For example, given the above <code>Scores</code> table, your query should generate the following report (order by highest score):</p>\n\n<pre>\n+-------+---------+\n| score | Rank    |\n+-------+---------+\n| 4.00  | 1       |\n| 4.00  | 1       |\n| 3.85  | 2       |\n|&nbsp;3.65  | 3       |\n| 3.65  | 3       |\n| 3.50  | 4       |\n+-------+---------+\n</pre>\n\n<p><strong>Important Note:</strong>&nbsp;For MySQL solutions, to escape reserved words used as column names, you can use an apostrophe before and after the keyword. For example<strong>&nbsp;`Rank`</strong>.</p>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"132.8K\", \"totalSubmission\": \"272.2K\", \"totalAcceptedRaw\": 132837, \"totalSubmissionRaw\": 272233, \"acRate\": \"48.8%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "177", "name": "nth-highest-salary", "content": {"questionId": "177", "questionFrontendId": "177", "questionTitle": "Nth Highest Salary", "questionTitleSlug": "nth-highest-salary", "content": "<p>Write a SQL query to get the <em>n</em><sup>th</sup> highest salary from the <code>Employee</code> table.</p>\r\n\r\n<pre>\r\n+----+--------+\r\n| Id | Salary |\r\n+----+--------+\r\n| 1  | 100    |\r\n| 2  | 200    |\r\n| 3  | 300    |\r\n+----+--------+\r\n</pre>\r\n\r\n<p>For example, given the above Employee table, the <em>n</em><sup>th</sup> highest salary where <em>n</em> = 2 is <code>200</code>. If there is no <em>n</em><sup>th</sup> highest salary, then the query should return <code>null</code>.</p>\r\n\r\n<pre>\r\n+------------------------+\r\n| getNthHighestSalary(2) |\r\n+------------------------+\r\n| 200                    |\r\n+------------------------+\r\n</pre>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"138.5K\", \"totalSubmission\": \"423.6K\", \"totalAcceptedRaw\": 138461, \"totalSubmissionRaw\": 423583, \"acRate\": \"32.7%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "173", "name": "binary-search-tree-iterator", "content": {"questionId": "173", "questionFrontendId": "173", "questionTitle": "Binary Search Tree Iterator", "questionTitleSlug": "binary-search-tree-iterator", "content": "<p>Implement the <code>BSTIterator</code> class that represents an iterator over&nbsp;the <strong><a href=\"https://en.wikipedia.org/wiki/Tree_traversal#In-order_(LNR)\">in-order traversal</a></strong>&nbsp;of&nbsp;a binary search tree (BST):</p>\n\n<ul>\n\t<li><code>BSTIterator(TreeNode root)</code> Initializes an object of the <code>BSTIterator</code> class. The <code>root</code> of the BST is given as part of the constructor. The pointer should be initialized to a non-existent number smaller than any element in the BST.</li>\n\t<li><code>boolean hasNext()</code> Returns <code>true</code> if there exists a number in the traversal to the right of the pointer, otherwise returns <code>false</code>.</li>\n\t<li><code>int next()</code> Moves the pointer to the right, then returns the number at the pointer.</li>\n</ul>\n\n<p>Notice that by initializing the pointer to a non-existent smallest number, the first call to <code>next()</code> will return the smallest element in the BST.</p>\n\n<p>You may assume that <code>next()</code>&nbsp;calls will always be valid. That is, there will be at least a next number in the in-order traversal&nbsp;when <code>next()</code>&nbsp;is called.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/25/bst-tree.png\" style=\"width: 189px; height: 178px;\" />\n<pre>\n<strong>Input</strong>\n[&quot;BSTIterator&quot;, &quot;next&quot;, &quot;next&quot;, &quot;hasNext&quot;, &quot;next&quot;, &quot;hasNext&quot;, &quot;next&quot;, &quot;hasNext&quot;, &quot;next&quot;, &quot;hasNext&quot;]\n[[[7, 3, 15, null, null, 9, 20]], [], [], [], [], [], [], [], [], []]\n<strong>Output</strong>\n[null, 3, 7, true, 9, true, 15, true, 20, false]\n\n<strong>Explanation</strong>\nBSTIterator bSTIterator = new BSTIterator([7, 3, 15, null, null, 9, 20]);\nbSTIterator.next();    // return 3\nbSTIterator.next();    // return 7\nbSTIterator.hasNext(); // return True\nbSTIterator.next();    // return 9\nbSTIterator.hasNext(); // return True\nbSTIterator.next();    // return 15\nbSTIterator.hasNext(); // return True\nbSTIterator.next();    // return 20\nbSTIterator.hasNext(); // return False\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>5</sup>]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>6</sup></code></li>\n\t<li>At most <code>10<sup>5</sup></code> calls will be made to <code>hasNext</code>, and <code>next</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>Could you implement <code>next()</code> and <code>hasNext()</code> to run in average <code>O(1)</code> time and use&nbsp;<code>O(h)</code> memory, where <code>h</code> is the height of the tree?</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"373.6K\", \"totalSubmission\": \"629.4K\", \"totalAcceptedRaw\": 373570, \"totalSubmissionRaw\": 629443, \"acRate\": \"59.3%\"}", "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Flatten 2D Vector\", \"titleSlug\": \"flatten-2d-vector\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Zigzag Iterator\", \"titleSlug\": \"zigzag-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Peeking Iterator\", \"titleSlug\": \"peeking-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Inorder Successor in BST\", \"titleSlug\": \"inorder-successor-in-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Search Tree Iterator II\", \"titleSlug\": \"binary-search-tree-iterator-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}, {"name": "Tree", "slug": "tree"}, {"name": "Design", "slug": "design"}]}}, {"id": "166", "name": "fraction-to-recurring-decimal", "content": {"questionId": "166", "questionFrontendId": "166", "questionTitle": "Fraction to Recurring Decimal", "questionTitleSlug": "fraction-to-recurring-decimal", "content": "<p>Given two integers representing the <code>numerator</code> and <code>denominator</code> of a fraction, return <em>the fraction in string format</em>.</p>\n\n<p>If the fractional part is repeating, enclose the repeating part in parentheses.</p>\n\n<p>If multiple answers are possible, return <strong>any of them</strong>.</p>\n\n<p>It is <strong>guaranteed</strong> that the length of the answer string is less than <code>10<sup>4</sup></code> for all the given inputs.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> numerator = 1, denominator = 2\n<strong>Output:</strong> \"0.5\"\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> numerator = 2, denominator = 1\n<strong>Output:</strong> \"2\"\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> numerator = 2, denominator = 3\n<strong>Output:</strong> \"0.(6)\"\n</pre><p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> numerator = 4, denominator = 333\n<strong>Output:</strong> \"0.(012)\"\n</pre><p><strong>Example 5:</strong></p>\n<pre><strong>Input:</strong> numerator = 1, denominator = 5\n<strong>Output:</strong> \"0.2\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup> &lt;=&nbsp;numerator, denominator &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>denominator != 0</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"140.5K\", \"totalSubmission\": \"635.8K\", \"totalAcceptedRaw\": 140452, \"totalSubmissionRaw\": 635838, \"acRate\": \"22.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Math", "slug": "math"}]}}, {"id": "165", "name": "compare-version-numbers", "content": {"questionId": "165", "questionFrontendId": "165", "questionTitle": "Compare Version Numbers", "questionTitleSlug": "compare-version-numbers", "content": "<p>Given two version numbers,&nbsp;<code>version1</code> and <code>version2</code>, compare them.</p>\n\n<ul>\n</ul>\n\n<p>Version numbers consist of <strong>one or more revisions</strong> joined by a dot&nbsp;<code>&#39;.&#39;</code>. Each revision&nbsp;consists of <strong>digits</strong>&nbsp;and may contain leading <strong>zeros</strong>. Every revision contains <strong>at least one character</strong>. Revisions are <strong>0-indexed from left to right</strong>, with the leftmost revision being revision 0, the next revision being revision 1, and so on. For example&nbsp;<code>2.5.33</code>&nbsp;and&nbsp;<code>0.1</code>&nbsp;are valid version numbers.</p>\n\n<p>To compare version numbers, compare their revisions in <strong>left-to-right order</strong>. Revisions are compared using their&nbsp;<strong>integer value ignoring any leading zeros</strong>. This means that revisions&nbsp;<code>1</code>&nbsp;and&nbsp;<code>001</code>&nbsp;are considered&nbsp;<strong>equal</strong>. If a version number does not specify a revision at an index, then&nbsp;<strong>treat the revision as&nbsp;<code>0</code></strong>. For example, version&nbsp;<code>1.0</code> is less than version&nbsp;<code>1.1</code>&nbsp;because their revision 0s are the same, but their revision 1s are&nbsp;<code>0</code>&nbsp;and&nbsp;<code>1</code>&nbsp;respectively, and&nbsp;<code>0 &lt; 1</code>.</p>\n\n<p><em>Return the following:</em></p>\n\n<ul>\n\t<li>If <code>version1 &lt; version2</code>, return <code>-1</code>.</li>\n\t<li>If <code>version1 &gt; version2</code>, return <code>1</code>.</li>\n\t<li>Otherwise, return <code>0</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> version1 = &quot;1.01&quot;, version2 = &quot;1.001&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Ignoring leading zeroes, both &quot;01&quot; and &quot;001&quot; represent the same integer &quot;1&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> version1 = &quot;1.0&quot;, version2 = &quot;1.0.0&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> version1 does not specify revision 2, which means it is treated as &quot;0&quot;.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> version1 = &quot;0.1&quot;, version2 = &quot;1.1&quot;\n<strong>Output:</strong> -1\n<strong>Explanation:</strong>&nbsp;version1&#39;s revision 0 is &quot;0&quot;, while version2&#39;s revision 0 is &quot;1&quot;. 0 &lt; 1, so version1 &lt; version2.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> version1 = &quot;1.0.1&quot;, version2 = &quot;1&quot;\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> version1 = &quot;7.5.2.4&quot;, version2 = &quot;7.5.3&quot;\n<strong>Output:</strong> -1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= version1.length, version2.length &lt;= 500</code></li>\n\t<li><code>version1</code> and <code>version2</code>&nbsp;only contain digits and <code>&#39;.&#39;</code>.</li>\n\t<li><code>version1</code> and <code>version2</code>&nbsp;<strong>are valid version numbers</strong>.</li>\n\t<li>All the given revisions in&nbsp;<code>version1</code> and <code>version2</code>&nbsp;can be stored in&nbsp;a&nbsp;<strong>32-bit integer</strong>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"227.2K\", \"totalSubmission\": \"759.1K\", \"totalAcceptedRaw\": 227247, \"totalSubmissionRaw\": 759150, \"acRate\": \"29.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "162", "name": "find-peak-element", "content": {"questionId": "162", "questionFrontendId": "162", "questionTitle": "Find Peak Element", "questionTitleSlug": "find-peak-element", "content": "<p>A peak element is an element that is strictly greater than its neighbors.</p>\n\n<p>Given an integer array <code>nums</code>, find a peak element, and return its index. If&nbsp;the array contains multiple peaks, return the index to <strong>any of the peaks</strong>.</p>\n\n<p>You may imagine that <code>nums[-1] = nums[n] = -&infin;</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> 3 is a peak element and your function should return the index number 2.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,1,3,5,6,4]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> Your function can return either index number 1 where the peak element is 2, or index number 5 where the peak element is 6.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>nums[i] != nums[i + 1]</code> for all valid <code>i</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong>&nbsp;Could you implement a solution with logarithmic complexity?", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"433.8K\", \"totalSubmission\": \"992.5K\", \"totalAcceptedRaw\": 433808, \"totalSubmissionRaw\": 992522, \"acRate\": \"43.7%\"}", "similarQuestions": "[{\"title\": \"Peak Index in a Mountain Array\", \"titleSlug\": \"peak-index-in-a-mountain-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "161", "name": "one-edit-distance", "content": {"questionId": "161", "questionFrontendId": "161", "questionTitle": "One Edit Distance", "questionTitleSlug": "one-edit-distance", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"123.1K\", \"totalSubmission\": \"377K\", \"totalAcceptedRaw\": 123086, \"totalSubmissionRaw\": 377015, \"acRate\": \"32.6%\"}", "similarQuestions": "[{\"title\": \"Edit Distance\", \"titleSlug\": \"edit-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "159", "name": "longest-substring-with-at-most-two-distinct-characters", "content": {"questionId": "159", "questionFrontendId": "159", "questionTitle": "Longest Substring with At Most Two Distinct Characters", "questionTitleSlug": "longest-substring-with-at-most-two-distinct-characters", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"131.5K\", \"totalSubmission\": \"262.1K\", \"totalAcceptedRaw\": 131477, \"totalSubmissionRaw\": 262143, \"acRate\": \"50.2%\"}", "similarQuestions": "[{\"title\": \"Longest Substring Without Repeating Characters\", \"titleSlug\": \"longest-substring-without-repeating-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sliding Window Maximum\", \"titleSlug\": \"sliding-window-maximum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Longest Substring with At Most K Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-k-distinct-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Subarrays with K Different Integers\", \"titleSlug\": \"subarrays-with-k-different-integers\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Two Pointers", "slug": "two-pointers"}, {"name": "String", "slug": "string"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "156", "name": "binary-tree-upside-down", "content": {"questionId": "156", "questionFrontendId": "156", "questionTitle": "Binary Tree Upside Down", "questionTitleSlug": "binary-tree-upside-down", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"64.6K\", \"totalSubmission\": \"115.6K\", \"totalAcceptedRaw\": 64614, \"totalSubmissionRaw\": 115616, \"acRate\": \"55.9%\"}", "similarQuestions": "[{\"title\": \"Reverse Linked List\", \"titleSlug\": \"reverse-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "153", "name": "find-minimum-in-rotated-sorted-array", "content": {"questionId": "153", "questionFrontendId": "153", "questionTitle": "Find Minimum in Rotated Sorted Array", "questionTitleSlug": "find-minimum-in-rotated-sorted-array", "content": "<p>Suppose an array of length <code>n</code> sorted in ascending order is <strong>rotated</strong> between <code>1</code> and <code>n</code> times. For example, the array <code>nums = [0,1,2,4,5,6,7]</code> might become:</p>\n\n<ul>\n\t<li><code>[4,5,6,7,0,1,2]</code> if it was rotated <code>4</code> times.</li>\n\t<li><code>[0,1,2,4,5,6,7]</code> if it was rotated <code>7</code> times.</li>\n</ul>\n\n<p>Notice that <strong>rotating</strong> an array <code>[a[0], a[1], a[2], ..., a[n-1]]</code> 1 time results in the array <code>[a[n-1], a[0], a[1], a[2], ..., a[n-2]]</code>.</p>\n\n<p>Given the sorted rotated array <code>nums</code>, return <em>the minimum element of this array</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,4,5,1,2]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The original array was [1,2,3,4,5] rotated 3 times.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,5,6,7,0,1,2]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The original array was [0,1,2,4,5,6,7] and it was rotated 4 times.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [11,13,15,17]\n<strong>Output:</strong> 11\n<strong>Explanation:</strong> The original array was [11,13,15,17] and it was rotated 4 times. \n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 5000</code></li>\n\t<li><code>-5000 &lt;= nums[i] &lt;= 5000</code></li>\n\t<li>All the integers of <code>nums</code> are <strong>unique</strong>.</li>\n\t<li><code>nums</code> is sorted and rotated between <code>1</code> and <code>n</code> times.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"526.1K\", \"totalSubmission\": \"1.1M\", \"totalAcceptedRaw\": 526132, \"totalSubmissionRaw\": 1149867, \"acRate\": \"45.8%\"}", "similarQuestions": "[{\"title\": \"Search in Rotated Sorted Array\", \"titleSlug\": \"search-in-rotated-sorted-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Minimum in Rotated Sorted Array II\", \"titleSlug\": \"find-minimum-in-rotated-sorted-array-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "152", "name": "maximum-product-subarray", "content": {"questionId": "152", "questionFrontendId": "152", "questionTitle": "Maximum Product Subarray", "questionTitleSlug": "maximum-product-subarray", "content": "<p>Given an integer array&nbsp;<code>nums</code>, find the contiguous subarray within an array (containing at least one number) which has the largest product.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [2,3,-2,4]\r\n<strong>Output:</strong> <code>6</code>\r\n<strong>Explanation:</strong>&nbsp;[2,3] has the largest product 6.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [-2,0,-1]\r\n<strong>Output:</strong> 0\r\n<strong>Explanation:</strong>&nbsp;The result cannot be 2, because [-2,-1] is not a subarray.</pre>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"422.6K\", \"totalSubmission\": \"1.3M\", \"totalAcceptedRaw\": 422648, \"totalSubmissionRaw\": 1299681, \"acRate\": \"32.5%\"}", "similarQuestions": "[{\"title\": \"Maximum Subarray\", \"titleSlug\": \"maximum-subarray\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"House Robber\", \"titleSlug\": \"house-robber\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Product of Array Except Self\", \"titleSlug\": \"product-of-array-except-self\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Product of Three Numbers\", \"titleSlug\": \"maximum-product-of-three-numbers\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Subarray Product Less Than K\", \"titleSlug\": \"subarray-product-less-than-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "151", "name": "reverse-words-in-a-string", "content": {"questionId": "151", "questionFrontendId": "151", "questionTitle": "Reverse Words in a String", "questionTitleSlug": "reverse-words-in-a-string", "content": "<p>Given an input string <code>s</code>, reverse the order of the <strong>words</strong>.</p>\n\n<p>A <strong>word</strong> is defined as a sequence of non-space characters. The <strong>words</strong> in <code>s</code> will be separated by at least one space.</p>\n\n<p>Return <em>a string of the words in reverse order concatenated by a single space.</em></p>\n\n<p><b>Note</b> that <code>s</code> may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;the sky is blue&quot;\n<strong>Output:</strong> &quot;blue is sky the&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;  hello world  &quot;\n<strong>Output:</strong> &quot;world hello&quot;\n<strong>Explanation:</strong> Your reversed string should not contain leading or trailing spaces.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;a good   example&quot;\n<strong>Output:</strong> &quot;example good a&quot;\n<strong>Explanation:</strong> You need to reduce multiple spaces between two words to a single space in the reversed string.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;  Bob    Loves  Alice   &quot;\n<strong>Output:</strong> &quot;Alice Loves Bob&quot;\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;Alice does not even like bob&quot;\n<strong>Output:</strong> &quot;bob like even not does Alice&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> contains English letters (upper-case and lower-case), digits, and spaces <code>&#39; &#39;</code>.</li>\n\t<li>There is <strong>at least one</strong> word in <code>s</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>Could you solve it <strong>in-place</strong> with <code>O(1)</code> extra space?</li>\n</ul>\n\n<p>&nbsp;</p>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"479.8K\", \"totalSubmission\": \"2.1M\", \"totalAcceptedRaw\": 479845, \"totalSubmissionRaw\": 2077205, \"acRate\": \"23.1%\"}", "similarQuestions": "[{\"title\": \"Reverse Words in a String II\", \"titleSlug\": \"reverse-words-in-a-string-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "150", "name": "evaluate-reverse-polish-notation", "content": {"questionId": "150", "questionFrontendId": "150", "questionTitle": "Evaluate Reverse Polish Notation", "questionTitleSlug": "evaluate-reverse-polish-notation", "content": "<p>Evaluate the value of an arithmetic expression in <a href=\"http://en.wikipedia.org/wiki/Reverse_Polish_notation\" target=\"_blank\">Reverse Polish Notation</a>.</p>\r\n\r\n<p>Valid operators are <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>. Each operand may be an integer or another expression.</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li>Division between two integers should truncate toward zero.</li>\r\n\t<li>The given RPN expression is always valid. That means the expression would always evaluate to a result and there won&#39;t&nbsp;be any&nbsp;divide&nbsp;by zero operation.</li>\r\n</ul>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [&quot;2&quot;, &quot;1&quot;, &quot;+&quot;, &quot;3&quot;, &quot;*&quot;]\r\n<strong>Output:</strong> 9\r\n<strong>Explanation:</strong> ((2 + 1) * 3) = 9\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [&quot;4&quot;, &quot;13&quot;, &quot;5&quot;, &quot;/&quot;, &quot;+&quot;]\r\n<strong>Output:</strong> 6\r\n<strong>Explanation:</strong> (4 + (13 / 5)) = 6\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [&quot;10&quot;, &quot;6&quot;, &quot;9&quot;, &quot;3&quot;, &quot;+&quot;, &quot;-11&quot;, &quot;*&quot;, &quot;/&quot;, &quot;*&quot;, &quot;17&quot;, &quot;+&quot;, &quot;5&quot;, &quot;+&quot;]\r\n<strong>Output:</strong> 22\r\n<strong>Explanation:</strong> \r\n  ((10 * (6 / ((9 + 3) * -11))) + 17) + 5\r\n= ((10 * (6 / (12 * -11))) + 17) + 5\r\n= ((10 * (6 / -132)) + 17) + 5\r\n= ((10 * 0) + 17) + 5\r\n= (0 + 17) + 5\r\n= 17 + 5\r\n= 22\r\n</pre>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"257.9K\", \"totalSubmission\": \"689.8K\", \"totalAcceptedRaw\": 257911, \"totalSubmissionRaw\": 689801, \"acRate\": \"37.4%\"}", "similarQuestions": "[{\"title\": \"Basic Calculator\", \"titleSlug\": \"basic-calculator\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Expression Add Operators\", \"titleSlug\": \"expression-add-operators\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}]}}, {"id": "148", "name": "sort-list", "content": {"questionId": "148", "questionFrontendId": "148", "questionTitle": "Sort List", "questionTitleSlug": "sort-list", "content": "<p>Given the <code>head</code> of a linked list, return <em>the list after sorting it in <strong>ascending order</strong></em>.</p>\n\n<p><strong>Follow up:</strong> Can you sort the linked list in <code>O(n logn)</code> time and <code>O(1)</code>&nbsp;memory (i.e. constant space)?</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/14/sort_list_1.jpg\" style=\"width: 450px; height: 194px;\" />\n<pre>\n<strong>Input:</strong> head = [4,2,1,3]\n<strong>Output:</strong> [1,2,3,4]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/14/sort_list_2.jpg\" style=\"width: 550px; height: 184px;\" />\n<pre>\n<strong>Input:</strong> head = [-1,5,3,4,0]\n<strong>Output:</strong> [-1,0,3,4,5]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = []\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is in the range <code>[0, 5 * 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"323.9K\", \"totalSubmission\": \"711.2K\", \"totalAcceptedRaw\": 323890, \"totalSubmissionRaw\": 711168, \"acRate\": \"45.5%\"}", "similarQuestions": "[{\"title\": \"Merge Two Sorted Lists\", \"titleSlug\": \"merge-two-sorted-lists\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sort Colors\", \"titleSlug\": \"sort-colors\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Insertion Sort List\", \"titleSlug\": \"insertion-sort-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "147", "name": "insertion-sort-list", "content": {"questionId": "147", "questionFrontendId": "147", "questionTitle": "Insertion Sort List", "questionTitleSlug": "insertion-sort-list", "content": "<p>Sort a linked list using insertion sort.</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<p><img alt=\"\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/0f/Insertion-sort-example-300px.gif\" style=\"height:180px; width:300px\" /><br />\r\n<small>A graphical example of insertion sort. The partial sorted list (black) initially contains only the first element in the list.<br />\r\nWith each iteration one element (red) is removed from the input data and inserted in-place into the sorted list</small><br />\r\n&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<p><strong>Algorithm of Insertion Sort:</strong></p>\r\n\r\n<ol>\r\n\t<li>Insertion sort iterates, consuming one input element each repetition, and growing a sorted output list.</li>\r\n\t<li>At each iteration, insertion sort removes one element from the input data, finds the location it belongs within the sorted list, and inserts it there.</li>\r\n\t<li>It repeats until no input elements remain.</li>\r\n</ol>\r\n\r\n<p><br />\r\n<strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> 4-&gt;2-&gt;1-&gt;3\r\n<strong>Output:</strong> 1-&gt;2-&gt;3-&gt;4\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> -1-&gt;5-&gt;3-&gt;4-&gt;0\r\n<strong>Output:</strong> -1-&gt;0-&gt;3-&gt;4-&gt;5\r\n</pre>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"220K\", \"totalSubmission\": \"500.4K\", \"totalAcceptedRaw\": 220022, \"totalSubmissionRaw\": 500424, \"acRate\": \"44.0%\"}", "similarQuestions": "[{\"title\": \"Sort List\", \"titleSlug\": \"sort-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Insert into a Sorted Circular Linked List\", \"titleSlug\": \"insert-into-a-sorted-circular-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "146", "name": "lru-cache", "content": {"questionId": "146", "questionFrontendId": "146", "questionTitle": "LRU Cache", "questionTitleSlug": "lru-cache", "content": "<p>Design a data structure that follows the constraints of a <strong><a href=\"https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\" target=\"_blank\">Least Recently Used (LRU) cache</a></strong>.</p>\n\n<p>Implement the <code>LRUCache</code> class:</p>\n\n<ul>\n\t<li><code>LRUCache(int capacity)</code> Initialize the LRU cache with <strong>positive</strong> size <code>capacity</code>.</li>\n\t<li><code>int get(int key)</code> Return the value of the <code>key</code> if the key exists, otherwise return <code>-1</code>.</li>\n\t<li><code>void put(int key, int value)</code>&nbsp;Update the value of the <code>key</code> if the <code>key</code> exists. Otherwise, add the <code>key-value</code> pair to the cache. If the number of keys exceeds the <code>capacity</code> from this operation, <strong>evict</strong> the least recently used key.</li>\n</ul>\n\n<p><b>Follow up:</b><br />\nCould you do <code>get</code> and <code>put</code> in <code>O(1)</code> time complexity?</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;LRUCache&quot;, &quot;put&quot;, &quot;put&quot;, &quot;get&quot;, &quot;put&quot;, &quot;get&quot;, &quot;put&quot;, &quot;get&quot;, &quot;get&quot;, &quot;get&quot;]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n<strong>Output</strong>\n[null, null, null, 1, null, -1, null, -1, 3, 4]\n\n<strong>Explanation</strong>\nLRUCache lRUCache = new LRUCache(2);\nlRUCache.put(1, 1); // cache is {1=1}\nlRUCache.put(2, 2); // cache is {1=1, 2=2}\nlRUCache.get(1);    // return 1\nlRUCache.put(3, 3); // LRU key was 2, evicts key 2, cache is {1=1, 3=3}\nlRUCache.get(2);    // returns -1 (not found)\nlRUCache.put(4, 4); // LRU key was 1, evicts key 1, cache is {4=4, 3=3}\nlRUCache.get(1);    // return -1 (not found)\nlRUCache.get(3);    // return 3\nlRUCache.get(4);    // return 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= capacity &lt;= 3000</code></li>\n\t<li><code>0 &lt;= key &lt;= 3000</code></li>\n\t<li><code>0 &lt;= value &lt;= 10<sup>4</sup></code></li>\n\t<li>At most <code>3 * 10<sup>4</sup></code> calls will be made to <code>get</code> and <code>put</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"665.4K\", \"totalSubmission\": \"1.9M\", \"totalAcceptedRaw\": 665356, \"totalSubmissionRaw\": 1904404, \"acRate\": \"34.9%\"}", "similarQuestions": "[{\"title\": \"LFU Cache\", \"titleSlug\": \"lfu-cache\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Design In-Memory File System\", \"titleSlug\": \"design-in-memory-file-system\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Design Compressed String Iterator\", \"titleSlug\": \"design-compressed-string-iterator\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}]}}, {"id": "145", "name": "binary-tree-postorder-traversal", "content": {"questionId": "145", "questionFrontendId": "145", "questionTitle": "Binary Tree Postorder Traversal", "questionTitleSlug": "binary-tree-postorder-traversal", "content": "<p>Given the <code>root</code> of a&nbsp;binary tree, return <em>the postorder traversal of its nodes&#39; values</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/28/pre1.jpg\" style=\"width: 202px; height: 317px;\" />\n<pre>\n<strong>Input:</strong> root = [1,null,2,3]\n<strong>Output:</strong> [3,2,1]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1]\n<strong>Output:</strong> [1]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/28/pre3.jpg\" style=\"width: 202px; height: 197px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2]\n<strong>Output:</strong> [2,1]\n</pre>\n\n<p><strong>Example 5:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/28/pre2.jpg\" style=\"width: 202px; height: 197px;\" />\n<pre>\n<strong>Input:</strong> root = [1,null,2]\n<strong>Output:</strong> [2,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of the nodes in the tree is in the range <code>[0, 100]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>Follow up:</strong></p>\n\n<p>Recursive solution is trivial, could you do it iteratively?</p>\n\n<p>&nbsp;</p>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"438K\", \"totalSubmission\": \"771.3K\", \"totalAcceptedRaw\": 437963, \"totalSubmissionRaw\": 771320, \"acRate\": \"56.8%\"}", "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Postorder Traversal\", \"titleSlug\": \"n-ary-tree-postorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "144", "name": "binary-tree-preorder-traversal", "content": {"questionId": "144", "questionFrontendId": "144", "questionTitle": "Binary Tree Preorder Traversal", "questionTitleSlug": "binary-tree-preorder-traversal", "content": "<p>Given the <code>root</code> of a binary tree, return <em>the preorder traversal of its nodes&#39; values</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/15/inorder_1.jpg\" style=\"width: 202px; height: 324px;\" />\n<pre>\n<strong>Input:</strong> root = [1,null,2,3]\n<strong>Output:</strong> [1,2,3]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1]\n<strong>Output:</strong> [1]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/15/inorder_5.jpg\" style=\"width: 202px; height: 202px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2]\n<strong>Output:</strong> [1,2]\n</pre>\n\n<p><strong>Example 5:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/15/inorder_4.jpg\" style=\"width: 202px; height: 202px;\" />\n<pre>\n<strong>Input:</strong> root = [1,null,2]\n<strong>Output:</strong> [1,2]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 100]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>Follow up:</strong></p>\n\n<p>Recursive solution is trivial, could you do it iteratively?</p>\n\n<p>&nbsp;</p>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"572.2K\", \"totalSubmission\": \"1M\", \"totalAcceptedRaw\": 572211, \"totalSubmissionRaw\": 1005137, \"acRate\": \"56.9%\"}", "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Verify Preorder Sequence in Binary Search Tree\", \"titleSlug\": \"verify-preorder-sequence-in-binary-search-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Preorder Traversal\", \"titleSlug\": \"n-ary-tree-preorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "143", "name": "reorder-list", "content": {"questionId": "143", "questionFrontendId": "143", "questionTitle": "Reorder List", "questionTitleSlug": "reorder-list", "content": "<p>Given a singly linked list <em>L</em>: <em>L</em><sub>0</sub>&rarr;<em>L</em><sub>1</sub>&rarr;&hellip;&rarr;<em>L</em><sub><em>n</em>-1</sub>&rarr;<em>L</em><sub>n</sub>,<br />\r\nreorder it to: <em>L</em><sub>0</sub>&rarr;<em>L</em><sub><em>n</em></sub>&rarr;<em>L</em><sub>1</sub>&rarr;<em>L</em><sub><em>n</em>-1</sub>&rarr;<em>L</em><sub>2</sub>&rarr;<em>L</em><sub><em>n</em>-2</sub>&rarr;&hellip;</p>\r\n\r\n<p>You may <strong>not</strong> modify the values in the list&#39;s nodes, only nodes itself may be changed.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\nGiven 1-&gt;2-&gt;3-&gt;4, reorder it to 1-&gt;4-&gt;2-&gt;3.</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\nGiven 1-&gt;2-&gt;3-&gt;4-&gt;5, reorder it to 1-&gt;5-&gt;2-&gt;4-&gt;3.\r\n</pre>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"293.2K\", \"totalSubmission\": \"733.1K\", \"totalAcceptedRaw\": 293248, \"totalSubmissionRaw\": 733078, \"acRate\": \"40.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}]}}, {"id": "142", "name": "linked-list-cycle-ii", "content": {"questionId": "142", "questionFrontendId": "142", "questionTitle": "Linked List Cycle II", "questionTitleSlug": "linked-list-cycle-ii", "content": "<p>Given a linked list, return the node where the cycle begins. If there is no cycle, return <code>null</code>.</p>\n\n<p>There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the&nbsp;<code>next</code>&nbsp;pointer. Internally, <code>pos</code>&nbsp;is used to denote the index of the node that&nbsp;tail&#39;s&nbsp;<code>next</code>&nbsp;pointer is connected to.&nbsp;<strong>Note that&nbsp;<code>pos</code>&nbsp;is not passed as a parameter</strong>.</p>\n\n<p><strong>Notice</strong> that you <strong>should not modify</strong> the linked list.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist.png\" style=\"height: 145px; width: 450px;\" />\n<pre>\n<strong>Input:</strong> head = [3,2,0,-4], pos = 1\n<strong>Output:</strong> tail connects to node index 1\n<strong>Explanation:</strong> There is a cycle in the linked list, where tail connects to the second node.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test2.png\" style=\"height: 105px; width: 201px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2], pos = 0\n<strong>Output:</strong> tail connects to node index 0\n<strong>Explanation:</strong> There is a cycle in the linked list, where tail connects to the first node.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test3.png\" style=\"height: 65px; width: 65px;\" />\n<pre>\n<strong>Input:</strong> head = [1], pos = -1\n<strong>Output:</strong> no cycle\n<strong>Explanation:</strong> There is no cycle in the linked list.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of the nodes in the list is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n\t<li><code>pos</code> is <code>-1</code> or a <strong>valid index</strong> in the linked-list.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Can you solve it using <code>O(1)</code> (i.e. constant) memory?</p>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"397.4K\", \"totalSubmission\": \"1M\", \"totalAcceptedRaw\": 397374, \"totalSubmissionRaw\": 1015881, \"acRate\": \"39.1%\"}", "similarQuestions": "[{\"title\": \"Linked List Cycle\", \"titleSlug\": \"linked-list-cycle\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Duplicate Number\", \"titleSlug\": \"find-the-duplicate-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}, {"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "139", "name": "word-break", "content": {"questionId": "139", "questionFrontendId": "139", "questionTitle": "Word Break", "questionTitleSlug": "word-break", "content": "<p>Given a <strong>non-empty</strong> string <em>s</em> and a dictionary <em>wordDict</em> containing a list of <strong>non-empty</strong> words, determine if <em>s</em> can be segmented into a space-separated sequence of one or more dictionary words.</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li>The same word in the dictionary may be reused multiple times in the segmentation.</li>\r\n\t<li>You may assume the dictionary does not contain duplicate words.</li>\r\n</ul>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;leetcode&quot;, wordDict = [&quot;leet&quot;, &quot;code&quot;]\r\n<strong>Output:</strong> true\r\n<strong>Explanation:</strong> Return true because <code>&quot;leetcode&quot;</code> can be segmented as <code>&quot;leet code&quot;</code>.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;applepenapple&quot;, wordDict = [&quot;apple&quot;, &quot;pen&quot;]\r\n<strong>Output:</strong> true\r\n<strong>Explanation:</strong> Return true because <code>&quot;</code>applepenapple<code>&quot;</code> can be segmented as <code>&quot;</code>apple pen apple<code>&quot;</code>.\r\n&nbsp;            Note that you are allowed to reuse a dictionary word.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;catsandog&quot;, wordDict = [&quot;cats&quot;, &quot;dog&quot;, &quot;sand&quot;, &quot;and&quot;, &quot;cat&quot;]\r\n<strong>Output:</strong> false\r\n</pre>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"673.9K\", \"totalSubmission\": \"1.6M\", \"totalAcceptedRaw\": 673863, \"totalSubmissionRaw\": 1633250, \"acRate\": \"41.3%\"}", "similarQuestions": "[{\"title\": \"Word Break II\", \"titleSlug\": \"word-break-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "138", "name": "copy-list-with-random-pointer", "content": {"questionId": "138", "questionFrontendId": "138", "questionTitle": "Copy List with Random Pointer", "questionTitleSlug": "copy-list-with-random-pointer", "content": "<p>A linked list is given such that each node contains an additional random pointer which could point to any node in the list or null.</p>\r\n\r\n<p>Return a <a href=\"https://en.wikipedia.org/wiki/Object_copying#Deep_copy\" target=\"_blank\"><strong>deep copy</strong></a> of the list.</p>\r\n\r\n<p>The Linked List is represented in the input/output as a list of <code>n</code> nodes. Each node is represented as a pair of <code>[val, random_index]</code> where:</p>\r\n\r\n<ul>\r\n\t<li><code>val</code>: an integer representing <code>Node.val</code></li>\r\n\t<li><code>random_index</code>: the index of the node (range from <code>0</code> to <code>n-1</code>) where random pointer points to, or <code>null</code> if it does not point to any node.</li>\r\n</ul>\r\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/18/e1.png\" style=\"width: 700px; height: 142px;\" />\n<pre>\n<strong>Input:</strong> head = [[7,null],[13,0],[11,4],[10,2],[1,0]]\n<strong>Output:</strong> [[7,null],[13,0],[11,4],[10,2],[1,0]]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/18/e2.png\" style=\"width: 700px; height: 114px;\" />\n<pre>\n<strong>Input:</strong> head = [[1,1],[2,1]]\n<strong>Output:</strong> [[1,1],[2,1]]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/18/e3.png\" style=\"width: 700px; height: 122px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> head = [[3,null],[3,0],[3,null]]\n<strong>Output:</strong> [[3,null],[3,0],[3,null]]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = []\n<strong>Output:</strong> []\n<strong>Explanation:</strong> Given linked list is empty (null pointer), so return null.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-10000 &lt;= Node.val &lt;= 10000</code></li>\n\t<li><code>Node.random</code> is null or pointing to a node in the linked list.</li>\n\t<li>The number of nodes will not exceed 1000.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"489K\", \"totalSubmission\": \"1.3M\", \"totalAcceptedRaw\": 488961, \"totalSubmissionRaw\": 1252949, \"acRate\": \"39.0%\"}", "similarQuestions": "[{\"title\": \"Clone Graph\", \"titleSlug\": \"clone-graph\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Clone Binary Tree With Random Pointer\", \"titleSlug\": \"clone-binary-tree-with-random-pointer\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Clone N-ary Tree\", \"titleSlug\": \"clone-n-ary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Linked List", "slug": "linked-list"}]}}, {"id": "137", "name": "single-number-ii", "content": {"questionId": "137", "questionFrontendId": "137", "questionTitle": "Single Number II", "questionTitleSlug": "single-number-ii", "content": "<p>Given an integer array <code>nums</code> where&nbsp;every element appears <strong>three times</strong> except for one, which appears <strong>exactly once</strong>. <em>Find the single element and return it</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,2,3,2]\n<strong>Output:</strong> 3\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0,1,0,1,0,1,99]\n<strong>Output:</strong> 99\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li>Each element in <code>nums</code> appears exactly <strong>three times</strong> except for one element which appears <strong>once</strong>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong>&nbsp;Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?</p>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"268.8K\", \"totalSubmission\": \"503.7K\", \"totalAcceptedRaw\": 268827, \"totalSubmissionRaw\": 503689, \"acRate\": \"53.4%\"}", "similarQuestions": "[{\"title\": \"Single Number\", \"titleSlug\": \"single-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Single Number III\", \"titleSlug\": \"single-number-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "134", "name": "gas-station", "content": {"questionId": "134", "questionFrontendId": "134", "questionTitle": "Gas Station", "questionTitleSlug": "gas-station", "content": "<p>There are <em>N</em> gas stations along a circular route, where the amount of gas at station <em>i</em> is <code>gas[i]</code>.</p>\r\n\r\n<p>You have a car with an unlimited gas tank and it costs <code>cost[i]</code> of gas to travel from station <em>i</em> to its next station (<em>i</em>+1). You begin the journey with an empty tank at one of the gas stations.</p>\r\n\r\n<p>Return the starting gas station&#39;s index if you can travel around the circuit once in the clockwise direction, otherwise return -1.</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li>If there exists a&nbsp;solution, it is guaranteed to be unique.</li>\r\n\t<li>Both input arrays are non-empty and have the same length.</li>\r\n\t<li>Each element in the input arrays is a non-negative integer.</li>\r\n</ul>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> \r\ngas  = [1,2,3,4,5]\r\ncost = [3,4,5,1,2]\r\n\r\n<strong>Output:</strong> 3\r\n\r\n<strong>Explanation:\r\n</strong>Start at station 3 (index 3) and fill up with 4 unit of gas. Your tank = 0 + 4 = 4\r\nTravel to station 4. Your tank = 4 - 1 + 5 = 8\r\nTravel to station 0. Your tank = 8 - 2 + 1 = 7\r\nTravel to station 1. Your tank = 7 - 3 + 2 = 6\r\nTravel to station 2. Your tank = 6 - 4 + 3 = 5\r\nTravel to station 3. The cost is 5. Your gas is just enough to travel back to station 3.\r\nTherefore, return 3 as the starting index.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> \r\ngas  = [2,3,4]\r\ncost = [3,4,3]\r\n\r\n<strong>Output:</strong> -1\r\n\r\n<strong>Explanation:\r\n</strong>You can&#39;t start at station 0 or 1, as there is not enough gas to travel to the next station.\r\nLet&#39;s start at station 2 and fill up with 4 unit of gas. Your tank = 0 + 4 = 4\r\nTravel to station 0. Your tank = 4 - 3 + 2 = 3\r\nTravel to station 1. Your tank = 3 - 3 + 3 = 3\r\nYou cannot travel back to station 2, as it requires 4 unit of gas but you only have 3.\r\nTherefore, you can&#39;t travel around the circuit once no matter where you start.\r\n</pre>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"260.3K\", \"totalSubmission\": \"638.6K\", \"totalAcceptedRaw\": 260301, \"totalSubmissionRaw\": 638609, \"acRate\": \"40.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "133", "name": "clone-graph", "content": {"questionId": "133", "questionFrontendId": "133", "questionTitle": "Clone Graph", "questionTitleSlug": "clone-graph", "content": "<p>Given a reference of a node in a&nbsp;<strong><a href=\"https://en.wikipedia.org/wiki/Connectivity_(graph_theory)#Connected_graph\" target=\"_blank\">connected</a></strong>&nbsp;undirected graph.</p>\r\n\r\n<p>Return a <a href=\"https://en.wikipedia.org/wiki/Object_copying#Deep_copy\" target=\"_blank\"><strong>deep copy</strong></a> (clone) of the graph.</p>\r\n\r\n<p>Each node in the graph contains a val (<code>int</code>) and a list (<code>List[Node]</code>) of its neighbors.</p>\r\n\r\n<pre>\r\nclass Node {\r\n    public int val;\r\n    public List&lt;Node&gt; neighbors;\r\n}\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Test case format:</strong></p>\r\n\r\n<p>For simplicity sake, each&nbsp;node&#39;s value is the same as the node&#39;s index (1-indexed). For example, the first node with&nbsp;<code>val = 1</code>, the second node with <code>val = 2</code>, and so on.&nbsp;The graph is represented in the test case using an adjacency list.</p>\r\n\r\n<p><b>Adjacency list</b>&nbsp;is a collection of unordered&nbsp;<b>lists</b>&nbsp;used to represent a finite graph. Each&nbsp;list&nbsp;describes the set of neighbors of a node in the graph.</p>\r\n\r\n<p>The given node will&nbsp;always be the first node&nbsp;with&nbsp;<code>val = 1</code>. You must return the <strong>copy of the given node</strong> as a reference to the cloned graph.</p>\r\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/04/133_clone_graph_question.png\" style=\"width: 500px; height: 550px;\" />\n<pre>\n<strong>Input:</strong> adjList = [[2,4],[1,3],[2,4],[1,3]]\n<strong>Output:</strong> [[2,4],[1,3],[2,4],[1,3]]\n<strong>Explanation:</strong> There are 4 nodes in the graph.\n1st node (val = 1)&#39;s neighbors are 2nd node (val = 2) and 4th node (val = 4).\n2nd node (val = 2)&#39;s neighbors are 1st node (val = 1) and 3rd node (val = 3).\n3rd node (val = 3)&#39;s neighbors are 2nd node (val = 2) and 4th node (val = 4).\n4th node (val = 4)&#39;s neighbors are 1st node (val = 1) and 3rd node (val = 3).\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/07/graph.png\" style=\"width: 163px; height: 148px;\" />\n<pre>\n<strong>Input:</strong> adjList = [[]]\n<strong>Output:</strong> [[]]\n<strong>Explanation:</strong> Note that the input contains one empty list. The graph consists of only one node with val = 1 and it does not have any neighbors.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> adjList = []\n<strong>Output:</strong> []\n<strong>Explanation:</strong> This an empty graph, it does not have any nodes.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/07/graph-1.png\" style=\"width: 272px; height: 133px;\" />\n<pre>\n<strong>Input:</strong> adjList = [[2],[1]]\n<strong>Output:</strong> [[2],[1]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= Node.val &lt;= 100</code></li>\n\t<li><code>Node.val</code> is unique for each node.</li>\n\t<li>Number of Nodes will not exceed 100.</li>\n\t<li>There is no repeated edges and no self-loops in the graph.</li>\n\t<li>The Graph is connected and all nodes can be visited starting from the given node.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"415.8K\", \"totalSubmission\": \"1.1M\", \"totalAcceptedRaw\": 415806, \"totalSubmissionRaw\": 1091649, \"acRate\": \"38.1%\"}", "similarQuestions": "[{\"title\": \"Copy List with Random Pointer\", \"titleSlug\": \"copy-list-with-random-pointer\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Clone Binary Tree With Random Pointer\", \"titleSlug\": \"clone-binary-tree-with-random-pointer\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Clone N-ary Tree\", \"titleSlug\": \"clone-n-ary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "131", "name": "palindrome-partitioning", "content": {"questionId": "131", "questionFrontendId": "131", "questionTitle": "Palindrome Partitioning", "questionTitleSlug": "palindrome-partitioning", "content": "<p>Given a string <code>s</code>, partition <code>s</code> such that every substring of the partition is a <strong>palindrome</strong>. Return all possible palindrome partitioning of <code>s</code>.</p>\n\n<p>A <strong>palindrome</strong> string is a string that reads the same backward as forward.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"aab\"\n<strong>Output:</strong> [[\"a\",\"a\",\"b\"],[\"aa\",\"b\"]]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"a\"\n<strong>Output:</strong> [[\"a\"]]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 16</code></li>\n\t<li><code>s</code> contains only lowercase English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"279.5K\", \"totalSubmission\": \"548.9K\", \"totalAcceptedRaw\": 279543, \"totalSubmissionRaw\": 548873, \"acRate\": \"50.9%\"}", "similarQuestions": "[{\"title\": \"Palindrome Partitioning II\", \"titleSlug\": \"palindrome-partitioning-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Backtracking", "slug": "backtracking"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "130", "name": "surrounded-regions", "content": {"questionId": "130", "questionFrontendId": "130", "questionTitle": "Surrounded Regions", "questionTitleSlug": "surrounded-regions", "content": "<p>Given a 2D board containing <code>&#39;X&#39;</code> and <code>&#39;O&#39;</code> (<strong>the letter O</strong>), capture all regions surrounded by <code>&#39;X&#39;</code>.</p>\r\n\r\n<p>A region is captured by flipping all <code>&#39;O&#39;</code>s into <code>&#39;X&#39;</code>s in that surrounded region.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\nX X X X\r\nX O O X\r\nX X O X\r\nX O X X\r\n</pre>\r\n\r\n<p>After running your function, the board should be:</p>\r\n\r\n<pre>\r\nX X X X\r\nX X X X\r\nX X X X\r\nX O X X\r\n</pre>\r\n\r\n<p><strong>Explanation:</strong></p>\r\n\r\n<p>Surrounded regions shouldn&rsquo;t be on the border, which means that any <code>&#39;O&#39;</code>&nbsp;on the border of the board are not flipped to <code>&#39;X&#39;</code>. Any <code>&#39;O&#39;</code>&nbsp;that is not on the border and it is not connected to an <code>&#39;O&#39;</code>&nbsp;on the border will be flipped to <code>&#39;X&#39;</code>. Two cells are connected if they are adjacent cells connected horizontally or vertically.</p>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"272.1K\", \"totalSubmission\": \"938.1K\", \"totalAcceptedRaw\": 272087, \"totalSubmissionRaw\": 938147, \"acRate\": \"29.0%\"}", "similarQuestions": "[{\"title\": \"Number of Islands\", \"titleSlug\": \"number-of-islands\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Walls and Gates\", \"titleSlug\": \"walls-and-gates\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}, {"name": "Union Find", "slug": "union-find"}]}}, {"id": "129", "name": "sum-root-to-leaf-numbers", "content": {"questionId": "129", "questionFrontendId": "129", "questionTitle": "Sum Root to Leaf Numbers", "questionTitleSlug": "sum-root-to-leaf-numbers", "content": "<p>Given a binary tree containing digits from <code>0-9</code> only, each root-to-leaf path could represent a number.</p>\r\n\r\n<p>An example is the root-to-leaf path <code>1-&gt;2-&gt;3</code> which represents the number <code>123</code>.</p>\r\n\r\n<p>Find the total sum of all root-to-leaf numbers.</p>\r\n\r\n<p><strong>Note:</strong>&nbsp;A leaf is a node with no children.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [1,2,3]\r\n    1\r\n   / \\\r\n  2   3\r\n<strong>Output:</strong> 25\r\n<strong>Explanation:</strong>\r\nThe root-to-leaf path <code>1-&gt;2</code> represents the number <code>12</code>.\r\nThe root-to-leaf path <code>1-&gt;3</code> represents the number <code>13</code>.\r\nTherefore, sum = 12 + 13 = <code>25</code>.</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [4,9,0,5,1]\r\n    4\r\n   / \\\r\n  9   0\r\n&nbsp;/ \\\r\n5   1\r\n<strong>Output:</strong> 1026\r\n<strong>Explanation:</strong>\r\nThe root-to-leaf path <code>4-&gt;9-&gt;5</code> represents the number 495.\r\nThe root-to-leaf path <code>4-&gt;9-&gt;1</code> represents the number 491.\r\nThe root-to-leaf path <code>4-&gt;0</code> represents the number 40.\r\nTherefore, sum = 495 + 491 + 40 = <code>1026</code>.</pre>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"306.2K\", \"totalSubmission\": \"608.1K\", \"totalAcceptedRaw\": 306210, \"totalSubmissionRaw\": 608051, \"acRate\": \"50.4%\"}", "similarQuestions": "[{\"title\": \"Path Sum\", \"titleSlug\": \"path-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Maximum Path Sum\", \"titleSlug\": \"binary-tree-maximum-path-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Smallest String Starting From Leaf\", \"titleSlug\": \"smallest-string-starting-from-leaf\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "127", "name": "word-ladder", "content": {"questionId": "127", "questionFrontendId": "127", "questionTitle": "Word Ladder", "questionTitleSlug": "word-ladder", "content": "<p>Given two words (<em>beginWord</em> and <em>endWord</em>), and a dictionary&#39;s word list, find the length of shortest transformation sequence from <em>beginWord</em> to <em>endWord</em>, such that:</p>\n\n<ol>\n\t<li>Only one letter can be changed at a time.</li>\n\t<li>Each transformed word must exist in the word list.</li>\n</ol>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Return 0 if there is no such transformation sequence.</li>\n\t<li>All words have the same length.</li>\n\t<li>All words contain only lowercase alphabetic characters.</li>\n\t<li>You may assume no duplicates in the word list.</li>\n\t<li>You may assume <em>beginWord</em> and <em>endWord</em> are non-empty and are not the same.</li>\n</ul>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong>\nbeginWord = &quot;hit&quot;,\nendWord = &quot;cog&quot;,\nwordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]\n\n<strong>Output: </strong>5\n\n<strong>Explanation:</strong> As one shortest transformation is &quot;hit&quot; -&gt; &quot;hot&quot; -&gt; &quot;dot&quot; -&gt; &quot;dog&quot; -&gt; &quot;cog&quot;,\nreturn its length 5.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong>\nbeginWord = &quot;hit&quot;\nendWord = &quot;cog&quot;\nwordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;]\n\n<strong>Output:</strong>&nbsp;0\n\n<strong>Explanation:</strong>&nbsp;The endWord &quot;cog&quot; is not in wordList, therefore no possible<strong>&nbsp;</strong>transformation.\n</pre>\n\n<ul>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"505.7K\", \"totalSubmission\": \"1.6M\", \"totalAcceptedRaw\": 505730, \"totalSubmissionRaw\": 1634849, \"acRate\": \"30.9%\"}", "similarQuestions": "[{\"title\": \"Word Ladder II\", \"titleSlug\": \"word-ladder-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Genetic Mutation\", \"titleSlug\": \"minimum-genetic-mutation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "120", "name": "triangle", "content": {"questionId": "120", "questionFrontendId": "120", "questionTitle": "Triangle", "questionTitleSlug": "triangle", "content": "<p>Given a <code>triangle</code> array, return <em>the minimum path sum from top to bottom</em>.</p>\n\n<p>For each step, you may move to an adjacent number on the row below.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> triangle = [[2],[3,4],[6,5,7],[4,1,8,3]]\n<strong>Output:</strong> 11\n<strong>Explanation:</strong> The minimum path sum from top to bottom is 11 (i.e., 2 + 3 + 5 + 1 = 11).\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> triangle = [[-10]]\n<strong>Output:</strong> -10\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= triangle.length &lt;= 200</code></li>\n\t<li><code>triangle[0].length == 1</code></li>\n\t<li><code>triangle[i].length == triangle[i - 1].length + 1</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= triangle[i][j] &lt;= 10<sup>4</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you&nbsp;do this using only <code>O(n)</code> extra space, where <code>n</code> is the total number of rows in the triangle?", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"275.6K\", \"totalSubmission\": \"608.9K\", \"totalAcceptedRaw\": 275624, \"totalSubmissionRaw\": 608939, \"acRate\": \"45.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "117", "name": "populating-next-right-pointers-in-each-node-ii", "content": {"questionId": "117", "questionFrontendId": "117", "questionTitle": "Populating Next Right Pointers in Each Node II", "questionTitleSlug": "populating-next-right-pointers-in-each-node-ii", "content": "<p>Given a binary tree</p>\r\n\r\n<pre>\r\nstruct Node {\r\n  int val;\r\n  Node *left;\r\n  Node *right;\r\n  Node *next;\r\n}\r\n</pre>\r\n\r\n<p>Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to <code>NULL</code>.</p>\r\n\r\n<p>Initially, all next pointers are set to <code>NULL</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Follow up:</strong></p>\r\n\r\n<ul>\r\n\t<li>You may only use constant extra space.</li>\r\n\t<li>Recursive approach is fine, you may assume implicit stack space does not count as extra space for this problem.</li>\r\n</ul>\r\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/15/117_sample.png\" style=\"width: 640px; height: 218px;\" /></p>\n\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,5,null,7]\n<strong>Output:</strong> [1,#,2,3,#,4,5,7,#]\n<strong>Explanation: </strong>Given the above binary tree (Figure A), your function should populate each next pointer to point to its next right node, just like in Figure B. The serialized output is in level order as connected by the next pointers, with &#39;#&#39; signifying the end of each level.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the given tree is less than <code>6000</code>.</li>\n\t<li><code>-100&nbsp;&lt;= node.val &lt;= 100</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"306.3K\", \"totalSubmission\": \"738.2K\", \"totalAcceptedRaw\": 306300, \"totalSubmissionRaw\": 738177, \"acRate\": \"41.5%\"}", "similarQuestions": "[{\"title\": \"Populating Next Right Pointers in Each Node\", \"titleSlug\": \"populating-next-right-pointers-in-each-node\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "116", "name": "populating-next-right-pointers-in-each-node", "content": {"questionId": "116", "questionFrontendId": "116", "questionTitle": "Populating Next Right Pointers in Each Node", "questionTitleSlug": "populating-next-right-pointers-in-each-node", "content": "<p>You are given a <strong>perfect binary tree</strong>&nbsp;where&nbsp;all leaves are on the same level, and every parent has two children. The binary tree has the following definition:</p>\r\n\r\n<pre>\r\nstruct Node {\r\n  int val;\r\n  Node *left;\r\n  Node *right;\r\n  Node *next;\r\n}\r\n</pre>\r\n\r\n<p>Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to <code>NULL</code>.</p>\r\n\r\n<p>Initially, all next pointers are set to <code>NULL</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Follow up:</strong></p>\r\n\r\n<ul>\r\n\t<li>You may only use constant extra space.</li>\r\n\t<li>Recursive approach is fine, you may assume implicit stack space does not count as extra space for this problem.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/14/116_sample.png\" style=\"width: 640px; height: 218px;\" /></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [1,2,3,4,5,6,7]\r\n<strong>Output:</strong> [1,#,2,3,#,4,5,6,7,#]\r\n<strong>Explanation: </strong>Given the above perfect binary tree (Figure A), your function should populate each next pointer to point to its next right node, just like in Figure B. The serialized output is in level order as connected by the next pointers, with &#39;#&#39; signifying the end of each level.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li>The number of nodes in the given tree is less than <code>4096</code>.</li>\r\n\t<li><code>-1000 &lt;= node.val &lt;= 1000</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"438.6K\", \"totalSubmission\": \"911.1K\", \"totalAcceptedRaw\": 438593, \"totalSubmissionRaw\": 911101, \"acRate\": \"48.1%\"}", "similarQuestions": "[{\"title\": \"Populating Next Right Pointers in Each Node II\", \"titleSlug\": \"populating-next-right-pointers-in-each-node-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Right Side View\", \"titleSlug\": \"binary-tree-right-side-view\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "114", "name": "flatten-binary-tree-to-linked-list", "content": {"questionId": "114", "questionFrontendId": "114", "questionTitle": "Flatten Binary Tree to Linked List", "questionTitleSlug": "flatten-binary-tree-to-linked-list", "content": "<p>Given a binary tree, flatten it to a linked list in-place.</p>\r\n\r\n<p>For example, given the following tree:</p>\r\n\r\n<pre>\r\n    1\r\n   / \\\r\n  2   5\r\n / \\   \\\r\n3   4   6\r\n</pre>\r\n\r\n<p>The flattened tree should look like:</p>\r\n\r\n<pre>\r\n1\r\n \\\r\n  2\r\n   \\\r\n    3\r\n     \\\r\n      4\r\n       \\\r\n        5\r\n         \\\r\n          6\r\n</pre>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"398.9K\", \"totalSubmission\": \"780.1K\", \"totalAcceptedRaw\": 398908, \"totalSubmissionRaw\": 780116, \"acRate\": \"51.1%\"}", "similarQuestions": "[{\"title\": \"Flatten a Multilevel Doubly Linked List\", \"titleSlug\": \"flatten-a-multilevel-doubly-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Correct a Binary Tree\", \"titleSlug\": \"correct-a-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "113", "name": "path-sum-ii", "content": {"questionId": "113", "questionFrontendId": "113", "questionTitle": "Path Sum II", "questionTitleSlug": "path-sum-ii", "content": "<p>Given a binary tree and a sum, find all root-to-leaf paths where each path&#39;s sum equals the given sum.</p>\r\n\r\n<p><strong>Note:</strong>&nbsp;A leaf is a node with no children.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<p>Given the below binary tree and <code>sum = 22</code>,</p>\r\n\r\n<pre>\r\n      <strong>5</strong>\r\n     <strong>/ \\</strong>\r\n    <strong>4   8</strong>\r\n   <strong>/</strong>   / <strong>\\</strong>\r\n  <strong>11</strong>  13  <strong>4</strong>\r\n /  <strong>\\</strong>    <strong>/</strong> \\\r\n7    <strong>2</strong>  <strong>5</strong>   1\r\n</pre>\r\n\r\n<p>Return:</p>\r\n\r\n<pre>\r\n[\r\n   [5,4,11,2],\r\n   [5,8,4,5]\r\n]\r\n</pre>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"377.2K\", \"totalSubmission\": \"779.8K\", \"totalAcceptedRaw\": 377242, \"totalSubmissionRaw\": 779809, \"acRate\": \"48.4%\"}", "similarQuestions": "[{\"title\": \"Path Sum\", \"titleSlug\": \"path-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Paths\", \"titleSlug\": \"binary-tree-paths\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Path Sum III\", \"titleSlug\": \"path-sum-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Path Sum IV\", \"titleSlug\": \"path-sum-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "109", "name": "convert-sorted-list-to-binary-search-tree", "content": {"questionId": "109", "questionFrontendId": "109", "questionTitle": "Convert Sorted List to Binary Search Tree", "questionTitleSlug": "convert-sorted-list-to-binary-search-tree", "content": "<p>Given the <code>head</code> of a singly linked list where elements are <strong>sorted in ascending order</strong>, convert it to a height balanced BST.</p>\n\n<p>For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of <em>every</em> node never differ by more than 1.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/17/linked.jpg\" style=\"width: 600px; height: 466px;\" />\n<pre>\n<strong>Input:</strong> head = [-10,-3,0,5,9]\n<strong>Output:</strong> [0,-3,9,-10,null,5]\n<strong>Explanation:</strong> One possible answer is [0,-3,9,-10,null,5], which represents the shown height balanced BST.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = []\n<strong>Output:</strong> []\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [0]\n<strong>Output:</strong> [0]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1,3]\n<strong>Output:</strong> [3,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in <code>head</code> is in the range <code>[0, 2 * 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10^5 &lt;= Node.val &lt;= 10^5</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"272.5K\", \"totalSubmission\": \"550.6K\", \"totalAcceptedRaw\": 272507, \"totalSubmissionRaw\": 550602, \"acRate\": \"49.5%\"}", "similarQuestions": "[{\"title\": \"Convert Sorted Array to Binary Search Tree\", \"titleSlug\": \"convert-sorted-array-to-binary-search-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "106", "name": "construct-binary-tree-from-inorder-and-postorder-traversal", "content": {"questionId": "106", "questionFrontendId": "106", "questionTitle": "Construct Binary Tree from Inorder and Postorder Traversal", "questionTitleSlug": "construct-binary-tree-from-inorder-and-postorder-traversal", "content": "<p>Given inorder and postorder traversal of a tree, construct the binary tree.</p>\r\n\r\n<p><strong>Note:</strong><br />\r\nYou may assume that duplicates do not exist in the tree.</p>\r\n\r\n<p>For example, given</p>\r\n\r\n<pre>\r\ninorder =&nbsp;[9,3,15,20,7]\r\npostorder = [9,15,7,20,3]</pre>\r\n\r\n<p>Return the following binary tree:</p>\r\n\r\n<pre>\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n</pre>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"270.2K\", \"totalSubmission\": \"552.7K\", \"totalAcceptedRaw\": 270151, \"totalSubmissionRaw\": 552709, \"acRate\": \"48.9%\"}", "similarQuestions": "[{\"title\": \"Construct Binary Tree from Preorder and Inorder Traversal\", \"titleSlug\": \"construct-binary-tree-from-preorder-and-inorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "105", "name": "construct-binary-tree-from-preorder-and-inorder-traversal", "content": {"questionId": "105", "questionFrontendId": "105", "questionTitle": "Construct Binary Tree from Preorder and Inorder Traversal", "questionTitleSlug": "construct-binary-tree-from-preorder-and-inorder-traversal", "content": "<p>Given preorder and inorder traversal of a tree, construct the binary tree.</p>\r\n\r\n<p><strong>Note:</strong><br />\r\nYou may assume that duplicates do not exist in the tree.</p>\r\n\r\n<p>For example, given</p>\r\n\r\n<pre>\r\npreorder =&nbsp;[3,9,20,15,7]\r\ninorder = [9,3,15,20,7]</pre>\r\n\r\n<p>Return the following binary tree:</p>\r\n\r\n<pre>\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7</pre>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"432.7K\", \"totalSubmission\": \"850.4K\", \"totalAcceptedRaw\": 432720, \"totalSubmissionRaw\": 850418, \"acRate\": \"50.9%\"}", "similarQuestions": "[{\"title\": \"Construct Binary Tree from Inorder and Postorder Traversal\", \"titleSlug\": \"construct-binary-tree-from-inorder-and-postorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "103", "name": "binary-tree-zigzag-level-order-traversal", "content": {"questionId": "103", "questionFrontendId": "103", "questionTitle": "Binary Tree Zigzag Level Order Traversal", "questionTitleSlug": "binary-tree-zigzag-level-order-traversal", "content": "<p>Given a binary tree, return the <i>zigzag level order</i> traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).</p>\r\n\r\n<p>\r\nFor example:<br />\r\nGiven binary tree <code>[3,9,20,null,null,15,7]</code>,<br />\r\n<pre>\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n</pre>\r\n</p>\r\n<p>\r\nreturn its zigzag level order traversal as:<br />\r\n<pre>\r\n[\r\n  [3],\r\n  [20,9],\r\n  [15,7]\r\n]\r\n</pre>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"450.9K\", \"totalSubmission\": \"909.5K\", \"totalAcceptedRaw\": 450908, \"totalSubmissionRaw\": 909485, \"acRate\": \"49.6%\"}", "similarQuestions": "[{\"title\": \"Binary Tree Level Order Traversal\", \"titleSlug\": \"binary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}, {"name": "Tree", "slug": "tree"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "102", "name": "binary-tree-level-order-traversal", "content": {"questionId": "102", "questionFrontendId": "102", "questionTitle": "Binary Tree Level Order Traversal", "questionTitleSlug": "binary-tree-level-order-traversal", "content": "<p>Given a binary tree, return the <i>level order</i> traversal of its nodes' values. (ie, from left to right, level by level).</p>\r\n\r\n<p>\r\nFor example:<br />\r\nGiven binary tree <code>[3,9,20,null,null,15,7]</code>,<br />\r\n<pre>\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n</pre>\r\n</p>\r\n<p>\r\nreturn its level order traversal as:<br />\r\n<pre>\r\n[\r\n  [3],\r\n  [9,20],\r\n  [15,7]\r\n]\r\n</pre>\r\n</p>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"732.2K\", \"totalSubmission\": \"1.3M\", \"totalAcceptedRaw\": 732171, \"totalSubmissionRaw\": 1307581, \"acRate\": \"56.0%\"}", "similarQuestions": "[{\"title\": \"Binary Tree Zigzag Level Order Traversal\", \"titleSlug\": \"binary-tree-zigzag-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Level Order Traversal II\", \"titleSlug\": \"binary-tree-level-order-traversal-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Depth of Binary Tree\", \"titleSlug\": \"minimum-depth-of-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Vertical Order Traversal\", \"titleSlug\": \"binary-tree-vertical-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Average of Levels in Binary Tree\", \"titleSlug\": \"average-of-levels-in-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Level Order Traversal\", \"titleSlug\": \"n-ary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Cousins in Binary Tree\", \"titleSlug\": \"cousins-in-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "98", "name": "validate-binary-search-tree", "content": {"questionId": "98", "questionFrontendId": "98", "questionTitle": "Validate Binary Search Tree", "questionTitleSlug": "validate-binary-search-tree", "content": "<p>Given the <code>root</code> of a binary tree, <em>determine if it is a valid binary search tree (BST)</em>.</p>\n\n<p>A <strong>valid BST</strong> is defined as follows:</p>\n\n<ul>\n\t<li>The left subtree of a node contains only nodes with keys <strong>less than</strong> the node&#39;s key.</li>\n\t<li>The right subtree of a node contains only nodes with keys <strong>greater than</strong> the node&#39;s key.</li>\n\t<li>Both the left and right subtrees must also be binary search trees.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/01/tree1.jpg\" style=\"width: 302px; height: 182px;\" />\n<pre>\n<strong>Input:</strong> root = [2,1,3]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/01/tree2.jpg\" style=\"width: 422px; height: 292px;\" />\n<pre>\n<strong>Input:</strong> root = [5,1,4,null,null,3,6]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The root node&#39;s value is 5 but its right child&#39;s value is 4.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-2<sup>31</sup> &lt;= Node.val &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"857.9K\", \"totalSubmission\": \"3M\", \"totalAcceptedRaw\": 857906, \"totalSubmissionRaw\": 3013700, \"acRate\": \"28.5%\"}", "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Mode in Binary Search Tree\", \"titleSlug\": \"find-mode-in-binary-search-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Recursion", "slug": "recursion"}]}}, {"id": "96", "name": "unique-binary-search-trees", "content": {"questionId": "96", "questionFrontendId": "96", "questionTitle": "Unique Binary Search Trees", "questionTitleSlug": "unique-binary-search-trees", "content": "<p>Given <em>n</em>, how many structurally unique <strong>BST&#39;s</strong> (binary search trees) that store values 1 ...&nbsp;<em>n</em>?</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> 3\r\n<strong>Output:</strong> 5\r\n<strong>Explanation:\r\n</strong>Given <em>n</em> = 3, there are a total of 5 unique BST&#39;s:\r\n\r\n   1         3     3      2      1\r\n    \\       /     /      / \\      \\\r\n     3     2     1      1   3      2\r\n    /     /       \\                 \\\r\n   2     1         2                 3\r\n</pre>\r\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 19</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"338.2K\", \"totalSubmission\": \"626.4K\", \"totalAcceptedRaw\": 338200, \"totalSubmissionRaw\": 626390, \"acRate\": \"54.0%\"}", "similarQuestions": "[{\"title\": \"Unique Binary Search Trees II\", \"titleSlug\": \"unique-binary-search-trees-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "95", "name": "unique-binary-search-trees-ii", "content": {"questionId": "95", "questionFrontendId": "95", "questionTitle": "Unique Binary Search Trees II", "questionTitleSlug": "unique-binary-search-trees-ii", "content": "<p>Given an integer <code>n</code>, generate all structurally unique <strong>BST&#39;s</strong> (binary search trees) that store values 1 ...&nbsp;<em>n</em>.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> 3\n<strong>Output:</strong>\n[\n&nbsp; [1,null,3,2],\n&nbsp; [3,2,null,1],\n&nbsp; [3,1,null,null,2],\n&nbsp; [2,1,3],\n&nbsp; [1,null,2,null,3]\n]\n<strong>Explanation:</strong>\nThe above output corresponds to the 5 unique BST&#39;s shown below:\n\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 8</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"213.6K\", \"totalSubmission\": \"510.2K\", \"totalAcceptedRaw\": 213590, \"totalSubmissionRaw\": 510163, \"acRate\": \"41.9%\"}", "similarQuestions": "[{\"title\": \"Unique Binary Search Trees\", \"titleSlug\": \"unique-binary-search-trees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Different Ways to Add Parentheses\", \"titleSlug\": \"different-ways-to-add-parentheses\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "94", "name": "binary-tree-inorder-traversal", "content": {"questionId": "94", "questionFrontendId": "94", "questionTitle": "Binary Tree Inorder Traversal", "questionTitleSlug": "binary-tree-inorder-traversal", "content": "<p>Given the <code>root</code> of a binary tree, return <em>the inorder traversal of its nodes&#39; values</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/15/inorder_1.jpg\" style=\"width: 202px; height: 324px;\" />\n<pre>\n<strong>Input:</strong> root = [1,null,2,3]\n<strong>Output:</strong> [1,3,2]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1]\n<strong>Output:</strong> [1]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/15/inorder_5.jpg\" style=\"width: 202px; height: 202px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2]\n<strong>Output:</strong> [2,1]\n</pre>\n\n<p><strong>Example 5:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/15/inorder_4.jpg\" style=\"width: 202px; height: 202px;\" />\n<pre>\n<strong>Input:</strong> root = [1,null,2]\n<strong>Output:</strong> [1,2]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 100]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>Follow up:</strong></p>\n\n<p>Recursive solution is trivial, could you do it iteratively?</p>\n\n<p>&nbsp;</p>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"870.6K\", \"totalSubmission\": \"1.3M\", \"totalAcceptedRaw\": 870626, \"totalSubmissionRaw\": 1336328, \"acRate\": \"65.2%\"}", "similarQuestions": "[{\"title\": \"Validate Binary Search Tree\", \"titleSlug\": \"validate-binary-search-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Preorder Traversal\", \"titleSlug\": \"binary-tree-preorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Postorder Traversal\", \"titleSlug\": \"binary-tree-postorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Search Tree Iterator\", \"titleSlug\": \"binary-search-tree-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Smallest Element in a BST\", \"titleSlug\": \"kth-smallest-element-in-a-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Closest Binary Search Tree Value II\", \"titleSlug\": \"closest-binary-search-tree-value-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Inorder Successor in BST\", \"titleSlug\": \"inorder-successor-in-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Convert Binary Search Tree to Sorted Doubly Linked List\", \"titleSlug\": \"convert-binary-search-tree-to-sorted-doubly-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Distance Between BST Nodes\", \"titleSlug\": \"minimum-distance-between-bst-nodes\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Stack", "slug": "stack"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "93", "name": "restore-ip-addresses", "content": {"questionId": "93", "questionFrontendId": "93", "questionTitle": "Restore IP Addresses", "questionTitleSlug": "restore-ip-addresses", "content": "<p>Given a string <code>s</code> containing only digits, return all possible valid IP addresses that can be obtained from <code>s</code>. You can return them in <strong>any</strong> order.</p>\n\n<p>A <strong>valid IP address</strong> consists of exactly four integers, each integer is between <code>0</code> and <code>255</code>, separated by single dots and cannot have leading zeros. For example, &quot;0.1.2.201&quot; and &quot;192.168.1.1&quot; are <strong>valid</strong> IP addresses and &quot;0.011.255.245&quot;, &quot;192.168.1.312&quot; and &quot;192.168@1.1&quot; are <strong>invalid</strong> IP addresses.&nbsp;</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"25525511135\"\n<strong>Output:</strong> [\"255.255.11.135\",\"255.255.111.35\"]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"0000\"\n<strong>Output:</strong> [\"0.0.0.0\"]\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"1111\"\n<strong>Output:</strong> [\"1.1.1.1\"]\n</pre><p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> s = \"010010\"\n<strong>Output:</strong> [\"0.10.0.10\",\"0.100.1.0\"]\n</pre><p><strong>Example 5:</strong></p>\n<pre><strong>Input:</strong> s = \"101023\"\n<strong>Output:</strong> [\"1.0.10.23\",\"1.0.102.3\",\"10.1.0.23\",\"10.10.2.3\",\"101.0.2.3\"]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 3000</code></li>\n\t<li><code>s</code> consists of digits only.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"218.3K\", \"totalSubmission\": \"590.1K\", \"totalAcceptedRaw\": 218324, \"totalSubmissionRaw\": 590149, \"acRate\": \"37.0%\"}", "similarQuestions": "[{\"title\": \"IP to CIDR\", \"titleSlug\": \"ip-to-cidr\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "92", "name": "reverse-linked-list-ii", "content": {"questionId": "92", "questionFrontendId": "92", "questionTitle": "Reverse Linked List II", "questionTitleSlug": "reverse-linked-list-ii", "content": "<p>Reverse a linked list from position <em>m</em> to <em>n</em>. Do it in one-pass.</p>\r\n\r\n<p><strong>Note:&nbsp;</strong>1 &le; <em>m</em> &le; <em>n</em> &le; length of list.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL, <em>m</em> = 2, <em>n</em> = 4\r\n<strong>Output:</strong> 1-&gt;4-&gt;3-&gt;2-&gt;5-&gt;NULL\r\n</pre>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"313.6K\", \"totalSubmission\": \"783.3K\", \"totalAcceptedRaw\": 313572, \"totalSubmissionRaw\": 783329, \"acRate\": \"40.0%\"}", "similarQuestions": "[{\"title\": \"Reverse Linked List\", \"titleSlug\": \"reverse-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}]}}, {"id": "91", "name": "decode-ways", "content": {"questionId": "91", "questionFrontendId": "91", "questionTitle": "Decode Ways", "questionTitleSlug": "decode-ways", "content": "<p>A message containing letters from <code>A-Z</code> is being encoded to numbers using the following mapping:</p>\n\n<pre>\n&#39;A&#39; -&gt; 1\n&#39;B&#39; -&gt; 2\n...\n&#39;Z&#39; -&gt; 26\n</pre>\n\n<p>Given a <strong>non-empty</strong> string containing only digits, determine the total number of ways to decode it.</p>\n\n<p>The answer is guaranteed to fit in a <strong>32-bit</strong> integer.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;12&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> It could be decoded as &quot;AB&quot; (1 2) or &quot;L&quot; (12).\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;226&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> It could be decoded as &quot;BZ&quot; (2 26), &quot;VF&quot; (22 6), or &quot;BBF&quot; (2 2 6).\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;0&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There is no character that is mapped to a number starting with &#39;0&#39;. We cannot ignore a zero when we face it while decoding. So, each &#39;0&#39; should be part of &quot;10&quot; --&gt; &#39;J&#39; or &quot;20&quot; --&gt; &#39;T&#39;.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;1&quot;\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>s</code> contains only digits and may contain leading zero(s).</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"485.1K\", \"totalSubmission\": \"1.9M\", \"totalAcceptedRaw\": 485089, \"totalSubmissionRaw\": 1883964, \"acRate\": \"25.7%\"}", "similarQuestions": "[{\"title\": \"Decode Ways II\", \"titleSlug\": \"decode-ways-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "90", "name": "subsets-ii", "content": {"questionId": "90", "questionFrontendId": "90", "questionTitle": "Subsets II", "questionTitleSlug": "subsets-ii", "content": "<p>Given a collection of integers that might contain duplicates, <strong><em>nums</em></strong>, return all possible subsets (the power set).</p>\r\n\r\n<p><strong>Note:</strong> The solution set must not contain duplicate subsets.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [1,2,2]\r\n<strong>Output:</strong>\r\n[\r\n  [2],\r\n  [1],\r\n  [1,2,2],\r\n  [2,2],\r\n  [1,2],\r\n  []\r\n]\r\n</pre>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"313.6K\", \"totalSubmission\": \"649.3K\", \"totalAcceptedRaw\": 313551, \"totalSubmissionRaw\": 649316, \"acRate\": \"48.3%\"}", "similarQuestions": "[{\"title\": \"Subsets\", \"titleSlug\": \"subsets\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "89", "name": "gray-code", "content": {"questionId": "89", "questionFrontendId": "89", "questionTitle": "Gray Code", "questionTitleSlug": "gray-code", "content": "<p>The gray code is a binary numeral system where two successive values differ in only one bit.</p>\r\n\r\n<p>Given a non-negative integer <em>n</em> representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>&nbsp;2\r\n<strong>Output:</strong>&nbsp;<code>[0,1,3,2]</code>\r\n<strong>Explanation:</strong>\r\n00 - 0\r\n01 - 1\r\n11 - 3\r\n10 - 2\r\n\r\nFor a given&nbsp;<em>n</em>, a gray code sequence may not be uniquely defined.\r\nFor example, [0,2,3,1] is also a valid gray code sequence.\r\n\r\n00 - 0\r\n10 - 2\r\n11 - 3\r\n01 - 1\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>&nbsp;0\r\n<strong>Output:</strong>&nbsp;<code>[0]\r\n<strong>Explanation:</strong> We define the gray code sequence to begin with 0.\r\n&nbsp;            A gray code sequence of <em>n</em> has size = 2<sup>n</sup>, which for <em>n</em> = 0 the size is 2<sup>0</sup> = 1.\r\n&nbsp;            Therefore, for <em>n</em> = 0 the gray code sequence is [0].</code>\r\n</pre>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"171.9K\", \"totalSubmission\": \"344.5K\", \"totalAcceptedRaw\": 171902, \"totalSubmissionRaw\": 344454, \"acRate\": \"49.9%\"}", "similarQuestions": "[{\"title\": \"1-bit and 2-bit Characters\", \"titleSlug\": \"1-bit-and-2-bit-characters\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "86", "name": "partition-list", "content": {"questionId": "86", "questionFrontendId": "86", "questionTitle": "Partition List", "questionTitleSlug": "partition-list", "content": "<p>Given a linked list and a value <em>x</em>, partition it such that all nodes less than <em>x</em> come before nodes greater than or equal to <em>x</em>.</p>\r\n\r\n<p>You should preserve the original relative order of the nodes in each of the two partitions.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> head = 1-&gt;4-&gt;3-&gt;2-&gt;5-&gt;2, <em>x</em> = 3\r\n<strong>Output:</strong> 1-&gt;2-&gt;2-&gt;4-&gt;3-&gt;5\r\n</pre>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"239.8K\", \"totalSubmission\": \"560.6K\", \"totalAcceptedRaw\": 239819, \"totalSubmissionRaw\": 560630, \"acRate\": \"42.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}, {"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "82", "name": "remove-duplicates-from-sorted-list-ii", "content": {"questionId": "82", "questionFrontendId": "82", "questionTitle": "Remove Duplicates from Sorted List II", "questionTitleSlug": "remove-duplicates-from-sorted-list-ii", "content": "<p>Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only <em>distinct</em> numbers from the original list.</p>\n\n<p>Return the linked list sorted as well.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 1-&gt;2-&gt;3-&gt;3-&gt;4-&gt;4-&gt;5\n<strong>Output:</strong> 1-&gt;2-&gt;5\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> 1-&gt;1-&gt;1-&gt;2-&gt;3\n<strong>Output:</strong> 2-&gt;3\n</pre>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"280.8K\", \"totalSubmission\": \"742.4K\", \"totalAcceptedRaw\": 280828, \"totalSubmissionRaw\": 742417, \"acRate\": \"37.8%\"}", "similarQuestions": "[{\"title\": \"Remove Duplicates from Sorted List\", \"titleSlug\": \"remove-duplicates-from-sorted-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}]}}, {"id": "81", "name": "search-in-rotated-sorted-array-ii", "content": {"questionId": "81", "questionFrontendId": "81", "questionTitle": "Search in Rotated Sorted Array II", "questionTitleSlug": "search-in-rotated-sorted-array-ii", "content": "<p>Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.</p>\r\n\r\n<p>(i.e., <code>[0,0,1,2,2,5,6]</code> might become <code>[2,5,6,0,0,1,2]</code>).</p>\r\n\r\n<p>You are given a target value to search. If found in the array return <code>true</code>, otherwise return <code>false</code>.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [2<code>,5,6,0,0,1,2]</code>, target = 0\r\n<strong>Output:</strong> true\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [2<code>,5,6,0,0,1,2]</code>, target = 3\r\n<strong>Output:</strong> false</pre>\r\n\r\n<p><strong>Follow up:</strong></p>\r\n\r\n<ul>\r\n\t<li>This is a follow up problem to&nbsp;<a href=\"/problems/search-in-rotated-sorted-array/description/\">Search in Rotated Sorted Array</a>, where <code>nums</code> may contain duplicates.</li>\r\n\t<li>Would this affect the run-time complexity? How and why?</li>\r\n</ul>\r\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"282.3K\", \"totalSubmission\": \"844.7K\", \"totalAcceptedRaw\": 282297, \"totalSubmissionRaw\": 844736, \"acRate\": \"33.4%\"}", "similarQuestions": "[{\"title\": \"Search in Rotated Sorted Array\", \"titleSlug\": \"search-in-rotated-sorted-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "80", "name": "remove-duplicates-from-sorted-array-ii", "content": {"questionId": "80", "questionFrontendId": "80", "questionTitle": "Remove Duplicates from Sorted Array II", "questionTitleSlug": "remove-duplicates-from-sorted-array-ii", "content": "<p>Given a sorted array <em>nums</em>, remove the duplicates <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\"><strong>in-place</strong></a> such that duplicates appeared at most&nbsp;<em>twice</em> and return the new length.</p>\n\n<p>Do not allocate extra space for another array; you must do this by <strong>modifying the input array <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in-place</a></strong> with O(1) extra memory.</p>\n\n<p><strong>Clarification:</strong></p>\n\n<p>Confused why the returned value is an integer, but your answer is an array?</p>\n\n<p>Note that the input array is passed in by <strong>reference</strong>, which means a modification to the input array will be known to the caller.</p>\n\n<p>Internally you can think of this:</p>\n\n<pre>\n// <strong>nums</strong> is passed in by reference. (i.e., without making a copy)\nint len = removeDuplicates(nums);\n\n// any modification to <strong>nums</strong> in your function would be known by the caller.\n// using the length returned by your function, it prints the first <strong>len</strong> elements.\nfor (int i = 0; i &lt; len; i++) {\n&nbsp; &nbsp; print(nums[i]);\n}\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,1,2,2,3]\n<strong>Output:</strong> 5, nums = [1,1,2,2,3]\n<strong>Explanation:</strong> Your function should return length = <strong><code>5</code></strong>, with the first five elements of <em><code>nums</code></em> being <strong><code>1, 1, 2, 2</code></strong> and <strong>3</strong> respectively. It doesn&#39;t matter what you leave beyond the returned length.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,0,1,1,1,1,2,3,3]\n<strong>Output:</strong> 7, nums = [0,0,1,1,2,3,3]\n<strong>Explanation:</strong> Your function should return length = <strong><code>7</code></strong>, with the first seven elements of <em><code>nums</code></em> being modified to&nbsp;<strong><code>0</code></strong>, <strong>0</strong>, <strong>1</strong>, <strong>1</strong>, <strong>2</strong>, <strong>3</strong> and&nbsp;<strong>3</strong> respectively. It doesn&#39;t matter what values are set beyond&nbsp;the returned length.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>nums</code>&nbsp;is sorted in ascending order.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"307.1K\", \"totalSubmission\": \"672.3K\", \"totalAcceptedRaw\": 307063, \"totalSubmissionRaw\": 672256, \"acRate\": \"45.7%\"}", "similarQuestions": "[{\"title\": \"Remove Duplicates from Sorted Array\", \"titleSlug\": \"remove-duplicates-from-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "79", "name": "word-search", "content": {"questionId": "79", "questionFrontendId": "79", "questionTitle": "Word Search", "questionTitleSlug": "word-search", "content": "<p>Given an&nbsp;<code>m x n</code> <code>board</code> and a <code>word</code>, find if the word exists in the grid.</p>\n\n<p>The word can be constructed from letters of sequentially adjacent cells, where &quot;adjacent&quot; cells are horizontally or vertically neighboring. The same letter cell may not be used more than once.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/04/word2.jpg\" style=\"width: 322px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> board = [[&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;E&quot;],[&quot;S&quot;,&quot;F&quot;,&quot;C&quot;,&quot;S&quot;],[&quot;A&quot;,&quot;D&quot;,&quot;E&quot;,&quot;E&quot;]], word = &quot;ABCCED&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/04/word-1.jpg\" style=\"width: 322px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> board = [[&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;E&quot;],[&quot;S&quot;,&quot;F&quot;,&quot;C&quot;,&quot;S&quot;],[&quot;A&quot;,&quot;D&quot;,&quot;E&quot;,&quot;E&quot;]], word = &quot;SEE&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/15/word3.jpg\" style=\"width: 322px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> board = [[&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;E&quot;],[&quot;S&quot;,&quot;F&quot;,&quot;C&quot;,&quot;S&quot;],[&quot;A&quot;,&quot;D&quot;,&quot;E&quot;,&quot;E&quot;]], word = &quot;ABCB&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == board.length</code></li>\n\t<li><code>n = board[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>1 &lt;= word.length &lt;= 10<sup>3</sup></code></li>\n\t<li><code>board</code>&nbsp;and <code>word</code> consists only of lowercase and uppercase English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"578.8K\", \"totalSubmission\": \"1.6M\", \"totalAcceptedRaw\": 578830, \"totalSubmissionRaw\": 1589024, \"acRate\": \"36.4%\"}", "similarQuestions": "[{\"title\": \"Word Search II\", \"titleSlug\": \"word-search-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "78", "name": "subsets", "content": {"questionId": "78", "questionFrontendId": "78", "questionTitle": "Subsets", "questionTitleSlug": "subsets", "content": "<p>Given an&nbsp;integer array&nbsp;<code>nums</code>, return <em>all possible subsets (the power set)</em>.</p>\n\n<p>The solution set must not contain duplicate subsets.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0]\n<strong>Output:</strong> [[],[0]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10</code></li>\n\t<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"685.5K\", \"totalSubmission\": \"1.1M\", \"totalAcceptedRaw\": 685489, \"totalSubmissionRaw\": 1068774, \"acRate\": \"64.1%\"}", "similarQuestions": "[{\"title\": \"Subsets II\", \"titleSlug\": \"subsets-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Generalized Abbreviation\", \"titleSlug\": \"generalized-abbreviation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Letter Case Permutation\", \"titleSlug\": \"letter-case-permutation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Backtracking", "slug": "backtracking"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "77", "name": "combinations", "content": {"questionId": "77", "questionFrontendId": "77", "questionTitle": "Combinations", "questionTitleSlug": "combinations", "content": "<p>Given two integers <em>n</em> and <em>k</em>, return all possible combinations of <em>k</em> numbers out of 1 ... <em>n</em>.</p>\n\n<p>You may return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, k = 2\n<strong>Output:</strong>\n[\n  [2,4],\n  [3,4],\n  [2,3],\n  [1,2],\n  [1,3],\n  [1,4],\n]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1, k = 1\n<strong>Output:</strong> [[1]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 20</code></li>\n\t<li><code>1 &lt;= k &lt;= n</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"329.8K\", \"totalSubmission\": \"583K\", \"totalAcceptedRaw\": 329837, \"totalSubmissionRaw\": 583032, \"acRate\": \"56.6%\"}", "similarQuestions": "[{\"title\": \"Combination Sum\", \"titleSlug\": \"combination-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutations\", \"titleSlug\": \"permutations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "75", "name": "sort-colors", "content": {"questionId": "75", "questionFrontendId": "75", "questionTitle": "Sort Colors", "questionTitleSlug": "sort-colors", "content": "<p>Given an array <code>nums</code> with <code>n</code> objects colored red, white, or blue, sort them <strong><a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in-place</a>&nbsp;</strong>so that objects of the same color are adjacent, with the colors in the order red, white, and blue.</p>\n\n<p>Here, we will use the integers <code>0</code>, <code>1</code>, and <code>2</code> to represent the color red, white, and blue respectively.</p>\n\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>Could you&nbsp;solve this problem without using&nbsp;the library&#39;s sort function?</li>\n\t<li>Could you come up with a&nbsp;one-pass algorithm using only <code>O(1)</code> constant space?</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,0,2,1,1,0]\n<strong>Output:</strong> [0,0,1,1,2,2]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [2,0,1]\n<strong>Output:</strong> [0,1,2]\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [0]\n<strong>Output:</strong> [0]\n</pre><p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> nums = [1]\n<strong>Output:</strong> [1]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 300</code></li>\n\t<li><code>nums[i]</code> is <code>0</code>, <code>1</code>, or <code>2</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"600.9K\", \"totalSubmission\": \"1.2M\", \"totalAcceptedRaw\": 600890, \"totalSubmissionRaw\": 1233560, \"acRate\": \"48.7%\"}", "similarQuestions": "[{\"title\": \"Sort List\", \"titleSlug\": \"sort-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Wiggle Sort\", \"titleSlug\": \"wiggle-sort\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Wiggle Sort II\", \"titleSlug\": \"wiggle-sort-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Two Pointers", "slug": "two-pointers"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "74", "name": "search-a-2d-matrix", "content": {"questionId": "74", "questionFrontendId": "74", "questionTitle": "Search a 2D Matrix", "questionTitleSlug": "search-a-2d-matrix", "content": "<p>Write an efficient algorithm that searches for a value in an <code>m x n</code> matrix. This matrix has the following properties:</p>\n\n<ul>\n\t<li>Integers in each row are sorted from left to right.</li>\n\t<li>The first integer of each row is greater than the last integer of the previous row.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/05/mat.jpg\" style=\"width: 322px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/05/mat2.jpg\" style=\"width: 322px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 100</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= matrix[i][j], target &lt;= 10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"399.2K\", \"totalSubmission\": \"1.1M\", \"totalAcceptedRaw\": 399214, \"totalSubmissionRaw\": 1075139, \"acRate\": \"37.1%\"}", "similarQuestions": "[{\"title\": \"Search a 2D Matrix II\", \"titleSlug\": \"search-a-2d-matrix-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "73", "name": "set-matrix-zeroes", "content": {"questionId": "73", "questionFrontendId": "73", "questionTitle": "Set Matrix Zeroes", "questionTitleSlug": "set-matrix-zeroes", "content": "<p>Given an&nbsp;<code><em>m</em> x <em>n</em></code> matrix. If an element is <strong>0</strong>, set its entire row and column to <strong>0</strong>. Do it <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\"><strong>in-place</strong></a>.</p>\n\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>A straight forward solution using O(<em>m</em><em>n</em>) space is probably a bad idea.</li>\n\t<li>A simple improvement uses O(<em>m</em> + <em>n</em>) space, but still not the best solution.</li>\n\t<li>Could you devise a constant space solution?</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/17/mat1.jpg\" style=\"width: 450px; height: 169px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,1,1],[1,0,1],[1,1,1]]\n<strong>Output:</strong> [[1,0,1],[0,0,0],[1,0,1]]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/17/mat2.jpg\" style=\"width: 450px; height: 137px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]\n<strong>Output:</strong> [[0,0,0,0],[0,4,5,0],[0,3,1,0]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[0].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>-2<sup>31</sup> &lt;= matrix[i][j] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"377.4K\", \"totalSubmission\": \"858.9K\", \"totalAcceptedRaw\": 377350, \"totalSubmissionRaw\": 858870, \"acRate\": \"43.9%\"}", "similarQuestions": "[{\"title\": \"Game of Life\", \"titleSlug\": \"game-of-life\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "71", "name": "simplify-path", "content": {"questionId": "71", "questionFrontendId": "71", "questionTitle": "Simplify Path", "questionTitleSlug": "simplify-path", "content": "<p>Given an <strong>absolute path</strong> for a file (Unix-style), simplify it. Or in other words, convert it to the <strong>canonical path</strong>.</p>\n\n<p>In a UNIX-style file system, a period <code>&#39;.&#39;</code>&nbsp;refers to the current directory. Furthermore, a double period <code>&#39;..&#39;</code>&nbsp;moves the directory up a level.</p>\n\n<p>Note that the returned canonical path must always begin&nbsp;with a slash <code>&#39;/&#39;</code>, and there must be only a single slash <code>&#39;/&#39;</code>&nbsp;between two directory names.&nbsp;The last directory name (if it exists) <b>must not</b>&nbsp;end with a trailing <code>&#39;/&#39;</code>. Also, the canonical path must be the <strong>shortest</strong> string&nbsp;representing the absolute path.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> path = &quot;/home/&quot;\n<strong>Output:</strong> &quot;/home&quot;\n<strong>Explanation:</strong> Note that there is no trailing slash after the last directory name.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> path = &quot;/../&quot;\n<strong>Output:</strong> &quot;/&quot;\n<strong>Explanation:</strong> Going one level up from the root directory is a no-op, as the root level is the highest level you can go.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> path = &quot;/home//foo/&quot;\n<strong>Output:</strong> &quot;/home/foo&quot;\n<strong>Explanation: </strong>In the canonical path, multiple consecutive slashes are replaced by a single one.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> path = &quot;/a/./b/../../c/&quot;\n<strong>Output:</strong> &quot;/c&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= path.length &lt;= 3000</code></li>\n\t<li><code>path</code> consists of English letters, digits, period <code>&#39;.&#39;</code>, slash <code>&#39;/&#39;</code> or <code>&#39;_&#39;</code>.</li>\n\t<li><code>path</code> is a valid Unix path.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"235.6K\", \"totalSubmission\": \"704K\", \"totalAcceptedRaw\": 235610, \"totalSubmissionRaw\": 704020, \"acRate\": \"33.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Stack", "slug": "stack"}]}}, {"id": "64", "name": "minimum-path-sum", "content": {"questionId": "64", "questionFrontendId": "64", "questionTitle": "Minimum Path Sum", "questionTitleSlug": "minimum-path-sum", "content": "<p>Given a <code>m x n</code> <code>grid</code> filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.</p>\n\n<p><strong>Note:</strong> You can only move either down or right at any point in time.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/05/minpath.jpg\" style=\"width: 242px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> grid = [[1,3,1],[1,5,1],[4,2,1]]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> Because the path 1 &rarr; 3 &rarr; 1 &rarr; 1 &rarr; 1 minimizes the sum.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,2,3],[4,5,6]]\n<strong>Output:</strong> 12\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 100</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"486.8K\", \"totalSubmission\": \"874.5K\", \"totalAcceptedRaw\": 486849, \"totalSubmissionRaw\": 874471, \"acRate\": \"55.7%\"}", "similarQuestions": "[{\"title\": \"Unique Paths\", \"titleSlug\": \"unique-paths\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Dungeon Game\", \"titleSlug\": \"dungeon-game\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Cherry Pickup\", \"titleSlug\": \"cherry-pickup\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "63", "name": "unique-paths-ii", "content": {"questionId": "63", "questionFrontendId": "63", "questionTitle": "Unique Paths II", "questionTitleSlug": "unique-paths-ii", "content": "<p>A robot is located at the top-left corner of a <code>m x n</code> grid (marked &#39;Start&#39; in the diagram below).</p>\n\n<p>The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked &#39;Finish&#39; in the diagram below).</p>\n\n<p>Now consider if some obstacles are added to the grids. How many unique paths would there be?</p>\n\n<p>An obstacle and space is marked as <code>1</code> and <code>0</code> respectively in the grid.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/04/robot1.jpg\" style=\"width: 242px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> obstacleGrid = [[0,0,0],[0,1,0],[0,0,0]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There is one obstacle in the middle of the 3x3 grid above.\nThere are two ways to reach the bottom-right corner:\n1. Right -&gt; Right -&gt; Down -&gt; Down\n2. Down -&gt; Down -&gt; Right -&gt; Right\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/04/robot2.jpg\" style=\"width: 162px; height: 162px;\" />\n<pre>\n<strong>Input:</strong> obstacleGrid = [[0,1],[0,0]]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m ==&nbsp;obstacleGrid.length</code></li>\n\t<li><code>n ==&nbsp;obstacleGrid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 100</code></li>\n\t<li><code>obstacleGrid[i][j]</code> is <code>0</code> or <code>1</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"337K\", \"totalSubmission\": \"961.9K\", \"totalAcceptedRaw\": 336997, \"totalSubmissionRaw\": 961884, \"acRate\": \"35.0%\"}", "similarQuestions": "[{\"title\": \"Unique Paths\", \"titleSlug\": \"unique-paths\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Unique Paths III\", \"titleSlug\": \"unique-paths-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "62", "name": "unique-paths", "content": {"questionId": "62", "questionFrontendId": "62", "questionTitle": "Unique Paths", "questionTitleSlug": "unique-paths", "content": "<p>A robot is located at the top-left corner of a <code>m x n</code> grid (marked &#39;Start&#39; in the diagram below).</p>\n\n<p>The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked &#39;Finish&#39; in the diagram below).</p>\n\n<p>How many possible unique paths are there?</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2018/10/22/robot_maze.png\" style=\"width: 400px; height: 183px;\" />\n<pre>\n<strong>Input:</strong> m = 3, n = 7\n<strong>Output:</strong> 28\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> m = 3, n = 2\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>\nFrom the top-left corner, there are a total of 3 ways to reach the bottom-right corner:\n1. Right -&gt; Down -&gt; Down\n2. Down -&gt; Down -&gt; Right\n3. Down -&gt; Right -&gt; Down\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> m = 7, n = 3\n<strong>Output:</strong> 28\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> m = 3, n = 3\n<strong>Output:</strong> 6\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= m, n &lt;= 100</code></li>\n\t<li>It&#39;s guaranteed that the answer will be less than or equal to <code>2 * 10<sup>9</sup></code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"569.4K\", \"totalSubmission\": \"1M\", \"totalAcceptedRaw\": 569403, \"totalSubmissionRaw\": 1027543, \"acRate\": \"55.4%\"}", "similarQuestions": "[{\"title\": \"Unique Paths II\", \"titleSlug\": \"unique-paths-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Path Sum\", \"titleSlug\": \"minimum-path-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Dungeon Game\", \"titleSlug\": \"dungeon-game\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "61", "name": "rotate-list", "content": {"questionId": "61", "questionFrontendId": "61", "questionTitle": "Rotate List", "questionTitleSlug": "rotate-list", "content": "<p>Given the <code>head</code> of a linked&nbsp;list, rotate the list to the right by <code>k</code> places.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/rotate1.jpg\" style=\"width: 600px; height: 254px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4,5], k = 2\n<strong>Output:</strong> [4,5,1,2,3]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/roate2.jpg\" style=\"width: 472px; height: 542px;\" />\n<pre>\n<strong>Input:</strong> head = [0,1,2], k = 4\n<strong>Output:</strong> [2,0,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is in the range <code>[0, 500]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n\t<li><code>0 &lt;= k &lt;= 2 * 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"339K\", \"totalSubmission\": \"1.1M\", \"totalAcceptedRaw\": 339030, \"totalSubmissionRaw\": 1078736, \"acRate\": \"31.4%\"}", "similarQuestions": "[{\"title\": \"Rotate Array\", \"titleSlug\": \"rotate-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Split Linked List in Parts\", \"titleSlug\": \"split-linked-list-in-parts\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}, {"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "59", "name": "spiral-matrix-ii", "content": {"questionId": "59", "questionFrontendId": "59", "questionTitle": "Spiral Matrix II", "questionTitleSlug": "spiral-matrix-ii", "content": "<p>Given a positive integer <code>n</code>, generate an <code>n x n</code> <code>matrix</code> filled with elements from <code>1</code> to <code>n<sup>2</sup></code> in spiral order.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/spiraln.jpg\" style=\"width: 242px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> [[1,2,3],[8,9,4],[7,6,5]]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> [[1]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 20</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"234.1K\", \"totalSubmission\": \"409.4K\", \"totalAcceptedRaw\": 234109, \"totalSubmissionRaw\": 409450, \"acRate\": \"57.2%\"}", "similarQuestions": "[{\"title\": \"Spiral Matrix\", \"titleSlug\": \"spiral-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Spiral Matrix III\", \"titleSlug\": \"spiral-matrix-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "57", "name": "insert-interval", "content": {"questionId": "57", "questionFrontendId": "57", "questionTitle": "Insert Interval", "questionTitleSlug": "insert-interval", "content": "<p>Given a set of <em>non-overlapping</em> intervals, insert a new interval into the intervals (merge if necessary).</p>\n\n<p>You may assume that the intervals were initially sorted according to their start times.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,3],[6,9]], newInterval = [2,5]\n<strong>Output:</strong> [[1,5],[6,9]]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]\n<strong>Output:</strong> [[1,2],[3,10],[12,16]]\n<strong>Explanation:</strong> Because the new interval <code>[4,8]</code> overlaps with <code>[3,5],[6,7],[8,10]</code>.</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [], newInterval = [5,7]\n<strong>Output:</strong> [[5,7]]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,5]], newInterval = [2,3]\n<strong>Output:</strong> [[1,5]]\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,5]], newInterval = [2,7]\n<strong>Output:</strong> [[1,7]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= intervals.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>intervals[i].length == 2</code></li>\n\t<li><code>0 &lt;=&nbsp;intervals[i][0] &lt;=&nbsp;intervals[i][1] &lt;= 10<sup>5</sup></code></li>\n\t<li><code>intervals</code>&nbsp;is sorted by <code>intervals[i][0]</code> in <strong>ascending</strong>&nbsp;order.</li>\n\t<li><code>newInterval.length == 2</code></li>\n\t<li><code>0 &lt;=&nbsp;newInterval[0] &lt;=&nbsp;newInterval[1] &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"312.1K\", \"totalSubmission\": \"899.3K\", \"totalAcceptedRaw\": 312134, \"totalSubmissionRaw\": 899310, \"acRate\": \"34.7%\"}", "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Range Module\", \"titleSlug\": \"range-module\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "56", "name": "merge-intervals", "content": {"questionId": "56", "questionFrontendId": "56", "questionTitle": "Merge Intervals", "questionTitleSlug": "merge-intervals", "content": "<p>Given an array&nbsp;of <code>intervals</code>&nbsp;where <code>intervals[i] = [start<sub>i</sub>, end<sub>i</sub>]</code>, merge all overlapping intervals, and return <em>an array of the non-overlapping intervals that cover all the intervals in the input</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,3],[2,6],[8,10],[15,18]]\n<strong>Output:</strong> [[1,6],[8,10],[15,18]]\n<strong>Explanation:</strong> Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,4],[4,5]]\n<strong>Output:</strong> [[1,5]]\n<strong>Explanation:</strong> Intervals [1,4] and [4,5] are considered overlapping.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= intervals.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>intervals[i].length == 2</code></li>\n\t<li><code>0 &lt;= start<sub>i</sub> &lt;= end<sub>i</sub> &lt;= 10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"755.7K\", \"totalSubmission\": \"1.9M\", \"totalAcceptedRaw\": 755704, \"totalSubmissionRaw\": 1867929, \"acRate\": \"40.5%\"}", "similarQuestions": "[{\"title\": \"Insert Interval\", \"titleSlug\": \"insert-interval\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Meeting Rooms\", \"titleSlug\": \"meeting-rooms\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Meeting Rooms II\", \"titleSlug\": \"meeting-rooms-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Teemo Attacking\", \"titleSlug\": \"teemo-attacking\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Add Bold Tag in String\", \"titleSlug\": \"add-bold-tag-in-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Range Module\", \"titleSlug\": \"range-module\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Employee Free Time\", \"titleSlug\": \"employee-free-time\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Partition Labels\", \"titleSlug\": \"partition-labels\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Interval List Intersections\", \"titleSlug\": \"interval-list-intersections\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "55", "name": "jump-game", "content": {"questionId": "55", "questionFrontendId": "55", "questionTitle": "Jump Game", "questionTitleSlug": "jump-game", "content": "<p>Given an array of non-negative integers <code>nums</code>, you are initially positioned at the <strong>first index</strong> of the array.</p>\n\n<p>Each element in the array represents your maximum jump length at that position.</p>\n\n<p>Determine if you are able to reach the last index.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,1,1,4]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Jump 1 step from index 0 to 1, then 3 steps to the last index.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,1,0,4]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"559.9K\", \"totalSubmission\": \"1.6M\", \"totalAcceptedRaw\": 559937, \"totalSubmissionRaw\": 1600130, \"acRate\": \"35.0%\"}", "similarQuestions": "[{\"title\": \"Jump Game II\", \"titleSlug\": \"jump-game-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Jump Game III\", \"titleSlug\": \"jump-game-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "54", "name": "spiral-matrix", "content": {"questionId": "54", "questionFrontendId": "54", "questionTitle": "Spiral Matrix", "questionTitleSlug": "spiral-matrix", "content": "<p>Given an <code>m x n</code> <code>matrix</code>, return <em>all elements of the</em> <code>matrix</code> <em>in spiral order</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/spiral1.jpg\" style=\"width: 242px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,2,3],[4,5,6],[7,8,9]]\n<strong>Output:</strong> [1,2,3,6,9,8,7,4,5]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/spiral.jpg\" style=\"width: 322px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]\n<strong>Output:</strong> [1,2,3,4,8,12,11,10,9,5,6,7]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 10</code></li>\n\t<li><code>-100 &lt;= matrix[i][j] &lt;= 100</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"439.6K\", \"totalSubmission\": \"1.2M\", \"totalAcceptedRaw\": 439583, \"totalSubmissionRaw\": 1247240, \"acRate\": \"35.2%\"}", "similarQuestions": "[{\"title\": \"Spiral Matrix II\", \"titleSlug\": \"spiral-matrix-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Spiral Matrix III\", \"titleSlug\": \"spiral-matrix-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "50", "name": "powx-n", "content": {"questionId": "50", "questionFrontendId": "50", "questionTitle": "Pow(x, n)", "questionTitleSlug": "powx-n", "content": "<p>Implement <a href=\"http://www.cplusplus.com/reference/valarray/pow/\" target=\"_blank\">pow(<em>x</em>, <em>n</em>)</a>, which calculates&nbsp;<em>x</em> raised to the power <em>n</em> (i.e. x<sup><span style=\"font-size:10.8333px\">n</span></sup>).</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 2.00000, n = 10\n<strong>Output:</strong> 1024.00000\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 2.10000, n = 3\n<strong>Output:</strong> 9.26100\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 2.00000, n = -2\n<strong>Output:</strong> 0.25000\n<strong>Explanation:</strong> 2<sup>-2</sup> = 1/2<sup>2</sup> = 1/4 = 0.25\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-100.0 &lt;&nbsp;x&nbsp;&lt; 100.0</code></li>\n\t<li><code>-2<sup>31</sup>&nbsp;&lt;= n &lt;=&nbsp;2<sup>31</sup>-1</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= x<sup>n</sup> &lt;= 10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"569.1K\", \"totalSubmission\": \"1.9M\", \"totalAcceptedRaw\": 569141, \"totalSubmissionRaw\": 1851765, \"acRate\": \"30.7%\"}", "similarQuestions": "[{\"title\": \"Sqrt(x)\", \"titleSlug\": \"sqrtx\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Super Pow\", \"titleSlug\": \"super-pow\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "49", "name": "group-anagrams", "content": {"questionId": "49", "questionFrontendId": "49", "questionTitle": "Group Anagrams", "questionTitleSlug": "group-anagrams", "content": "<p>Given an array of strings <code>strs</code>, group <strong>the anagrams</strong> together. You can return the answer in <strong>any order</strong>.</p>\n\n<p>An <strong>Anagram</strong> is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> strs = [\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"]\n<strong>Output:</strong> [[\"bat\"],[\"nat\",\"tan\"],[\"ate\",\"eat\",\"tea\"]]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> strs = [\"\"]\n<strong>Output:</strong> [[\"\"]]\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> strs = [\"a\"]\n<strong>Output:</strong> [[\"a\"]]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= strs.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= strs[i].length &lt;= 100</code></li>\n\t<li><code>strs[i]</code> consists of lower-case English letters.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"813.1K\", \"totalSubmission\": \"1.4M\", \"totalAcceptedRaw\": 813079, \"totalSubmissionRaw\": 1388347, \"acRate\": \"58.6%\"}", "similarQuestions": "[{\"title\": \"Valid Anagram\", \"titleSlug\": \"valid-anagram\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Group Shifted Strings\", \"titleSlug\": \"group-shifted-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "String", "slug": "string"}]}}, {"id": "48", "name": "rotate-image", "content": {"questionId": "48", "questionFrontendId": "48", "questionTitle": "Rotate Image", "questionTitleSlug": "rotate-image", "content": "<p>You are given an <em>n</em> x <em>n</em> 2D <code>matrix</code> representing an image, rotate the image by 90 degrees (clockwise).</p>\n\n<p>You have to rotate the image <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\"><strong>in-place</strong></a>, which means you have to modify the input 2D matrix directly. <strong>DO NOT</strong> allocate another 2D matrix and do the rotation.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/28/mat1.jpg\" style=\"width: 642px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,2,3],[4,5,6],[7,8,9]]\n<strong>Output:</strong> [[7,4,1],[8,5,2],[9,6,3]]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/28/mat2.jpg\" style=\"width: 800px; height: 321px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]\n<strong>Output:</strong> [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix = [[1]]\n<strong>Output:</strong> [[1]]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix = [[1,2],[3,4]]\n<strong>Output:</strong> [[3,1],[4,2]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>matrix.length == n</code></li>\n\t<li><code>matrix[i].length == n</code></li>\n\t<li><code>1 &lt;= n &lt;= 20</code></li>\n\t<li><code>-1000 &lt;= matrix[i][j] &lt;= 1000</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"497.2K\", \"totalSubmission\": \"842.9K\", \"totalAcceptedRaw\": 497232, \"totalSubmissionRaw\": 842869, \"acRate\": \"59.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "47", "name": "permutations-ii", "content": {"questionId": "47", "questionFrontendId": "47", "questionTitle": "Permutations II", "questionTitleSlug": "permutations-ii", "content": "<p>Given a collection of numbers, <code>nums</code>,&nbsp;that might contain duplicates, return <em>all possible unique permutations <strong>in any order</strong>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,2]\n<strong>Output:</strong>\n[[1,1,2],\n [1,2,1],\n [2,1,1]]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 8</code></li>\n\t<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"415.9K\", \"totalSubmission\": \"853.5K\", \"totalAcceptedRaw\": 415913, \"totalSubmissionRaw\": 853499, \"acRate\": \"48.7%\"}", "similarQuestions": "[{\"title\": \"Next Permutation\", \"titleSlug\": \"next-permutation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutations\", \"titleSlug\": \"permutations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Palindrome Permutation II\", \"titleSlug\": \"palindrome-permutation-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Squareful Arrays\", \"titleSlug\": \"number-of-squareful-arrays\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "46", "name": "permutations", "content": {"questionId": "46", "questionFrontendId": "46", "questionTitle": "Permutations", "questionTitleSlug": "permutations", "content": "<p>Given an array <code>nums</code> of distinct integers, return <em>all the possible permutations</em>. You can return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0,1]\n<strong>Output:</strong> [[0,1],[1,0]]\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1]\n<strong>Output:</strong> [[1]]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 6</code></li>\n\t<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>\n\t<li>All the integers of <code>nums</code> are <strong>unique</strong>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"720.7K\", \"totalSubmission\": \"1.1M\", \"totalAcceptedRaw\": 720667, \"totalSubmissionRaw\": 1097235, \"acRate\": \"65.7%\"}", "similarQuestions": "[{\"title\": \"Next Permutation\", \"titleSlug\": \"next-permutation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutations II\", \"titleSlug\": \"permutations-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutation Sequence\", \"titleSlug\": \"permutation-sequence\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Combinations\", \"titleSlug\": \"combinations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "43", "name": "multiply-strings", "content": {"questionId": "43", "questionFrontendId": "43", "questionTitle": "Multiply Strings", "questionTitleSlug": "multiply-strings", "content": "<p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as strings, return the product of <code>num1</code> and <code>num2</code>, also represented as a string.</p>\n\n<p><strong>Note:</strong>&nbsp;You must not use any built-in BigInteger library or convert the inputs to integer directly.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> num1 = \"2\", num2 = \"3\"\n<strong>Output:</strong> \"6\"\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> num1 = \"123\", num2 = \"456\"\n<strong>Output:</strong> \"56088\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num1.length, num2.length &lt;= 200</code></li>\n\t<li><code>num1</code> and <code>num2</code> consist of digits only.</li>\n\t<li>Both <code>num1</code> and <code>num2</code>&nbsp;do not contain any leading zero, except the number <code>0</code> itself.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"334.9K\", \"totalSubmission\": \"967.7K\", \"totalAcceptedRaw\": 334948, \"totalSubmissionRaw\": 967740, \"acRate\": \"34.6%\"}", "similarQuestions": "[{\"title\": \"Add Two Numbers\", \"titleSlug\": \"add-two-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Plus One\", \"titleSlug\": \"plus-one\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Binary\", \"titleSlug\": \"add-binary\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Strings\", \"titleSlug\": \"add-strings\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "String", "slug": "string"}]}}, {"id": "40", "name": "combination-sum-ii", "content": {"questionId": "40", "questionFrontendId": "40", "questionTitle": "Combination Sum II", "questionTitleSlug": "combination-sum-ii", "content": "<p>Given a collection of candidate numbers (<code>candidates</code>) and a target number (<code>target</code>), find all unique combinations in <code>candidates</code>&nbsp;where the candidate numbers sum to <code>target</code>.</p>\n\n<p>Each number in <code>candidates</code>&nbsp;may only be used <strong>once</strong> in the combination.</p>\n\n<p><strong>Note:</strong>&nbsp;The solution set must not contain duplicate combinations.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> candidates = [10,1,2,7,6,1,5], target = 8\n<strong>Output:</strong> \n[\n[1,1,6],\n[1,2,5],\n[1,7],\n[2,6]\n]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> candidates = [2,5,2,1,2], target = 5\n<strong>Output:</strong> \n[\n[1,2,2],\n[5]\n]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;=&nbsp;candidates.length &lt;= 100</code></li>\n\t<li><code>1 &lt;=&nbsp;candidates[i] &lt;= 50</code></li>\n\t<li><code>1 &lt;= target &lt;= 30</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"372.5K\", \"totalSubmission\": \"750.4K\", \"totalAcceptedRaw\": 372523, \"totalSubmissionRaw\": 750415, \"acRate\": \"49.6%\"}", "similarQuestions": "[{\"title\": \"Combination Sum\", \"titleSlug\": \"combination-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "39", "name": "combination-sum", "content": {"questionId": "39", "questionFrontendId": "39", "questionTitle": "Combination Sum", "questionTitleSlug": "combination-sum", "content": "<p>Given an array of <strong>distinct</strong> integers <code>candidates</code> and a target integer <code>target</code>, return <em>a list of all <strong>unique combinations</strong> of </em><code>candidates</code><em> where the chosen numbers sum to </em><code>target</code><em>.</em> You may return the combinations in <strong>any order</strong>.</p>\n\n<p>The <strong>same</strong> number may be chosen from <code>candidates</code> an <strong>unlimited number of times</strong>. Two combinations are unique if the frequency of at least one of the chosen numbers is different.</p>\n\n<p>It is <strong>guaranteed</strong> that the number of unique combinations that sum up to <code>target</code> is less than <code>150</code> combinations for the given input.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> candidates = [2,3,6,7], target = 7\n<strong>Output:</strong> [[2,2,3],[7]]\n<strong>Explanation:</strong>\n2 and 3 are candidates, and 2 + 2 + 3 = 7. Note that 2 can be used multiple times.\n7 is a candidate, and 7 = 7.\nThese are the only two combinations.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> candidates = [2,3,5], target = 8\n<strong>Output:</strong> [[2,2,2,2],[2,3,3],[3,5]]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> candidates = [2], target = 1\n<strong>Output:</strong> []\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> candidates = [1], target = 1\n<strong>Output:</strong> [[1]]\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> candidates = [1], target = 2\n<strong>Output:</strong> [[1,1]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= candidates.length &lt;= 30</code></li>\n\t<li><code>1 &lt;= candidates[i] &lt;= 200</code></li>\n\t<li>All elements of <code>candidates</code> are <strong>distinct</strong>.</li>\n\t<li><code>1 &lt;= target &lt;= 500</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"653.6K\", \"totalSubmission\": \"1.1M\", \"totalAcceptedRaw\": 653576, \"totalSubmissionRaw\": 1117934, \"acRate\": \"58.5%\"}", "similarQuestions": "[{\"title\": \"Letter Combinations of a Phone Number\", \"titleSlug\": \"letter-combinations-of-a-phone-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Combination Sum II\", \"titleSlug\": \"combination-sum-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Combinations\", \"titleSlug\": \"combinations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Combination Sum III\", \"titleSlug\": \"combination-sum-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Factor Combinations\", \"titleSlug\": \"factor-combinations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Combination Sum IV\", \"titleSlug\": \"combination-sum-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "36", "name": "valid-sudoku", "content": {"questionId": "36", "questionFrontendId": "36", "questionTitle": "Valid Sudoku", "questionTitleSlug": "valid-sudoku", "content": "<p>Determine if a&nbsp;<code>9 x 9</code> Sudoku board&nbsp;is valid.&nbsp;Only the filled cells need to be validated&nbsp;<strong>according to the following rules</strong>:</p>\n\n<ol>\n\t<li>Each row&nbsp;must contain the&nbsp;digits&nbsp;<code>1-9</code> without repetition.</li>\n\t<li>Each column must contain the digits&nbsp;<code>1-9</code>&nbsp;without repetition.</li>\n\t<li>Each of the nine&nbsp;<code>3 x 3</code> sub-boxes of the grid must contain the digits&nbsp;<code>1-9</code>&nbsp;without repetition.</li>\n</ol>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>A Sudoku board (partially filled) could be valid but is not necessarily solvable.</li>\n\t<li>Only the filled cells need to be validated according to the mentioned&nbsp;rules.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png\" style=\"height:250px; width:250px\" />\n<pre>\n<strong>Input:</strong> board = \n[[&quot;5&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]\n,[&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;,&quot;9&quot;,&quot;5&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]\n,[&quot;.&quot;,&quot;9&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;]\n,[&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;3&quot;]\n,[&quot;4&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;]\n,[&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;]\n,[&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;8&quot;,&quot;.&quot;]\n,[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;4&quot;,&quot;1&quot;,&quot;9&quot;,&quot;.&quot;,&quot;.&quot;,&quot;5&quot;]\n,[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;9&quot;]]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> board = \n[[&quot;8&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]\n,[&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;,&quot;9&quot;,&quot;5&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]\n,[&quot;.&quot;,&quot;9&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;]\n,[&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;3&quot;]\n,[&quot;4&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;]\n,[&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;]\n,[&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;8&quot;,&quot;.&quot;]\n,[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;4&quot;,&quot;1&quot;,&quot;9&quot;,&quot;.&quot;,&quot;.&quot;,&quot;5&quot;]\n,[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;9&quot;]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Same as Example 1, except with the <strong>5</strong> in the top left corner being modified to <strong>8</strong>. Since there are two 8&#39;s in the top left 3x3 sub-box, it is invalid.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>board.length == 9</code></li>\n\t<li><code>board[i].length == 9</code></li>\n\t<li><code>board[i][j]</code> is a digit or <code>&#39;.&#39;</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"425.1K\", \"totalSubmission\": \"850.6K\", \"totalAcceptedRaw\": 425110, \"totalSubmissionRaw\": 850614, \"acRate\": \"50.0%\"}", "similarQuestions": "[{\"title\": \"Sudoku Solver\", \"titleSlug\": \"sudoku-solver\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}]}}, {"id": "34", "name": "find-first-and-last-position-of-element-in-sorted-array", "content": {"questionId": "34", "questionFrontendId": "34", "questionTitle": "Find First and Last Position of Element in Sorted Array", "questionTitleSlug": "find-first-and-last-position-of-element-in-sorted-array", "content": "<p>Given an array of integers <code>nums</code> sorted in ascending order, find the starting and ending position of a given <code>target</code> value.</p>\n\n<p>If <code>target</code> is not found in the array, return <code>[-1, -1]</code>.</p>\n\n<p><strong>Follow up:</strong>&nbsp;Could you write an algorithm with&nbsp;<code>O(log n)</code> runtime complexity?</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [5,7,7,8,8,10], target = 8\n<strong>Output:</strong> [3,4]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [5,7,7,8,8,10], target = 6\n<strong>Output:</strong> [-1,-1]\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [], target = 0\n<strong>Output:</strong> [-1,-1]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup>&nbsp;&lt;= nums[i]&nbsp;&lt;= 10<sup>9</sup></code></li>\n\t<li><code>nums</code> is a non-decreasing array.</li>\n\t<li><code>-10<sup>9</sup>&nbsp;&lt;= target&nbsp;&lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"612.4K\", \"totalSubmission\": \"1.7M\", \"totalAcceptedRaw\": 612353, \"totalSubmissionRaw\": 1657455, \"acRate\": \"36.9%\"}", "similarQuestions": "[{\"title\": \"First Bad Version\", \"titleSlug\": \"first-bad-version\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "33", "name": "search-in-rotated-sorted-array", "content": {"questionId": "33", "questionFrontendId": "33", "questionTitle": "Search in Rotated Sorted Array", "questionTitleSlug": "search-in-rotated-sorted-array", "content": "<p>You are given an integer array <code>nums</code> sorted in ascending order, and an integer <code>target</code>.</p>\n\n<p>Suppose that <code>nums</code> is rotated at some pivot unknown to you beforehand (i.e., <code>[0,1,2,4,5,6,7]</code> might become <code>[4,5,6,7,0,1,2]</code>).</p>\n\n<p><em>If <code>target</code> is found in the array return its index, otherwise, return <code>-1</code>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [4,5,6,7,0,1,2], target = 0\n<strong>Output:</strong> 4\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [4,5,6,7,0,1,2], target = 3\n<strong>Output:</strong> -1\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1], target = 0\n<strong>Output:</strong> -1\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 5000</code></li>\n\t<li><code>-10^4 &lt;= nums[i] &lt;= 10^4</code></li>\n\t<li>All values of <code>nums</code> are <strong>unique</strong>.</li>\n\t<li><code>nums</code> is guranteed to be rotated at some pivot.</li>\n\t<li><code>-10^4 &lt;= target &lt;= 10^4</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"872.6K\", \"totalSubmission\": \"2.5M\", \"totalAcceptedRaw\": 872640, \"totalSubmissionRaw\": 2459250, \"acRate\": \"35.5%\"}", "similarQuestions": "[{\"title\": \"Search in Rotated Sorted Array II\", \"titleSlug\": \"search-in-rotated-sorted-array-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Minimum in Rotated Sorted Array\", \"titleSlug\": \"find-minimum-in-rotated-sorted-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "31", "name": "next-permutation", "content": {"questionId": "31", "questionFrontendId": "31", "questionTitle": "Next Permutation", "questionTitleSlug": "next-permutation", "content": "<p>Implement <strong>next permutation</strong>, which rearranges numbers into the lexicographically next greater permutation of numbers.</p>\n\n<p>If such an arrangement is not possible, it must rearrange it as the lowest possible order (i.e., sorted in ascending order).</p>\n\n<p>The replacement must be <strong><a href=\"http://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in place</a></strong> and use only constant&nbsp;extra memory.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> [1,3,2]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [3,2,1]\n<strong>Output:</strong> [1,2,3]\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1,5]\n<strong>Output:</strong> [1,5,1]\n</pre><p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> nums = [1]\n<strong>Output:</strong> [1]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"441K\", \"totalSubmission\": \"1.3M\", \"totalAcceptedRaw\": 440996, \"totalSubmissionRaw\": 1330112, \"acRate\": \"33.2%\"}", "similarQuestions": "[{\"title\": \"Permutations\", \"titleSlug\": \"permutations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutations II\", \"titleSlug\": \"permutations-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutation Sequence\", \"titleSlug\": \"permutation-sequence\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Palindrome Permutation II\", \"titleSlug\": \"palindrome-permutation-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "29", "name": "divide-two-integers", "content": {"questionId": "29", "questionFrontendId": "29", "questionTitle": "Divide Two Integers", "questionTitleSlug": "divide-two-integers", "content": "<p>Given two integers <code>dividend</code> and <code>divisor</code>, divide two integers without using multiplication, division, and mod operator.</p>\n\n<p>Return the quotient after dividing <code>dividend</code> by <code>divisor</code>.</p>\n\n<p>The integer division should truncate toward zero, which means losing its fractional part. For example, <code>truncate(8.345) = 8</code> and <code>truncate(-2.7335) = -2</code>.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Assume we are dealing with an environment that could only store integers within the 32-bit signed integer range: [&minus;2<sup>31</sup>, &nbsp;2<sup>31</sup> &minus; 1]. For this problem, assume that your function <strong>returns 2<sup>31</sup> &minus; 1 when the division result&nbsp;overflows</strong>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> dividend = 10, divisor = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> 10/3 = truncate(3.33333..) = 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> dividend = 7, divisor = -3\n<strong>Output:</strong> -2\n<strong>Explanation:</strong> 7/-3 = truncate(-2.33333..) = -2.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> dividend = 0, divisor = 1\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> dividend = 1, divisor = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup> &lt;= dividend,&nbsp;divisor &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>divisor != 0</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"321.3K\", \"totalSubmission\": \"1.9M\", \"totalAcceptedRaw\": 321301, \"totalSubmissionRaw\": 1938533, \"acRate\": \"16.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "24", "name": "swap-nodes-in-pairs", "content": {"questionId": "24", "questionFrontendId": "24", "questionTitle": "Swap Nodes in Pairs", "questionTitleSlug": "swap-nodes-in-pairs", "content": "<p>Given a&nbsp;linked list, swap every two adjacent nodes and return its head.</p>\r\n\r\n<p>You may <strong>not</strong> modify the values in the list&#39;s nodes. Only nodes itself may be changed.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/03/swap_ex1.jpg\" style=\"width: 422px; height: 222px;\" />\r\n<pre>\r\n<strong>Input:</strong> head = [1,2,3,4]\r\n<strong>Output:</strong> [2,1,4,3]\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> head = []\r\n<strong>Output:</strong> []\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> head = [1]\r\n<strong>Output:</strong> [1]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li>The number of nodes in the&nbsp;list&nbsp;is in the range <code>[0, 100]</code>.</li>\r\n\t<li><code>0 &lt;= Node.val &lt;= 100</code></li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"547.6K\", \"totalSubmission\": \"1M\", \"totalAcceptedRaw\": 547628, \"totalSubmissionRaw\": 1047302, \"acRate\": \"52.3%\"}", "similarQuestions": "[{\"title\": \"Reverse Nodes in k-Group\", \"titleSlug\": \"reverse-nodes-in-k-group\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}, {"name": "Recursion", "slug": "recursion"}]}}, {"id": "22", "name": "generate-parentheses", "content": {"questionId": "22", "questionFrontendId": "22", "questionTitle": "Generate Parentheses", "questionTitleSlug": "generate-parentheses", "content": "<p>Given <code>n</code> pairs of parentheses, write a function to <em>generate all combinations of well-formed parentheses</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 3\n<strong>Output:</strong> [\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 1\n<strong>Output:</strong> [\"()\"]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 8</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"653.4K\", \"totalSubmission\": \"1M\", \"totalAcceptedRaw\": 653438, \"totalSubmissionRaw\": 1012267, \"acRate\": \"64.6%\"}", "similarQuestions": "[{\"title\": \"Letter Combinations of a Phone Number\", \"titleSlug\": \"letter-combinations-of-a-phone-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Valid Parentheses\", \"titleSlug\": \"valid-parentheses\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "19", "name": "remove-nth-node-from-end-of-list", "content": {"questionId": "19", "questionFrontendId": "19", "questionTitle": "Remove Nth Node From End of List", "questionTitleSlug": "remove-nth-node-from-end-of-list", "content": "<p>Given the <code>head</code> of a linked list, remove the <code>n<sup>th</sup></code> node from the end of the list and return its head.</p>\n\n<p><strong>Follow up:</strong>&nbsp;Could you do this in one pass?</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/03/remove_ex1.jpg\" style=\"width: 542px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4,5], n = 2\n<strong>Output:</strong> [1,2,3,5]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1], n = 1\n<strong>Output:</strong> []\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1,2], n = 1\n<strong>Output:</strong> [1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is <code>sz</code>.</li>\n\t<li><code>1 &lt;= sz &lt;= 30</code></li>\n\t<li><code>0 &lt;= Node.val &lt;= 100</code></li>\n\t<li><code>1 &lt;= n &lt;= sz</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"750.8K\", \"totalSubmission\": \"2.1M\", \"totalAcceptedRaw\": 750751, \"totalSubmissionRaw\": 2113338, \"acRate\": \"35.5%\"}", "similarQuestions": "[{\"title\": \"Delete N Nodes After M Nodes of a Linked List\", \"titleSlug\": \"delete-n-nodes-after-m-nodes-of-a-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}, {"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "18", "name": "4sum", "content": {"questionId": "18", "questionFrontendId": "18", "questionTitle": "4Sum", "questionTitleSlug": "4sum", "content": "<p>Given an array <code>nums</code> of <em>n</em> integers and an integer <code>target</code>, are there elements <em>a</em>, <em>b</em>, <em>c</em>, and <em>d</em> in <code>nums</code> such that <em>a</em> + <em>b</em> + <em>c</em> + <em>d</em> = <code>target</code>? Find all unique quadruplets in the array which gives the sum of <code>target</code>.</p>\n\n<p><strong>Notice</strong>&nbsp;that&nbsp;the solution set must not contain duplicate quadruplets.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,0,-1,0,-2,2], target = 0\n<strong>Output:</strong> [[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [], target = 0\n<strong>Output:</strong> []\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= nums.length &lt;= 200</code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"375.7K\", \"totalSubmission\": \"1.1M\", \"totalAcceptedRaw\": 375737, \"totalSubmissionRaw\": 1090224, \"acRate\": \"34.5%\"}", "similarQuestions": "[{\"title\": \"Two Sum\", \"titleSlug\": \"two-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"3Sum\", \"titleSlug\": \"3sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"4Sum II\", \"titleSlug\": \"4sum-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Hash Table", "slug": "hash-table"}, {"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "17", "name": "letter-combinations-of-a-phone-number", "content": {"questionId": "17", "questionFrontendId": "17", "questionTitle": "Letter Combinations of a Phone Number", "questionTitleSlug": "letter-combinations-of-a-phone-number", "content": "<p>Given a string containing digits from <code>2-9</code> inclusive, return all possible letter combinations that the number could represent. Return the answer in <strong>any order</strong>.</p>\r\n\r\n<p>A mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.</p>\r\n\r\n<p><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Telephone-keypad2.svg/200px-Telephone-keypad2.svg.png\" style=\"width: 200px; height: 162px;\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> digits = &quot;23&quot;\r\n<strong>Output:</strong> [&quot;ad&quot;,&quot;ae&quot;,&quot;af&quot;,&quot;bd&quot;,&quot;be&quot;,&quot;bf&quot;,&quot;cd&quot;,&quot;ce&quot;,&quot;cf&quot;]\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> digits = &quot;&quot;\r\n<strong>Output:</strong> []\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> digits = &quot;2&quot;\r\n<strong>Output:</strong> [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= digits.length &lt;= 4</code></li>\r\n\t<li><code>digits[i]</code> is a digit in the range <code>[&#39;2&#39;, &#39;9&#39;]</code>.</li>\r\n</ul>", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"721.3K\", \"totalSubmission\": \"1.5M\", \"totalAcceptedRaw\": 721278, \"totalSubmissionRaw\": 1491685, \"acRate\": \"48.4%\"}", "similarQuestions": "[{\"title\": \"Generate Parentheses\", \"titleSlug\": \"generate-parentheses\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Combination Sum\", \"titleSlug\": \"combination-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Watch\", \"titleSlug\": \"binary-watch\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Backtracking", "slug": "backtracking"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Recursion", "slug": "recursion"}]}}, {"id": "16", "name": "3sum-closest", "content": {"questionId": "16", "questionFrontendId": "16", "questionTitle": "3Sum Closest", "questionTitleSlug": "3sum-closest", "content": "<p>Given an array <code>nums</code> of <em>n</em> integers and an integer <code>target</code>, find three integers in <code>nums</code>&nbsp;such that the sum is closest to&nbsp;<code>target</code>. Return the sum of the three integers. You may assume that each input would have exactly one solution.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,2,1,-4], target = 1\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= nums.length &lt;= 10^3</code></li>\n\t<li><code>-10^3&nbsp;&lt;= nums[i]&nbsp;&lt;= 10^3</code></li>\n\t<li><code>-10^4&nbsp;&lt;= target&nbsp;&lt;= 10^4</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"532K\", \"totalSubmission\": \"1.2M\", \"totalAcceptedRaw\": 531953, \"totalSubmissionRaw\": 1151452, \"acRate\": \"46.2%\"}", "similarQuestions": "[{\"title\": \"3Sum\", \"titleSlug\": \"3sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"3Sum Smaller\", \"titleSlug\": \"3sum-smaller\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "15", "name": "3sum", "content": {"questionId": "15", "questionFrontendId": "15", "questionTitle": "3Sum", "questionTitleSlug": "3sum", "content": "<p>Given an array <code>nums</code> of <em>n</em> integers, are there elements <em>a</em>, <em>b</em>, <em>c</em> in <code>nums</code> such that <em>a</em> + <em>b</em> + <em>c</em> = 0? Find all unique triplets in the array which gives the sum of zero.</p>\n\n<p>Notice that the solution set must not contain duplicate triplets.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [-1,0,1,2,-1,-4]\n<strong>Output:</strong> [[-1,-1,2],[-1,0,1]]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = []\n<strong>Output:</strong> []\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [0]\n<strong>Output:</strong> []\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= nums.length &lt;= 3000</code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"1.1M\", \"totalSubmission\": \"4.1M\", \"totalAcceptedRaw\": 1132114, \"totalSubmissionRaw\": 4101416, \"acRate\": \"27.6%\"}", "similarQuestions": "[{\"title\": \"Two Sum\", \"titleSlug\": \"two-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"3Sum Closest\", \"titleSlug\": \"3sum-closest\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"4Sum\", \"titleSlug\": \"4sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"3Sum Smaller\", \"titleSlug\": \"3sum-smaller\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "12", "name": "integer-to-roman", "content": {"questionId": "12", "questionFrontendId": "12", "questionTitle": "Integer to Roman", "questionTitleSlug": "integer-to-roman", "content": "<p>Roman numerals are represented by seven different symbols:&nbsp;<code>I</code>, <code>V</code>, <code>X</code>, <code>L</code>, <code>C</code>, <code>D</code> and <code>M</code>.</p>\n\n<pre>\n<strong>Symbol</strong>       <strong>Value</strong>\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000</pre>\n\n<p>For example,&nbsp;<code>2</code> is written as <code>II</code>&nbsp;in Roman numeral, just two one&#39;s added together. <code>12</code> is written as&nbsp;<code>XII</code>, which is simply <code>X + II</code>. The number <code>27</code> is written as <code>XXVII</code>, which is <code>XX + V + II</code>.</p>\n\n<p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not <code>IIII</code>. Instead, the number four is written as <code>IV</code>. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as <code>IX</code>. There are six instances where subtraction is used:</p>\n\n<ul>\n\t<li><code>I</code> can be placed before <code>V</code> (5) and <code>X</code> (10) to make 4 and 9.&nbsp;</li>\n\t<li><code>X</code> can be placed before <code>L</code> (50) and <code>C</code> (100) to make 40 and 90.&nbsp;</li>\n\t<li><code>C</code> can be placed before <code>D</code> (500) and <code>M</code> (1000) to make 400 and 900.</li>\n</ul>\n\n<p>Given an integer, convert it to a roman numeral.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 3\n<strong>Output:</strong> &quot;III&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 4\n<strong>Output:</strong> &quot;IV&quot;\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 9\n<strong>Output:</strong> &quot;IX&quot;\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 58\n<strong>Output:</strong> &quot;LVIII&quot;\n<strong>Explanation:</strong> L = 50, V = 5, III = 3.\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 1994\n<strong>Output:</strong> &quot;MCMXCIV&quot;\n<strong>Explanation:</strong> M = 1000, CM = 900, XC = 90 and IV = 4.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num &lt;= 3999</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"414.8K\", \"totalSubmission\": \"743.7K\", \"totalAcceptedRaw\": 414763, \"totalSubmissionRaw\": 743686, \"acRate\": \"55.8%\"}", "similarQuestions": "[{\"title\": \"Roman to Integer\", \"titleSlug\": \"roman-to-integer\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Integer to English Words\", \"titleSlug\": \"integer-to-english-words\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "String", "slug": "string"}]}}, {"id": "11", "name": "container-with-most-water", "content": {"questionId": "11", "questionFrontendId": "11", "questionTitle": "Container With Most Water", "questionTitleSlug": "container-with-most-water", "content": "<p>Given <code>n</code> non-negative integers <code>a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub></code><sub>&nbsp;</sub>, where each represents a point at coordinate <code>(i, a<sub>i</sub>)</code>. <code>n</code> vertical lines are drawn such that the two endpoints of the line <code>i</code> is at <code>(i, a<sub>i</sub>)</code> and <code>(i, 0)</code>. Find two lines, which, together with the x-axis forms a container, such that the container contains the most water.</p>\n\n<p><strong>Notice</strong>&nbsp;that you may not slant the container.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/07/17/question_11.jpg\" style=\"width: 600px; height: 287px;\" />\n<pre>\n<strong>Input:</strong> height = [1,8,6,2,5,4,8,3,7]\n<strong>Output:</strong> 49\n<strong>Explanation:</strong> The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain&nbsp;is 49.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> height = [1,1]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> height = [4,3,2,1,4]\n<strong>Output:</strong> 16\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> height = [1,2,1]\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n = height.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= height[i] &lt;= 3 * 10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"799.6K\", \"totalSubmission\": \"1.5M\", \"totalAcceptedRaw\": 799571, \"totalSubmissionRaw\": 1537942, \"acRate\": \"52.0%\"}", "similarQuestions": "[{\"title\": \"Trapping Rain Water\", \"titleSlug\": \"trapping-rain-water\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "8", "name": "string-to-integer-atoi", "content": {"questionId": "8", "questionFrontendId": "8", "questionTitle": "String to Integer (atoi)", "questionTitleSlug": "string-to-integer-atoi", "content": "<p>Implement <code><span>atoi</span></code> which&nbsp;converts a string to an integer.</p>\n\n<p>The function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value.</p>\n\n<p>The string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function.</p>\n\n<p>If the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed.</p>\n\n<p>If no valid conversion could be performed, a zero value is returned.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Only the space character <code>&#39; &#39;</code> is considered a whitespace character.</li>\n\t<li>Assume we are dealing with an environment that could only store integers within the 32-bit signed integer range: <code>[&minus;2<sup>31</sup>,&nbsp; 2<sup>31&nbsp;</sup>&minus; 1]</code>. If the numerical value is out of the range of representable values,&nbsp;<code>2<sup>31&nbsp;</sup>&minus; 1</code>&nbsp;or <code>&minus;2<sup>31</sup></code>&nbsp;is returned.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> str = &quot;42&quot;\n<strong>Output:</strong> 42\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> str = &quot;   -42&quot;\n<strong>Output:</strong> -42\n<strong>Explanation:</strong> The first non-whitespace character is &#39;-&#39;, which is the minus sign. Then take as many numerical digits as possible, which gets 42.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> str = &quot;4193 with words&quot;\n<strong>Output:</strong> 4193\n<strong>Explanation:</strong> Conversion stops at digit &#39;3&#39; as the next character is not a numerical digit.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> str = &quot;words and 987&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The first non-whitespace character is &#39;w&#39;, which is not a numerical digit or a +/- sign. Therefore no valid conversion could be performed.\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> str = &quot;-91283472332&quot;\n<strong>Output:</strong> -2147483648\n<strong>Explanation:</strong> The number &quot;-91283472332&quot; is out of the range of a 32-bit signed integer. Thefore INT_MIN (&minus;2<sup>31</sup>) is returned.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 200</code></li>\n\t<li><code>s</code> consists of English letters (lower-case and upper-case), digits, <code>&#39; &#39;</code>, <code>&#39;+&#39;</code>, <code>&#39;-&#39;</code> and <code>&#39;.&#39;</code>.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"660.7K\", \"totalSubmission\": \"4.3M\", \"totalAcceptedRaw\": 660665, \"totalSubmissionRaw\": 4254524, \"acRate\": \"15.5%\"}", "similarQuestions": "[{\"title\": \"Reverse Integer\", \"titleSlug\": \"reverse-integer\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Valid Number\", \"titleSlug\": \"valid-number\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "String", "slug": "string"}]}}, {"id": "6", "name": "zigzag-conversion", "content": {"questionId": "6", "questionFrontendId": "6", "questionTitle": "ZigZag Conversion", "questionTitleSlug": "zigzag-conversion", "content": "<p>The string <code>&quot;PAYPALISHIRING&quot;</code> is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)</p>\n\n<pre>\nP   A   H   N\nA P L S I I G\nY   I   R\n</pre>\n\n<p>And then read line by line: <code>&quot;PAHNAPLSIIGYIR&quot;</code></p>\n\n<p>Write the code that will take a string and make this conversion given a number of rows:</p>\n\n<pre>\nstring convert(string s, int numRows);\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;PAYPALISHIRING&quot;, numRows = 3\n<strong>Output:</strong> &quot;PAHNAPLSIIGYIR&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;PAYPALISHIRING&quot;, numRows = 4\n<strong>Output:</strong> &quot;PINALSIGYAHRPI&quot;\n<strong>Explanation:</strong>\nP     I    N\nA   L S  I G\nY A   H R\nP     I\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;A&quot;, numRows = 1\n<strong>Output:</strong> &quot;A&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s</code> consists of English letters (lower-case and upper-case), <code>&#39;,&#39;</code> and <code>&#39;.&#39;</code>.</li>\n\t<li><code>1 &lt;= numRows &lt;= 1000</code></li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"521.2K\", \"totalSubmission\": \"1.4M\", \"totalAcceptedRaw\": 521216, \"totalSubmissionRaw\": 1392244, \"acRate\": \"37.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "5", "name": "longest-palindromic-substring", "content": {"questionId": "5", "questionFrontendId": "5", "questionTitle": "Longest Palindromic Substring", "questionTitleSlug": "longest-palindromic-substring", "content": "<p>Given a string <code>s</code>, return&nbsp;<em>the longest palindromic substring</em> in <code>s</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;babad&quot;\n<strong>Output:</strong> &quot;bab&quot;\n<strong>Note:</strong> &quot;aba&quot; is also a valid answer.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;cbbd&quot;\n<strong>Output:</strong> &quot;bb&quot;\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;a&quot;\n<strong>Output:</strong> &quot;a&quot;\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ac&quot;\n<strong>Output:</strong> &quot;a&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s</code> consist of only digits and English letters (lower-case and/or upper-case),</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"1.1M\", \"totalSubmission\": \"3.8M\", \"totalAcceptedRaw\": 1131089, \"totalSubmissionRaw\": 3765268, \"acRate\": \"30.0%\"}", "similarQuestions": "[{\"title\": \"Shortest Palindrome\", \"titleSlug\": \"shortest-palindrome\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Palindrome Permutation\", \"titleSlug\": \"palindrome-permutation\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Palindrome Pairs\", \"titleSlug\": \"palindrome-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Longest Palindromic Subsequence\", \"titleSlug\": \"longest-palindromic-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Palindromic Substrings\", \"titleSlug\": \"palindromic-substrings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "3", "name": "longest-substring-without-repeating-characters", "content": {"questionId": "3", "questionFrontendId": "3", "questionTitle": "Longest Substring Without Repeating Characters", "questionTitleSlug": "longest-substring-without-repeating-characters", "content": "<p>Given a string <code>s</code>, find the length of the <b>longest substring</b> without repeating characters.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcabcbb&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The answer is &quot;abc&quot;, with the length of 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;bbbbb&quot;\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The answer is &quot;b&quot;, with the length of 1.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;pwwkew&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The answer is &quot;wke&quot;, with the length of 3.\nNotice that the answer must be a substring, &quot;pwke&quot; is a subsequence and not a substring.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;&quot;\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of English letters, digits, symbols and spaces.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"1.9M\", \"totalSubmission\": \"6.1M\", \"totalAcceptedRaw\": 1885017, \"totalSubmissionRaw\": 6080225, \"acRate\": \"31.0%\"}", "similarQuestions": "[{\"title\": \"Longest Substring with At Most Two Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-two-distinct-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Substring with At Most K Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-k-distinct-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Subarrays with K Different Integers\", \"titleSlug\": \"subarrays-with-k-different-integers\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Erasure Value\", \"titleSlug\": \"maximum-erasure-value\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Two Pointers", "slug": "two-pointers"}, {"name": "String", "slug": "string"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "2", "name": "add-two-numbers", "content": {"questionId": "2", "questionFrontendId": "2", "questionTitle": "Add Two Numbers", "questionTitleSlug": "add-two-numbers", "content": "<p>You are given two <b>non-empty</b> linked lists representing two non-negative integers. The digits are stored in <b>reverse order</b>, and each of their nodes contains a single digit. Add the two numbers and return the sum&nbsp;as a linked list.</p>\n\n<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/02/addtwonumber1.jpg\" style=\"width: 483px; height: 342px;\" />\n<pre>\n<strong>Input:</strong> l1 = [2,4,3], l2 = [5,6,4]\n<strong>Output:</strong> [7,0,8]\n<strong>Explanation:</strong> 342 + 465 = 807.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> l1 = [0], l2 = [0]\n<strong>Output:</strong> [0]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n<strong>Output:</strong> [8,9,9,9,0,0,0,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in each linked list is in the range <code>[1, 100]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 9</code></li>\n\t<li>It is guaranteed that the list represents a number that does not have leading zeros.</li>\n</ul>\n", "difficulty": "Medium", "stats": "{\"totalAccepted\": \"1.7M\", \"totalSubmission\": \"4.8M\", \"totalAcceptedRaw\": 1683469, \"totalSubmissionRaw\": 4835912, \"acRate\": \"34.8%\"}", "similarQuestions": "[{\"title\": \"Multiply Strings\", \"titleSlug\": \"multiply-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Add Binary\", \"titleSlug\": \"add-binary\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sum of Two Integers\", \"titleSlug\": \"sum-of-two-integers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Add Strings\", \"titleSlug\": \"add-strings\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Two Numbers II\", \"titleSlug\": \"add-two-numbers-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Add to Array-Form of Integer\", \"titleSlug\": \"add-to-array-form-of-integer\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Two Polynomials Represented as Linked Lists\", \"titleSlug\": \"add-two-polynomials-represented-as-linked-lists\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}, {"name": "Math", "slug": "math"}]}}]