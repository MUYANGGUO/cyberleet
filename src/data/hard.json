[{"id": "1692", "name": "count-ways-to-distribute-candies", "content": {"questionId": "1828", "questionFrontendId": "1692", "questionTitle": "Count Ways to Distribute Candies", "questionTitleSlug": "count-ways-to-distribute-candies", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"333\", \"totalSubmission\": \"539\", \"totalAcceptedRaw\": 333, \"totalSubmissionRaw\": 539, \"acRate\": \"61.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1697", "name": "checking-existence-of-edge-length-limited-paths", "content": {"questionId": "1815", "questionFrontendId": "1697", "questionTitle": "Checking Existence of Edge Length Limited Paths", "questionTitleSlug": "checking-existence-of-edge-length-limited-paths", "content": "<p>An undirected graph of <code>n</code> nodes is defined by <code>edgeList</code>, where <code>edgeList[i] = [u<sub>i</sub>, v<sub>i</sub>, dis<sub>i</sub>]</code> denotes an edge between nodes <code>u<sub>i</sub></code> and <code>v<sub>i</sub></code> with distance <code>dis<sub>i</sub></code>. Note that there may be <strong>multiple</strong> edges between two nodes.</p>\n\n<p>Given an array <code>queries</code>, where <code>queries[j] = [p<sub>j</sub>, q<sub>j</sub>, limit<sub>j</sub>]</code>, your task is to determine for each <code>queries[j]</code> whether there is a path between <code>p<sub>j</sub></code> and <code>q<sub>j</sub></code><sub> </sub>such that each edge on the path has a distance <strong>strictly less than</strong> <code>limit<sub>j</sub></code> .</p>\n\n<p>Return <em>a <strong>boolean array</strong> </em><code>answer</code><em>, where </em><code>answer.length == queries.length</code> <em>and the </em><code>j<sup>th</sup></code> <em>value of </em><code>answer</code> <em>is </em><code>true</code><em> if there is a path for </em><code>queries[j]</code><em> is </em><code>true</code><em>, and </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/08/h.png\" style=\"width: 267px; height: 262px;\" />\n<pre>\n<strong>Input:</strong> n = 3, edgeList = [[0,1,2],[1,2,4],[2,0,8],[1,0,16]], queries = [[0,1,2],[0,2,5]]\n<strong>Output:</strong> [false,true]\n<strong>Explanation:</strong> The above figure shows the given graph. Note that there are two overlapping edges between 0 and 1 with distances 2 and 16.\nFor the first query, between 0 and 1 there is no path where each distance is less than 2, thus we return false for this query.\nFor the second query, there is a path (0 -&gt; 1 -&gt; 2) of two edges with distances less than 5, thus we return true for this query.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/08/q.png\" style=\"width: 390px; height: 358px;\" />\n<pre>\n<strong>Input:</strong> n = 5, edgeList = [[0,1,10],[1,2,5],[2,3,9],[3,4,13]], queries = [[0,4,14],[1,4,13]]\n<strong>Output:</strong> [true,false]\n<strong>Exaplanation:</strong> The above figure shows the given graph.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= edgeList.length, queries.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>edgeList[i].length == 3</code></li>\n\t<li><code>queries[j].length == 3</code></li>\n\t<li><code>0 &lt;= u<sub>i</sub>, v<sub>i</sub>, p<sub>j</sub>, q<sub>j</sub> &lt;= n - 1</code></li>\n\t<li><code>u<sub>i</sub> != v<sub>i</sub></code></li>\n\t<li><code>p<sub>j</sub> != q<sub>j</sub></code></li>\n\t<li><code>1 &lt;= dis<sub>i</sub>, limit<sub>j</sub> &lt;= 10<sup>9</sup></code></li>\n\t<li>There may be <strong>multiple</strong> edges between two nodes.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"3.2K\", \"totalSubmission\": \"5.6K\", \"totalAcceptedRaw\": 3244, \"totalSubmissionRaw\": 5631, \"acRate\": \"57.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Sort", "slug": "sort"}, {"name": "Union Find", "slug": "union-find"}]}}, {"id": "1681", "name": "minimum-incompatibility", "content": {"questionId": "1799", "questionFrontendId": "1681", "questionTitle": "Minimum Incompatibility", "questionTitleSlug": "minimum-incompatibility", "content": "<p>You are given an integer array <code>nums</code>\u200b\u200b\u200b and an integer <code>k</code>. You are asked to distribute this array into <code>k</code> subsets of <strong>equal size</strong> such that there are no two equal elements in the same subset.</p>\n\n<p>A subset&#39;s <strong>incompatibility</strong> is the difference between the maximum and minimum elements in that array.</p>\n\n<p>Return <em>the <strong>minimum possible sum of incompatibilities</strong> of the </em><code>k</code> <em>subsets after distributing the array optimally, or return </em><code>-1</code><em> if it is not possible.</em></p>\n\n<p>A subset is a group integers that appear in the array with no particular order.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,1,4], k = 2\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The optimal distribution of subsets is [1,2] and [1,4].\nThe incompatibility is (2-1) + (4-1) = 4.\nNote that [1,1] and [2,4] would result in a smaller sum, but the first subset contains 2 equal elements.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [6,3,8,1,3,1,2,2], k = 4\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The optimal distribution of subsets is [1,2], [2,3], [6,8], and [1,3].\nThe incompatibility is (2-1) + (3-2) + (8-6) + (3-1) = 6.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,3,3,6,3,3], k = 3\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> It is impossible to distribute nums into 3 subsets where no two elements are equal in the same subset.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= nums.length &lt;= 16</code></li>\n\t<li><code>nums.length</code> is divisible by <code>k</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= nums.length</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"3.5K\", \"totalSubmission\": \"10.3K\", \"totalAcceptedRaw\": 3539, \"totalSubmissionRaw\": 10298, \"acRate\": \"34.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1651", "name": "hopper-company-queries-iii", "content": {"questionId": "1795", "questionFrontendId": "1651", "questionTitle": "Hopper Company Queries III", "questionTitleSlug": "hopper-company-queries-iii", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"554\", \"totalSubmission\": \"828\", \"totalAcceptedRaw\": 554, \"totalSubmissionRaw\": 828, \"acRate\": \"66.9%\"}", "similarQuestions": "[{\"title\": \"Hopper Company Queries I\", \"titleSlug\": \"hopper-company-queries-i\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Hopper Company Queries II\", \"titleSlug\": \"hopper-company-queries-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1675", "name": "minimize-deviation-in-array", "content": {"questionId": "1794", "questionFrontendId": "1675", "questionTitle": "Minimize Deviation in Array", "questionTitleSlug": "minimize-deviation-in-array", "content": "<p>You are given an array <code>nums</code> of <code>n</code> positive integers.</p>\n\n<p>You can perform two types of operations on any element of the array any number of times:</p>\n\n<ul>\n\t<li>If the element is <strong>even</strong>, <strong>divide</strong> it by <code>2</code>.\n\n\t<ul>\n\t\t<li>For example, if the array is <code>[1,2,3,4]</code>, then you can do this operation on the last element, and the array will be <code>[1,2,3,<u>2</u>].</code></li>\n\t</ul>\n\t</li>\n\t<li>If the element is <strong>odd</strong>, <strong>multiply</strong> it by <code>2</code>.\n\t<ul>\n\t\t<li>For example, if the array is <code>[1,2,3,4]</code>, then you can do this operation on the first element, and the array will be <code>[<u>2</u>,2,3,4].</code></li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>The <strong>deviation</strong> of the array is the <strong>maximum difference</strong> between any two elements in the array.</p>\n\n<p>Return <em>the <strong>minimum deviation</strong> the array can have after performing some number of operations.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> You can transform the array to [1,2,3,<u>2</u>], then to [<u>2</u>,2,3,2], then the deviation will be 3 - 2 = 1.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,1,5,20,3]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> You can transform the array after two operations to [4,<u>2</u>,5,<u>5</u>,3], then the deviation will be 5 - 2 = 3.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,10,8]\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 10<sup><span style=\"font-size: 10.8333px;\">5</span></sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"2.9K\", \"totalSubmission\": \"6.4K\", \"totalAcceptedRaw\": 2870, \"totalSubmissionRaw\": 6427, \"acRate\": \"44.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Heap", "slug": "heap"}, {"name": "Ordered Map", "slug": "ordered-map"}]}}, {"id": "1687", "name": "delivering-boxes-from-storage-to-ports", "content": {"questionId": "1789", "questionFrontendId": "1687", "questionTitle": "Delivering Boxes from Storage to Ports", "questionTitleSlug": "delivering-boxes-from-storage-to-ports", "content": "<p>You have the task of delivering some boxes from storage to their ports using only one ship. However, this ship has a <strong>limit</strong> on the <strong>number of boxes</strong> and the <strong>total weight</strong> that it can carry.</p>\n\n<p>You are given an array <code>boxes</code>, where <code>boxes[i] = [ports<sub>\u200b\u200bi</sub>\u200b, weight<sub>i</sub>]</code>, and three integers <code>portsCount</code>, <code>maxBoxes</code>, and <code>maxWeight</code>.</p>\n\n<ul>\n\t<li><code>ports<sub>\u200b\u200bi</sub></code> is the port where you need to deliver the <code>i<sup>th</sup></code> box and <code>weights<sub>i</sub></code> is the weight of the <code>i<sup>th</sup></code> box.</li>\n\t<li><code>portsCount</code> is the number of ports.</li>\n\t<li><code>maxBoxes</code> and <code>maxWeight</code> are the respective box and weight limits of the ship.</li>\n</ul>\n\n<p>The boxes need to be delivered <strong>in the order they are given</strong>. The ship will follow these steps:</p>\n\n<ul>\n\t<li>The ship will take some number of boxes from the <code>boxes</code> queue, not violating the <code>maxBoxes</code> and <code>maxWeight</code> constraints.</li>\n\t<li>For each loaded box <strong>in order</strong>, the ship will make a <strong>trip</strong> to the port the box needs to be delivered to and deliver it. If the ship is already at the correct port, no <strong>trip</strong> is needed, and the box can immediately be delivered.</li>\n\t<li>The ship then makes a return <strong>trip</strong> to storage to take more boxes from the queue.</li>\n</ul>\n\n<p>The ship must end at storage after all the boxes have been delivered.</p>\n\n<p>Return <em>the <strong>minimum</strong> number of <strong>trips</strong> the ship needs to make to deliver all boxes to their respective ports.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> boxes = [[1,1],[2,1],[1,1]], portsCount = 2, maxBoxes = 3, maxWeight = 3\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The optimal strategy is as follows: \n- The ship takes all the boxes in the queue, goes to port 1, then port 2, then port 1 again, then returns to storage. 4 trips.\nSo the total number of trips is 4.\nNote that the first and third boxes cannot be delivered together because the boxes need to be delivered in order (i.e. the second box needs to be delivered at port 2 before the third box).\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> boxes = [[1,2],[3,3],[3,1],[3,1],[2,4]], portsCount = 3, maxBoxes = 3, maxWeight = 6\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The optimal strategy is as follows: \n- The ship takes the first box, goes to port 1, then returns to storage. 2 trips.\n- The ship takes the second, third and fourth boxes, goes to port 3, then returns to storage. 2 trips.\n- The ship takes the fifth box, goes to port 3, then returns to storage. 2 trips.\nSo the total number of trips is 2 + 2 + 2 = 6.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> boxes = [[1,4],[1,2],[2,1],[2,1],[3,2],[3,4]], portsCount = 3, maxBoxes = 6, maxWeight = 7\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The optimal strategy is as follows:\n- The ship takes the first and second boxes, goes to port 1, then returns to storage. 2 trips.\n- The ship takes the third and fourth boxes, goes to port 2, then returns to storage. 2 trips.\n- The ship takes the fifth and sixth boxes, goes to port 3, then returns to storage. 2 trips.\nSo the total number of trips is 2 + 2 + 2 = 6.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> boxes = [[2,4],[2,5],[3,1],[3,2],[3,7],[3,1],[4,4],[1,3],[5,2]], portsCount = 5, maxBoxes = 5, maxWeight = 7\n<strong>Output:</strong> 14\n<strong>Explanation:</strong> The optimal strategy is as follows:\n- The ship takes the first box, goes to port 2, then storage. 2 trips.\n- The ship takes the second box, goes to port 2, then storage. 2 trips.\n- The ship takes the third and fourth boxes, goes to port 3, then storage. 2 trips.\n- The ship takes the fifth box, goes to port 3, then storage. 2 trips.\n- The ship takes the sixth and seventh boxes, goes to port 3, then port 4, then storage. 3 trips. \n- The ship takes the eighth and ninth boxes, goes to port 1, then port 5, then storage. 3 trips.\nSo the total number of trips is 2 + 2 + 2 + 2 + 3 + 3 = 14.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= boxes.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= portsCount, maxBoxes, maxWeight &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= ports<sub>\u200b\u200bi</sub> &lt;= portsCount</code></li>\n\t<li><code>1 &lt;= weights<sub>i</sub> &lt;= maxWeight</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"1.4K\", \"totalSubmission\": \"4.1K\", \"totalAcceptedRaw\": 1397, \"totalSubmissionRaw\": 4103, \"acRate\": \"34.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Segment Tree", "slug": "segment-tree"}, {"name": "Dequeue", "slug": "dequeue"}]}}, {"id": "1645", "name": "hopper-company-queries-ii", "content": {"questionId": "1785", "questionFrontendId": "1645", "questionTitle": "Hopper Company Queries II", "questionTitleSlug": "hopper-company-queries-ii", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"634\", \"totalSubmission\": \"1.5K\", \"totalAcceptedRaw\": 634, \"totalSubmissionRaw\": 1469, \"acRate\": \"43.2%\"}", "similarQuestions": "[{\"title\": \"Hopper Company Queries I\", \"titleSlug\": \"hopper-company-queries-i\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Hopper Company Queries III\", \"titleSlug\": \"hopper-company-queries-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1665", "name": "minimum-initial-energy-to-finish-tasks", "content": {"questionId": "1784", "questionFrontendId": "1665", "questionTitle": "Minimum Initial Energy to Finish Tasks", "questionTitleSlug": "minimum-initial-energy-to-finish-tasks", "content": "<p>You are given an array <code>tasks</code> where <code>tasks[i] = [actual<sub>i</sub>, minimum<sub>i</sub>]</code>:</p>\n\n<ul>\n\t<li><code>actual<sub>i</sub></code> is the actual amount of energy you <strong>spend to finish</strong> the <code>i<sup>th</sup></code> task.</li>\n\t<li><code>minimum<sub>i</sub></code> is the minimum amount of energy you <strong>require to begin</strong> the <code>i<sup>th</sup></code> task.</li>\n</ul>\n\n<p>For example, if the task is <code>[10, 12]</code> and your current energy is <code>11</code>, you cannot start this task. However, if your current energy is <code>13</code>, you can complete this task, and your energy will be <code>3</code> after finishing it.</p>\n\n<p>You can finish the tasks in <strong>any order</strong> you like.</p>\n\n<p>Return <em>the <strong>minimum</strong> initial amount of energy you will need</em> <em>to finish all the tasks</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> tasks = [[1,2],[2,4],[4,8]]\n<strong>Output:</strong> 8\n<strong>Explanation:</strong>\nStarting with 8 energy, we finish the tasks in the following order:\n    - 3rd task. Now energy = 8 - 4 = 4.\n    - 2nd task. Now energy = 4 - 2 = 2.\n    - 1st task. Now energy = 2 - 1 = 1.\nNotice that even though we have leftover energy, starting with 7 energy does not work because we cannot do the 3rd task.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> tasks = [[1,3],[2,4],[10,11],[10,12],[8,9]]\n<strong>Output:</strong> 32\n<strong>Explanation:</strong>\nStarting with 32 energy, we finish the tasks in the following order:\n    - 1st task. Now energy = 32 - 1 = 31.\n    - 2nd task. Now energy = 31 - 2 = 29.\n    - 3rd task. Now energy = 29 - 10 = 19.\n    - 4th task. Now energy = 19 - 10 = 9.\n    - 5th task. Now energy = 9 - 8 = 1.</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> tasks = [[1,7],[2,8],[3,9],[4,10],[5,11],[6,12]]\n<strong>Output:</strong> 27\n<strong>Explanation:</strong>\nStarting with 27 energy, we finish the tasks in the following order:\n    - 5th task. Now energy = 27 - 5 = 22.\n    - 2nd task. Now energy = 22 - 2 = 20.\n    - 3rd task. Now energy = 20 - 3 = 17.\n    - 1st task. Now energy = 17 - 1 = 16.\n    - 4th task. Now energy = 16 - 4 = 12.\n    - 6th task. Now energy = 12 - 6 = 6.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= tasks.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= actual<sub>\u200bi</sub>&nbsp;&lt;= minimum<sub>i</sub>&nbsp;&lt;= 10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"7.5K\", \"totalSubmission\": \"10.8K\", \"totalAcceptedRaw\": 7491, \"totalSubmissionRaw\": 10825, \"acRate\": \"69.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1635", "name": "hopper-company-queries-i", "content": {"questionId": "1779", "questionFrontendId": "1635", "questionTitle": "Hopper Company Queries I", "questionTitleSlug": "hopper-company-queries-i", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"861\", \"totalSubmission\": \"1.5K\", \"totalAcceptedRaw\": 861, \"totalSubmissionRaw\": 1492, \"acRate\": \"57.7%\"}", "similarQuestions": "[{\"title\": \"Hopper Company Queries II\", \"titleSlug\": \"hopper-company-queries-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Hopper Company Queries III\", \"titleSlug\": \"hopper-company-queries-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1659", "name": "maximize-grid-happiness", "content": {"questionId": "1778", "questionFrontendId": "1659", "questionTitle": "Maximize Grid Happiness", "questionTitleSlug": "maximize-grid-happiness", "content": "<p>You are given four integers, <code>m</code>, <code>n</code>, <code>introvertsCount</code>, and <code>extrovertsCount</code>. You have an <code>m x n</code> grid, and there are two types of people: introverts and extroverts. There are <code>introvertsCount</code> introverts and <code>extrovertsCount</code> extroverts.</p>\n\n<p>You should decide how many people you want to live in the grid and assign each of them one grid cell. Note that you <strong>do not</strong> have to have all the people living in the grid.</p>\n\n<p>The <strong>happiness</strong> of each person is calculated as follows:</p>\n\n<ul>\n\t<li>Introverts <strong>start</strong> with <code>120</code> happiness and <strong>lose</strong> <code>30</code> happiness for each neighbor (introvert or extrovert).</li>\n\t<li>Extroverts <strong>start</strong> with <code>40</code> happiness and <strong>gain</strong> <code>20</code> happiness for each neighbor (introvert or extrovert).</li>\n</ul>\n\n<p>Neighbors live in the directly adjacent cells north, east, south, and west of a person&#39;s cell.</p>\n\n<p>The <strong>grid happiness</strong> is the <strong>sum</strong> of each person&#39;s happiness. Return<em> the <strong>maximum possible grid happiness</strong>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/05/grid_happiness.png\" style=\"width: 261px; height: 121px;\" />\n<pre>\n<strong>Input:</strong> m = 2, n = 3, introvertsCount = 1, extrovertsCount = 2\n<strong>Output:</strong> 240\n<strong>Explanation:</strong> Assume the grid is 1-indexed with coordinates (row, column).\nWe can put the introvert in cell (1,1) and put the extroverts in cells (1,3) and (2,3).\n- Introvert at (1,1) happiness: 120 (starting happiness) - (0 * 30) (0 neighbors) = 120\n- Extrovert at (1,3) happiness: 40 (starting happiness) + (1 * 20) (1 neighbor) = 60\n- Extrovert at (2,3) happiness: 40 (starting happiness) + (1 * 20) (1 neighbor) = 60\nThe grid happiness is 120 + 60 + 60 = 240.\nThe above figure shows the grid in this example with each person&#39;s happiness. The introvert stays in the light green cell while the extroverts live on the light purple cells.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> m = 3, n = 1, introvertsCount = 2, extrovertsCount = 1\n<strong>Output:</strong> 260\n<strong>Explanation:</strong> Place the two introverts in (1,1) and (3,1) and the extrovert at (2,1).\n- Introvert at (1,1) happiness: 120 (starting happiness) - (1 * 30) (1 neighbor) = 90\n- Extrovert at (2,1) happiness: 40 (starting happiness) + (2 * 20) (2 neighbors) = 80\n- Introvert at (3,1) happiness: 120 (starting happiness) - (1 * 30) (1 neighbor) = 90\nThe grid happiness is 90 + 80 + 90 = 260.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> m = 2, n = 2, introvertsCount = 4, extrovertsCount = 0\n<strong>Output:</strong> 240\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= m, n &lt;= 5</code></li>\n\t<li><code>0 &lt;= introvertsCount, extrovertsCount &lt;= min(m * n, 6)</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"2K\", \"totalSubmission\": \"5.8K\", \"totalAcceptedRaw\": 1951, \"totalSubmissionRaw\": 5841, \"acRate\": \"33.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "1649", "name": "create-sorted-array-through-instructions", "content": {"questionId": "1772", "questionFrontendId": "1649", "questionTitle": "Create Sorted Array through Instructions", "questionTitleSlug": "create-sorted-array-through-instructions", "content": "<p>Given an integer array <code>instructions</code>, you are asked to create a sorted array from the elements in <code>instructions</code>. You start with an empty container <code>nums</code>. For each element from <strong>left to right</strong> in <code>instructions</code>, insert it into <code>nums</code>. The <strong>cost</strong> of each insertion is the <b>minimum</b> of the following:</p>\n\n<ul>\n\t<li>The number of elements currently in <code>nums</code> that are <strong>strictly less than</strong> <code>instructions[i]</code>.</li>\n\t<li>The number of elements currently in <code>nums</code> that are <strong>strictly greater than</strong> <code>instructions[i]</code>.</li>\n</ul>\n\n<p>For example, if inserting element <code>3</code> into <code>nums = [1,2,3,5]</code>, the <strong>cost</strong> of insertion is <code>min(2, 1)</code> (elements <code>1</code> and <code>2</code> are less than <code>3</code>, element <code>5</code> is greater than <code>3</code>) and <code>nums</code> will become <code>[1,2,3,3,5]</code>.</p>\n\n<p>Return <em>the <strong>total cost</strong> to insert all elements from </em><code>instructions</code><em> into </em><code>nums</code>. Since the answer may be large, return it <strong>modulo</strong> <code>10<sup>9</sup> + 7</code></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> instructions = [1,5,6,2]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> Begin with nums = [].\nInsert 1 with cost min(0, 0) = 0, now nums = [1].\nInsert 5 with cost min(1, 0) = 0, now nums = [1,5].\nInsert 6 with cost min(2, 0) = 0, now nums = [1,5,6].\nInsert 2 with cost min(1, 2) = 1, now nums = [1,2,5,6].\nThe total cost is 0 + 0 + 0 + 1 = 1.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> instructions = [1,2,3,6,5,4]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Begin with nums = [].\nInsert 1 with cost min(0, 0) = 0, now nums = [1].\nInsert 2 with cost min(1, 0) = 0, now nums = [1,2].\nInsert 3 with cost min(2, 0) = 0, now nums = [1,2,3].\nInsert 6 with cost min(3, 0) = 0, now nums = [1,2,3,6].\nInsert 5 with cost min(3, 1) = 1, now nums = [1,2,3,5,6].\nInsert 4 with cost min(3, 2) = 2, now nums = [1,2,3,4,5,6].\nThe total cost is 0 + 0 + 0 + 0 + 1 + 2 = 3.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> instructions = [1,3,3,3,2,4,2,1,2]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Begin with nums = [].\nInsert 1 with cost min(0, 0) = 0, now nums = [1].\nInsert 3 with cost min(1, 0) = 0, now nums = [1,3].\nInsert 3 with cost min(1, 0) = 0, now nums = [1,3,3].\nInsert 3 with cost min(1, 0) = 0, now nums = [1,3,3,3].\nInsert 2 with cost min(1, 3) = 1, now nums = [1,2,3,3,3].\nInsert 4 with cost min(5, 0) = 0, now nums = [1,2,3,3,3,4].\n\u200b\u200b\u200b\u200b\u200b\u200b\u200bInsert 2 with cost min(1, 4) = 1, now nums = [1,2,2,3,3,3,4].\n\u200b\u200b\u200b\u200b\u200b\u200b\u200bInsert 1 with cost min(0, 6) = 0, now nums = [1,1,2,2,3,3,3,4].\n\u200b\u200b\u200b\u200b\u200b\u200b\u200bInsert 2 with cost min(2, 4) = 2, now nums = [1,1,2,2,2,3,3,3,4].\nThe total cost is 0 + 0 + 0 + 0 + 1 + 0 + 1 + 0 + 2 = 4.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= instructions.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= instructions[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"3.6K\", \"totalSubmission\": \"8.4K\", \"totalAcceptedRaw\": 3561, \"totalSubmissionRaw\": 8408, \"acRate\": \"42.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Indexed Tree", "slug": "binary-indexed-tree"}, {"name": "Segment Tree", "slug": "segment-tree"}, {"name": "Ordered Map", "slug": "ordered-map"}]}}, {"id": "1671", "name": "minimum-number-of-removals-to-make-mountain-array", "content": {"questionId": "1766", "questionFrontendId": "1671", "questionTitle": "Minimum Number of Removals to Make Mountain Array", "questionTitleSlug": "minimum-number-of-removals-to-make-mountain-array", "content": "<p>You may recall that an array <code>arr</code> is a <strong>mountain array</strong> if and only if:</p>\n\n<ul>\n\t<li><code>arr.length &gt;= 3</code></li>\n\t<li>There exists some index <code>i</code> (<strong>0-indexed</strong>) with <code>0 &lt; i &lt; arr.length - 1</code> such that:\n\t<ul>\n\t\t<li><code>arr[0] &lt; arr[1] &lt; ... &lt; arr[i - 1] &lt; arr[i]</code></li>\n\t\t<li><code>arr[i] &gt; arr[i + 1] &gt; ... &gt; arr[arr.length - 1]</code></li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>Given an integer array <code>nums</code>\u200b\u200b\u200b, return <em>the <strong>minimum</strong> number of elements to remove to make </em><code>nums<em>\u200b\u200b\u200b</em></code><em> </em><em>a <strong>mountain array</strong>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The array itself is a mountain array so we do not need to remove any elements.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,1,1,5,6,2,3,1]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> One solution is to remove the elements at indices 0, 1, and 5, making the array nums = [1,5,6,3,1].\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,3,2,1,1,2,3,1]\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,4,3,2,1]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li>It is guaranteed that you can make a mountain array out of <code>nums</code>.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"3.6K\", \"totalSubmission\": \"7.7K\", \"totalAcceptedRaw\": 3553, \"totalSubmissionRaw\": 7686, \"acRate\": \"46.2%\"}", "similarQuestions": "[{\"title\": \"Longest Increasing Subsequence\", \"titleSlug\": \"longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Mountain in Array\", \"titleSlug\": \"longest-mountain-in-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Peak Index in a Mountain Array\", \"titleSlug\": \"peak-index-in-a-mountain-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Valid Mountain Array\", \"titleSlug\": \"valid-mountain-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find in Mountain Array\", \"titleSlug\": \"find-in-mountain-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1655", "name": "distribute-repeating-integers", "content": {"questionId": "1758", "questionFrontendId": "1655", "questionTitle": "Distribute Repeating Integers", "questionTitleSlug": "distribute-repeating-integers", "content": "<p>You are given an array of <code>n</code> integers, <code>nums</code>, where there are at most <code>50</code> unique values in the array. You are also given an array of <code>m</code> customer order quantities, <code>quantity</code>, where <code>quantity[i]</code> is the amount of integers the <code>i<sup>th</sup></code> customer ordered. Determine if it is possible to distribute <code>nums</code> such that:</p>\n\n<ul>\n\t<li>The <code>i<sup>th</sup></code> customer gets <strong>exactly</strong> <code>quantity[i]</code> integers,</li>\n\t<li>The integers the <code>i<sup>th</sup></code> customer gets are <strong>all equal</strong>, and</li>\n\t<li>Every customer is satisfied.</li>\n</ul>\n\n<p>Return <code>true</code><em> if it is possible to distribute </em><code>nums</code><em> according to the above conditions</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4], quantity = [2]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The 0th customer cannot be given two different integers.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,3], quantity = [2]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The 0th customer is given [3,3]. The integers [1,2] are not used.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,2,2], quantity = [2,2]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The 0th customer is given [1,1], and the 1st customer is given [2,2].\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,2,3], quantity = [2,2]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Although the 0th customer could be given [1,1], the 1st customer cannot be satisfied.</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,1,1,1], quantity = [2,3]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The 0th customer is given [1,1], and the 1st customer is given [1,1,1].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 1000</code></li>\n\t<li><code>m == quantity.length</code></li>\n\t<li><code>1 &lt;= m &lt;= 10</code></li>\n\t<li><code>1 &lt;= quantity[i] &lt;= 10<sup>5</sup></code></li>\n\t<li>There are at most <code>50</code> unique values in <code>nums</code>.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"3.3K\", \"totalSubmission\": \"7.9K\", \"totalAcceptedRaw\": 3277, \"totalSubmissionRaw\": 7948, \"acRate\": \"41.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "1639", "name": "number-of-ways-to-form-a-target-string-given-a-dictionary", "content": {"questionId": "1744", "questionFrontendId": "1639", "questionTitle": "Number of Ways to Form a Target String Given a Dictionary", "questionTitleSlug": "number-of-ways-to-form-a-target-string-given-a-dictionary", "content": "<p>You are given a list of strings of the <strong>same length</strong> <code>words</code> and a string <code>target</code>.</p>\n\n<p>Your task is to form <code>target</code> using the given <code>words</code> under the following rules:</p>\n\n<ul>\n\t<li><code>target</code> should be formed from left to right.</li>\n\t<li>To form the <code>i<sup>th</sup></code> character (<strong>0-indexed</strong>) of <code>target</code>, you can choose the <code>k<sup>th</sup></code> character of the <code>j<sup>th</sup></code> string in <code>words</code> if <code>target[i] = words[j][k]</code>.</li>\n\t<li>Once you use the <code>k<sup>th</sup></code> character of the <code>j<sup>th</sup></code> string of <code>words</code>, you <strong>can no longer</strong> use the <code>x<sup>th</sup></code> character of any string in <code>words</code> where <code>x &lt;= k</code>. In other words, all characters to the left of or at index <code>k</code> become unusuable for every string.</li>\n\t<li>Repeat the process until you form the string <code>target</code>.</li>\n</ul>\n\n<p><strong>Notice</strong>&nbsp;that you can use <strong>multiple characters</strong> from the <strong>same string</strong> in <code>words</code> provided the conditions above are met.</p>\n\n<p>Return <em>the number of ways to form <code>target</code> from <code>words</code></em>. Since the answer may be too large, return it <strong>modulo</strong> <code>10<sup>9</sup> + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;acca&quot;,&quot;bbbb&quot;,&quot;caca&quot;], target = &quot;aba&quot;\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> There are 6 ways to form target.\n&quot;aba&quot; -&gt; index 0 (&quot;<u>a</u>cca&quot;), index 1 (&quot;b<u>b</u>bb&quot;), index 3 (&quot;cac<u>a</u>&quot;)\n&quot;aba&quot; -&gt; index 0 (&quot;<u>a</u>cca&quot;), index 2 (&quot;bb<u>b</u>b&quot;), index 3 (&quot;cac<u>a</u>&quot;)\n&quot;aba&quot; -&gt; index 0 (&quot;<u>a</u>cca&quot;), index 1 (&quot;b<u>b</u>bb&quot;), index 3 (&quot;acc<u>a</u>&quot;)\n&quot;aba&quot; -&gt; index 0 (&quot;<u>a</u>cca&quot;), index 2 (&quot;bb<u>b</u>b&quot;), index 3 (&quot;acc<u>a</u>&quot;)\n&quot;aba&quot; -&gt; index 1 (&quot;c<u>a</u>ca&quot;), index 2 (&quot;bb<u>b</u>b&quot;), index 3 (&quot;acc<u>a</u>&quot;)\n&quot;aba&quot; -&gt; index 1 (&quot;c<u>a</u>ca&quot;), index 2 (&quot;bb<u>b</u>b&quot;), index 3 (&quot;cac<u>a</u>&quot;)\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;abba&quot;,&quot;baab&quot;], target = &quot;bab&quot;\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> There are 4 ways to form target.\n&quot;bab&quot; -&gt; index 0 (&quot;<u>b</u>aab&quot;), index 1 (&quot;b<u>a</u>ab&quot;), index 2 (&quot;ab<u>b</u>a&quot;)\n&quot;bab&quot; -&gt; index 0 (&quot;<u>b</u>aab&quot;), index 1 (&quot;b<u>a</u>ab&quot;), index 3 (&quot;baa<u>b</u>&quot;)\n&quot;bab&quot; -&gt; index 0 (&quot;<u>b</u>aab&quot;), index 2 (&quot;ba<u>a</u>b&quot;), index 3 (&quot;baa<u>b</u>&quot;)\n&quot;bab&quot; -&gt; index 1 (&quot;a<u>b</u>ba&quot;), index 2 (&quot;ba<u>a</u>b&quot;), index 3 (&quot;baa<u>b</u>&quot;)\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;abcd&quot;], target = &quot;abcd&quot;\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;abab&quot;,&quot;baba&quot;,&quot;abba&quot;,&quot;baab&quot;], target = &quot;abba&quot;\n<strong>Output:</strong> 16\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 1000</code></li>\n\t<li>All strings in <code>words</code> have the same length.</li>\n\t<li><code>1 &lt;= target.length &lt;= 1000</code></li>\n\t<li><code>words[i]</code> and <code>target</code> contain only lowercase English letters.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"3.3K\", \"totalSubmission\": \"8.3K\", \"totalAcceptedRaw\": 3268, \"totalSubmissionRaw\": 8323, \"acRate\": \"39.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1617", "name": "count-subtrees-with-max-distance-between-cities", "content": {"questionId": "1740", "questionFrontendId": "1617", "questionTitle": "Count Subtrees With Max Distance Between Cities", "questionTitleSlug": "count-subtrees-with-max-distance-between-cities", "content": "<p>There are <code>n</code> cities numbered from <code>1</code> to <code>n</code>. You are given an array <code>edges</code> of size <code>n-1</code>, where <code>edges[i] = [u<sub>i</sub>, v<sub>i</sub>]</code> represents a bidirectional edge between cities <code>u<sub>i</sub></code> and <code>v<sub>i</sub></code>. There exists a unique path between each pair of cities. In other words, the cities form a <strong>tree</strong>.</p>\r\n\r\n<p>A <strong>subtree</strong> is a subset of cities where every city is reachable from every other city in the subset, where the path between each pair passes through only the cities from the subset. Two subtrees are different if there is a city in one subtree that is not present in the other.</p>\r\n\r\n<p>For each <code>d</code> from <code>1</code> to <code>n-1</code>, find the number of subtrees in which the <strong>maximum distance</strong> between any two cities in the subtree is equal to <code>d</code>.</p>\r\n\r\n<p>Return <em>an array of size</em> <code>n-1</code> <em>where the </em><code>d<sup>th</sup></code><em> </em><em>element <strong>(1-indexed)</strong> is the number of subtrees in which the <strong>maximum distance</strong> between any two cities is equal to </em><code>d</code>.</p>\r\n\r\n<p><strong>Notice</strong>&nbsp;that&nbsp;the <strong>distance</strong> between the two cities is the number of edges in the path between them.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/21/p1.png\" style=\"width: 161px; height: 181px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 4, edges = [[1,2],[2,3],[2,4]]\r\n<strong>Output:</strong> [3,4,0]\r\n<strong>Explanation:\r\n</strong>The subtrees with subsets {1,2}, {2,3} and {2,4} have a max distance of 1.\r\nThe subtrees with subsets {1,2,3}, {1,2,4}, {2,3,4} and {1,2,3,4} have a max distance of 2.\r\nNo subtree has two nodes where the max distance between them is 3.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 2, edges = [[1,2]]\r\n<strong>Output:</strong> [1]\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 3, edges = [[1,2],[2,3]]\r\n<strong>Output:</strong> [2,1]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>2 &lt;= n &lt;= 15</code></li>\r\n\t<li><code>edges.length == n-1</code></li>\r\n\t<li><code>edges[i].length == 2</code></li>\r\n\t<li><code>1 &lt;= u<sub>i</sub>, v<sub>i</sub> &lt;= n</code></li>\r\n\t<li>All pairs <code>(u<sub>i</sub>, v<sub>i</sub>)</code> are distinct.</li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"3.8K\", \"totalSubmission\": \"6K\", \"totalAcceptedRaw\": 3755, \"totalSubmissionRaw\": 5953, \"acRate\": \"63.1%\"}", "similarQuestions": "[{\"title\": \"Tree Diameter\", \"titleSlug\": \"tree-diameter\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "1597", "name": "build-binary-expression-tree-from-infix-expression", "content": {"questionId": "1736", "questionFrontendId": "1597", "questionTitle": "Build Binary Expression Tree From Infix Expression", "questionTitleSlug": "build-binary-expression-tree-from-infix-expression", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"1K\", \"totalSubmission\": \"1.5K\", \"totalAcceptedRaw\": 1026, \"totalSubmissionRaw\": 1490, \"acRate\": \"68.9%\"}", "similarQuestions": "[{\"title\": \"Basic Calculator III\", \"titleSlug\": \"basic-calculator-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Check If Two Expression Trees are Equivalent\", \"titleSlug\": \"check-if-two-expression-trees-are-equivalent\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "1610", "name": "maximum-number-of-visible-points", "content": {"questionId": "1733", "questionFrontendId": "1610", "questionTitle": "Maximum Number of Visible Points", "questionTitleSlug": "maximum-number-of-visible-points", "content": "<p>You are given an array <code>points</code>, an integer <code>angle</code>, and your <code>location</code>, where <code>location = [pos<sub>x</sub>, pos<sub>y</sub>]</code> and <code>points[i] = [x<sub>i</sub>, y<sub>i</sub>]</code> both denote <strong>integral coordinates</strong> on the X-Y plane.</p>\n\n<p>Initially, you are facing directly east from your position. You <strong>cannot move</strong> from your position, but you can <strong>rotate</strong>. In other words, <code>pos<sub>x</sub></code> and <code>pos<sub>y</sub></code> cannot be changed. Your field of view in <strong>degrees</strong> is represented by <code>angle</code>, determining&nbsp;how wide you can see from any given view direction. Let <code>d</code> be the amount in degrees that you rotate counterclockwise. Then, your field of view is the <strong>inclusive</strong> range of angles <code>[d - angle/2, d + angle/2]</code>.</p>\n\n<p>\n<video autoplay=\"\" controls=\"\" height=\"360\" muted=\"\" style=\"max-width:100%;height:auto;\" width=\"480\"><source src=\"https://assets.leetcode.com/uploads/2020/09/30/angle.mp4\" type=\"video/mp4\" />Your browser does not support the video tag or this video format.</video>\n</p>\n\n<p>You can <strong>see</strong> some set of points if, for each point, the <strong>angle</strong> formed by the point, your position, and the immediate east direction from your position is <strong>in your field of view</strong>.</p>\n\n<p>There can be multiple points at one coordinate. There may be points at your location, and you can always see these points regardless of your rotation. Points do not obstruct your vision to other points.</p>\n\n<p>Return <em>the maximum number of points you can see</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/30/89a07e9b-00ab-4967-976a-c723b2aa8656.png\" style=\"width: 400px; height: 300px;\" />\n<pre>\n<strong>Input:</strong> points = [[2,1],[2,2],[3,3]], angle = 90, location = [1,1]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The shaded region represents your field of view. All points can be made visible in your field of view, including [3,3] even though [2,2] is in front and in the same line of sight.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[2,1],[2,2],[3,4],[1,1]], angle = 90, location = [1,1]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> All points can be made visible in your field of view, including the one at your location.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/30/5010bfd3-86e6-465f-ac64-e9df941d2e49.png\" style=\"width: 690px; height: 348px;\" />\n<pre>\n<strong>Input:</strong> points = [[1,0],[2,1]], angle = 13, location = [1,1]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> You can only see one of the two points, as shown above.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= points.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>points[i].length == 2</code></li>\n\t<li><code>location.length == 2</code></li>\n\t<li><code>0 &lt;= angle &lt; 360</code></li>\n\t<li><code>0 &lt;= pos<sub>x</sub>, pos<sub>y</sub>, x<sub>i</sub>, y<sub>i</sub> &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"4.8K\", \"totalSubmission\": \"17.4K\", \"totalAcceptedRaw\": 4846, \"totalSubmissionRaw\": 17414, \"acRate\": \"27.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}, {"name": "Geometry", "slug": "geometry"}]}}, {"id": "1611", "name": "minimum-one-bit-operations-to-make-integers-zero", "content": {"questionId": "1732", "questionFrontendId": "1611", "questionTitle": "Minimum One Bit Operations to Make Integers Zero", "questionTitleSlug": "minimum-one-bit-operations-to-make-integers-zero", "content": "<p>Given an integer <code>n</code>, you must transform it into <code>0</code> using the following operations any number of times:</p>\n\n<ul>\n\t<li>Change the rightmost (<code>0<sup>th</sup></code>) bit in the binary representation of <code>n</code>.</li>\n\t<li>Change the <code>i<sup>th</sup></code> bit in the binary representation of <code>n</code> if the <code>(i-1)<sup>th</sup></code> bit is set to <code>1</code> and the <code>(i-2)<sup>th</sup></code> through <code>0<sup>th</sup></code> bits are set to <code>0</code>.</li>\n</ul>\n\n<p>Return <em>the minimum number of operations to transform </em><code>n</code><em> into </em><code>0</code><em>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 0\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The binary representation of 3 is &quot;11&quot;.\n&quot;<u>1</u>1&quot; -&gt; &quot;<u>0</u>1&quot; with the 2nd operation since the 0th bit is 1.\n&quot;0<u>1</u>&quot; -&gt; &quot;0<u>0</u>&quot; with the 1st operation.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 6\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The binary representation of 6 is &quot;110&quot;.\n&quot;<u>1</u>10&quot; -&gt; &quot;<u>0</u>10&quot; with the 2nd operation since the 1st bit is 1 and 0th through 0th bits are 0.\n&quot;01<u>0</u>&quot; -&gt; &quot;01<u>1</u>&quot; with the 1st operation.\n&quot;0<u>1</u>1&quot; -&gt; &quot;0<u>0</u>1&quot; with the 2nd operation since the 0th bit is 1.\n&quot;00<u>1</u>&quot; -&gt; &quot;00<u>0</u>&quot; with the 1st operation.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 9\n<strong>Output:</strong> 14\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 333\n<strong>Output:</strong> 393\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"3.2K\", \"totalSubmission\": \"5.6K\", \"totalAcceptedRaw\": 3188, \"totalSubmissionRaw\": 5601, \"acRate\": \"56.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "1622", "name": "fancy-sequence", "content": {"questionId": "1728", "questionFrontendId": "1622", "questionTitle": "Fancy Sequence", "questionTitleSlug": "fancy-sequence", "content": "<p>Write an API that generates fancy sequences using the <code>append</code>, <code>addAll</code>, and <code>multAll</code> operations.</p>\n\n<p>Implement the <code>Fancy</code> class:</p>\n\n<ul>\n\t<li><code>Fancy()</code> Initializes the object with an empty sequence.</li>\n\t<li><code>void append(val)</code> Appends an integer <code>val</code> to the end of the sequence.</li>\n\t<li><code>void addAll(inc)</code> Increments all existing values in the sequence by an integer <code>inc</code>.</li>\n\t<li><code>void multAll(m)</code> Multiplies all existing values in the sequence by an integer <code>m</code>.</li>\n\t<li><code>int getIndex(idx)</code> Gets the current value at index <code>idx</code> (0-indexed) of the sequence <strong>modulo</strong> <code>10<sup>9</sup> + 7</code>. If the index is greater or equal than the length of the sequence, return <code>-1</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;Fancy&quot;, &quot;append&quot;, &quot;addAll&quot;, &quot;append&quot;, &quot;multAll&quot;, &quot;getIndex&quot;, &quot;addAll&quot;, &quot;append&quot;, &quot;multAll&quot;, &quot;getIndex&quot;, &quot;getIndex&quot;, &quot;getIndex&quot;]\n[[], [2], [3], [7], [2], [0], [3], [10], [2], [0], [1], [2]]\n<strong>Output</strong>\n[null, null, null, null, null, 10, null, null, null, 26, 34, 20]\n\n<strong>Explanation</strong>\nFancy fancy = new Fancy();\nfancy.append(2);   // fancy sequence: [2]\nfancy.addAll(3);   // fancy sequence: [2+3] -&gt; [5]\nfancy.append(7);   // fancy sequence: [5, 7]\nfancy.multAll(2);  // fancy sequence: [5*2, 7*2] -&gt; [10, 14]\nfancy.getIndex(0); // return 10\nfancy.addAll(3);   // fancy sequence: [10+3, 14+3] -&gt; [13, 17]\nfancy.append(10);  // fancy sequence: [13, 17, 10]\nfancy.multAll(2);  // fancy sequence: [13*2, 17*2, 10*2] -&gt; [26, 34, 20]\nfancy.getIndex(0); // return 26\nfancy.getIndex(1); // return 34\nfancy.getIndex(2); // return 20\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= val, inc, m &lt;= 100</code></li>\n\t<li><code>0 &lt;= idx &lt;= 10<sup>5</sup></code></li>\n\t<li>At most <code>10<sup>5</sup></code> calls total will be made to <code>append</code>, <code>addAll</code>, <code>multAll</code>, and <code>getIndex</code>.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"2.5K\", \"totalSubmission\": \"16.4K\", \"totalAcceptedRaw\": 2539, \"totalSubmissionRaw\": 16358, \"acRate\": \"15.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Design", "slug": "design"}]}}, {"id": "1601", "name": "maximum-number-of-achievable-transfer-requests", "content": {"questionId": "1723", "questionFrontendId": "1601", "questionTitle": "Maximum Number of Achievable Transfer Requests", "questionTitleSlug": "maximum-number-of-achievable-transfer-requests", "content": "<p>We have <code>n</code> buildings numbered from <code>0</code> to <code>n - 1</code>. Each building has a number of employees. It&#39;s transfer season, and some employees want to change the building they reside in.</p>\n\n<p>You are given an array <code>requests</code> where <code>requests[i] = [from<sub>i</sub>, to<sub>i</sub>]</code> represents an employee&#39;s request to transfer from building <code>from<sub>i</sub></code> to building <code>to<sub>i</sub></code>.</p>\n\n<p><strong>All buildings are full</strong>, so a list of requests is achievable only if for each building, the <strong>net change in employee transfers is zero</strong>. This means the number of employees <strong>leaving</strong> is <strong>equal</strong> to the number of employees <strong>moving in</strong>. For example if <code>n = 3</code> and two employees are leaving building <code>0</code>, one is leaving building <code>1</code>, and one is leaving building <code>2</code>, there should be two employees moving to building <code>0</code>, one employee moving to building <code>1</code>, and one employee moving to building <code>2</code>.</p>\n\n<p>Return <em>the maximum number of achievable requests</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/10/move1.jpg\" style=\"width: 600px; height: 406px;\" />\n<pre>\n<strong>Input:</strong> n = 5, requests = [[0,1],[1,0],[0,1],[1,2],[2,0],[3,4]]\n<strong>Output:</strong> 5\n<strong>Explantion:</strong> Let&#39;s see the requests:\nFrom building 0 we have employees x and y and both want to move to building 1.\nFrom building 1 we have employees a and b and they want to move to buildings 2 and 0 respectively.\nFrom building 2 we have employee z and they want to move to building 0.\nFrom building 3 we have employee c and they want to move to building 4.\nFrom building 4 we don&#39;t have any requests.\nWe can achieve the requests of users x and b by swapping their places.\nWe can achieve the requests of users y, a and z by swapping the places in the 3 buildings.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/10/move2.jpg\" style=\"width: 450px; height: 327px;\" />\n<pre>\n<strong>Input:</strong> n = 3, requests = [[0,0],[1,2],[2,1]]\n<strong>Output:</strong> 3\n<strong>Explantion:</strong> Let&#39;s see the requests:\nFrom building 0 we have employee x and they want to stay in the same building 0.\nFrom building 1 we have employee y and they want to move to building 2.\nFrom building 2 we have employee z and they want to move to building 1.\nWe can achieve all the requests. </pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, requests = [[0,3],[3,1],[1,2],[2,0]]\n<strong>Output:</strong> 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 20</code></li>\n\t<li><code>1 &lt;= requests.length &lt;= 16</code></li>\n\t<li><code>requests[i].length == 2</code></li>\n\t<li><code>0 &lt;= from<sub>i</sub>, to<sub>i</sub> &lt; n</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.1K\", \"totalSubmission\": \"10.7K\", \"totalAcceptedRaw\": 5052, \"totalSubmissionRaw\": 10712, \"acRate\": \"47.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1595", "name": "minimum-cost-to-connect-two-groups-of-points", "content": {"questionId": "1717", "questionFrontendId": "1595", "questionTitle": "Minimum Cost to Connect Two Groups of Points", "questionTitleSlug": "minimum-cost-to-connect-two-groups-of-points", "content": "<p>You are given two groups of points&nbsp;where the first group&nbsp;has <code><font face=\"monospace\">size<sub>1</sub></font></code>&nbsp;points,&nbsp;the second group&nbsp;has <code><font face=\"monospace\">size<sub>2</sub></font></code>&nbsp;points,&nbsp;and&nbsp;<code><font face=\"monospace\">size<sub>1</sub></font> &gt;= <font face=\"monospace\">size<sub>2</sub></font></code>.</p>\n\n<p>The <code>cost</code> of the connection between any two points&nbsp;are given in an&nbsp;<code><font face=\"monospace\">size<sub>1</sub></font> x <font face=\"monospace\">size<sub>2</sub></font></code>&nbsp;matrix where <code>cost[i][j]</code> is the cost of connecting point <code>i</code> of the first group and point&nbsp;<code>j</code> of the second group. The groups are connected if <strong>each point in both&nbsp;groups is&nbsp;connected to one or more points in the opposite&nbsp;group</strong>. In other words, each&nbsp;point in the first group must be connected to at least one point in the second group, and each&nbsp;point in the second group must be connected to at least one point in the first group.</p>\n\n<p>Return&nbsp;<em>the minimum cost it takes to connect the two groups</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/03/ex1.jpg\" style=\"width: 322px; height: 243px;\" />\n<pre>\n<strong>Input:</strong> cost = [[15, 96], [36, 2]]\n<strong>Output:</strong> 17\n<strong>Explanation</strong>: The optimal way of connecting the groups is:\n1--A\n2--B\nThis results in a total cost of 17.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/03/ex2.jpg\" style=\"width: 322px; height: 403px;\" />\n<pre>\n<strong>Input:</strong> cost = [[1, 3, 5], [4, 1, 1], [1, 5, 3]]\n<strong>Output:</strong> 4\n<strong>Explanation</strong>: The optimal way of connecting the groups is:\n1--A\n2--B\n2--C\n3--A\nThis results in a total cost of 4.\nNote that there are multiple points connected to point 2 in the first group and point A in the second group. This does not matter as there is no limit to the number of points that can be connected. We only care about the minimum total cost.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> cost = [[2, 5, 1], [3, 4, 7], [8, 1, 2], [6, 2, 4], [3, 8, 8]]\n<strong>Output:</strong> 10\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code><font face=\"monospace\">size<sub>1</sub></font> == cost.length</code></li>\n\t<li><code><font face=\"monospace\">size<sub>2</sub></font> == cost[i].length</code></li>\n\t<li><code>1 &lt;= <font face=\"monospace\">size<sub>1</sub></font>, <font face=\"monospace\">size<sub>2</sub></font> &lt;= 12</code></li>\n\t<li><code><font face=\"monospace\">size<sub>1</sub></font> &gt;=&nbsp;<font face=\"monospace\">size<sub>2</sub></font></code></li>\n\t<li><code>0 &lt;= cost[i][j] &lt;= 100</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"3.7K\", \"totalSubmission\": \"8.7K\", \"totalAcceptedRaw\": 3688, \"totalSubmissionRaw\": 8694, \"acRate\": \"42.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "1606", "name": "find-servers-that-handled-most-number-of-requests", "content": {"questionId": "1710", "questionFrontendId": "1606", "questionTitle": "Find Servers That Handled Most Number of Requests", "questionTitleSlug": "find-servers-that-handled-most-number-of-requests", "content": "<p>You have <code>k</code> servers numbered from <code>0</code> to <code>k-1</code> that are being used to handle multiple requests simultaneously. Each server has infinite computational capacity but <strong>cannot handle more than one request at a time</strong>. The requests are assigned to servers according to a specific algorithm:</p>\n\n<ul>\n\t<li>The <code>i<sup>th</sup></code> (0-indexed) request arrives.</li>\n\t<li>If all servers are busy, the request is dropped (not handled at all).</li>\n\t<li>If the <code>(i % k)<sup>th</sup></code> server is available, assign the request to that server.</li>\n\t<li>Otherwise, assign the request to the next available server (wrapping around the list of servers and starting from 0 if necessary). For example, if the <code>i<sup>th</sup></code> server is busy, try to assign the request to the <code>(i+1)<sup>th</sup></code> server, then the <code>(i+2)<sup>th</sup></code> server, and so on.</li>\n</ul>\n\n<p>You are given a <strong>strictly increasing</strong> array <code>arrival</code> of positive integers, where <code>arrival[i]</code> represents the arrival time of the <code>i<sup>th</sup></code> request, and another array <code>load</code>, where <code>load[i]</code> represents the load of the <code>i<sup>th</sup></code> request (the time it takes to complete). Your goal is to find the <strong>busiest server(s)</strong>. A server is considered <strong>busiest</strong> if it handled the most number of requests successfully among all the servers.</p>\n\n<p>Return <em>a list containing the IDs (0-indexed) of the <strong>busiest server(s)</strong></em>. You may return the IDs in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/08/load-1.png\" style=\"width: 389px; height: 221px;\" />\n<pre>\n<strong>Input:</strong> k = 3, arrival = [1,2,3,4,5], load = [5,2,3,3,3] \n<strong>Output:</strong> [1] \n<strong>Explanation:</strong>\nAll of the servers start out available.\nThe first 3 requests are handled by the first 3 servers in order.\nRequest 3 comes in. Server 0 is busy, so it&#39;s assigned to the next available server, which is 1.\nRequest 4 comes in. It cannot be handled since all servers are busy, so it is dropped.\nServers 0 and 2 handled one request each, while server 1 handled two requests. Hence server 1 is the busiest server.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 3, arrival = [1,2,3,4], load = [1,2,1,2]\n<strong>Output:</strong> [0]\n<strong>Explanation:</strong>\nThe first 3 requests are handled by first 3 servers.\nRequest 3 comes in. It is handled by server 0 since the server is available.\nServer 0 handled two requests, while servers 1 and 2 handled one request each. Hence server 0 is the busiest server.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 3, arrival = [1,2,3], load = [10,12,11]\n<strong>Output:</strong> [0,1,2]\n<strong>Explanation: </strong>Each server handles a single request, so they are all considered the busiest.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 3, arrival = [1,2,3,4,8,9,10], load = [5,2,10,3,1,2,2]\n<strong>Output:</strong> [1]\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 1, arrival = [1], load = [1]\n<strong>Output:</strong> [0]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= arrival.length, load.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>arrival.length == load.length</code></li>\n\t<li><code>1 &lt;= arrival[i], load[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>arrival</code> is <strong>strictly increasing</strong>.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"3.3K\", \"totalSubmission\": \"9.1K\", \"totalAcceptedRaw\": 3341, \"totalSubmissionRaw\": 9144, \"acRate\": \"36.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Ordered Map", "slug": "ordered-map"}]}}, {"id": "1585", "name": "check-if-string-is-transformable-with-substring-sort-operations", "content": {"questionId": "1707", "questionFrontendId": "1585", "questionTitle": "Check If String Is Transformable With Substring Sort Operations", "questionTitleSlug": "check-if-string-is-transformable-with-substring-sort-operations", "content": "<p>Given two strings&nbsp;<code>s</code> and <code>t</code>, you want to transform string&nbsp;<code>s</code> into string&nbsp;<code>t</code> using the following&nbsp;operation any number of times:</p>\n\n<ul>\n\t<li>Choose a <strong>non-empty</strong> substring in&nbsp;<code>s</code>&nbsp;and sort it in-place&nbsp;so the characters are in&nbsp;<strong>ascending order</strong>.</li>\n</ul>\n\n<p>For example, applying the operation on the underlined substring in&nbsp;<code>&quot;1<u>4234</u>&quot;</code>&nbsp;results in <code>&quot;1<u>2344</u>&quot;</code>.</p>\n\n<p>Return <code>true</code> if <em>it is possible to transform string <code>s</code>&nbsp;into string <code>t</code></em>. Otherwise,&nbsp;return <code>false</code>.</p>\n\n<p>A <strong>substring</strong>&nbsp;is a contiguous sequence of characters within a string.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;84532&quot;, t = &quot;34852&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> You can transform s into t using the following sort operations:\n&quot;84<u>53</u>2&quot; (from index 2 to 3) -&gt; &quot;84<u>35</u>2&quot;\n&quot;<u>843</u>52&quot; (from index 0 to 2) -&gt; &quot;<u>348</u>52&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;34521&quot;, t = &quot;23415&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> You can transform s into t using the following sort operations:\n&quot;<u>3452</u>1&quot; -&gt; &quot;<u>2345</u>1&quot;\n&quot;234<u>51</u>&quot; -&gt; &quot;234<u>15</u>&quot;\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;12345&quot;, t = &quot;12435&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;1&quot;, t = &quot;2&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>s.length == t.length</code></li>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> and <code>t</code>&nbsp;only contain digits from <code>&#39;0&#39;</code> to <code>&#39;9&#39;</code>.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"4.2K\", \"totalSubmission\": \"8.8K\", \"totalAcceptedRaw\": 4221, \"totalSubmissionRaw\": 8793, \"acRate\": \"48.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1579", "name": "remove-max-number-of-edges-to-keep-graph-fully-traversable", "content": {"questionId": "1701", "questionFrontendId": "1579", "questionTitle": "Remove Max Number of Edges to Keep Graph Fully Traversable", "questionTitleSlug": "remove-max-number-of-edges-to-keep-graph-fully-traversable", "content": "<p>Alice and Bob have an undirected graph of&nbsp;<code>n</code>&nbsp;nodes&nbsp;and 3 types of edges:</p>\n\n<ul>\n\t<li>Type 1: Can be traversed by Alice only.</li>\n\t<li>Type 2: Can be traversed by Bob only.</li>\n\t<li>Type 3: Can by traversed by both Alice and Bob.</li>\n</ul>\n\n<p>Given an array&nbsp;<code>edges</code>&nbsp;where&nbsp;<code>edges[i] = [type<sub>i</sub>, u<sub>i</sub>, v<sub>i</sub>]</code>&nbsp;represents a bidirectional edge of type&nbsp;<code>type<sub>i</sub></code>&nbsp;between nodes&nbsp;<code>u<sub>i</sub></code>&nbsp;and&nbsp;<code>v<sub>i</sub></code>, find the maximum number of edges you can remove so that after removing the edges, the graph can still be fully traversed by both Alice and Bob. The graph is fully traversed by Alice and Bob if starting from any node, they can reach all other nodes.</p>\n\n<p>Return <em>the maximum number of edges you can remove, or return</em> <code>-1</code> <em>if it&#39;s impossible for the graph to be fully traversed by Alice and Bob.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/19/ex1.png\" style=\"width: 179px; height: 191px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, edges = [[3,1,2],[3,2,3],[1,1,3],[1,2,4],[1,1,2],[2,3,4]]\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>If we remove the 2 edges [1,1,2] and [1,1,3]. The graph will still be fully traversable by Alice and Bob. Removing any additional edge will not make it so. So the maximum number of edges we can remove is 2.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/19/ex2.png\" style=\"width: 178px; height: 190px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, edges = [[3,1,2],[3,2,3],[1,1,4],[2,1,4]]\n<strong>Output:</strong> 0\n<strong>Explanation: </strong>Notice that removing any edge will not make the graph fully traversable by Alice and Bob.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/19/ex3.png\" style=\"width: 178px; height: 190px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, edges = [[3,2,3],[1,1,2],[2,3,4]]\n<strong>Output:</strong> -1\n<b>Explanation: </b>In the current graph, Alice cannot reach node 4 from the other nodes. Likewise, Bob cannot reach 1. Therefore it&#39;s impossible to make the graph fully traversable.</pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= edges.length &lt;= min(10^5, 3 * n * (n-1) / 2)</code></li>\n\t<li><code>edges[i].length == 3</code></li>\n\t<li><code>1 &lt;= edges[i][0] &lt;= 3</code></li>\n\t<li><code>1 &lt;= edges[i][1] &lt; edges[i][2] &lt;= n</code></li>\n\t<li>All tuples&nbsp;<code>(type<sub>i</sub>, u<sub>i</sub>, v<sub>i</sub>)</code>&nbsp;are distinct.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.9K\", \"totalSubmission\": \"12.9K\", \"totalAcceptedRaw\": 5877, \"totalSubmissionRaw\": 12872, \"acRate\": \"45.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Union Find", "slug": "union-find"}]}}, {"id": "1591", "name": "strange-printer-ii", "content": {"questionId": "1696", "questionFrontendId": "1591", "questionTitle": "Strange Printer II", "questionTitleSlug": "strange-printer-ii", "content": "<p>There is a strange printer with the following two special requirements:</p>\n\n<ul>\n\t<li>On each turn, the printer will print a solid rectangular pattern of a single color on the grid. This will cover up the existing colors in the rectangle.</li>\n\t<li>Once the printer has used a color for the above operation, <strong>the same color cannot be used again</strong>.</li>\n</ul>\n\n<p>You are given a <code>m x n</code> matrix <code>targetGrid</code>, where <code>targetGrid[row][col]</code> is the color in the position <code>(row, col)</code> of the grid.</p>\n\n<p>Return <code>true</code><em> if it is possible to print the matrix </em><code>targetGrid</code><em>,</em><em> otherwise, return </em><code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/15/sample_1_1929.png\" style=\"width: 483px; height: 138px;\" /></p>\n\n<pre>\n<strong>Input:</strong> targetGrid = [[1,1,1,1],[1,2,2,1],[1,2,2,1],[1,1,1,1]]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/15/sample_2_1929.png\" style=\"width: 483px; height: 290px;\" /></p>\n\n<pre>\n<strong>Input:</strong> targetGrid = [[1,1,1,1],[1,1,3,3],[1,1,3,4],[5,5,1,4]]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> targetGrid = [[1,2,1],[2,1,2],[1,2,1]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> It is impossible to form targetGrid because it is not allowed to print the same color in different turns.</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> targetGrid = [[1,1,1],[3,1,3]]\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == targetGrid.length</code></li>\n\t<li><code>n == targetGrid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 60</code></li>\n\t<li><code>1 &lt;= targetGrid[row][col] &lt;= 60</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"2.9K\", \"totalSubmission\": \"5.2K\", \"totalAcceptedRaw\": 2873, \"totalSubmissionRaw\": 5172, \"acRate\": \"55.5%\"}", "similarQuestions": "[{\"title\": \"Strange Printer\", \"titleSlug\": \"strange-printer\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1569", "name": "number-of-ways-to-reorder-array-to-get-same-bst", "content": {"questionId": "1692", "questionFrontendId": "1569", "questionTitle": "Number of Ways to Reorder Array to Get Same BST", "questionTitleSlug": "number-of-ways-to-reorder-array-to-get-same-bst", "content": "<p>Given an array <code>nums</code>&nbsp;that represents a permutation of integers from&nbsp;<code>1</code>&nbsp;to&nbsp;<code>n</code>. We are going to construct a binary search tree (BST) by inserting the elements of&nbsp;<code>nums</code>&nbsp;in&nbsp;order into an initially empty BST. Find the number of different ways to reorder <code>nums</code> so that the constructed BST is identical to that formed from the original array&nbsp;<code>nums</code>.</p>\n\n<p>For example, given&nbsp;<code>nums = [2,1,3]</code>, we will have 2 as the root, 1 as a left child, and 3 as a right child. The array&nbsp;<code>[2,3,1]</code>&nbsp;also yields the same BST but&nbsp;<code>[3,2,1]</code>&nbsp;yields a different BST.</p>\n\n<p>Return <em>the number of ways to reorder</em>&nbsp;<code>nums</code>&nbsp;<em>such that the BST formed is identical to the original BST formed from</em>&nbsp;<code>nums</code>.</p>\n\n<p>Since the answer may be very large,&nbsp;<strong>return it modulo&nbsp;</strong><code>10^9 + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/12/bb.png\" style=\"width: 121px; height: 101px;\" /></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,1,3]\n<strong>Output:</strong> 1\n<strong>Explanation: </strong>We can reorder nums to be [2,3,1] which will yield the same BST. There are no other ways to reorder nums which will yield the same BST.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/12/ex1.png\" style=\"width: 241px; height: 161px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,4,5,1,2]\n<strong>Output:</strong> 5\n<b>Explanation: </b>The following 5 arrays will yield the same BST: \n[3,1,2,4,5]\n[3,1,4,2,5]\n[3,1,4,5,2]\n[3,4,1,2,5]\n[3,4,1,5,2]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/12/ex4.png\" style=\"width: 121px; height: 161px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> 0\n<strong>Explanation: </strong>There are no other orderings of nums that will yield the same BST.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/12/abc.png\" style=\"width: 241px; height: 161px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,1,2,5,4,6]\n<strong>Output:</strong> 19\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [9,4,2,1,3,6,5,7,8,14,11,10,12,13,16,15,17,18]\n<strong>Output:</strong> 216212978\n<strong>Explanation: </strong>The number of ways to reorder nums to get the same BST is 3216212999. Taking this number modulo 10^9 + 7 gives 216212978.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= nums.length</code></li>\n\t<li>All integers in&nbsp;<code>nums</code>&nbsp;are&nbsp;<strong>distinct</strong>.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"4.7K\", \"totalSubmission\": \"9.4K\", \"totalAcceptedRaw\": 4713, \"totalSubmissionRaw\": 9436, \"acRate\": \"49.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1568", "name": "minimum-number-of-days-to-disconnect-island", "content": {"questionId": "1691", "questionFrontendId": "1568", "questionTitle": "Minimum Number of Days to Disconnect Island", "questionTitleSlug": "minimum-number-of-days-to-disconnect-island", "content": "<p>Given a 2D&nbsp;<code>grid</code> consisting&nbsp;of <code>1</code>s (land)&nbsp;and <code>0</code>s (water).&nbsp; An <em>island</em> is a maximal 4-directionally (horizontal or vertical) connected group of <code>1</code>s.</p>\n\n<p>The grid is said to be <strong>connected</strong> if we have <strong>exactly one&nbsp;island</strong>, otherwise is said <strong>disconnected</strong>.</p>\n\n<p>In one day, we are allowed to change <strong>any </strong>single land cell <code>(1)</code> into a water cell <code>(0)</code>.</p>\n\n<p>Return <em>the minimum number of days</em> to disconnect the grid.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/13/1926_island.png\" style=\"width: 498px; height: 139px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[0,1,1,0],[0,1,1,0],[0,0,0,0]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> We need at least 2 days to get a disconnected grid.\nChange land grid[1][1] and grid[0][2] to water and get 2 disconnected island.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,1]]\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>Grid of full water is also disconnected ([[1,1]] -&gt; [[0,0]]), 0 islands.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,0,1,0]]\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,1,0,1,1],\n&nbsp;              [1,1,1,1,1],\n&nbsp;              [1,1,0,1,1],\n&nbsp;              [1,1,0,1,1]]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,1,0,1,1],\n&nbsp;              [1,1,1,1,1],\n&nbsp;              [1,1,0,1,1],\n&nbsp;              [1,1,1,1,1]]\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= grid.length, grid[i].length &lt;= 30</code></li>\n\t<li><code>grid[i][j]</code>&nbsp;is <code>0</code> or <code>1</code>.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.3K\", \"totalSubmission\": \"10.4K\", \"totalAcceptedRaw\": 5266, \"totalSubmissionRaw\": 10434, \"acRate\": \"50.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1548", "name": "the-most-similar-path-in-a-graph", "content": {"questionId": "1687", "questionFrontendId": "1548", "questionTitle": "The Most Similar Path in a Graph", "questionTitleSlug": "the-most-similar-path-in-a-graph", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"3.7K\", \"totalSubmission\": \"6.9K\", \"totalAcceptedRaw\": 3741, \"totalSubmissionRaw\": 6872, \"acRate\": \"54.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "1563", "name": "stone-game-v", "content": {"questionId": "1685", "questionFrontendId": "1563", "questionTitle": "Stone Game V", "questionTitleSlug": "stone-game-v", "content": "<p>There are several stones&nbsp;<strong>arranged in a row</strong>, and each stone has an associated&nbsp;value which is an integer given in the array&nbsp;<code>stoneValue</code>.</p>\n\n<p>In each round of the game, Alice divides the row into <strong>two non-empty rows</strong> (i.e. left row and right row), then Bob calculates the value of each row which is the sum of the values of all the stones in this row. Bob throws away the row which has the maximum value, and&nbsp;Alice&#39;s score increases by the value of the remaining row. If the value of the two rows are equal, Bob lets Alice decide which row will be thrown away. The next round starts with the remaining row.</p>\n\n<p>The game ends when there is only <strong>one stone remaining</strong>. Alice&#39;s is initially <strong>zero</strong>.</p>\n\n<p>Return <i>the maximum score that Alice can obtain</i>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> stoneValue = [6,2,3,4,5,5]\n<strong>Output:</strong> 18\n<strong>Explanation:</strong> In the first round, Alice divides the row to [6,2,3], [4,5,5]. The left row has the value 11 and the right row has value 14. Bob throws away the right row and Alice&#39;s score is now 11.\nIn the second round Alice divides the row to [6], [2,3]. This time Bob throws away the left row and Alice&#39;s score becomes 16 (11 + 5).\nThe last round Alice has only one choice to divide the row which is [2], [3]. Bob throws away the right row and Alice&#39;s score is now 18 (16 + 2). The game ends because only one stone is remaining in the row.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> stoneValue = [7,7,7,7,7,7,7]\n<strong>Output:</strong> 28\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> stoneValue = [4]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= stoneValue.length &lt;= 500</code></li>\n\t<li><code>1 &lt;=&nbsp;stoneValue[i] &lt;= 10^6</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"7.4K\", \"totalSubmission\": \"18.4K\", \"totalAcceptedRaw\": 7355, \"totalSubmissionRaw\": 18378, \"acRate\": \"40.0%\"}", "similarQuestions": "[{\"title\": \"Stone Game\", \"titleSlug\": \"stone-game\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stone Game II\", \"titleSlug\": \"stone-game-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stone Game III\", \"titleSlug\": \"stone-game-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game IV\", \"titleSlug\": \"stone-game-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game VI\", \"titleSlug\": \"stone-game-vi\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stone Game VII\", \"titleSlug\": \"stone-game-vii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1575", "name": "count-all-possible-routes", "content": {"questionId": "1680", "questionFrontendId": "1575", "questionTitle": "Count All Possible Routes", "questionTitleSlug": "count-all-possible-routes", "content": "<p>You are given an array of <strong>distinct</strong> positive integers locations&nbsp;where <code>locations[i]</code> represents the position of city <code>i</code>. You are also given&nbsp;integers&nbsp;<code>start</code>,&nbsp;<code>finish</code>&nbsp;and&nbsp;<code>fuel</code>&nbsp;representing the starting city, ending city, and the initial amount of fuel you have, respectively.</p>\n\n<p>At each step, if you are at city&nbsp;<code>i</code>, you can pick any city&nbsp;<code>j</code>&nbsp;such that <code>j != i</code>&nbsp;and&nbsp;<code>0 &lt;= j &lt; locations.length</code>&nbsp;and move to city <code>j</code>.&nbsp;Moving from city <code>i</code> to city <code>j</code> reduces the amount of fuel you have by&nbsp;<code>|locations[i] - locations[j]|</code>.&nbsp;Please notice that <code>|x|</code>&nbsp;denotes the absolute value of <code>x</code>.</p>\n\n<p>Notice that&nbsp;<code>fuel</code>&nbsp;<strong>cannot</strong> become negative at any point in time, and that you are <strong>allowed</strong> to visit any city more than once (including <code>start</code>&nbsp;and&nbsp;<code>finish</code>).</p>\n\n<p>Return <em>the count of all possible routes from&nbsp;</em><code>start</code>&nbsp;<em>to</em>&nbsp;<code>finish</code>.</p>\n\n<p>Since the answer&nbsp;may be too large,&nbsp;return it modulo&nbsp;<code>10^9 + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> locations = [2,3,6,8,4], start = 1, finish = 3, fuel = 5\n<strong>Output:</strong> 4\n<strong>Explanation:</strong>&nbsp;The following are all possible routes, each uses 5 units of fuel:\n1 -&gt; 3\n1 -&gt; 2 -&gt; 3\n1 -&gt; 4 -&gt; 3\n1 -&gt; 4 -&gt; 2 -&gt; 3\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> locations = [4,3,1], start = 1, finish = 0, fuel = 6\n<strong>Output:</strong> 5\n<strong>Explanation: </strong>The following are all possible routes:\n1 -&gt; 0, used fuel = 1\n1 -&gt; 2 -&gt; 0, used fuel = 5\n1 -&gt; 2 -&gt; 1 -&gt; 0, used fuel = 5\n1 -&gt; 0 -&gt; 1 -&gt; 0, used fuel = 3\n1 -&gt; 0 -&gt; 1 -&gt; 0 -&gt; 1 -&gt; 0, used fuel = 5\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> locations = [5,2,1], start = 0, finish = 2, fuel = 3\n<strong>Output:</strong> 0\n<b>Explanation: </b>It&#39;s impossible to get from 0 to 2 using only 3 units of fuel since the shortest route needs 4 units of fuel.</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> locations = [2,1,5], start = 0, finish = 0, fuel = 3\n<strong>Output:</strong> 2\n<strong>Explanation:</strong>&nbsp;There are two possible routes, 0 and 0 -&gt; 1 -&gt; 0.</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> locations = [1,2,3], start = 0, finish = 2, fuel = 40\n<strong>Output:</strong> 615088286\n<strong>Explanation: </strong>The total number of possible routes is 2615088300. Taking this number modulo 10^9 + 7 gives us 615088286.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= locations.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= locations[i] &lt;= 10^9</code></li>\n\t<li>All integers in&nbsp;<code>locations</code>&nbsp;are&nbsp;<strong>distinct</strong>.</li>\n\t<li><code>0 &lt;= start, finish &lt;&nbsp;locations.length</code></li>\n\t<li><code><font face=\"monospace\">1 &lt;= fuel &lt;= 200</font></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.5K\", \"totalSubmission\": \"9.6K\", \"totalAcceptedRaw\": 5511, \"totalSubmissionRaw\": 9596, \"acRate\": \"57.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1553", "name": "minimum-number-of-days-to-eat-n-oranges", "content": {"questionId": "1676", "questionFrontendId": "1553", "questionTitle": "Minimum Number of Days to Eat N Oranges", "questionTitleSlug": "minimum-number-of-days-to-eat-n-oranges", "content": "<p>There are <code>n</code> oranges in the kitchen and you decided to eat some of these oranges every day as follows:</p>\r\n\r\n<ul>\r\n\t<li>Eat one orange.</li>\r\n\t<li>If the number of remaining oranges (<code>n</code>) is divisible by 2 then you can eat&nbsp; n/2 oranges.</li>\r\n\t<li>If the number of remaining oranges (<code>n</code>) is divisible by 3&nbsp;then you can eat&nbsp; 2*(n/3)&nbsp;oranges.</li>\r\n</ul>\r\n\r\n<p>You can only choose one of the actions per day.</p>\r\n\r\n<p>Return the minimum number of days to eat <code>n</code> oranges.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 10\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> You have 10 oranges.\r\nDay 1: Eat 1 orange,  10 - 1 = 9.  \r\nDay 2: Eat 6 oranges, 9 - 2*(9/3) = 9 - 6 = 3. (Since 9 is divisible by 3)\r\nDay 3: Eat 2 oranges, 3 - 2*(3/3) = 3 - 2 = 1. \r\nDay 4: Eat the last orange  1 - 1  = 0.\r\nYou need at least 4 days to eat the 10 oranges.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 6\r\n<strong>Output:</strong> 3\r\n<strong>Explanation:</strong> You have 6 oranges.\r\nDay 1: Eat 3 oranges, 6 - 6/2 = 6 - 3 = 3. (Since 6 is divisible by 2).\r\nDay 2: Eat 2 oranges, 3 - 2*(3/3) = 3 - 2 = 1. (Since 3 is divisible by 3)\r\nDay 3: Eat the last orange  1 - 1  = 0.\r\nYou need at least 3 days to eat the 6 oranges.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 1\r\n<strong>Output:</strong> 1\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 56\r\n<strong>Output:</strong> 6\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= n &lt;= 2*10^9</code></li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"12.3K\", \"totalSubmission\": \"42.5K\", \"totalAcceptedRaw\": 12298, \"totalSubmissionRaw\": 42477, \"acRate\": \"29.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1547", "name": "minimum-cost-to-cut-a-stick", "content": {"questionId": "1669", "questionFrontendId": "1547", "questionTitle": "Minimum Cost to Cut a Stick", "questionTitleSlug": "minimum-cost-to-cut-a-stick", "content": "<p>Given a wooden stick of length <code>n</code> units. The stick is labelled from <code>0</code> to <code>n</code>. For example, a stick of length <strong>6</strong> is labelled as follows:</p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/21/statement.jpg\" style=\"width: 521px; height: 111px;\" />\r\n<p>Given an integer array <code>cuts</code>&nbsp;where <code>cuts[i]</code>&nbsp;denotes a position you should perform a cut at.</p>\r\n\r\n<p>You should perform the cuts in order, you can change the order of the cuts as you wish.</p>\r\n\r\n<p>The cost of one cut is the length of the stick to be cut, the total cost is the sum of costs of all cuts. When you cut a stick, it will be split into two smaller sticks (i.e. the sum of their lengths is the length of the stick before the cut). Please refer to the first example for a better explanation.</p>\r\n\r\n<p>Return <em>the minimum total cost</em> of the&nbsp;cuts.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/23/e1.jpg\" style=\"width: 350px; height: 284px;\" />\r\n<pre>\r\n<strong>Input:</strong> n = 7, cuts = [1,3,4,5]\r\n<strong>Output:</strong> 16\r\n<strong>Explanation:</strong> Using cuts order = [1, 3, 4, 5] as in the input leads to the following scenario:\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/21/e11.jpg\" style=\"width: 350px; height: 284px;\" />\r\nThe first cut is done to a rod of length 7 so the cost is 7. The second cut is done to a rod of length 6 (i.e. the second part of the first cut), the third is done to a rod of length 4 and the last cut is to a rod of length 3. The total cost is 7 + 6 + 4 + 3 = 20.\r\nRearranging the cuts to be [3, 5, 1, 4] for example will lead to a scenario with total cost = 16 (as shown in the example photo 7 + 4 + 3 + 2 = 16).</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 9, cuts = [5,6,1,4,2]\r\n<strong>Output:</strong> 22\r\n<strong>Explanation:</strong> If you try the given cuts ordering the cost will be 25.\r\nThere are much ordering with total cost &lt;= 25, for example, the order [4, 6, 5, 2, 1] has total cost = 22 which is the minimum possible.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>2 &lt;= n &lt;= 10^6</code></li>\r\n\t<li><code>1 &lt;= cuts.length &lt;= min(n - 1, 100)</code></li>\r\n\t<li><code>1 &lt;= cuts[i] &lt;= n - 1</code></li>\r\n\t<li>All the integers in <code>cuts</code>&nbsp;array are <strong>distinct</strong>.</li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"8.7K\", \"totalSubmission\": \"16.9K\", \"totalAcceptedRaw\": 8724, \"totalSubmissionRaw\": 16947, \"acRate\": \"51.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1542", "name": "find-longest-awesome-substring", "content": {"questionId": "1668", "questionFrontendId": "1542", "questionTitle": "Find Longest Awesome Substring", "questionTitleSlug": "find-longest-awesome-substring", "content": "<p>Given a string <code>s</code>. An <em>awesome</em> substring is a non-empty substring of <code>s</code> such that we can make any number of swaps in order to make it palindrome.</p>\n\n<p>Return the length of the maximum length <strong>awesome substring</strong> of <code>s</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;3242415&quot;\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> &quot;24241&quot; is the longest awesome substring, we can form the palindrome &quot;24142&quot; with some swaps.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;12345678&quot;\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;213123&quot;\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> &quot;213123&quot; is the longest awesome substring, we can form the palindrome &quot;231132&quot; with some swaps.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;00&quot;\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10^5</code></li>\n\t<li><code>s</code> consists only of digits.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"4.9K\", \"totalSubmission\": \"13.5K\", \"totalAcceptedRaw\": 4916, \"totalSubmissionRaw\": 13520, \"acRate\": \"36.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "1559", "name": "detect-cycles-in-2d-grid", "content": {"questionId": "1663", "questionFrontendId": "1559", "questionTitle": "Detect Cycles in 2D Grid", "questionTitleSlug": "detect-cycles-in-2d-grid", "content": "<p>Given a 2D array of characters&nbsp;<code>grid</code>&nbsp;of size <code>m x n</code>, you need to find if there exists any cycle consisting of the <strong>same value</strong>&nbsp;in&nbsp;<code>grid</code>.</p>\n\n<p>A cycle is a path of <strong>length 4&nbsp;or more</strong>&nbsp;in the grid that starts and ends at the same cell. From a given cell, you can move to one of the cells adjacent to it - in one of the four directions (up, down, left, or right), if it has the <strong>same value</strong> of the current cell.</p>\n\n<p>Also, you cannot move to the cell that you visited in your last move. For example, the cycle&nbsp;<code>(1, 1) -&gt; (1, 2) -&gt; (1, 1)</code>&nbsp;is invalid because from&nbsp;<code>(1, 2)</code>&nbsp;we visited&nbsp;<code>(1, 1)</code>&nbsp;which was the last visited cell.</p>\n\n<p>Return&nbsp;<code>true</code>&nbsp;if any cycle of the same value exists in&nbsp;<code>grid</code>, otherwise, return&nbsp;<code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/15/1.png\" style=\"width: 231px; height: 152px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[&quot;a&quot;,&quot;a&quot;,&quot;a&quot;,&quot;a&quot;],[&quot;a&quot;,&quot;b&quot;,&quot;b&quot;,&quot;a&quot;],[&quot;a&quot;,&quot;b&quot;,&quot;b&quot;,&quot;a&quot;],[&quot;a&quot;,&quot;a&quot;,&quot;a&quot;,&quot;a&quot;]]\n<strong>Output:</strong> true\n<strong>Explanation: </strong>There are two valid cycles shown in different colors in the image below:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/15/11.png\" style=\"width: 225px; height: 163px;\" />\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/15/22.png\" style=\"width: 236px; height: 154px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[&quot;c&quot;,&quot;c&quot;,&quot;c&quot;,&quot;a&quot;],[&quot;c&quot;,&quot;d&quot;,&quot;c&quot;,&quot;c&quot;],[&quot;c&quot;,&quot;c&quot;,&quot;e&quot;,&quot;c&quot;],[&quot;f&quot;,&quot;c&quot;,&quot;c&quot;,&quot;c&quot;]]\n<strong>Output:</strong> true\n<strong>Explanation: </strong>There is only one valid cycle highlighted in the image below:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/15/2.png\" style=\"width: 229px; height: 157px;\" />\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/15/3.png\" style=\"width: 183px; height: 120px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[&quot;a&quot;,&quot;b&quot;,&quot;b&quot;],[&quot;b&quot;,&quot;z&quot;,&quot;b&quot;],[&quot;b&quot;,&quot;b&quot;,&quot;a&quot;]]\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m &lt;= 500</code></li>\n\t<li><code>1 &lt;= n &lt;= 500</code></li>\n\t<li><code>grid</code>&nbsp;consists only of lowercase&nbsp;English letters.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"8.1K\", \"totalSubmission\": \"18.2K\", \"totalAcceptedRaw\": 8110, \"totalSubmissionRaw\": 18152, \"acRate\": \"44.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1537", "name": "get-the-maximum-score", "content": {"questionId": "1659", "questionFrontendId": "1537", "questionTitle": "Get the Maximum Score", "questionTitleSlug": "get-the-maximum-score", "content": "<p>You are given two <strong>sorted</strong> arrays of distinct integers <code>nums1</code> and <code>nums2.</code></p>\n\n<p>A <strong>valid<strong><em> </em></strong>path</strong> is defined as follows:</p>\n\n<ul>\n\t<li>Choose&nbsp;array nums1 or nums2 to traverse (from index-0).</li>\n\t<li>Traverse the current array from left to right.</li>\n\t<li>If you are reading any value that is present in <code>nums1</code> and <code>nums2</code>&nbsp;you are allowed to change your path to the other array. (Only one repeated value is considered in the&nbsp;valid path).</li>\n</ul>\n\n<p><em>Score</em> is defined as the sum of uniques values in a valid path.</p>\n\n<p>Return the maximum <em>score</em> you can obtain of all possible&nbsp;<strong>valid&nbsp;paths</strong>.</p>\n\n<p>Since the answer&nbsp;may be too large,&nbsp;return it modulo&nbsp;10^9 + 7.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/16/sample_1_1893.png\" style=\"width: 538px; height: 163px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [2,4,5,8,10], nums2 = [4,6,8,9]\n<strong>Output:</strong> 30\n<strong>Explanation:</strong>&nbsp;Valid paths:\n[2,4,5,8,10], [2,4,5,8,9], [2,4,6,8,9], [2,4,6,8,10],  (starting from nums1)\n[4,6,8,9], [4,5,8,10], [4,5,8,9], [4,6,8,10]    (starting from nums2)\nThe maximum is obtained with the path in green <strong>[2,4,6,8,10]</strong>.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,3,5,7,9], nums2 = [3,5,100]\n<strong>Output:</strong> 109\n<strong>Explanation:</strong>&nbsp;Maximum sum is obtained with the path <strong>[1,3,5,100]</strong>.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2,3,4,5], nums2 = [6,7,8,9,10]\n<strong>Output:</strong> 40\n<strong>Explanation:</strong>&nbsp;There are no common elements between nums1 and nums2.\nMaximum sum is obtained with the path [6,7,8,9,10].\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,4,5,8,9,11,19], nums2 = [2,3,4,11,12]\n<strong>Output:</strong> 61\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums1.length &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= nums2.length &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= nums1[i], nums2[i] &lt;= 10^7</code></li>\n\t<li><code>nums1</code> and <code>nums2</code> are strictly increasing.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"8.6K\", \"totalSubmission\": \"23.8K\", \"totalAcceptedRaw\": 8591, \"totalSubmissionRaw\": 23774, \"acRate\": \"36.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1516", "name": "move-sub-tree-of-n-ary-tree", "content": {"questionId": "1655", "questionFrontendId": "1516", "questionTitle": "Move Sub-Tree of N-Ary Tree", "questionTitleSlug": "move-sub-tree-of-n-ary-tree", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"941\", \"totalSubmission\": \"1.5K\", \"totalAcceptedRaw\": 941, \"totalSubmissionRaw\": 1506, \"acRate\": \"62.5%\"}", "similarQuestions": "[{\"title\": \"Find Root of N-Ary Tree\", \"titleSlug\": \"find-root-of-n-ary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "1521", "name": "find-a-value-of-a-mysterious-function-closest-to-target", "content": {"questionId": "1645", "questionFrontendId": "1521", "questionTitle": "Find a Value of a Mysterious Function Closest to Target", "questionTitleSlug": "find-a-value-of-a-mysterious-function-closest-to-target", "content": "<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/09/change.png\" style=\"width: 635px; height: 312px;\" /></p>\n\n<p>Winston was given the above mysterious function <code>func</code>. He has an integer array <code>arr</code> and an integer <code>target</code> and he wants to find the values&nbsp;<code>l</code> and <code>r</code>&nbsp;that make&nbsp;the value <code>|func(arr, l, r) - target|</code> minimum possible.</p>\n\n<p>Return <em>the minimum possible value</em> of <code>|func(arr, l, r) - target|</code>.</p>\n\n<p>Notice that <code>func</code> should be called with the values&nbsp;<code>l</code> and <code>r</code> where <code>0 &lt;= l, r &lt; arr.length</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [9,12,3,7,15], target = 5\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Calling func with all the pairs of [l,r] = [[0,0],[1,1],[2,2],[3,3],[4,4],[0,1],[1,2],[2,3],[3,4],[0,2],[1,3],[2,4],[0,3],[1,4],[0,4]], Winston got the following results [9,12,3,7,15,8,0,3,7,0,0,3,0,0,0]. The value closest to 5 is 7 and 3, thus the minimum difference is 2.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1000000,1000000,1000000], target = 1\n<strong>Output:</strong> 999999\n<strong>Explanation:</strong> Winston called the func with all possible values of [l,r] and he always got 1000000, thus the min difference is 999999.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,4,8,16], target = 0\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= arr[i] &lt;= 10^6</code></li>\n\t<li><code>0 &lt;= target &lt;= 10^7</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.6K\", \"totalSubmission\": \"12.6K\", \"totalAcceptedRaw\": 5598, \"totalSubmissionRaw\": 12645, \"acRate\": \"44.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}, {"name": "Segment Tree", "slug": "segment-tree"}]}}, {"id": "1520", "name": "maximum-number-of-non-overlapping-substrings", "content": {"questionId": "1644", "questionFrontendId": "1520", "questionTitle": "Maximum Number of Non-Overlapping Substrings", "questionTitleSlug": "maximum-number-of-non-overlapping-substrings", "content": "<p>Given a string <code>s</code>&nbsp;of lowercase letters, you need to find the maximum number of <strong>non-empty</strong> substrings of&nbsp;<code>s</code>&nbsp;that meet the following conditions:</p>\n\n<ol>\n\t<li>The substrings do not overlap, that is for any two substrings <code>s[i..j]</code> and <code>s[k..l]</code>, either <code>j &lt; k</code> or <code>i &gt; l</code>&nbsp;is true.</li>\n\t<li>A substring that contains a certain character&nbsp;<code>c</code>&nbsp;must also contain all occurrences of <code>c</code>.</li>\n</ol>\n\n<p>Find <em>the maximum number of substrings that meet the above conditions</em>. If there are multiple solutions with the same number of substrings, <em>return the one with minimum total length.&nbsp;</em>It can be shown that there exists a unique solution of minimum total length.</p>\n\n<p>Notice that you can return the substrings in <strong>any</strong> order.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;adefaddaccc&quot;\n<strong>Output:</strong> [&quot;e&quot;,&quot;f&quot;,&quot;ccc&quot;]\n<b>Explanation:</b>&nbsp;The following are all the possible substrings that meet the conditions:\n[\n&nbsp; &quot;adefaddaccc&quot;\n&nbsp; &quot;adefadda&quot;,\n&nbsp; &quot;ef&quot;,\n&nbsp; &quot;e&quot;,\n  &quot;f&quot;,\n&nbsp; &quot;ccc&quot;,\n]\nIf we choose the first string, we cannot choose anything else and we&#39;d get only 1. If we choose &quot;adefadda&quot;, we are left with &quot;ccc&quot; which is the only one that doesn&#39;t overlap, thus obtaining 2 substrings. Notice also, that it&#39;s not optimal to choose &quot;ef&quot; since it can be split into two. Therefore, the optimal way is to choose [&quot;e&quot;,&quot;f&quot;,&quot;ccc&quot;] which gives us 3 substrings. No other solution of the same number of substrings exist.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abbaccd&quot;\n<strong>Output:</strong> [&quot;d&quot;,&quot;bb&quot;,&quot;cc&quot;]\n<b>Explanation: </b>Notice that while the set of substrings [&quot;d&quot;,&quot;abba&quot;,&quot;cc&quot;] also has length 3, it&#39;s considered incorrect since it has larger total length.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10^5</code></li>\n\t<li><code>s</code>&nbsp;contains only lowercase English letters.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"6.9K\", \"totalSubmission\": \"19.5K\", \"totalAcceptedRaw\": 6941, \"totalSubmissionRaw\": 19531, \"acRate\": \"35.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1515", "name": "best-position-for-a-service-centre", "content": {"questionId": "1638", "questionFrontendId": "1515", "questionTitle": "Best Position for a Service Centre", "questionTitleSlug": "best-position-for-a-service-centre", "content": "<p>A delivery company wants to build a new service centre in a new city. The company knows the positions of all the customers in this city on a 2D-Map and wants to build the new centre in a position such that <strong>the sum of the euclidean distances to all customers is minimum</strong>.</p>\n\n<p>Given an array <code>positions</code> where <code>positions[i] = [x<sub>i</sub>, y<sub>i</sub>]</code> is the position of the <code>ith</code> customer on the map, return <em>the minimum sum of the euclidean distances</em> to all customers.</p>\n\n<p>In other words, you need to choose the position of the service centre <code>[x<sub>centre</sub>, y<sub>centre</sub>]</code> such that the following formula is minimized:</p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/06/25/q4_edited.jpg\" />\n<p>Answers within&nbsp;<code>10^-5</code>&nbsp;of the actual value will be accepted.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/06/25/q4_e1.jpg\" style=\"width: 377px; height: 362px;\" />\n<pre>\n<strong>Input:</strong> positions = [[0,1],[1,0],[1,2],[2,1]]\n<strong>Output:</strong> 4.00000\n<strong>Explanation:</strong> As shown, you can see that choosing [x<sub>centre</sub>, y<sub>centre</sub>] = [1, 1] will make the distance to each customer = 1, the sum of all distances is 4 which is the minimum possible we can achieve.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/06/25/q4_e3.jpg\" style=\"width: 419px; height: 419px;\" />\n<pre>\n<strong>Input:</strong> positions = [[1,1],[3,3]]\n<strong>Output:</strong> 2.82843\n<strong>Explanation:</strong> The minimum possible sum of distances = sqrt(2) + sqrt(2) = 2.82843\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> positions = [[1,1]]\n<strong>Output:</strong> 0.00000\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> positions = [[1,1],[0,0],[2,0]]\n<strong>Output:</strong> 2.73205\n<strong>Explanation:</strong> At the first glance, you may think that locating the centre at [1, 0] will achieve the minimum sum, but locating it at [1, 0] will make the sum of distances = 3.\nTry to locate the centre at [1.0, 0.5773502711] you will see that the sum of distances is 2.73205.\nBe careful with the precision!\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> positions = [[0,1],[3,2],[4,5],[7,6],[8,9],[11,1],[2,12]]\n<strong>Output:</strong> 32.94036\n<strong>Explanation:</strong> You can use [4.3460852395, 4.9813795505] as the position of the centre.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;=&nbsp;positions.length &lt;= 50</code></li>\n\t<li><code>positions[i].length == 2</code></li>\n\t<li><code>0 &lt;=&nbsp;positions[i][0],&nbsp;positions[i][1] &lt;= 100</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.2K\", \"totalSubmission\": \"14.1K\", \"totalAcceptedRaw\": 5210, \"totalSubmissionRaw\": 14133, \"acRate\": \"36.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Geometry", "slug": "geometry"}]}}, {"id": "1531", "name": "string-compression-ii", "content": {"questionId": "1637", "questionFrontendId": "1531", "questionTitle": "String Compression II", "questionTitleSlug": "string-compression-ii", "content": "<p><a href=\"http://en.wikipedia.org/wiki/Run-length_encoding\">Run-length encoding</a> is a string compression method that works by&nbsp;replacing consecutive identical characters (repeated 2 or more times) with the concatenation of the character and the number marking the count of the characters (length of the run). For example, to compress the string&nbsp;<code>&quot;aabccc&quot;</code>&nbsp;we replace <font face=\"monospace\"><code>&quot;aa&quot;</code></font>&nbsp;by&nbsp;<font face=\"monospace\"><code>&quot;a2&quot;</code></font>&nbsp;and replace <font face=\"monospace\"><code>&quot;ccc&quot;</code></font>&nbsp;by&nbsp;<font face=\"monospace\"><code>&quot;c3&quot;</code></font>. Thus the compressed string becomes <font face=\"monospace\"><code>&quot;a2bc3&quot;</code>.</font></p>\n\n<p>Notice that in this problem, we are not adding&nbsp;<code>&#39;1&#39;</code>&nbsp;after single characters.</p>\n\n<p>Given a&nbsp;string <code>s</code>&nbsp;and an integer <code>k</code>. You need to delete <strong>at most</strong>&nbsp;<code>k</code> characters from&nbsp;<code>s</code>&nbsp;such that the run-length encoded version of <code>s</code>&nbsp;has minimum length.</p>\n\n<p>Find the <em>minimum length of the run-length encoded&nbsp;version of </em><code>s</code><em> after deleting at most </em><code>k</code><em> characters</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aaabcccd&quot;, k = 2\n<strong>Output:</strong> 4\n<b>Explanation: </b>Compressing s without deleting anything will give us &quot;a3bc3d&quot; of length 6. Deleting any of the characters &#39;a&#39; or &#39;c&#39; would at most decrease the length of the compressed string to 5, for instance delete 2 &#39;a&#39; then we will have s = &quot;abcccd&quot; which compressed is abc3d. Therefore, the optimal way is to delete &#39;b&#39; and &#39;d&#39;, then the compressed version of s will be &quot;a3c3&quot; of length 4.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aabbaa&quot;, k = 2\n<strong>Output:</strong> 2\n<b>Explanation: </b>If we delete both &#39;b&#39; characters, the resulting compressed string would be &quot;a4&quot; of length 2.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aaaaaaaaaaa&quot;, k = 0\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>Since k is zero, we cannot delete anything. The compressed string is &quot;a11&quot; of length 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= k &lt;= s.length</code></li>\n\t<li><code>s</code> contains only lowercase English letters.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.1K\", \"totalSubmission\": \"15.5K\", \"totalAcceptedRaw\": 5110, \"totalSubmissionRaw\": 15495, \"acRate\": \"33.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1526", "name": "minimum-number-of-increments-on-subarrays-to-form-a-target-array", "content": {"questionId": "1633", "questionFrontendId": "1526", "questionTitle": "Minimum Number of Increments on Subarrays to Form a Target Array", "questionTitleSlug": "minimum-number-of-increments-on-subarrays-to-form-a-target-array", "content": "<p>Given an array of positive integers <code>target</code> and an array <code>initial</code> of same size with all zeros.</p>\n\n<p>Return the minimum number of operations to form a <code>target</code> array from <code>initial</code>&nbsp;if you are allowed to do the following operation:</p>\n\n<ul>\n\t<li>Choose <strong>any</strong> subarray from <code>initial</code>&nbsp;and increment each value by one.</li>\n</ul>\nThe answer is guaranteed to fit within the range of a 32-bit signed integer.\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> target = [1,2,3,2,1]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>We need at least 3 operations to form the target array from the initial array.\n[0,0,0,0,0] increment 1 from index 0 to 4&nbsp;(inclusive).\n[1,1,1,1,1] increment 1 from index 1 to 3&nbsp;(inclusive).\n[1,2,2,2,1] increment 1 at index 2.\n[1,2,3,2,1] target array is formed.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> target = [3,1,1,2]\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>(initial)[0,0,0,0] -&gt; [1,1,1,1] -&gt; [1,1,1,2] -&gt; [2,1,1,2] -&gt; [3,1,1,2] (target).\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> target = [3,1,5,4,2]\n<strong>Output:</strong> 7\n<strong>Explanation: </strong>(initial)[0,0,0,0,0] -&gt; [1,1,1,1,1] -&gt; [2,1,1,1,1] -&gt; [3,1,1,1,1] \n                                  -&gt; [3,1,2,2,2] -&gt; [3,1,3,3,2] -&gt; [3,1,4,4,2] -&gt; [3,1,5,4,2] (target).\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> target = [1,1,1,1]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= target.length &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= target[i] &lt;= 10^5</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"6.9K\", \"totalSubmission\": \"11.5K\", \"totalAcceptedRaw\": 6865, \"totalSubmissionRaw\": 11523, \"acRate\": \"59.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Segment Tree", "slug": "segment-tree"}]}}, {"id": "1505", "name": "minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits", "content": {"questionId": "1629", "questionFrontendId": "1505", "questionTitle": "Minimum Possible Integer After at Most K Adjacent Swaps On Digits", "questionTitleSlug": "minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits", "content": "<p>Given a string <code>num</code> representing <strong>the digits</strong> of&nbsp;a very large integer and an integer <code>k</code>.</p>\n\n<p>You are allowed to swap any two adjacent digits of the integer <strong>at most</strong> <code>k</code> times.</p>\n\n<p>Return <em>the minimum integer</em> you can obtain also as a string.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/06/17/q4_1.jpg\" style=\"width: 500px; height: 40px;\" />\n<pre>\n<strong>Input:</strong> num = &quot;4321&quot;, k = 4\n<strong>Output:</strong> &quot;1342&quot;\n<strong>Explanation:</strong> The steps to obtain the minimum integer from 4321 with 4 adjacent swaps are shown.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = &quot;100&quot;, k = 1\n<strong>Output:</strong> &quot;010&quot;\n<strong>Explanation:</strong> It&#39;s ok for the output to have leading zeros, but the input is guaranteed not to have any leading zeros.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = &quot;36789&quot;, k = 1000\n<strong>Output:</strong> &quot;36789&quot;\n<strong>Explanation:</strong> We can keep the number without any swaps.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = &quot;22&quot;, k = 22\n<strong>Output:</strong> &quot;22&quot;\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = &quot;9438957234785635408&quot;, k = 23\n<strong>Output:</strong> &quot;0345989723478563548&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num.length &lt;= 30000</code></li>\n\t<li><code>num</code> contains <strong>digits</strong> only and doesn&#39;t have <strong>leading zeros</strong>.</li>\n\t<li><code>1 &lt;= k &lt;= 10^9</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"4.9K\", \"totalSubmission\": \"13.5K\", \"totalAcceptedRaw\": 4884, \"totalSubmissionRaw\": 13522, \"acRate\": \"36.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1479", "name": "sales-by-day-of-the-week", "content": {"questionId": "1623", "questionFrontendId": "1479", "questionTitle": "Sales by Day of the Week", "questionTitleSlug": "sales-by-day-of-the-week", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"4.3K\", \"totalSubmission\": \"5.2K\", \"totalAcceptedRaw\": 4338, \"totalSubmissionRaw\": 5167, \"acRate\": \"84.0%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1499", "name": "max-value-of-equation", "content": {"questionId": "1622", "questionFrontendId": "1499", "questionTitle": "Max Value of Equation", "questionTitleSlug": "max-value-of-equation", "content": "<p>Given an&nbsp;array <code>points</code> containing the coordinates of points on a 2D plane,&nbsp;sorted by the x-values, where <code>points[i] = [x<sub>i</sub>, y<sub>i</sub>]</code>&nbsp;such that&nbsp;<code>x<sub>i</sub> &lt; x<sub>j</sub></code> for all <code>1 &lt;= i &lt; j &lt;= points.length</code>. You are also given an integer&nbsp;<code>k</code>.</p>\n\n<p>Find the <em>maximum value of the equation </em><code>y<sub>i</sub>&nbsp;+ y<sub>j</sub>&nbsp;+ |x<sub>i</sub>&nbsp;- x<sub>j</sub>|</code>&nbsp;where <code>|x<sub>i</sub>&nbsp;- x<sub>j</sub>|&nbsp;&lt;= k</code>&nbsp;and <code>1 &lt;= i &lt; j &lt;= points.length</code>. It is guaranteed that there exists at least one pair of points that satisfy the constraint <code>|x<sub>i</sub>&nbsp;- x<sub>j</sub>|&nbsp;&lt;= k</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[1,3],[2,0],[5,10],[6,-10]], k = 1\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The first two points satisfy the condition |x<sub>i</sub>&nbsp;- x<sub>j</sub>| &lt;= 1 and if we calculate the equation we get 3 + 0 + |1 - 2| = 4. Third and fourth points also satisfy the condition and give a value of 10 + -10 + |5 - 6| = 1.\nNo other pairs satisfy the condition, so we return the max of 4 and 1.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[0,0],[3,0],[9,2]], k = 3\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>Only the first two points have an absolute difference of 3 or less in the x-values, and give the value of 0 + 0 + |0 - 3| = 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= points.length &lt;= 10^5</code></li>\n\t<li><code>points[i].length == 2</code></li>\n\t<li><code>-10^8&nbsp;&lt;= points[i][0], points[i][1] &lt;= 10^8</code></li>\n\t<li><code>0 &lt;= k &lt;= 2 * 10^8</code></li>\n\t<li><code>points[i][0] &lt; points[j][0]</code>&nbsp;for all&nbsp;<code>1 &lt;= i &lt; j &lt;= points.length</code></li>\n\t<li><code>x<sub>i</sub></code>&nbsp;form a strictly increasing sequence.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"6.9K\", \"totalSubmission\": \"15.3K\", \"totalAcceptedRaw\": 6911, \"totalSubmissionRaw\": 15285, \"acRate\": \"45.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "1510", "name": "stone-game-iv", "content": {"questionId": "1617", "questionFrontendId": "1510", "questionTitle": "Stone Game IV", "questionTitleSlug": "stone-game-iv", "content": "<p>Alice and Bob take turns playing a game, with Alice starting first.</p>\n\n<p>Initially, there are <code>n</code> stones in a pile.&nbsp; On each player&#39;s turn, that player makes a&nbsp;<em>move</em>&nbsp;consisting of removing <strong>any</strong> non-zero <strong>square number</strong> of stones in the pile.</p>\n\n<p>Also, if a player cannot make a move, he/she loses the game.</p>\n\n<p>Given a positive&nbsp;integer <code>n</code>.&nbsp;Return&nbsp;<code>True</code>&nbsp;if and only if Alice wins the game otherwise return <code>False</code>, assuming both players play optimally.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> true\n<strong>Explanation: </strong>Alice can remove 1 stone winning the game because Bob doesn&#39;t have any moves.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> false\n<strong>Explanation: </strong>Alice can only remove 1 stone, after that Bob removes the last one winning the game (2 -&gt; 1 -&gt; 0).</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4\n<strong>Output:</strong> true\n<strong>Explanation:</strong> n is already a perfect square, Alice can win with one move, removing 4 stones (4 -&gt; 0).\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 7\n<strong>Output:</strong> false\n<strong>Explanation: </strong>Alice can&#39;t win the game if Bob plays optimally.\nIf Alice starts removing 4 stones, Bob will remove 1 stone then Alice should remove only 1 stone and finally Bob removes the last one (7 -&gt; 3 -&gt; 2 -&gt; 1 -&gt; 0). \nIf Alice starts removing 1 stone, Bob will remove 4 stones then Alice only can remove 1 stone and finally Bob removes the last one (7 -&gt; 6 -&gt; 2 -&gt; 1 -&gt; 0).</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 17\n<strong>Output:</strong> false\n<strong>Explanation: </strong>Alice can&#39;t win the game if Bob plays optimally.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10^5</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"24.6K\", \"totalSubmission\": \"41.9K\", \"totalAcceptedRaw\": 24583, \"totalSubmissionRaw\": 41898, \"acRate\": \"58.7%\"}", "similarQuestions": "[{\"title\": \"Stone Game V\", \"titleSlug\": \"stone-game-v\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game VI\", \"titleSlug\": \"stone-game-vi\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stone Game VII\", \"titleSlug\": \"stone-game-vii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1489", "name": "find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree", "content": {"questionId": "1613", "questionFrontendId": "1489", "questionTitle": "Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree", "questionTitleSlug": "find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree", "content": "<p>Given a weighted undirected connected graph with <code>n</code>&nbsp;vertices numbered from <code>0</code> to <code>n - 1</code>,&nbsp;and an array <code>edges</code>&nbsp;where <code>edges[i] = [a<sub>i</sub>, b<sub>i</sub>, weight<sub>i</sub>]</code> represents a bidirectional and weighted edge between nodes&nbsp;<code>a<sub>i</sub></code>&nbsp;and <code>b<sub>i</sub></code>. A minimum spanning tree (MST) is a subset of the graph&#39;s edges that connects all vertices without cycles&nbsp;and with the minimum possible total edge weight.</p>\n\n<p>Find <em>all the critical and pseudo-critical edges in the given graph&#39;s minimum spanning tree (MST)</em>. An MST edge whose deletion from the graph would cause the MST weight to increase is called a&nbsp;<em>critical edge</em>. On&nbsp;the other hand, a pseudo-critical edge is that which can appear in some MSTs but not all.</p>\n\n<p>Note that you can return the indices of the edges in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/06/04/ex1.png\" style=\"width: 259px; height: 262px;\" /></p>\n\n<pre>\n<strong>Input:</strong> n = 5, edges = [[0,1,1],[1,2,1],[2,3,2],[0,3,2],[0,4,3],[3,4,3],[1,4,6]]\n<strong>Output:</strong> [[0,1],[2,3,4,5]]\n<strong>Explanation:</strong> The figure above describes the graph.\nThe following figure shows all the possible MSTs:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/06/04/msts.png\" style=\"width: 540px; height: 553px;\" />\nNotice that the two edges 0 and 1 appear in all MSTs, therefore they are critical edges, so we return them in the first list of the output.\nThe edges 2, 3, 4, and 5 are only part of some MSTs, therefore they are considered pseudo-critical edges. We add them to the second list of the output.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/06/04/ex2.png\" style=\"width: 247px; height: 253px;\" /></p>\n\n<pre>\n<strong>Input:</strong> n = 4, edges = [[0,1,1],[1,2,1],[2,3,1],[0,3,1]]\n<strong>Output:</strong> [[],[0,1,2,3]]\n<strong>Explanation:</strong> We can observe that since all 4 edges have equal weight, choosing any 3 edges from the given 4 will yield an MST. Therefore all 4 edges are pseudo-critical.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 100</code></li>\n\t<li><code>1 &lt;= edges.length &lt;= min(200, n * (n - 1) / 2)</code></li>\n\t<li><code>edges[i].length == 3</code></li>\n\t<li><code>0 &lt;= a<sub>i</sub> &lt; b<sub>i</sub> &lt; n</code></li>\n\t<li><code>1 &lt;= weight<sub>i</sub>&nbsp;&lt;= 1000</code></li>\n\t<li>All pairs <code>(a<sub>i</sub>, b<sub>i</sub>)</code> are <strong>distinct</strong>.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"3.9K\", \"totalSubmission\": \"7.5K\", \"totalAcceptedRaw\": 3923, \"totalSubmissionRaw\": 7502, \"acRate\": \"52.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Union Find", "slug": "union-find"}]}}, {"id": "1494", "name": "parallel-courses-ii", "content": {"questionId": "1587", "questionFrontendId": "1494", "questionTitle": "Parallel Courses II", "questionTitleSlug": "parallel-courses-ii", "content": "<p>Given the integer <code>n</code> representing the number of courses at some university labeled from <code>1</code> to <code>n</code>, and the array <code>dependencies</code> where <code>dependencies[i] = [x<sub>i</sub>, y<sub>i</sub>]</code> &nbsp;represents a prerequisite relationship, that is, the course <code>x<sub>i</sub></code>&nbsp;must be taken before the course <code>y<sub>i</sub></code>. &nbsp;Also, you are given the&nbsp;integer <code>k</code>.</p>\n\n<p>In one semester you can take <strong>at most</strong> <code>k</code> courses as long as you have taken all the prerequisites for the courses you are taking.</p>\n\n<p><em>Return the minimum number of semesters to take all courses</em>.&nbsp;It is guaranteed that you can take all courses in some way.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/05/22/leetcode_parallel_courses_1.png\" style=\"width: 300px; height: 164px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, dependencies = [[2,1],[3,1],[1,4]], k = 2\n<strong>Output:</strong> 3 \n<strong>Explanation:</strong> The figure above represents the given graph. In this case we can take courses 2 and 3 in the first semester, then take course 1 in the second semester and finally take course 4 in the third semester.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/05/22/leetcode_parallel_courses_2.png\" style=\"width: 300px; height: 234px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5, dependencies = [[2,1],[3,1],[4,1],[1,5]], k = 2\n<strong>Output:</strong> 4 \n<strong>Explanation:</strong> The figure above represents the given graph. In this case one optimal way to take all courses is: take courses 2 and 3 in the first semester and take course 4 in the second semester, then take course 1 in the third semester and finally take course 5 in the fourth semester.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 11, dependencies = [], k = 2\n<strong>Output:</strong> 6\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 15</code></li>\n\t<li><code>1 &lt;= k &lt;= n</code></li>\n\t<li><code>0 &lt;=&nbsp;dependencies.length &lt;= n * (n-1) / 2</code></li>\n\t<li><code>dependencies[i].length == 2</code></li>\n\t<li><code>1 &lt;= x<sub>i</sub>, y<sub>i</sub>&nbsp;&lt;= n</code></li>\n\t<li><code>x<sub>i</sub> != y<sub>i</sub></code></li>\n\t<li>All prerequisite relationships are distinct, that is, <code>dependencies[i] != dependencies[j]</code>.</li>\n\t<li>The given graph is a directed acyclic graph.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.5K\", \"totalSubmission\": \"17.7K\", \"totalAcceptedRaw\": 5480, \"totalSubmissionRaw\": 17674, \"acRate\": \"31.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Graph", "slug": "graph"}]}}, {"id": "1473", "name": "paint-house-iii", "content": {"questionId": "1583", "questionFrontendId": "1473", "questionTitle": "Paint House III", "questionTitleSlug": "paint-house-iii", "content": "<p>There is&nbsp;a row of&nbsp;<code>m</code>&nbsp;houses in a small city, each house must be painted with one of the&nbsp;<code>n</code>&nbsp;colors (labeled from 1 to <code>n</code>), some houses that has been painted last summer should not be painted again.</p>\n\n<p>A neighborhood is a maximal group of continuous houses that are painted with the same color. (For example: houses = [1,2,2,3,3,2,1,1] contains 5 neighborhoods&nbsp; [{1}, {2,2}, {3,3}, {2}, {1,1}]).</p>\n\n<p>Given an array <code>houses</code>, an&nbsp;<code>m * n</code>&nbsp;matrix <code>cost</code> and&nbsp;an integer <code><font face=\"monospace\">target</font></code>&nbsp;where:</p>\n\n<ul>\n\t<li><code>houses[i]</code>:&nbsp;is the color of the house <code>i</code>, <strong>0</strong> if the house is not painted yet.</li>\n\t<li><code>cost[i][j]</code>: is the cost of paint the house <code>i</code> with the color <code>j+1</code>.</li>\n</ul>\n\n<p>Return the minimum cost of painting all the&nbsp;remaining houses in such a way that there are exactly <code>target</code> neighborhoods, if&nbsp;not possible return <strong>-1</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> houses = [0,0,0,0,0], cost = [[1,10],[10,1],[10,1],[1,10],[5,1]], m = 5, n = 2, target = 3\n<strong>Output:</strong> 9\n<strong>Explanation:</strong> Paint houses of this way [1,2,2,1,1]\nThis array contains target = 3 neighborhoods, [{1}, {2,2}, {1,1}].\nCost of paint all houses (1 + 1 + 1 + 1 + 5) = 9.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> houses = [0,2,1,2,0], cost = [[1,10],[10,1],[10,1],[1,10],[5,1]], m = 5, n = 2, target = 3\n<strong>Output:</strong> 11\n<strong>Explanation:</strong> Some houses are already painted, Paint the houses of this way [2,2,1,2,2]\nThis array contains target = 3 neighborhoods, [{2,2}, {1}, {2,2}]. \nCost of paint the first and last house (10 + 1) = 11.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> houses = [0,0,0,0,0], cost = [[1,10],[10,1],[1,10],[10,1],[1,10]], m = 5, n = 2, target = 5\n<strong>Output:</strong> 5\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> houses = [3,1,2,3], cost = [[1,1,1],[1,1,1],[1,1,1],[1,1,1]], m = 4, n = 3, target = 3\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> Houses are already painted with a total of 4 neighborhoods [{3},{1},{2},{3}] different of target = 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == houses.length == cost.length</code></li>\n\t<li><code>n == cost[i].length</code></li>\n\t<li><code>1 &lt;= m &lt;= 100</code></li>\n\t<li><code>1 &lt;= n &lt;= 20</code></li>\n\t<li><code>1 &lt;= target&nbsp;&lt;= m</code></li>\n\t<li><code>0 &lt;= houses[i]&nbsp;&lt;= n</code></li>\n\t<li><code>1 &lt;= cost[i][j] &lt;= 10^4</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"7.9K\", \"totalSubmission\": \"16.2K\", \"totalAcceptedRaw\": 7921, \"totalSubmissionRaw\": 16238, \"acRate\": \"48.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1467", "name": "probability-of-a-two-boxes-having-the-same-number-of-distinct-balls", "content": {"questionId": "1577", "questionFrontendId": "1467", "questionTitle": "Probability of a Two Boxes Having The Same Number of Distinct Balls", "questionTitleSlug": "probability-of-a-two-boxes-having-the-same-number-of-distinct-balls", "content": "<p>Given <code>2n</code> balls of <code>k</code> distinct colors. You will be given an integer array <code>balls</code> of size <code>k</code> where <code>balls[i]</code> is the number of balls of color <code>i</code>.&nbsp;</p>\n\n<p>All the balls will be <strong>shuffled uniformly at random</strong>,&nbsp;then we will distribute the first <code>n</code> balls to the first box and the remaining <code>n</code> balls to the other box (Please read the explanation of the second example carefully).</p>\n\n<p>Please note that the two boxes are considered different. For example, if we have two balls of colors <code>a</code> and <code>b</code>, and two boxes <code>[]</code> and <code>()</code>, then the distribution <code>[a] (b)</code> is considered different than the distribution <code>[b] (a)&nbsp;</code>(Please read the explanation of the first&nbsp;example carefully).</p>\n\n<p>We want to <em>calculate the probability</em> that the two boxes have the same number of distinct balls.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> balls = [1,1]\n<strong>Output:</strong> 1.00000\n<strong>Explanation:</strong> Only 2 ways to divide the balls equally:\n- A ball of color 1 to box 1 and a ball of color 2 to box 2\n- A ball of color 2 to box 1 and a ball of color 1 to box 2\nIn both ways, the number of distinct colors in each box is equal. The probability is 2/2 = 1\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> balls = [2,1,1]\n<strong>Output:</strong> 0.66667\n<strong>Explanation:</strong> We have the set of balls [1, 1, 2, 3]\nThis set of balls will be shuffled randomly and we may have one of the 12 distinct shuffles with equale probability (i.e. 1/12):\n[1,1 / 2,3], [1,1 / 3,2], [1,2 / 1,3], [1,2 / 3,1], [1,3 / 1,2], [1,3 / 2,1], [2,1 / 1,3], [2,1 / 3,1], [2,3 / 1,1], [3,1 / 1,2], [3,1 / 2,1], [3,2 / 1,1]\nAfter that we add the first two balls to the first box and the second two balls to the second box.\nWe can see that 8 of these 12 possible random distributions have the same number of distinct colors of balls in each box.\nProbability is 8/12 = 0.66667\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> balls = [1,2,1,2]\n<strong>Output:</strong> 0.60000\n<strong>Explanation:</strong> The set of balls is [1, 2, 2, 3, 4, 4]. It is hard to display all the 180 possible random shuffles of this set but it is easy to check that 108 of them will have the same number of distinct colors in each box.\nProbability = 108 / 180 = 0.6\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> balls = [3,2,1]\n<strong>Output:</strong> 0.30000\n<strong>Explanation:</strong> The set of balls is [1, 1, 1, 2, 2, 3]. It is hard to display all the 60 possible random shuffles of this set but it is easy to check that 18 of them will have the same number of distinct colors in each box.\nProbability = 18 / 60 = 0.3\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> balls = [6,6,6,6,6,6]\n<strong>Output:</strong> 0.90327\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= balls.length &lt;= 8</code></li>\n\t<li><code>1 &lt;= balls[i] &lt;= 6</code></li>\n\t<li><code>sum(balls)</code> is even.</li>\n\t<li>Answers within <code>10^-5</code> of the actual value will be accepted as correct.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"4.6K\", \"totalSubmission\": \"7.5K\", \"totalAcceptedRaw\": 4580, \"totalSubmissionRaw\": 7516, \"acRate\": \"60.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "1478", "name": "allocate-mailboxes", "content": {"questionId": "1571", "questionFrontendId": "1478", "questionTitle": "Allocate Mailboxes", "questionTitleSlug": "allocate-mailboxes", "content": "<p>Given the array <code>houses</code> and an integer <code>k</code>. where <code>houses[i]</code> is the location of the ith house along a street, your task is to allocate <code>k</code> mailboxes in&nbsp;the street.</p>\r\n\r\n<p>Return the <strong>minimum</strong> total distance between each house and its nearest mailbox.</p>\r\n\r\n<p>The answer is guaranteed to fit in a 32-bit signed integer.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/05/07/sample_11_1816.png\" style=\"width: 454px; height: 154px;\" /></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> houses = [1,4,8,10,20], k = 3\r\n<strong>Output:</strong> 5\r\n<strong>Explanation: </strong>Allocate mailboxes in position 3, 9 and 20.\r\nMinimum total distance from each houses to nearest mailboxes is |3-1| + |4-3| + |9-8| + |10-9| + |20-20| = 5 \r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/05/07/sample_2_1816.png\" style=\"width: 433px; height: 154px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> houses = [2,3,5,12,18], k = 2\r\n<strong>Output:</strong> 9\r\n<strong>Explanation: </strong>Allocate mailboxes in position 3 and 14.\r\nMinimum total distance from each houses to nearest mailboxes is |2-3| + |3-3| + |5-3| + |12-14| + |18-14| = 9.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> houses = [7,4,6,1], k = 1\r\n<strong>Output:</strong> 8\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> houses = [3,6,14,10], k = 4\r\n<strong>Output:</strong> 0\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>n == houses.length</code></li>\r\n\t<li><code>1 &lt;= n&nbsp;&lt;= 100</code></li>\r\n\t<li><code>1 &lt;= houses[i] &lt;= 10^4</code></li>\r\n\t<li><code>1 &lt;= k &lt;= n</code></li>\r\n\t<li>Array <code>houses</code> contain unique integers.</li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"6.4K\", \"totalSubmission\": \"11.8K\", \"totalAcceptedRaw\": 6414, \"totalSubmissionRaw\": 11776, \"acRate\": \"54.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1458", "name": "max-dot-product-of-two-subsequences", "content": {"questionId": "1569", "questionFrontendId": "1458", "questionTitle": "Max Dot Product of Two Subsequences", "questionTitleSlug": "max-dot-product-of-two-subsequences", "content": "<p>Given two arrays <code>nums1</code>&nbsp;and <code><font face=\"monospace\">nums2</font></code><font face=\"monospace\">.</font></p>\n\n<p>Return the maximum dot product&nbsp;between&nbsp;<strong>non-empty</strong> subsequences of nums1 and nums2 with the same length.</p>\n\n<p>A subsequence of a array is a new array which is formed from the original array by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie,&nbsp;<code>[2,3,5]</code>&nbsp;is a subsequence of&nbsp;<code>[1,2,3,4,5]</code>&nbsp;while <code>[1,5,3]</code>&nbsp;is not).</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [2,1,-2,5], nums2 = [3,0,-6]\n<strong>Output:</strong> 18\n<strong>Explanation:</strong> Take subsequence [2,-2] from nums1 and subsequence [3,-6] from nums2.\nTheir dot product is (2*3 + (-2)*(-6)) = 18.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [3,-2], nums2 = [2,-6,7]\n<strong>Output:</strong> 21\n<strong>Explanation:</strong> Take subsequence [3] from nums1 and subsequence [7] from nums2.\nTheir dot product is (3*7) = 21.</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [-1,-1], nums2 = [1,1]\n<strong>Output:</strong> -1\n<strong>Explanation: </strong>Take subsequence [-1] from nums1 and subsequence [1] from nums2.\nTheir dot product is -1.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums1.length, nums2.length &lt;= 500</code></li>\n\t<li><code>-1000 &lt;= nums1[i], nums2[i] &lt;= 1000</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"11.6K\", \"totalSubmission\": \"27K\", \"totalAcceptedRaw\": 11550, \"totalSubmissionRaw\": 27011, \"acRate\": \"42.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1453", "name": "maximum-number-of-darts-inside-of-a-circular-dartboard", "content": {"questionId": "1563", "questionFrontendId": "1453", "questionTitle": "Maximum Number of Darts Inside of a Circular Dartboard", "questionTitleSlug": "maximum-number-of-darts-inside-of-a-circular-dartboard", "content": "<p>You have a very large square wall and a circular dartboard placed on the wall.&nbsp;You have been challenged to throw darts into the board blindfolded.&nbsp;Darts thrown at the wall are represented as an array of&nbsp;<code>points</code> on a 2D plane.&nbsp;</p>\r\n\r\n<p>Return&nbsp;the maximum number of points that are within or&nbsp;lie&nbsp;on&nbsp;<strong>any</strong> circular dartboard of radius&nbsp;<code>r</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/29/sample_1_1806.png\" style=\"width: 186px; height: 159px;\" /></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> points = [[-2,0],[2,0],[0,2],[0,-2]], r = 2\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> Circle dartboard with center in (0,0) and radius = 2 contain all points.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/29/sample_2_1806.png\" style=\"width: 224px; height: 183px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> points = [[-3,0],[3,0],[2,6],[5,4],[0,9],[7,8]], r = 5\r\n<strong>Output:</strong> 5\r\n<strong>Explanation:</strong> Circle dartboard with center in (0,4) and radius = 5 contain all points except the point (7,8).\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> points = [[-2,0],[2,0],[0,2],[0,-2]], r = 1\r\n<strong>Output:</strong> 1\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> points = [[1,2],[3,5],[1,-1],[2,3],[4,1],[1,3]], r = 2\r\n<strong>Output:</strong> 4\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= points.length &lt;= 100</code></li>\r\n\t<li><code>points[i].length == 2</code></li>\r\n\t<li><code>-10^4 &lt;= points[i][0], points[i][1] &lt;= 10^4</code></li>\r\n\t<li><code>1 &lt;= r &lt;= 5000</code></li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"3.6K\", \"totalSubmission\": \"10.4K\", \"totalAcceptedRaw\": 3643, \"totalSubmissionRaw\": 10425, \"acRate\": \"34.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Geometry", "slug": "geometry"}]}}, {"id": "1463", "name": "cherry-pickup-ii", "content": {"questionId": "1559", "questionFrontendId": "1463", "questionTitle": "Cherry Pickup II", "questionTitleSlug": "cherry-pickup-ii", "content": "<p>Given a <code>rows x cols</code> matrix <code>grid</code> representing a field of cherries.&nbsp;Each cell in&nbsp;<code>grid</code>&nbsp;represents the number of cherries that you can collect.</p>\n\n<p>You have two&nbsp;robots that can collect cherries for you, Robot #1 is located at the top-left corner (0,0) , and Robot #2 is located at the top-right corner (0, cols-1) of the grid.</p>\n\n<p>Return the maximum number of cherries collection using both robots&nbsp; by following the rules below:</p>\n\n<ul>\n\t<li>From a cell (i,j), robots can move to cell (i+1, j-1) , (i+1, j) or (i+1, j+1).</li>\n\t<li>When any robot is passing through a cell, It picks it up all cherries, and the cell becomes an empty cell (0).</li>\n\t<li>When both robots stay on the same cell, only one of them takes the cherries.</li>\n\t<li>Both robots cannot move outside of the grid at&nbsp;any moment.</li>\n\t<li>Both robots should reach the bottom row in the <code>grid</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/29/sample_1_1802.png\" style=\"width: 139px; height: 182px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[3,1,1],[2,5,1],[1,5,5],[2,1,1]]\n<strong>Output:</strong> 24\n<strong>Explanation:</strong>&nbsp;Path of robot #1 and #2 are described in color green and blue respectively.\nCherries taken by Robot #1, (3 + 2 + 5 + 2) = 12.\nCherries taken by Robot #2, (1 + 5 + 5 + 1) = 12.\nTotal of cherries: 12 + 12 = 24.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/23/sample_2_1802.png\" style=\"width: 284px; height: 257px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,0,0,0,0,0,1],[2,0,0,0,0,3,0],[2,0,9,0,0,0,0],[0,3,0,5,4,0,0],[1,0,2,3,0,0,6]]\n<strong>Output:</strong> 28\n<strong>Explanation:</strong>&nbsp;Path of robot #1 and #2 are described in color green and blue respectively.\nCherries taken by Robot #1, (1 + 9 + 5 + 2) = 17.\nCherries taken by Robot #2, (1 + 3 + 4 + 3) = 11.\nTotal of cherries: 17 + 11 = 28.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,0,0,3],[0,0,0,3],[0,0,3,3],[9,0,3,3]]\n<strong>Output:</strong> 22\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,1],[1,1]]\n<strong>Output:</strong> 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>rows == grid.length</code></li>\n\t<li><code>cols == grid[i].length</code></li>\n\t<li><code>2 &lt;= rows, cols &lt;= 70</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 100&nbsp;</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"23.2K\", \"totalSubmission\": \"33.4K\", \"totalAcceptedRaw\": 23167, \"totalSubmissionRaw\": 33352, \"acRate\": \"69.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1444", "name": "number-of-ways-of-cutting-a-pizza", "content": {"questionId": "1555", "questionFrontendId": "1444", "questionTitle": "Number of Ways of Cutting a Pizza", "questionTitleSlug": "number-of-ways-of-cutting-a-pizza", "content": "<p>Given a rectangular pizza represented as a <code>rows x cols</code>&nbsp;matrix containing the following characters: <code>&#39;A&#39;</code> (an apple) and <code>&#39;.&#39;</code> (empty cell) and given the integer <code>k</code>. You have to cut the pizza into <code>k</code> pieces using <code>k-1</code> cuts.&nbsp;</p>\r\n\r\n<p>For each cut you choose the direction: vertical or horizontal, then you choose a cut position at the cell boundary and cut the pizza into two pieces. If you cut the pizza vertically, give the left part of the pizza to a person. If you cut the pizza horizontally, give the upper part of the pizza to a person. Give the last piece of pizza to the last person.</p>\r\n\r\n<p><em>Return the number of ways of cutting the pizza such that each piece contains <strong>at least</strong> one apple.&nbsp;</em>Since the answer can be a huge number, return this modulo 10^9 + 7.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/23/ways_to_cut_apple_1.png\" style=\"width: 500px; height: 378px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> pizza = [&quot;A..&quot;,&quot;AAA&quot;,&quot;...&quot;], k = 3\r\n<strong>Output:</strong> 3 \r\n<strong>Explanation:</strong> The figure above shows the three ways to cut the pizza. Note that pieces must contain at least one apple.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> pizza = [&quot;A..&quot;,&quot;AA.&quot;,&quot;...&quot;], k = 3\r\n<strong>Output:</strong> 1\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> pizza = [&quot;A..&quot;,&quot;A..&quot;,&quot;...&quot;], k = 1\r\n<strong>Output:</strong> 1\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= rows, cols &lt;= 50</code></li>\r\n\t<li><code>rows ==&nbsp;pizza.length</code></li>\r\n\t<li><code>cols ==&nbsp;pizza[i].length</code></li>\r\n\t<li><code>1 &lt;= k &lt;= 10</code></li>\r\n\t<li><code>pizza</code> consists of characters <code>&#39;A&#39;</code>&nbsp;and <code>&#39;.&#39;</code> only.</li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"7.6K\", \"totalSubmission\": \"14.2K\", \"totalAcceptedRaw\": 7599, \"totalSubmissionRaw\": 14181, \"acRate\": \"53.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1439", "name": "find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows", "content": {"questionId": "1550", "questionFrontendId": "1439", "questionTitle": "Find the Kth Smallest Sum of a Matrix With Sorted Rows", "questionTitleSlug": "find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows", "content": "<p>You are given an&nbsp;<code>m&nbsp;* n</code>&nbsp;matrix,&nbsp;<code>mat</code>, and an integer <code>k</code>,&nbsp;which&nbsp;has its rows sorted in non-decreasing&nbsp;order.</p>\n\n<p>You are allowed to choose exactly 1 element from each row to form an array.&nbsp;Return the Kth <strong>smallest</strong> array sum among all possible arrays.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> mat = [[1,3,11],[2,4,6]], k = 5\n<strong>Output:</strong> 7\n<strong>Explanation: </strong>Choosing one element from each row, the first k smallest sum are:\n[1,2], [1,4], [3,2], [3,4], [1,6]. Where the 5th sum is 7.  </pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> mat = [[1,3,11],[2,4,6]], k = 9\n<strong>Output:</strong> 17\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> mat = [[1,10,10],[1,4,5],[2,3,6]], k = 7\n<strong>Output:</strong> 9\n<strong>Explanation:</strong> Choosing one element from each row, the first k smallest sum are:\n[1,1,2], [1,1,3], [1,4,2], [1,4,3], [1,1,6], [1,5,2], [1,5,3]. Where the 7th sum is 9.  \n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> mat = [[1,1,10],[2,2,9]], k = 7\n<strong>Output:</strong> 12\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == mat.length</code></li>\n\t<li><code>n == mat.length[i]</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 40</code></li>\n\t<li><code>1 &lt;= k &lt;= min(200, n ^&nbsp;m)</code></li>\n\t<li><code>1 &lt;= mat[i][j] &lt;= 5000</code></li>\n\t<li><code>mat[i]</code> is a non decreasing array.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"12.1K\", \"totalSubmission\": \"20.3K\", \"totalAcceptedRaw\": 12146, \"totalSubmissionRaw\": 20298, \"acRate\": \"59.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Heap", "slug": "heap"}]}}, {"id": "1412", "name": "find-the-quiet-students-in-all-exams", "content": {"questionId": "1546", "questionFrontendId": "1412", "questionTitle": "Find the Quiet Students in All Exams", "questionTitleSlug": "find-the-quiet-students-in-all-exams", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.5K\", \"totalSubmission\": \"8.4K\", \"totalAcceptedRaw\": 5532, \"totalSubmissionRaw\": 8445, \"acRate\": \"65.5%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1449", "name": "form-largest-integer-with-digits-that-add-up-to-target", "content": {"questionId": "1545", "questionFrontendId": "1449", "questionTitle": "Form Largest Integer With Digits That Add up to Target", "questionTitleSlug": "form-largest-integer-with-digits-that-add-up-to-target", "content": "<p>Given an array of integers <code>cost</code> and an integer <code>target</code>. Return the <strong>maximum</strong> integer you can paint&nbsp;under the following rules:</p>\n\n<ul>\n\t<li>The cost of painting a&nbsp;digit (i+1) is given by&nbsp;<code>cost[i]</code>&nbsp;(0 indexed).</li>\n\t<li>The total cost used must&nbsp;be equal to <code>target</code>.</li>\n\t<li>Integer does not have digits 0.</li>\n</ul>\n\n<p>Since the answer may be too large, return it as string.</p>\n\n<p>If there is no way to paint any integer given the condition, return &quot;0&quot;.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> cost = [4,3,2,5,6,7,2,5,5], target = 9\n<strong>Output:</strong> &quot;7772&quot;\n<strong>Explanation: </strong> The cost to paint the digit &#39;7&#39; is 2, and the digit &#39;2&#39; is 3. Then cost(&quot;7772&quot;) = 2*3+ 3*1 = 9. You could also paint &quot;977&quot;, but &quot;7772&quot; is the largest number.\n<strong>Digit    cost</strong>\n  1  -&gt;   4\n  2  -&gt;   3\n  3  -&gt;   2\n  4  -&gt;   5\n  5  -&gt;   6\n  6  -&gt;   7\n  7  -&gt;   2\n  8  -&gt;   5\n  9  -&gt;   5\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> cost = [7,6,5,5,5,6,8,7,8], target = 12\n<strong>Output:</strong> &quot;85&quot;\n<strong>Explanation:</strong> The cost to paint the digit &#39;8&#39; is 7, and the digit &#39;5&#39; is 5. Then cost(&quot;85&quot;) = 7 + 5 = 12.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> cost = [2,4,6,2,4,6,4,4,4], target = 5\n<strong>Output:</strong> &quot;0&quot;\n<strong>Explanation:</strong> It&#39;s not possible to paint any integer with total cost equal to target.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> cost = [6,10,15,40,40,40,40,40,40], target = 47\n<strong>Output:</strong> &quot;32211&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>cost.length == 9</code></li>\n\t<li><code>1 &lt;= cost[i] &lt;= 5000</code></li>\n\t<li><code>1 &lt;= target &lt;= 5000</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"8.1K\", \"totalSubmission\": \"18.5K\", \"totalAcceptedRaw\": 8055, \"totalSubmissionRaw\": 18492, \"acRate\": \"43.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1420", "name": "build-array-where-you-can-find-the-maximum-exactly-k-comparisons", "content": {"questionId": "1535", "questionFrontendId": "1420", "questionTitle": "Build Array Where You Can Find The Maximum Exactly K Comparisons", "questionTitleSlug": "build-array-where-you-can-find-the-maximum-exactly-k-comparisons", "content": "<p>Given three integers <code>n</code>, <code>m</code> and <code>k</code>. Consider the following algorithm to find the maximum element of an array of positive integers:</p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/02/e.png\" style=\"width: 424px; height: 372px;\" />\r\n<p>You should build the array arr which has the following properties:</p>\r\n\r\n<ul>\r\n\t<li><code>arr</code> has exactly <code>n</code> integers.</li>\r\n\t<li><code>1 &lt;= arr[i] &lt;= m</code> where <code>(0 &lt;= i &lt; n)</code>.</li>\r\n\t<li>After applying the mentioned algorithm to <code>arr</code>, the value <code>search_cost</code> is equal to <code>k</code>.</li>\r\n</ul>\r\n\r\n<p>Return <em>the number of ways</em> to build the array <code>arr</code> under the mentioned conditions.&nbsp;As the answer may grow large, the answer&nbsp;<strong>must be</strong>&nbsp;computed modulo&nbsp;<code>10^9 + 7</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 2, m = 3, k = 1\r\n<strong>Output:</strong> 6\r\n<strong>Explanation:</strong> The possible arrays are [1, 1], [2, 1], [2, 2], [3, 1], [3, 2] [3, 3]\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 5, m = 2, k = 3\r\n<strong>Output:</strong> 0\r\n<strong>Explanation:</strong> There are no possible arrays that satisify the mentioned conditions.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 9, m = 1, k = 1\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong> The only possible array is [1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 50, m = 100, k = 25\r\n<strong>Output:</strong> 34549172\r\n<strong>Explanation:</strong> Don&#39;t forget to compute the answer modulo 1000000007\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 37, m = 17, k = 7\r\n<strong>Output:</strong> 418930126\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= n &lt;= 50</code></li>\r\n\t<li><code>1 &lt;= m &lt;= 100</code></li>\r\n\t<li><code>0 &lt;= k &lt;= n</code></li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"6.6K\", \"totalSubmission\": \"10.3K\", \"totalAcceptedRaw\": 6602, \"totalSubmissionRaw\": 10276, \"acRate\": \"64.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1434", "name": "number-of-ways-to-wear-different-hats-to-each-other", "content": {"questionId": "1531", "questionFrontendId": "1434", "questionTitle": "Number of Ways to Wear Different Hats to Each Other", "questionTitleSlug": "number-of-ways-to-wear-different-hats-to-each-other", "content": "<p>There are&nbsp;<code>n</code> people&nbsp;and 40 types of hats labeled from 1 to 40.</p>\r\n\r\n<p>Given a list of list of integers <code>hats</code>, where <code>hats[i]</code>&nbsp;is a list of all hats preferred&nbsp;by the <code data-stringify-type=\"code\">i-th</code> person.</p>\r\n\r\n<p>Return the number of ways that the n people wear different hats to each other.</p>\r\n\r\n<p>Since the answer&nbsp;may be too large,&nbsp;return it modulo&nbsp;<code>10^9 + 7</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> hats = [[3,4],[4,5],[5]]\r\n<strong>Output:</strong> 1\r\n<strong>Explanation: </strong>There is only one way to choose hats given the conditions. \r\nFirst person choose hat 3, Second person choose hat 4 and last one hat 5.</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> hats = [[3,5,1],[3,5]]\r\n<strong>Output:</strong> 4\r\n<strong>Explanation: </strong>There are 4 ways to choose hats\r\n(3,5), (5,3), (1,3) and (1,5)\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> hats = [[1,2,3,4],[1,2,3,4],[1,2,3,4],[1,2,3,4]]\r\n<strong>Output:</strong> 24\r\n<strong>Explanation: </strong>Each person can choose hats labeled from 1 to 4.\r\nNumber of Permutations of (1,2,3,4) = 24.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> hats = [[1,2,3],[2,3,5,6],[1,3,7,9],[1,8,9],[2,5,7]]\r\n<strong>Output:</strong> 111\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>n == hats.length</code></li>\r\n\t<li><code>1 &lt;= n &lt;= 10</code></li>\r\n\t<li><code>1 &lt;= hats[i].length &lt;= 40</code></li>\r\n\t<li><code>1 &lt;= hats[i][j] &lt;= 40</code></li>\r\n\t<li><code>hats[i]</code> contains a list of <strong>unique</strong> integers.</li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.5K\", \"totalSubmission\": \"14.1K\", \"totalAcceptedRaw\": 5530, \"totalSubmissionRaw\": 14127, \"acRate\": \"39.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "1411", "name": "number-of-ways-to-paint-n-3-grid", "content": {"questionId": "1527", "questionFrontendId": "1411", "questionTitle": "Number of Ways to Paint N \u00d7 3 Grid", "questionTitleSlug": "number-of-ways-to-paint-n-3-grid", "content": "<p>You have a <code>grid</code> of size <code>n x 3</code> and you want to paint each cell of the grid with exactly&nbsp;one of the three colours: <strong>Red</strong>, <strong>Yellow</strong> or <strong>Green</strong>&nbsp;while making sure that no two adjacent cells have&nbsp;the same colour (i.e no two cells that share vertical or horizontal sides have the same colour).</p>\r\n\r\n<p>You are given <code>n</code> the number of rows of the grid.</p>\r\n\r\n<p>Return <em>the number of ways</em> you can paint this <code>grid</code>. As the answer may grow large, the answer <strong>must be</strong> computed modulo&nbsp;<code>10^9 + 7</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 1\r\n<strong>Output:</strong> 12\r\n<strong>Explanation:</strong> There are 12 possible way to paint the grid as shown:\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/03/26/e1.png\" style=\"width: 450px; height: 289px;\" />\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 2\r\n<strong>Output:</strong> 54\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 3\r\n<strong>Output:</strong> 246\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 7\r\n<strong>Output:</strong> 106494\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 5000\r\n<strong>Output:</strong> 30228214\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>n == grid.length</code></li>\r\n\t<li><code>grid[i].length == 3</code></li>\r\n\t<li><code>1 &lt;= n &lt;= 5000</code></li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"13.3K\", \"totalSubmission\": \"22K\", \"totalAcceptedRaw\": 13299, \"totalSubmissionRaw\": 21962, \"acRate\": \"60.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1406", "name": "stone-game-iii", "content": {"questionId": "1522", "questionFrontendId": "1406", "questionTitle": "Stone Game III", "questionTitleSlug": "stone-game-iii", "content": "<p>Alice and Bob continue their&nbsp;games with piles of stones. There are several stones&nbsp;<strong>arranged in a row</strong>, and each stone has an associated&nbsp;value which is an integer given in the array&nbsp;<code>stoneValue</code>.</p>\r\n\r\n<p>Alice and Bob take turns, with <strong>Alice</strong> starting first. On each player&#39;s turn, that player&nbsp;can take <strong>1, 2 or 3 stones</strong>&nbsp;from&nbsp;the <strong>first</strong> remaining stones in the row.</p>\r\n\r\n<p>The score of each player is the sum of values of the stones taken. The score of each player is <strong>0</strong>&nbsp;initially.</p>\r\n\r\n<p>The objective of the game is to end with the highest score, and the winner is the player with the highest score and there could be a tie. The game continues until all the stones have been taken.</p>\r\n\r\n<p>Assume&nbsp;Alice&nbsp;and Bob&nbsp;<strong>play optimally</strong>.</p>\r\n\r\n<p>Return <em>&quot;Alice&quot;</em> if&nbsp;Alice will win, <em>&quot;Bob&quot;</em> if Bob will win or <em>&quot;Tie&quot;</em> if they end the game with the same score.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> values = [1,2,3,7]\r\n<strong>Output:</strong> &quot;Bob&quot;\r\n<strong>Explanation:</strong> Alice will always lose. Her best move will be to take three piles and the score become 6. Now the score of Bob is 7 and Bob wins.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> values = [1,2,3,-9]\r\n<strong>Output:</strong> &quot;Alice&quot;\r\n<strong>Explanation:</strong> Alice must choose all the three piles at the first move to win and leave Bob with negative score.\r\nIf Alice chooses one pile her score will be 1 and the next move Bob&#39;s score becomes 5. The next move Alice will take the pile with value = -9 and lose.\r\nIf Alice chooses two piles her score will be 3 and the next move Bob&#39;s score becomes 3. The next move Alice will take the pile with value = -9 and also lose.\r\nRemember that both play optimally so here Alice will choose the scenario that makes her win.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> values = [1,2,3,6]\r\n<strong>Output:</strong> &quot;Tie&quot;\r\n<strong>Explanation:</strong> Alice cannot win this game. She can end the game in a draw if she decided to choose all the first three piles, otherwise she will lose.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> values = [1,2,3,-1,-2,-3,7]\r\n<strong>Output:</strong> &quot;Alice&quot;\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> values = [-1,-2,-3]\r\n<strong>Output:</strong> &quot;Tie&quot;\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= values.length &lt;= 50000</code></li>\r\n\t<li><code>-1000&nbsp;&lt;= values[i] &lt;= 1000</code></li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"13.7K\", \"totalSubmission\": \"24K\", \"totalAcceptedRaw\": 13675, \"totalSubmissionRaw\": 23994, \"acRate\": \"57.0%\"}", "similarQuestions": "[{\"title\": \"Stone Game V\", \"titleSlug\": \"stone-game-v\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game VI\", \"titleSlug\": \"stone-game-vi\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stone Game VII\", \"titleSlug\": \"stone-game-vii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1384", "name": "total-sales-amount-by-year", "content": {"questionId": "1518", "questionFrontendId": "1384", "questionTitle": "Total Sales Amount by Year", "questionTitleSlug": "total-sales-amount-by-year", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"3.6K\", \"totalSubmission\": \"5.6K\", \"totalAcceptedRaw\": 3551, \"totalSubmissionRaw\": 5592, \"acRate\": \"63.5%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1416", "name": "restore-the-array", "content": {"questionId": "1517", "questionFrontendId": "1416", "questionTitle": "Restore The Array", "questionTitleSlug": "restore-the-array", "content": "<p>A program was supposed to print an array of integers. The program forgot to print whitespaces and the array is printed as a string of digits and all we know is that all integers in the array were in the range&nbsp;<code>[1, k]</code>&nbsp;and there are no leading zeros in the array.</p>\r\n\r\n<p>Given the string <code>s</code> and the integer <code>k</code>. There can be multiple ways to restore the array.</p>\r\n\r\n<p>Return <em>the number of possible array</em> that can be printed as a string <code>s</code>&nbsp;using the mentioned program.</p>\r\n\r\n<p>The number of ways could be very large so return it <strong>modulo</strong> <code>10^9 + 7</code></p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;1000&quot;, k = 10000\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong> The only possible array is [1000]\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;1000&quot;, k = 10\r\n<strong>Output:</strong> 0\r\n<strong>Explanation:</strong> There cannot be an array that was printed this way and has all integer &gt;= 1 and &lt;= 10.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;1317&quot;, k = 2000\r\n<strong>Output:</strong> 8\r\n<strong>Explanation:</strong> Possible arrays are [1317],[131,7],[13,17],[1,317],[13,1,7],[1,31,7],[1,3,17],[1,3,1,7]\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;2020&quot;, k = 30\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong> The only possible array is [20,20]. [2020] is invalid because 2020 &gt; 30. [2,020] is ivalid because 020 contains leading zeros.\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;1234567890&quot;, k = 90\r\n<strong>Output:</strong> 34\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= s.length &lt;= 10^5</code>.</li>\r\n\t<li><code>s</code> consists of only digits and doesn&#39;t contain leading zeros.</li>\r\n\t<li><code>1 &lt;= k &lt;= 10^9</code>.</li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"7.1K\", \"totalSubmission\": \"19.5K\", \"totalAcceptedRaw\": 7066, \"totalSubmissionRaw\": 19498, \"acRate\": \"36.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1397", "name": "find-all-good-strings", "content": {"questionId": "1513", "questionFrontendId": "1397", "questionTitle": "Find All Good Strings", "questionTitleSlug": "find-all-good-strings", "content": "<p>Given the strings <code>s1</code> and <code>s2</code> of size <code>n</code>, and the string <code>evil</code>. <em>Return the number of <strong>good</strong> strings</em>.</p>\n\n<p>A <strong>good</strong> string has size <code>n</code>, it is alphabetically greater than or equal to <code>s1</code>, it is alphabetically smaller than or equal to <code>s2</code>, and it does not contain the string <code>evil</code> as a substring. Since the answer can be a huge number, return this modulo 10^9 + 7.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, s1 = &quot;aa&quot;, s2 = &quot;da&quot;, evil = &quot;b&quot;\n<strong>Output:</strong> 51 \n<strong>Explanation:</strong> There are 25 good strings starting with &#39;a&#39;: &quot;aa&quot;,&quot;ac&quot;,&quot;ad&quot;,...,&quot;az&quot;. Then there are 25 good strings starting with &#39;c&#39;: &quot;ca&quot;,&quot;cc&quot;,&quot;cd&quot;,...,&quot;cz&quot; and finally there is one good string starting with &#39;d&#39;: &quot;da&quot;.&nbsp;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 8, s1 = &quot;leetcode&quot;, s2 = &quot;leetgoes&quot;, evil = &quot;leet&quot;\n<strong>Output:</strong> 0 \n<strong>Explanation:</strong> All strings greater than or equal to s1 and smaller than or equal to s2 start with the prefix &quot;leet&quot;, therefore, there is not any good string.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, s1 = &quot;gx&quot;, s2 = &quot;gz&quot;, evil = &quot;x&quot;\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>s1.length == n</code></li>\n\t<li><code>s2.length == n</code></li>\n\t<li><code>s1 &lt;= s2</code></li>\n\t<li><code>1 &lt;= n &lt;= 500</code></li>\n\t<li><code>1 &lt;= evil.length &lt;= 50</code></li>\n\t<li>All strings consist of lowercase English letters.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"2.6K\", \"totalSubmission\": \"6.9K\", \"totalAcceptedRaw\": 2633, \"totalSubmissionRaw\": 6936, \"acRate\": \"38.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1392", "name": "longest-happy-prefix", "content": {"questionId": "1508", "questionFrontendId": "1392", "questionTitle": "Longest Happy Prefix", "questionTitleSlug": "longest-happy-prefix", "content": "<p>A string is called a&nbsp;<em>happy prefix</em>&nbsp;if is a <strong>non-empty</strong> prefix which is also a suffix (excluding itself).</p>\n\n<p>Given a string <code>s</code>. Return the <strong>longest happy prefix</strong>&nbsp;of <code>s</code>&nbsp;.</p>\n\n<p>Return an empty string if no such prefix exists.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;level&quot;\n<strong>Output:</strong> &quot;l&quot;\n<strong>Explanation:</strong> s contains 4 prefix excluding itself (&quot;l&quot;, &quot;le&quot;, &quot;lev&quot;, &quot;leve&quot;), and suffix (&quot;l&quot;, &quot;el&quot;, &quot;vel&quot;, &quot;evel&quot;). The largest prefix which is also suffix is given by &quot;l&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ababab&quot;\n<strong>Output:</strong> &quot;abab&quot;\n<strong>Explanation:</strong> &quot;abab&quot; is the largest prefix which is also suffix. They can overlap in the original string.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;leetcodeleet&quot;\n<strong>Output:</strong> &quot;leet&quot;\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;a&quot;\n<strong>Output:</strong> &quot;&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10^5</code></li>\n\t<li><code>s</code> contains only lowercase English letters.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"11K\", \"totalSubmission\": \"26.8K\", \"totalAcceptedRaw\": 11025, \"totalSubmissionRaw\": 26793, \"acRate\": \"41.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "1369", "name": "get-the-second-most-recent-activity", "content": {"questionId": "1504", "questionFrontendId": "1369", "questionTitle": "Get the Second Most Recent Activity", "questionTitleSlug": "get-the-second-most-recent-activity", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.1K\", \"totalSubmission\": \"7.4K\", \"totalAcceptedRaw\": 5075, \"totalSubmissionRaw\": 7444, \"acRate\": \"68.2%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1402", "name": "reducing-dishes", "content": {"questionId": "1503", "questionFrontendId": "1402", "questionTitle": "Reducing Dishes", "questionTitleSlug": "reducing-dishes", "content": "<p>A chef&nbsp;has collected data on the <code>satisfaction</code> level of his&nbsp;<code>n</code> dishes.&nbsp;Chef can cook any dish in 1 unit of time.</p>\r\n\r\n<p><em>Like-time coefficient</em>&nbsp;of a dish is defined as&nbsp;the time taken to cook that dish including previous dishes multiplied by its satisfaction level &nbsp;i.e.&nbsp; <code>time[i]</code>*<code>satisfaction[i]</code></p>\r\n\r\n<p>Return&nbsp;the maximum sum of&nbsp;<em>Like-time coefficient </em>that the chef can obtain after dishes preparation.</p>\r\n\r\n<p>Dishes can be prepared in <strong>any </strong>order and the chef can discard some dishes to get this maximum value.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> satisfaction = [-1,-8,0,5,-9]\r\n<strong>Output:</strong> 14\r\n<strong>Explanation: </strong>After Removing the second and last dish, the maximum total <em>Like-time coefficient</em> will be equal to (-1*1 + 0*2 + 5*3 = 14). Each dish is prepared in one unit of time.</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> satisfaction = [4,3,2]\r\n<strong>Output:</strong> 20\r\n<strong>Explanation:</strong> Dishes can be prepared in any order, (2*1 + 3*2 + 4*3 = 20)\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> satisfaction = [-1,-4,-5]\r\n<strong>Output:</strong> 0\r\n<strong>Explanation:</strong> People don&#39;t like the dishes. No dish is prepared.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> satisfaction = [-2,5,-1,0,3,-3]\r\n<strong>Output:</strong> 35\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>n == satisfaction.length</code></li>\r\n\t<li><code>1 &lt;= n &lt;= 500</code></li>\r\n\t<li><code>-10^3 &lt;=&nbsp;satisfaction[i] &lt;= 10^3</code></li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"16.9K\", \"totalSubmission\": \"23.4K\", \"totalAcceptedRaw\": 16901, \"totalSubmissionRaw\": 23395, \"acRate\": \"72.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1383", "name": "maximum-performance-of-a-team", "content": {"questionId": "1499", "questionFrontendId": "1383", "questionTitle": "Maximum Performance of a Team", "questionTitleSlug": "maximum-performance-of-a-team", "content": "<p>There are <code>n</code> engineers numbered from 1 to <code>n</code>&nbsp;and&nbsp;two arrays: <code>speed</code>&nbsp;and <code>efficiency</code>, where <code>speed[i]</code> and <code>efficiency[i]</code> represent the speed and efficiency for the i-th engineer respectively. <em>Return the maximum <strong>performance</strong> of a team composed of&nbsp;at most&nbsp;<code>k</code>&nbsp;engineers, since the answer can be a huge number, return this modulo&nbsp;10^9 + 7.</em></p>\r\n\r\n<p>The <strong>performance</strong> of a team is the sum of their engineers&#39; speeds multiplied by the minimum efficiency among&nbsp;their engineers.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 6, speed = [2,10,3,1,5,8], efficiency = [5,4,3,9,7,2], k = 2\r\n<strong>Output:</strong> 60\r\n<strong>Explanation:</strong> \r\nWe have the maximum performance of the team by selecting engineer 2 (with speed=10 and efficiency=4) and engineer 5 (with speed=5 and efficiency=7). That is, performance = (10 + 5) * min(4, 7) = 60.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 6, speed = [2,10,3,1,5,8], efficiency = [5,4,3,9,7,2], k = 3\r\n<strong>Output:</strong> 68\r\n<strong>Explanation:\r\n</strong>This is the same example as the first but k = 3. We can select engineer 1, engineer 2 and engineer 5 to get the maximum performance of the team. That is, performance = (2 + 10 + 5) * min(5, 4, 7) = 68.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 6, speed = [2,10,3,1,5,8], efficiency = [5,4,3,9,7,2], k = 4\r\n<strong>Output:</strong> 72\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= n &lt;= 10^5</code></li>\r\n\t<li><code>speed.length == n</code></li>\r\n\t<li><code>efficiency.length == n</code></li>\r\n\t<li><code>1 &lt;= speed[i] &lt;= 10^5</code></li>\r\n\t<li><code>1 &lt;= efficiency[i] &lt;= 10^8</code></li>\r\n\t<li><code>1 &lt;= k &lt;= n</code></li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"10.2K\", \"totalSubmission\": \"29.3K\", \"totalAcceptedRaw\": 10162, \"totalSubmissionRaw\": 29312, \"acRate\": \"34.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "1377", "name": "frog-position-after-t-seconds", "content": {"questionId": "1493", "questionFrontendId": "1377", "questionTitle": "Frog Position After T Seconds", "questionTitleSlug": "frog-position-after-t-seconds", "content": "<p>Given an undirected tree consisting of <code>n</code> vertices numbered from <code>1</code> to <code>n</code>. A frog starts jumping from <strong>vertex 1</strong>. In one second, the frog jumps from its current vertex to another <strong>unvisited</strong> vertex if they are directly connected. The frog can not jump back to a visited vertex. In case the frog can jump to several vertices, it jumps randomly to one of them with the same probability. Otherwise, when the frog can not jump to any unvisited vertex, it jumps forever on the same vertex.</p>\n\n<p>The edges of the undirected tree are given in the array <code>edges</code>, where <code>edges[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> means that exists an edge connecting the vertices <code>a<sub>i</sub></code> and <code>b<sub>i</sub></code>.</p>\n\n<p><em>Return the probability that after <code>t</code> seconds the frog is on the vertex <code>target</code>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/20/frog_2.png\" style=\"width: 350px; height: 236px;\" /></p>\n\n<pre>\n<strong>Input:</strong> n = 7, edges = [[1,2],[1,3],[1,7],[2,4],[2,6],[3,5]], t = 2, target = 4\n<strong>Output:</strong> 0.16666666666666666 \n<strong>Explanation: </strong>The figure above shows the given graph. The frog starts at vertex 1, jumping with 1/3 probability to the vertex 2 after <strong>second 1</strong> and then jumping with 1/2 probability to vertex 4 after <strong>second 2</strong>. Thus the probability for the frog is on the vertex 4 after 2 seconds is 1/3 * 1/2 = 1/6 = 0.16666666666666666. \n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/20/frog_3.png\" style=\"width: 350px; height: 236px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 7, edges = [[1,2],[1,3],[1,7],[2,4],[2,6],[3,5]], t = 1, target = 7\n<strong>Output:</strong> 0.3333333333333333\n<strong>Explanation: </strong>The figure above shows the given graph. The frog starts at vertex 1, jumping with 1/3 = 0.3333333333333333 probability to the vertex 7 after <strong>second 1</strong>. \n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 7, edges = [[1,2],[1,3],[1,7],[2,4],[2,6],[3,5]], t = 20, target = 6\n<strong>Output:</strong> 0.16666666666666666\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>edges.length == n - 1</code></li>\n\t<li><code>edges[i].length == 2</code></li>\n\t<li><code>1 &lt;= a<sub>i</sub>, b<sub>i</sub> &lt;= n</code></li>\n\t<li><code>1 &lt;= t&nbsp;&lt;= 50</code></li>\n\t<li><code>1 &lt;= target&nbsp;&lt;= n</code></li>\n\t<li>Answers within <code>10<sup>-5</sup></code> of the actual value will be accepted as correct.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"10.5K\", \"totalSubmission\": \"30.4K\", \"totalAcceptedRaw\": 10466, \"totalSubmissionRaw\": 30390, \"acRate\": \"34.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1388", "name": "pizza-with-3n-slices", "content": {"questionId": "1489", "questionFrontendId": "1388", "questionTitle": "Pizza With 3n Slices", "questionTitleSlug": "pizza-with-3n-slices", "content": "<p>There is a pizza with 3n slices of varying size, you and your friends will take slices of pizza as follows:</p>\n\n<ul>\n\t<li>You will pick <strong>any</strong> pizza slice.</li>\n\t<li>Your friend Alice&nbsp;will pick&nbsp;next slice in anti clockwise direction of your pick.&nbsp;</li>\n\t<li>Your friend Bob&nbsp;will&nbsp;pick&nbsp;next slice in clockwise direction of your pick.</li>\n\t<li>Repeat&nbsp;until&nbsp;there are no more slices of pizzas.</li>\n</ul>\n\n<p>Sizes of Pizza slices is represented by circular array <code>slices</code> in clockwise direction.</p>\n\n<p>Return the maximum possible sum of slice sizes which you can have.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/18/sample_3_1723.png\" style=\"width: 475px; height: 240px;\" /></p>\n\n<pre>\n<strong>Input:</strong> slices = [1,2,3,4,5,6]\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> Pick pizza slice of size 4, Alice and Bob will pick slices with size 3 and 5 respectively. Then Pick slices with size 6, finally Alice and Bob will pick slice of size 2 and 1 respectively. Total = 4 + 6.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/18/sample_4_1723.png\" style=\"width: 475px; height: 250px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> slices = [8,9,8,6,1,1]\n<strong>Output:</strong> 16\n<strong>Output:</strong> Pick pizza slice of size 8 in each turn. If you pick slice with size 9 your partners will pick slices of size 8.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> slices = [4,1,2,5,8,3,1,9,7]\n<strong>Output:</strong> 21\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> slices = [3,1,2]\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= slices.length &lt;= 500</code></li>\n\t<li><code>slices.length % 3 == 0</code></li>\n\t<li><code>1 &lt;= slices[i] &lt;= 1000</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"4.9K\", \"totalSubmission\": \"10.9K\", \"totalAcceptedRaw\": 4906, \"totalSubmissionRaw\": 10855, \"acRate\": \"45.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1368", "name": "minimum-cost-to-make-at-least-one-valid-path-in-a-grid", "content": {"questionId": "1485", "questionFrontendId": "1368", "questionTitle": "Minimum Cost to Make at Least One Valid Path in a Grid", "questionTitleSlug": "minimum-cost-to-make-at-least-one-valid-path-in-a-grid", "content": "Given a <em>m</em> x <em>n</em> <code>grid</code>. Each cell of the <code>grid</code> has a sign pointing to the next cell you should visit if you are currently in this cell. The sign of <code>grid[i][j]</code> can be:\n<ul>\n\t<li><strong>1</strong> which means go to the cell to the right. (i.e go from <code>grid[i][j]</code> to <code>grid[i][j + 1]</code>)</li>\n\t<li><strong>2</strong> which means go to the cell to the left. (i.e go from <code>grid[i][j]</code> to <code>grid[i][j - 1]</code>)</li>\n\t<li><strong>3</strong> which means go to the lower cell. (i.e go from <code>grid[i][j]</code> to <code>grid[i + 1][j]</code>)</li>\n\t<li><strong>4</strong> which means go to the upper cell. (i.e go from <code>grid[i][j]</code> to <code>grid[i - 1][j]</code>)</li>\n</ul>\n\n<p>Notice&nbsp;that there could be some <strong>invalid signs</strong> on the cells of the <code>grid</code> which points outside the <code>grid</code>.</p>\n\n<p>You will initially start at the upper left cell <code>(0,0)</code>. A valid path in the grid is a path which starts from the upper left&nbsp;cell <code>(0,0)</code> and ends at the bottom-right&nbsp;cell <code>(m - 1, n - 1)</code> following the signs on the grid. The valid path <strong>doesn&#39;t have to be the shortest</strong>.</p>\n\n<p>You can modify the sign on a cell with <code>cost = 1</code>. You can modify the sign on a cell <strong>one time only</strong>.</p>\n\n<p>Return <em>the minimum cost</em> to make the grid have at least one valid path.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/13/grid1.png\" style=\"width: 542px; height: 528px;\" />\n<pre>\n<strong>Input:</strong> grid = [[1,1,1,1],[2,2,2,2],[1,1,1,1],[2,2,2,2]]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> You will start at point (0, 0).\nThe path to (3, 3) is as follows. (0, 0) --&gt; (0, 1) --&gt; (0, 2) --&gt; (0, 3) change the arrow to down with cost = 1 --&gt; (1, 3) --&gt; (1, 2) --&gt; (1, 1) --&gt; (1, 0) change the arrow to down with cost = 1 --&gt; (2, 0) --&gt; (2, 1) --&gt; (2, 2) --&gt; (2, 3) change the arrow to down with cost = 1 --&gt; (3, 3)\nThe total cost = 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/13/grid2.png\" style=\"width: 419px; height: 408px;\" />\n<pre>\n<strong>Input:</strong> grid = [[1,1,3],[3,2,2],[1,1,4]]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> You can follow the path from (0, 0) to (2, 2).\n</pre>\n\n<p><strong>Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/13/grid3.png\" style=\"width: 314px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> grid = [[1,2],[4,3]]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[2,2,2],[2,2,2]]\n<strong>Output:</strong> 3\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[4]]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 100</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"13.3K\", \"totalSubmission\": \"23.7K\", \"totalAcceptedRaw\": 13300, \"totalSubmissionRaw\": 23661, \"acRate\": \"56.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1354", "name": "construct-target-array-with-multiple-sums", "content": {"questionId": "1479", "questionFrontendId": "1354", "questionTitle": "Construct Target Array With Multiple Sums", "questionTitleSlug": "construct-target-array-with-multiple-sums", "content": "<p>Given an array of integers&nbsp;<code>target</code>. From a starting array, <code>A</code>&nbsp;consisting of all 1&#39;s, you may perform the following procedure :</p>\n\n<ul>\n\t<li>let <code>x</code> be the sum of all elements currently in your array.</li>\n\t<li>choose index <code>i</code>, such that&nbsp;<code>0 &lt;= i &lt; target.size</code> and set the value of <code>A</code> at index <code>i</code> to <code>x</code>.</li>\n\t<li>You may repeat this procedure&nbsp;as many times as needed.</li>\n</ul>\n\n<p>Return True if it is possible to construct the <code>target</code> array from <code>A</code> otherwise&nbsp;return False.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> target = [9,3,5]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Start with [1, 1, 1] \n[1, 1, 1], sum = 3 choose index 1\n[1, 3, 1], sum = 5 choose index 2\n[1, 3, 5], sum = 9 choose index 0\n[9, 3, 5] Done\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> target = [1,1,1,2]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Impossible to create target array from [1,1,1,1].\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> target = [8,5]\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>N == target.length</code></li>\n\t<li><code>1 &lt;= target.length&nbsp;&lt;= 5 * 10^4</code></li>\n\t<li><code>1 &lt;= target[i] &lt;= 10^9</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"8K\", \"totalSubmission\": \"25.4K\", \"totalAcceptedRaw\": 7989, \"totalSubmissionRaw\": 25449, \"acRate\": \"31.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "1373", "name": "maximum-sum-bst-in-binary-tree", "content": {"questionId": "1475", "questionFrontendId": "1373", "questionTitle": "Maximum Sum BST in Binary Tree", "questionTitleSlug": "maximum-sum-bst-in-binary-tree", "content": "<p>Given a <strong>binary tree</strong> <code>root</code>, the task is to return the maximum sum of all keys of <strong>any</strong>&nbsp;sub-tree which is also a Binary Search Tree (BST).</p>\n\n<p>Assume a BST is defined as follows:</p>\n\n<ul>\n\t<li>The left subtree of a node contains only nodes with keys&nbsp;<strong>less than</strong>&nbsp;the node&#39;s key.</li>\n\t<li>The right subtree of a node contains only nodes with keys&nbsp;<strong>greater than</strong>&nbsp;the node&#39;s key.</li>\n\t<li>Both the left and right subtrees must also be binary search trees.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/30/sample_1_1709.png\" style=\"width: 320px; height: 250px;\" /></p>\n\n<pre>\n<strong>Input:</strong> root = [1,4,3,2,4,2,5,null,null,null,null,null,null,4,6]\n<strong>Output:</strong> 20\n<strong>Explanation:</strong> Maximum sum in a valid Binary search tree is obtained in root node with key equal to 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/30/sample_2_1709.png\" style=\"width: 134px; height: 180px;\" /></p>\n\n<pre>\n<strong>Input:</strong> root = [4,3,null,1,2]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Maximum sum in a valid Binary search tree is obtained in a single root node with key equal to 2.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [-4,-2,-5]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> All values are negatives. Return an empty BST.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [2,1,3]\n<strong>Output:</strong> 6\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [5,4,8,3,null,6,3]\n<strong>Output:</strong> 7\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The&nbsp;given binary tree will have between&nbsp;<code>1</code>&nbsp;and&nbsp;<code>40000</code>&nbsp;nodes.</li>\n\t<li>Each node&#39;s value is between <code>[-4 * 10^4&nbsp;, 4 * 10^4]</code>.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"12.3K\", \"totalSubmission\": \"32.4K\", \"totalAcceptedRaw\": 12268, \"totalSubmissionRaw\": 32433, \"acRate\": \"37.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Binary Search Tree", "slug": "binary-search-tree"}]}}, {"id": "1349", "name": "maximum-students-taking-exam", "content": {"questionId": "1471", "questionFrontendId": "1349", "questionTitle": "Maximum Students Taking Exam", "questionTitleSlug": "maximum-students-taking-exam", "content": "<p>Given a <code>m&nbsp;* n</code>&nbsp;matrix <code>seats</code>&nbsp;&nbsp;that represent seats distributions&nbsp;in a classroom.&nbsp;If a seat&nbsp;is&nbsp;broken, it is denoted by <code>&#39;#&#39;</code> character otherwise it is denoted by a <code>&#39;.&#39;</code> character.</p>\n\n<p>Students can see the answers of those sitting next to the left, right, upper left and upper right, but he cannot see the answers of the student sitting&nbsp;directly in front or behind him. Return the <strong>maximum </strong>number of students that can take the exam together&nbsp;without any cheating being possible..</p>\n\n<p>Students must be placed in seats in good condition.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img height=\"200\" src=\"https://assets.leetcode.com/uploads/2020/01/29/image.png\" width=\"339\" />\n<pre>\n<strong>Input:</strong> seats = [[&quot;#&quot;,&quot;.&quot;,&quot;#&quot;,&quot;#&quot;,&quot;.&quot;,&quot;#&quot;],\n&nbsp;               [&quot;.&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;.&quot;],\n&nbsp;               [&quot;#&quot;,&quot;.&quot;,&quot;#&quot;,&quot;#&quot;,&quot;.&quot;,&quot;#&quot;]]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Teacher can place 4 students in available seats so they don&#39;t cheat on the exam. \n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> seats = [[&quot;.&quot;,&quot;#&quot;],\n&nbsp;               [&quot;#&quot;,&quot;#&quot;],\n&nbsp;               [&quot;#&quot;,&quot;.&quot;],\n&nbsp;               [&quot;#&quot;,&quot;#&quot;],\n&nbsp;               [&quot;.&quot;,&quot;#&quot;]]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Place all students in available seats. \n\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> seats = [[&quot;#&quot;,&quot;.&quot;,&quot;<strong>.</strong>&quot;,&quot;.&quot;,&quot;#&quot;],\n&nbsp;               [&quot;<strong>.</strong>&quot;,&quot;#&quot;,&quot;<strong>.</strong>&quot;,&quot;#&quot;,&quot;<strong>.</strong>&quot;],\n&nbsp;               [&quot;<strong>.</strong>&quot;,&quot;.&quot;,&quot;#&quot;,&quot;.&quot;,&quot;<strong>.</strong>&quot;],\n&nbsp;               [&quot;<strong>.</strong>&quot;,&quot;#&quot;,&quot;<strong>.</strong>&quot;,&quot;#&quot;,&quot;<strong>.</strong>&quot;],\n&nbsp;               [&quot;#&quot;,&quot;.&quot;,&quot;<strong>.</strong>&quot;,&quot;.&quot;,&quot;#&quot;]]\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> Place students in available seats in column 1, 3 and 5.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>seats</code>&nbsp;contains only characters&nbsp;<code>&#39;.&#39;<font face=\"sans-serif, Arial, Verdana, Trebuchet MS\">&nbsp;and</font></code><code>&#39;#&#39;.</code></li>\n\t<li><code>m ==&nbsp;seats.length</code></li>\n\t<li><code>n ==&nbsp;seats[i].length</code></li>\n\t<li><code>1 &lt;= m &lt;= 8</code></li>\n\t<li><code>1 &lt;= n &lt;= 8</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"6.9K\", \"totalSubmission\": \"15.6K\", \"totalAcceptedRaw\": 6855, \"totalSubmissionRaw\": 15638, \"acRate\": \"43.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1336", "name": "number-of-transactions-per-visit", "content": {"questionId": "1467", "questionFrontendId": "1336", "questionTitle": "Number of Transactions per Visit", "questionTitleSlug": "number-of-transactions-per-visit", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"3.5K\", \"totalSubmission\": \"7.4K\", \"totalAcceptedRaw\": 3467, \"totalSubmissionRaw\": 7430, \"acRate\": \"46.7%\"}", "similarQuestions": "[{\"title\": \"Find the Missing IDs\", \"titleSlug\": \"find-the-missing-ids\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1340", "name": "jump-game-v", "content": {"questionId": "1466", "questionFrontendId": "1340", "questionTitle": "Jump Game V", "questionTitleSlug": "jump-game-v", "content": "<p>Given an array of&nbsp;integers <code>arr</code> and an integer <code>d</code>. In one step you can jump from index <code>i</code> to index:</p>\r\n\r\n<ul>\r\n\t<li><code>i + x</code> where:&nbsp;<code>i + x &lt; arr.length</code> and <code> 0 &lt;&nbsp;x &lt;= d</code>.</li>\r\n\t<li><code>i - x</code> where:&nbsp;<code>i - x &gt;= 0</code> and <code> 0 &lt;&nbsp;x &lt;= d</code>.</li>\r\n</ul>\r\n\r\n<p>In addition, you can only jump from index <code>i</code> to index <code>j</code>&nbsp;if <code>arr[i] &gt; arr[j]</code> and <code>arr[i] &gt; arr[k]</code> for all indices <code>k</code> between <code>i</code> and <code>j</code> (More formally <code>min(i,&nbsp;j) &lt; k &lt; max(i, j)</code>).</p>\r\n\r\n<p>You can choose any index of the array and start jumping. Return <em>the maximum number of indices</em>&nbsp;you can visit.</p>\r\n\r\n<p>Notice that you can not jump outside of the array at any time.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/23/meta-chart.jpeg\" style=\"width: 633px; height: 419px;\" />\r\n<pre>\r\n<strong>Input:</strong> arr = [6,4,14,6,8,13,9,7,10,6,12], d = 2\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> You can start at index 10. You can jump 10 --&gt; 8 --&gt; 6 --&gt; 7 as shown.\r\nNote that if you start at index 6 you can only jump to index 7. You cannot jump to index 5 because 13 &gt; 9. You cannot jump to index 4 because index 5 is between index 4 and 6 and 13 &gt; 9.\r\nSimilarly You cannot jump from index 3 to index 2 or index 1.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [3,3,3,3,3], d = 3\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong> You can start at any index. You always cannot jump to any index.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [7,6,5,4,3,2,1], d = 1\r\n<strong>Output:</strong> 7\r\n<strong>Explanation:</strong> Start at index 0. You can visit all the indicies. \r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [7,1,7,1,7,1], d = 2\r\n<strong>Output:</strong> 2\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [66], d = 1\r\n<strong>Output:</strong> 1\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= arr.length &lt;= 1000</code></li>\r\n\t<li><code>1 &lt;= arr[i] &lt;= 10^5</code></li>\r\n\t<li><code>1 &lt;= d &lt;= arr.length</code></li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"10.4K\", \"totalSubmission\": \"17.7K\", \"totalAcceptedRaw\": 10374, \"totalSubmissionRaw\": 17690, \"acRate\": \"58.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1359", "name": "count-all-valid-pickup-and-delivery-options", "content": {"questionId": "1461", "questionFrontendId": "1359", "questionTitle": "Count All Valid Pickup and Delivery Options", "questionTitleSlug": "count-all-valid-pickup-and-delivery-options", "content": "<p>Given <code>n</code> orders, each order consist in pickup and delivery services.&nbsp;</p>\n\n<p>Count all valid pickup/delivery possible sequences such that delivery(i) is always after of&nbsp;pickup(i).&nbsp;</p>\n\n<p>Since the answer&nbsp;may be too large,&nbsp;return it modulo&nbsp;10^9 + 7.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> Unique order (P1, D1), Delivery 1 always is after of Pickup 1.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> All possible orders: \n(P1,P2,D1,D2), (P1,P2,D2,D1), (P1,D1,P2,D2), (P2,P1,D1,D2), (P2,P1,D2,D1) and (P2,D2,P1,D1).\nThis is an invalid order (P1,D2,P2,D1) because Pickup 2 is after of Delivery 2.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> 90\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 500</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"8.9K\", \"totalSubmission\": \"15.6K\", \"totalAcceptedRaw\": 8881, \"totalSubmissionRaw\": 15551, \"acRate\": \"57.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1335", "name": "minimum-difficulty-of-a-job-schedule", "content": {"questionId": "1457", "questionFrontendId": "1335", "questionTitle": "Minimum Difficulty of a Job Schedule", "questionTitleSlug": "minimum-difficulty-of-a-job-schedule", "content": "<p>You want to schedule a list of jobs in <code>d</code> days. Jobs are dependent (i.e To work on the <code>i-th</code> job, you have to finish all the jobs <code>j</code> where <code>0 &lt;= j &lt; i</code>).</p>\r\n\r\n<p>You have to finish <strong>at least</strong> one task every day. The difficulty of a job schedule is the sum of difficulties of each day of the <code>d</code> days. The difficulty of a day is the maximum difficulty of a job done in that day.</p>\r\n\r\n<p>Given an array of integers <code>jobDifficulty</code> and an integer <code>d</code>. The difficulty of the <code>i-th</code>&nbsp;job is&nbsp;<code>jobDifficulty[i]</code>.</p>\r\n\r\n<p>Return <em>the minimum difficulty</em> of a job schedule. If you cannot find a schedule for the jobs return <strong>-1</strong>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/16/untitled.png\" style=\"width: 365px; height: 230px;\" />\r\n<pre>\r\n<strong>Input:</strong> jobDifficulty = [6,5,4,3,2,1], d = 2\r\n<strong>Output:</strong> 7\r\n<strong>Explanation:</strong> First day you can finish the first 5 jobs, total difficulty = 6.\r\nSecond day you can finish the last job, total difficulty = 1.\r\nThe difficulty of the schedule = 6 + 1 = 7 \r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> jobDifficulty = [9,9,9], d = 4\r\n<strong>Output:</strong> -1\r\n<strong>Explanation:</strong> If you finish a job per day you will still have a free day. you cannot find a schedule for the given jobs.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> jobDifficulty = [1,1,1], d = 3\r\n<strong>Output:</strong> 3\r\n<strong>Explanation:</strong> The schedule is one job per day. total difficulty will be 3.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> jobDifficulty = [7,1,7,1,7,1], d = 3\r\n<strong>Output:</strong> 15\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> jobDifficulty = [11,111,22,222,33,333,44,444], d = 6\r\n<strong>Output:</strong> 843\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= jobDifficulty.length &lt;= 300</code></li>\r\n\t<li><code>0 &lt;=&nbsp;jobDifficulty[i] &lt;= 1000</code></li>\r\n\t<li><code>1 &lt;= d &lt;= 10</code></li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"17.9K\", \"totalSubmission\": \"31K\", \"totalAcceptedRaw\": 17892, \"totalSubmissionRaw\": 31020, \"acRate\": \"57.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1326", "name": "minimum-number-of-taps-to-open-to-water-a-garden", "content": {"questionId": "1451", "questionFrontendId": "1326", "questionTitle": "Minimum Number of Taps to Open to Water a Garden", "questionTitleSlug": "minimum-number-of-taps-to-open-to-water-a-garden", "content": "<p>There is a one-dimensional garden on the x-axis. The garden starts at the point <code>0</code> and ends at the point <code>n</code>. (i.e The length of the garden is <code>n</code>).</p>\n\n<p>There are&nbsp;<code>n + 1</code> taps located&nbsp;at points <code>[0, 1, ..., n]</code> in the garden.</p>\n\n<p>Given an integer <code>n</code> and an integer array <code>ranges</code> of length <code>n + 1</code> where <code>ranges[i]</code> (0-indexed) means the <code>i-th</code> tap can water the area <code>[i - ranges[i], i + ranges[i]]</code> if it was open.</p>\n\n<p>Return <em>the minimum number of taps</em> that should be open to water the whole garden, If the garden cannot be watered return <strong>-1</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/16/1685_example_1.png\" style=\"width: 525px; height: 255px;\" />\n<pre>\n<strong>Input:</strong> n = 5, ranges = [3,4,1,1,0,0]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The tap at point 0 can cover the interval [-3,3]\nThe tap at point 1 can cover the interval [-3,5]\nThe tap at point 2 can cover the interval [1,3]\nThe tap at point 3 can cover the interval [2,4]\nThe tap at point 4 can cover the interval [4,4]\nThe tap at point 5 can cover the interval [5,5]\nOpening Only the second tap will water the whole garden [0,5]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3, ranges = [0,0,0,0]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> Even if you activate all the four taps you cannot water the whole garden.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 7, ranges = [1,2,1,0,2,1,0,1]\n<strong>Output:</strong> 3\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 8, ranges = [4,0,0,0,0,0,0,0,4]\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 8, ranges = [4,0,0,0,4,0,0,0,4]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10^4</code></li>\n\t<li><code>ranges.length == n + 1</code></li>\n\t<li><code>0 &lt;= ranges[i] &lt;= 100</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"18.5K\", \"totalSubmission\": \"40.3K\", \"totalAcceptedRaw\": 18531, \"totalSubmissionRaw\": 40334, \"acRate\": \"45.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1345", "name": "jump-game-iv", "content": {"questionId": "1447", "questionFrontendId": "1345", "questionTitle": "Jump Game IV", "questionTitleSlug": "jump-game-iv", "content": "<p>Given an array of&nbsp;integers <code>arr</code>, you are initially positioned at the first index of the array.</p>\n\n<p>In one step you can jump from index <code>i</code> to index:</p>\n\n<ul>\n\t<li><code>i + 1</code> where:&nbsp;<code>i + 1 &lt; arr.length</code>.</li>\n\t<li><code>i - 1</code> where:&nbsp;<code>i - 1 &gt;= 0</code>.</li>\n\t<li><code>j</code> where: <code>arr[i] == arr[j]</code> and <code>i != j</code>.</li>\n</ul>\n\n<p>Return <em>the minimum number of steps</em> to reach the <strong>last index</strong> of the array.</p>\n\n<p>Notice that you can not jump outside of the array at any time.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [100,-23,-23,404,100,23,23,23,3,404]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> You need three jumps from index 0 --&gt; 4 --&gt; 3 --&gt; 9. Note that index 9 is the last index of the array.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [7]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Start index is the last index. You don&#39;t need to jump.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [7,6,9,6,9,6,9,7]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> You can jump directly from index 0 to index 7 which is last index of the array.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [6,1,9]\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [11,22,7,7,7,7,7,7,7,22,13]\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 5 * 10^4</code></li>\n\t<li><code>-10^8 &lt;= arr[i] &lt;= 10^8</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"16.2K\", \"totalSubmission\": \"40.2K\", \"totalAcceptedRaw\": 16227, \"totalSubmissionRaw\": 40232, \"acRate\": \"40.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1320", "name": "minimum-distance-to-type-a-word-using-two-fingers", "content": {"questionId": "1443", "questionFrontendId": "1320", "questionTitle": "Minimum Distance to Type a Word Using Two Fingers", "questionTitleSlug": "minimum-distance-to-type-a-word-using-two-fingers", "content": "<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/02/leetcode_keyboard.png\" style=\"width: 417px; height: 250px;\" /></p>\r\n\r\n<p>You have a keyboard layout as shown above in the XY plane, where each English uppercase letter is located at some coordinate, for example, the letter <strong>A</strong> is located at coordinate <strong>(0,0)</strong>, the letter <strong>B</strong> is located at coordinate <strong>(0,1)</strong>, the letter <strong>P</strong> is located at coordinate <strong>(2,3)</strong> and the letter <strong>Z</strong> is located at coordinate <strong>(4,1)</strong>.</p>\r\n\r\n<p>Given the string <code>word</code>, return the minimum total distance to type such string using only two&nbsp;fingers. The distance between coordinates <strong>(x<sub>1</sub>,y<sub>1</sub>)</strong> and <strong>(x<sub>2</sub>,y<sub>2</sub>)</strong> is <strong>|x<sub>1</sub> - x<sub>2</sub>| + |y<sub>1</sub> - y<sub>2</sub>|</strong>.&nbsp;</p>\r\n\r\n<p>Note that the initial positions of your two&nbsp;fingers are considered free so don&#39;t count towards your total distance, also your two&nbsp;fingers do not have to start at the first letter or the first two&nbsp;letters.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> word = &quot;CAKE&quot;\r\n<strong>Output:</strong> 3\r\n<strong>Explanation: \r\n</strong>Using two fingers, one optimal way to type &quot;CAKE&quot; is: \r\nFinger 1 on letter &#39;C&#39; -&gt; cost = 0 \r\nFinger 1 on letter &#39;A&#39; -&gt; cost = Distance from letter &#39;C&#39; to letter &#39;A&#39; = 2 \r\nFinger 2 on letter &#39;K&#39; -&gt; cost = 0 \r\nFinger 2 on letter &#39;E&#39; -&gt; cost = Distance from letter &#39;K&#39; to letter &#39;E&#39; = 1 \r\nTotal distance = 3\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> word = &quot;HAPPY&quot;\r\n<strong>Output:</strong> 6\r\n<strong>Explanation: </strong>\r\nUsing two fingers, one optimal way to type &quot;HAPPY&quot; is:\r\nFinger 1 on letter &#39;H&#39; -&gt; cost = 0\r\nFinger 1 on letter &#39;A&#39; -&gt; cost = Distance from letter &#39;H&#39; to letter &#39;A&#39; = 2\r\nFinger 2 on letter &#39;P&#39; -&gt; cost = 0\r\nFinger 2 on letter &#39;P&#39; -&gt; cost = Distance from letter &#39;P&#39; to letter &#39;P&#39; = 0\r\nFinger 1 on letter &#39;Y&#39; -&gt; cost = Distance from letter &#39;A&#39; to letter &#39;Y&#39; = 4\r\nTotal distance = 6\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> word = &quot;NEW&quot;\r\n<strong>Output:</strong> 3\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> word = &quot;YEAR&quot;\r\n<strong>Output:</strong> 7\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>2 &lt;= word.length &lt;= 300</code></li>\r\n\t<li>Each <code data-stringify-type=\"code\">word[i]</code>&nbsp;is an English uppercase letter.</li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"15.4K\", \"totalSubmission\": \"24.5K\", \"totalAcceptedRaw\": 15379, \"totalSubmissionRaw\": 24512, \"acRate\": \"62.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1312", "name": "minimum-insertion-steps-to-make-a-string-palindrome", "content": {"questionId": "1437", "questionFrontendId": "1312", "questionTitle": "Minimum Insertion Steps to Make a String Palindrome", "questionTitleSlug": "minimum-insertion-steps-to-make-a-string-palindrome", "content": "<p>Given a string <code>s</code>. In one step you can insert any character at any index of the string.</p>\n\n<p>Return <em>the minimum number of steps</em> to make <code>s</code>&nbsp;palindrome.</p>\n\n<p>A&nbsp;<b>Palindrome String</b>&nbsp;is one that reads the same backward as well as forward.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;zzazz&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The string &quot;zzazz&quot; is already palindrome we don&#39;t need any insertions.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;mbadm&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> String can be &quot;mbdadbm&quot; or &quot;mdbabdm&quot;.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;leetcode&quot;\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> Inserting 5 characters the string becomes &quot;leetcodocteel&quot;.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;g&quot;\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;no&quot;\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 500</code></li>\n\t<li>All characters of <code>s</code>&nbsp;are lower case English letters.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"18.5K\", \"totalSubmission\": \"31.3K\", \"totalAcceptedRaw\": 18511, \"totalSubmissionRaw\": 31334, \"acRate\": \"59.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1307", "name": "verbal-arithmetic-puzzle", "content": {"questionId": "1429", "questionFrontendId": "1307", "questionTitle": "Verbal Arithmetic Puzzle", "questionTitleSlug": "verbal-arithmetic-puzzle", "content": "<p>Given an equation, represented by <code>words</code> on left side and the <code>result</code> on right side.</p>\n\n<p>You need to check if the equation is solvable&nbsp;under the following rules:</p>\n\n<ul>\n\t<li>Each character is decoded as one digit (0 - 9).</li>\n\t<li>Every pair of different characters they must map to different digits.</li>\n\t<li>Each <code>words[i]</code> and <code>result</code>&nbsp;are decoded as one number <strong>without</strong> leading zeros.</li>\n\t<li>Sum of numbers on left side (<code>words</code>) will equal to the number on right side (<code>result</code>).&nbsp;</li>\n</ul>\n\n<p>Return <code>True</code>&nbsp;if the equation is solvable otherwise&nbsp;return&nbsp;<code>False</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;SEND&quot;,&quot;MORE&quot;], result = &quot;MONEY&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Map &#39;S&#39;-&gt; 9, &#39;E&#39;-&gt;5, &#39;N&#39;-&gt;6, &#39;D&#39;-&gt;7, &#39;M&#39;-&gt;1, &#39;O&#39;-&gt;0, &#39;R&#39;-&gt;8, &#39;Y&#39;-&gt;&#39;2&#39;\nSuch that: &quot;SEND&quot; + &quot;MORE&quot; = &quot;MONEY&quot; ,  9567 + 1085 = 10652</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;SIX&quot;,&quot;SEVEN&quot;,&quot;SEVEN&quot;], result = &quot;TWENTY&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Map &#39;S&#39;-&gt; 6, &#39;I&#39;-&gt;5, &#39;X&#39;-&gt;0, &#39;E&#39;-&gt;8, &#39;V&#39;-&gt;7, &#39;N&#39;-&gt;2, &#39;T&#39;-&gt;1, &#39;W&#39;-&gt;&#39;3&#39;, &#39;Y&#39;-&gt;4\nSuch that: &quot;SIX&quot; + &quot;SEVEN&quot; + &quot;SEVEN&quot; = &quot;TWENTY&quot; ,  650 + 68782 + 68782 = 138214</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;THIS&quot;,&quot;IS&quot;,&quot;TOO&quot;], result = &quot;FUNNY&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;LEET&quot;,&quot;CODE&quot;], result = &quot;POINT&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= words.length &lt;= 5</code></li>\n\t<li><code>1 &lt;= words[i].length,&nbsp;result.length&nbsp;&lt;= 7</code></li>\n\t<li><code>words[i], result</code>&nbsp;contains only upper case English letters.</li>\n\t<li>Number of different characters used on the expression is at most&nbsp;10.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.2K\", \"totalSubmission\": \"13.9K\", \"totalAcceptedRaw\": 5188, \"totalSubmissionRaw\": 13921, \"acRate\": \"37.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "1298", "name": "maximum-candies-you-can-get-from-boxes", "content": {"questionId": "1424", "questionFrontendId": "1298", "questionTitle": "Maximum Candies You Can Get from Boxes", "questionTitleSlug": "maximum-candies-you-can-get-from-boxes", "content": "<p>Given <code>n</code> boxes, each box is given in the format <code>[status, candies, keys, containedBoxes]</code> where:</p>\r\n\r\n<ul>\r\n\t<li><code>status[i]</code>: an integer which is <strong>1</strong> if&nbsp;<code>box[i]</code> is open and <strong>0</strong> if&nbsp;<code>box[i]</code> is closed.</li>\r\n\t<li><code>candies[i]</code>:&nbsp;an integer representing the number of candies in <code>box[i]</code>.</li>\r\n\t<li><code>keys[i]</code>: an array contains the indices of the boxes you can open with the key in <code>box[i]</code>.</li>\r\n\t<li><code>containedBoxes[i]</code>: an array contains the indices of the boxes found in <code>box[i]</code>.</li>\r\n</ul>\r\n\r\n<p>You will start with some boxes given in <code>initialBoxes</code> array. You can take all the candies in any open&nbsp;box and you can use the keys in it to open new boxes and you also can use the boxes you find in it.</p>\r\n\r\n<p>Return <em>the maximum number of candies</em> you can get following the rules above.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> status = [1,0,1,0], candies = [7,5,4,100], keys = [[],[],[1],[]], containedBoxes = [[1,2],[3],[],[]], initialBoxes = [0]\r\n<strong>Output:</strong> 16\r\n<strong>Explanation:</strong> You will be initially given box 0. You will find 7 candies in it and boxes 1 and 2. Box 1 is closed and you don&#39;t have a key for it so you will open box 2. You will find 4 candies and a key to box 1 in box 2.\r\nIn box 1, you will find 5 candies and box 3 but you will not find a key to box 3 so box 3 will remain closed.\r\nTotal number of candies collected = 7 + 4 + 5 = 16 candy.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> status = [1,0,0,0,0,0], candies = [1,1,1,1,1,1], keys = [[1,2,3,4,5],[],[],[],[],[]], containedBoxes = [[1,2,3,4,5],[],[],[],[],[]], initialBoxes = [0]\r\n<strong>Output:</strong> 6\r\n<strong>Explanation:</strong> You have initially box 0. Opening it you can find boxes 1,2,3,4 and 5 and their keys. The total number of candies will be 6.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> status = [1,1,1], candies = [100,1,100], keys = [[],[0,2],[]], containedBoxes = [[],[],[]], initialBoxes = [1]\r\n<strong>Output:</strong> 1\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> status = [1], candies = [100], keys = [[]], containedBoxes = [[]], initialBoxes = []\r\n<strong>Output:</strong> 0\r\n</pre>\r\n\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> status = [1,1,1], candies = [2,3,2], keys = [[],[],[]], containedBoxes = [[],[],[]], initialBoxes = [2,1,0]\r\n<strong>Output:</strong> 7\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= status.length &lt;= 1000</code></li>\r\n\t<li><code>status.length == candies.length == keys.length == containedBoxes.length == n</code></li>\r\n\t<li><code>status[i]</code> is <code>0</code> or <code>1</code>.</li>\r\n\t<li><code>1 &lt;= candies[i] &lt;= 1000</code></li>\r\n\t<li><code><font face=\"monospace\">0 &lt;= keys[i].length &lt;= status.length</font></code></li>\r\n\t<li><code>0 &lt;= keys[i][j] &lt; status.length</code></li>\r\n\t<li>All values in <code>keys[i]</code> are unique.</li>\r\n\t<li><code><font face=\"monospace\">0 &lt;= </font>containedBoxes<font face=\"monospace\">[i].length &lt;= status.length</font></code></li>\r\n\t<li><code>0 &lt;= containedBoxes[i][j] &lt; status.length</code></li>\r\n\t<li>All values in <code>containedBoxes[i]</code> are unique.</li>\r\n\t<li>Each box is contained in one box at most.</li>\r\n\t<li><code>0 &lt;= initialBoxes.length&nbsp;&lt;= status.length</code></li>\r\n\t<li><code><font face=\"monospace\">0 &lt;= initialBoxes[i] &lt; status.length</font></code></li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"7.1K\", \"totalSubmission\": \"12K\", \"totalAcceptedRaw\": 7123, \"totalSubmissionRaw\": 11953, \"acRate\": \"59.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1293", "name": "shortest-path-in-a-grid-with-obstacles-elimination", "content": {"questionId": "1414", "questionFrontendId": "1293", "questionTitle": "Shortest Path in a Grid with Obstacles Elimination", "questionTitleSlug": "shortest-path-in-a-grid-with-obstacles-elimination", "content": "<p>Given a <code>m * n</code> grid, where each cell is either <code>0</code> (empty)&nbsp;or <code>1</code> (obstacle).&nbsp;In one step, you can move up, down, left or right from and to an empty cell.</p>\n\n<p>Return the minimum number of steps to walk from the upper left corner&nbsp;<code>(0, 0)</code>&nbsp;to the lower right corner&nbsp;<code>(m-1, n-1)</code> given that you can eliminate&nbsp;<strong>at most</strong> <code>k</code> obstacles. If it is not possible to find such&nbsp;walk return -1.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \ngrid = \n[[0,0,0],\n&nbsp;[1,1,0],\n [0,0,0],\n&nbsp;[0,1,1],\n [0,0,0]], \nk = 1\n<strong>Output:</strong> 6\n<strong>Explanation: \n</strong>The shortest path without eliminating any obstacle is 10.&nbsp;\nThe shortest path with one obstacle elimination at position (3,2) is 6. Such path is <code>(0,0) -&gt; (0,1) -&gt; (0,2) -&gt; (1,2) -&gt; (2,2) -&gt; <strong>(3,2)</strong> -&gt; (4,2)</code>.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> \ngrid = \n[[0,1,1],\n&nbsp;[1,1,1],\n&nbsp;[1,0,0]], \nk = 1\n<strong>Output:</strong> -1\n<strong>Explanation: \n</strong>We need to eliminate at least two obstacles to find such a walk.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>grid.length&nbsp;== m</code></li>\n\t<li><code>grid[0].length&nbsp;== n</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 40</code></li>\n\t<li><code>1 &lt;= k &lt;= m*n</code></li>\n\t<li><code>grid[i][j] == 0 <strong>or</strong> 1</code></li>\n\t<li><code>grid[0][0] == grid[m-1][n-1] == 0</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"21.3K\", \"totalSubmission\": \"49.7K\", \"totalAcceptedRaw\": 21264, \"totalSubmissionRaw\": 49745, \"acRate\": \"42.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1284", "name": "minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix", "content": {"questionId": "1409", "questionFrontendId": "1284", "questionTitle": "Minimum Number of Flips to Convert Binary Matrix to Zero Matrix", "questionTitleSlug": "minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix", "content": "<p>Given a <code>m x n</code> binary matrix <code>mat</code>. In one step, you can choose one cell and flip it and all the four neighbours of it&nbsp;if they exist (Flip is changing 1 to 0 and 0 to 1). A pair of cells are called neighboors if they share one edge.</p>\n\n<p>Return the <em>minimum number of steps</em> required to convert <code>mat</code>&nbsp;to a zero matrix or <strong>-1</strong> if you cannot.</p>\n\n<p>Binary matrix is a matrix with all cells equal to 0 or 1 only.</p>\n\n<p>Zero matrix is a matrix with all cells equal to 0.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/28/matrix.png\" style=\"width: 409px; height: 86px;\" />\n<pre>\n<strong>Input:</strong> mat = [[0,0],[0,1]]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> One possible solution is to flip (1, 0) then (0, 1) and finally (1, 1) as shown.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> mat = [[0]]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Given matrix is a zero matrix. We don&#39;t need to change it.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> mat = [[1,1,1],[1,0,1],[0,0,0]]\n<strong>Output:</strong> 6\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> mat = [[1,0,0],[1,0,0]]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> Given matrix can&#39;t be a zero matrix\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m ==&nbsp;mat.length</code></li>\n\t<li><code>n ==&nbsp;mat[0].length</code></li>\n\t<li><code>1 &lt;= m&nbsp;&lt;= 3</code></li>\n\t<li><code>1 &lt;= n&nbsp;&lt;= 3</code></li>\n\t<li><code>mat[i][j]</code> is 0 or 1.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"10.1K\", \"totalSubmission\": \"14.4K\", \"totalAcceptedRaw\": 10093, \"totalSubmissionRaw\": 14438, \"acRate\": \"69.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1278", "name": "palindrome-partitioning-iii", "content": {"questionId": "1403", "questionFrontendId": "1278", "questionTitle": "Palindrome Partitioning III", "questionTitleSlug": "palindrome-partitioning-iii", "content": "<p>You are given a string&nbsp;<code>s</code> containing lowercase letters and an integer <code>k</code>. You need to :</p>\r\n\r\n<ul>\r\n\t<li>First, change some characters of <code>s</code>&nbsp;to other lowercase English letters.</li>\r\n\t<li>Then divide <code>s</code>&nbsp;into <code>k</code> non-empty disjoint substrings such that each substring is palindrome.</li>\r\n</ul>\r\n\r\n<p>Return the minimal number of characters that you need to change&nbsp;to divide the string.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;abc&quot;, k = 2\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong>&nbsp;You can split the string into &quot;ab&quot; and &quot;c&quot;, and change 1 character in &quot;ab&quot; to make it palindrome.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;aabbc&quot;, k = 3\r\n<strong>Output:</strong> 0\r\n<strong>Explanation:</strong>&nbsp;You can split the string into &quot;aa&quot;, &quot;bb&quot; and &quot;c&quot;, all of them are palindrome.</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> s = &quot;leetcode&quot;, k = 8\r\n<strong>Output:</strong> 0\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= k &lt;= s.length &lt;= 100</code>.</li>\r\n\t<li><code>s</code>&nbsp;only contains lowercase English letters.</li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"10.7K\", \"totalSubmission\": \"17.7K\", \"totalAcceptedRaw\": 10667, \"totalSubmissionRaw\": 17663, \"acRate\": \"60.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1269", "name": "number-of-ways-to-stay-in-the-same-place-after-some-steps", "content": {"questionId": "1398", "questionFrontendId": "1269", "questionTitle": "Number of Ways to Stay in the Same Place After Some Steps", "questionTitleSlug": "number-of-ways-to-stay-in-the-same-place-after-some-steps", "content": "<p>You have a pointer at index <code>0</code> in an array of size <code><font face=\"monospace\">arrLen</font></code>. At each step, you can move 1 position to the left, 1 position to the right&nbsp;in the array or stay in the same place&nbsp; (The pointer should not be placed outside the array at any time).</p>\n\n<p>Given two integers&nbsp;<code>steps</code> and <code>arrLen</code>, return the number of&nbsp;ways such that your pointer still at index <code>0</code> after <strong>exactly </strong><code><font face=\"monospace\">steps</font></code>&nbsp;steps.</p>\n\n<p>Since the answer&nbsp;may be too large,&nbsp;return it <strong>modulo</strong>&nbsp;<code>10^9 + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> steps = 3, arrLen = 2\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>There are 4 differents ways to stay at index 0 after 3 steps.\nRight, Left, Stay\nStay, Right, Left\nRight, Stay, Left\nStay, Stay, Stay\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> steps = 2, arrLen = 4\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There are 2 differents ways to stay at index 0 after 2 steps\nRight, Left\nStay, Stay\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> steps = 4, arrLen = 2\n<strong>Output:</strong> 8\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= steps &lt;= 500</code></li>\n\t<li><code>1 &lt;= arrLen&nbsp;&lt;= 10^6</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"16.8K\", \"totalSubmission\": \"38.9K\", \"totalAcceptedRaw\": 16796, \"totalSubmissionRaw\": 38906, \"acRate\": \"43.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1263", "name": "minimum-moves-to-move-a-box-to-their-target-location", "content": {"questionId": "1389", "questionFrontendId": "1263", "questionTitle": "Minimum Moves to Move a Box to Their Target Location", "questionTitleSlug": "minimum-moves-to-move-a-box-to-their-target-location", "content": "<p>Storekeeper is a&nbsp;game&nbsp;in which the player pushes boxes around in a warehouse&nbsp;trying to get them to target locations.</p>\n\n<p>The game is represented by a <code>grid</code> of size&nbsp;<code>m x n</code>, where each element is a wall, floor, or a box.</p>\n\n<p>Your task is move the box <code>&#39;B&#39;</code> to the target position <code>&#39;T&#39;</code> under the following rules:</p>\n\n<ul>\n\t<li>Player is represented by character <code>&#39;S&#39;</code>&nbsp;and&nbsp;can move up, down, left, right in the <code>grid</code> if it is a floor (empy cell).</li>\n\t<li>Floor is represented by character <code>&#39;.&#39;</code> that means free cell to walk.</li>\n\t<li>Wall is represented by character <code>&#39;#&#39;</code> that means obstacle&nbsp;&nbsp;(impossible to walk there).&nbsp;</li>\n\t<li>There is only one box <code>&#39;B&#39;</code> and one&nbsp;target cell <code>&#39;T&#39;</code> in the <code>grid</code>.</li>\n\t<li>The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box. This is a <strong>push</strong>.</li>\n\t<li>The player cannot walk through the box.</li>\n</ul>\n\n<p>Return the minimum number of <strong>pushes</strong> to move the box to the target. If there is no way to reach the target, return&nbsp;<code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/06/sample_1_1620.png\" style=\"width: 520px; height: 386px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;],\n               [&quot;#&quot;,&quot;T&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;],\n&nbsp;              [&quot;#&quot;,&quot;.&quot;,&quot;.&quot;,&quot;B&quot;,&quot;.&quot;,&quot;#&quot;],\n&nbsp;              [&quot;#&quot;,&quot;.&quot;,&quot;#&quot;,&quot;#&quot;,&quot;.&quot;,&quot;#&quot;],\n&nbsp;              [&quot;#&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;S&quot;,&quot;#&quot;],\n&nbsp;              [&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;]]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>We return only the number of times the box is pushed.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;],\n               [&quot;#&quot;,&quot;T&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;],\n&nbsp;              [&quot;#&quot;,&quot;.&quot;,&quot;.&quot;,&quot;B&quot;,&quot;.&quot;,&quot;#&quot;],\n&nbsp;              [&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;.&quot;,&quot;#&quot;],\n&nbsp;              [&quot;#&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;S&quot;,&quot;#&quot;],\n&nbsp;              [&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;]]\n<strong>Output:</strong> -1\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;],\n&nbsp;              [&quot;#&quot;,&quot;T&quot;,&quot;.&quot;,&quot;.&quot;,&quot;#&quot;,&quot;#&quot;],\n&nbsp;              [&quot;#&quot;,&quot;.&quot;,&quot;#&quot;,&quot;B&quot;,&quot;.&quot;,&quot;#&quot;],\n&nbsp;              [&quot;#&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;#&quot;],\n&nbsp;              [&quot;#&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;S&quot;,&quot;#&quot;],\n&nbsp;              [&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;]]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong>  push the box down, left, left, up and up.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;],\n&nbsp;              [&quot;#&quot;,&quot;S&quot;,&quot;#&quot;,&quot;.&quot;,&quot;B&quot;,&quot;T&quot;,&quot;#&quot;],\n&nbsp;              [&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;,&quot;#&quot;]]\n<strong>Output:</strong> -1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m ==&nbsp;grid.length</code></li>\n\t<li><code>n ==&nbsp;grid[i].length</code></li>\n\t<li><code>1 &lt;= m &lt;= 20</code></li>\n\t<li><code>1 &lt;= n &lt;= 20</code></li>\n\t<li><code>grid</code> contains only characters&nbsp;<code>&#39;.&#39;</code>, <code>&#39;#&#39;</code>,&nbsp; <code>&#39;S&#39;</code> , <code>&#39;T&#39;</code>,&nbsp;or <code>&#39;B&#39;</code>.</li>\n\t<li>There is only one character&nbsp;<code>&#39;S&#39;</code>, <code>&#39;B&#39;</code>&nbsp;<font face=\"sans-serif, Arial, Verdana, Trebuchet MS\">and&nbsp;</font><code>&#39;T&#39;</code>&nbsp;in the <code>grid</code>.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.3K\", \"totalSubmission\": \"12.4K\", \"totalAcceptedRaw\": 5278, \"totalSubmissionRaw\": 12409, \"acRate\": \"42.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1255", "name": "maximum-score-words-formed-by-letters", "content": {"questionId": "1381", "questionFrontendId": "1255", "questionTitle": "Maximum Score Words Formed by Letters", "questionTitleSlug": "maximum-score-words-formed-by-letters", "content": "<p>Given a list of <code>words</code>, list of&nbsp; single&nbsp;<code>letters</code> (might be repeating)&nbsp;and <code>score</code>&nbsp;of every character.</p>\n\n<p>Return the maximum score of <strong>any</strong> valid set of words formed by using the given letters (<code>words[i]</code> cannot be used two&nbsp;or more times).</p>\n\n<p>It is not necessary to use all characters in <code>letters</code> and each letter can only be used once. Score of letters&nbsp;<code>&#39;a&#39;</code>, <code>&#39;b&#39;</code>, <code>&#39;c&#39;</code>, ... ,<code>&#39;z&#39;</code> is given by&nbsp;<code>score[0]</code>, <code>score[1]</code>, ... , <code>score[25]</code> respectively.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;dog&quot;,&quot;cat&quot;,&quot;dad&quot;,&quot;good&quot;], letters = [&quot;a&quot;,&quot;a&quot;,&quot;c&quot;,&quot;d&quot;,&quot;d&quot;,&quot;d&quot;,&quot;g&quot;,&quot;o&quot;,&quot;o&quot;], score = [1,0,9,5,0,0,3,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0]\n<strong>Output:</strong> 23\n<strong>Explanation:</strong>\nScore  a=1, c=9, d=5, g=3, o=2\nGiven letters, we can form the words &quot;dad&quot; (5+1+5) and &quot;good&quot; (3+2+2+5) with a score of 23.\nWords &quot;dad&quot; and &quot;dog&quot; only get a score of 21.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;xxxz&quot;,&quot;ax&quot;,&quot;bx&quot;,&quot;cx&quot;], letters = [&quot;z&quot;,&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;x&quot;,&quot;x&quot;,&quot;x&quot;], score = [4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,10]\n<strong>Output:</strong> 27\n<strong>Explanation:</strong>\nScore  a=4, b=4, c=4, x=5, z=10\nGiven letters, we can form the words &quot;ax&quot; (4+5), &quot;bx&quot; (4+5) and &quot;cx&quot; (4+5) with a score of 27.\nWord &quot;xxxz&quot; only get a score of 25.</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;leetcode&quot;], letters = [&quot;l&quot;,&quot;e&quot;,&quot;t&quot;,&quot;c&quot;,&quot;o&quot;,&quot;d&quot;], score = [0,0,1,1,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong>\nLetter &quot;e&quot; can only be used once.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 14</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 15</code></li>\n\t<li><code>1 &lt;= letters.length &lt;= 100</code></li>\n\t<li><code>letters[i].length == 1</code></li>\n\t<li><code>score.length ==&nbsp;26</code></li>\n\t<li><code>0 &lt;= score[i] &lt;= 10</code></li>\n\t<li><code>words[i]</code>, <code>letters[i]</code>&nbsp;contains only lower case English letters.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"10.2K\", \"totalSubmission\": \"14.6K\", \"totalAcceptedRaw\": 10233, \"totalSubmissionRaw\": 14633, \"acRate\": \"69.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "1250", "name": "check-if-it-is-a-good-array", "content": {"questionId": "1372", "questionFrontendId": "1250", "questionTitle": "Check If It Is a Good Array", "questionTitleSlug": "check-if-it-is-a-good-array", "content": "<p>Given an array <code>nums</code> of&nbsp;positive integers. Your task is to select some subset of <code>nums</code>, multiply each element by an integer and add all these numbers.&nbsp;The array is said to be&nbsp;<strong>good&nbsp;</strong>if you can obtain a sum of&nbsp;<code>1</code>&nbsp;from the array by any possible subset and multiplicand.</p>\n\n<p>Return&nbsp;<code>True</code>&nbsp;if the array is <strong>good&nbsp;</strong>otherwise&nbsp;return&nbsp;<code>False</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [12,5,7,23]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Pick numbers 5 and 7.\n5*3 + 7*(-2) = 1\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [29,6,10]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Pick numbers 29, 6 and 10.\n29*1 + 6*(-3) + 10*(-1) = 1\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,6]\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10^9</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"8.3K\", \"totalSubmission\": \"14.7K\", \"totalAcceptedRaw\": 8283, \"totalSubmissionRaw\": 14726, \"acRate\": \"56.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "1691", "name": "maximum-height-by-stacking-cuboids", "content": {"questionId": "1367", "questionFrontendId": "1691", "questionTitle": "Maximum Height by Stacking Cuboids ", "questionTitleSlug": "maximum-height-by-stacking-cuboids", "content": "<p>Given <code>n</code> <code>cuboids</code> where the dimensions of the <code>i<sup>th</sup></code> cuboid is <code>cuboids[i] = [width<sub>i</sub>, length<sub>i</sub>, height<sub>i</sub>]</code> (<strong>0-indexed</strong>). Choose a <strong>subset</strong> of <code>cuboids</code> and place them on each other.</p>\n\n<p>You can place cuboid <code>i</code> on cuboid <code>j</code> if <code>width<sub>i</sub> &lt;= width<sub>j</sub></code> and <code>length<sub>i</sub> &lt;= length<sub>j</sub></code> and <code>height<sub>i</sub> &lt;= height<sub>j</sub></code>. You can rearrange any cuboid&#39;s dimensions by rotating it to put it on another cuboid.</p>\n\n<p>Return <em>the <strong>maximum height</strong> of the stacked</em> <code>cuboids</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/21/image.jpg\" style=\"width: 420px; height: 299px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> cuboids = [[50,45,20],[95,37,53],[45,23,12]]\n<strong>Output:</strong> 190\n<strong>Explanation:</strong>\nCuboid 1 is placed on the bottom with the 53x37 side facing down with height 95.\nCuboid 0 is placed next with the 45x20 side facing down with height 50.\nCuboid 2 is placed next with the 23x12 side facing down with height 45.\nThe total height is 95 + 50 + 45 = 190.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> cuboids = [[38,25,45],[76,35,3]]\n<strong>Output:</strong> 76\n<strong>Explanation:</strong>\nYou can&#39;t place any of the cuboids on the other.\nWe choose cuboid 1 and rotate it so that the 35x3 side is facing down and its height is 76.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> cuboids = [[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7]]\n<strong>Output:</strong> 102\n<strong>Explanation:</strong>\nAfter rearranging the cuboids, you can see that all cuboids have the same dimension.\nYou can place the 11x7 side down on all cuboids so their heights are 17.\nThe maximum height of stacked cuboids is 6 * 17 = 102.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == cuboids.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>1 &lt;= width<sub>i</sub>, length<sub>i</sub>, height<sub>i</sub> &lt;= 100</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"3.2K\", \"totalSubmission\": \"6.5K\", \"totalAcceptedRaw\": 3199, \"totalSubmissionRaw\": 6530, \"acRate\": \"49.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "1240", "name": "tiling-a-rectangle-with-the-fewest-squares", "content": {"questionId": "1361", "questionFrontendId": "1240", "questionTitle": "Tiling a Rectangle with the Fewest Squares", "questionTitleSlug": "tiling-a-rectangle-with-the-fewest-squares", "content": "<p>Given a rectangle of size&nbsp;<code>n</code>&nbsp;x <code><font face=\"monospace\">m</font></code>, find the minimum number of integer-sided squares that tile the rectangle.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/17/sample_11_1592.png\" style=\"width: 154px; height: 106px;\" /></p>\n\n<pre>\n<strong>Input:</strong> n = 2, m = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> <code>3</code> squares are necessary to cover the rectangle.\n<code>2</code> (squares of <code>1x1</code>)\n<code>1</code> (square of <code>2x2</code>)</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/17/sample_22_1592.png\" style=\"width: 224px; height: 126px;\" /></p>\n\n<pre>\n<strong>Input:</strong> n = 5, m = 8\n<strong>Output:</strong> 5\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/17/sample_33_1592.png\" style=\"width: 224px; height: 189px;\" /></p>\n\n<pre>\n<strong>Input:</strong> n = 11, m = 13\n<strong>Output:</strong> 6\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 13</code></li>\n\t<li><code>1 &lt;= m&nbsp;&lt;=&nbsp;13</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"9.9K\", \"totalSubmission\": \"18.9K\", \"totalAcceptedRaw\": 9898, \"totalSubmissionRaw\": 18949, \"acRate\": \"52.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "1225", "name": "report-contiguous-dates", "content": {"questionId": "1357", "questionFrontendId": "1225", "questionTitle": "Report Contiguous Dates", "questionTitleSlug": "report-contiguous-dates", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.3K\", \"totalSubmission\": \"8.6K\", \"totalAcceptedRaw\": 5339, \"totalSubmissionRaw\": 8573, \"acRate\": \"62.3%\"}", "similarQuestions": "[{\"title\": \"Find the Start and End Number of Continuous Ranges\", \"titleSlug\": \"find-the-start-and-end-number-of-continuous-ranges\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Missing IDs\", \"titleSlug\": \"find-the-missing-ids\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1235", "name": "maximum-profit-in-job-scheduling", "content": {"questionId": "1352", "questionFrontendId": "1235", "questionTitle": "Maximum Profit in Job Scheduling", "questionTitleSlug": "maximum-profit-in-job-scheduling", "content": "<p>We have <code>n</code> jobs, where every job&nbsp;is scheduled to be done from <code>startTime[i]</code> to <code>endTime[i]</code>, obtaining a profit&nbsp;of <code>profit[i]</code>.</p>\n\n<p>You&#39;re given the&nbsp;<code>startTime</code>&nbsp;,&nbsp;<code>endTime</code>&nbsp;and <code>profit</code>&nbsp;arrays,&nbsp;you need to output the maximum profit you can take such that there are no 2 jobs in the subset&nbsp;with overlapping time range.</p>\n\n<p>If you choose a job that ends at time <code>X</code>&nbsp;you&nbsp;will be able to start another job that starts at time <code>X</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/10/sample1_1584.png\" style=\"width: 380px; height: 154px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> startTime = [1,2,3,3], endTime = [3,4,5,6], profit = [50,10,40,70]\n<strong>Output:</strong> 120\n<strong>Explanation:</strong> The subset chosen is the first and fourth job. \nTime range [1-3]+[3-6] , we get profit of 120 = 50 + 70.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/10/sample22_1584.png\" style=\"width: 600px; height: 112px;\" /> </strong></p>\n\n<pre>\n<strong>\nInput:</strong> startTime = [1,2,3,4,6], endTime = [3,5,10,6,9], profit = [20,20,100,70,60]\n<strong>Output:</strong> 150\n<strong>Explanation:</strong> The subset chosen is the first, fourth and fifth job. \nProfit obtained 150 = 20 + 70 + 60.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/10/sample3_1584.png\" style=\"width: 400px; height: 112px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> startTime = [1,1,1], endTime = [2,3,4], profit = [5,6,4]\n<strong>Output:</strong> 6\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= startTime.length == endTime.length ==&nbsp;profit.length&nbsp;&lt;= 5 * 10^4</code></li>\n\t<li><code>1 &lt;=&nbsp;startTime[i] &lt;&nbsp;endTime[i] &lt;= 10^9</code></li>\n\t<li><code>1 &lt;=&nbsp;profit[i] &lt;= 10^4</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"25.1K\", \"totalSubmission\": \"53.9K\", \"totalAcceptedRaw\": 25064, \"totalSubmissionRaw\": 53940, \"acRate\": \"46.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "1224", "name": "maximum-equal-frequency", "content": {"questionId": "1344", "questionFrontendId": "1224", "questionTitle": "Maximum Equal Frequency", "questionTitleSlug": "maximum-equal-frequency", "content": "<p>Given an array <code>nums</code>&nbsp;of positive integers, return the longest possible length of an array prefix of <code>nums</code>, such that it is possible to remove <strong>exactly one</strong> element from this prefix so that every number that has appeared in it will have the same number of occurrences.</p>\n\n<p>If after removing one element there are no remaining elements, it&#39;s still considered that every appeared number has the same number of ocurrences (0).</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,2,1,1,5,3,3,5]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> For the subarray [2,2,1,1,5,3,3] of length 7, if we remove nums[4]=5, we will get [2,2,1,1,3,3], so that each number will appear exactly twice.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,1,2,2,2,3,3,3,4,4,4,5]\n<strong>Output:</strong> 13\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,1,2,2,2]\n<strong>Output:</strong> 5\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [10,2,8,9,3,8,1,5,2,3,7,6]\n<strong>Output:</strong> 8\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10^5</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"7.1K\", \"totalSubmission\": \"20.6K\", \"totalAcceptedRaw\": 7081, \"totalSubmissionRaw\": 20617, \"acRate\": \"34.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}]}}, {"id": "1206", "name": "design-skiplist", "content": {"questionId": "1337", "questionFrontendId": "1206", "questionTitle": "Design Skiplist", "questionTitleSlug": "design-skiplist", "content": "<p>Design a Skiplist without using any built-in libraries.</p>\r\n\r\n<p><em>A Skiplist is a data structure that takes&nbsp;O(log(n)) time&nbsp;to <code>add</code>, <code>erase</code> and <code>search</code>. Comparing with treap and red-black tree which has the same function and performance, the code length of Skiplist can be&nbsp;comparatively short and the idea behind Skiplists are just simple linked lists.</em></p>\r\n\r\n<p><em>For example:&nbsp;we have a Skiplist containing <code>[30,40,50,60,70,90]</code> and we want to add <code>80</code> and <code>45</code> into it. The&nbsp;Skiplist works this way:</em></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/09/27/1506_skiplist.gif\" style=\"width: 960px; height: 332px;\" /><br />\r\n<small>Artyom Kalinin [CC BY-SA 3.0], via <a href=\"https://commons.wikimedia.org/wiki/File:Skip_list_add_element-en.gif\" target=\"_blank\" title=\"Artyom Kalinin [CC BY-SA 3.0 (https://creativecommons.org/licenses/by-sa/3.0)], via Wikimedia Commons\">Wikimedia Commons</a></small></p>\r\n\r\n<p><em>You can see there are many layers in the Skiplist. Each layer is a sorted linked list. With the help of the top layers, <code>add</code>&nbsp;,&nbsp;<code>erase</code>&nbsp;and <code>search&nbsp;</code>can be faster than O(n).&nbsp;It can be proven&nbsp;that the average time complexity for each operation is O(log(n)) and space complexity is O(n).</em></p>\r\n\r\n<p>To be specific, your design should include these functions:</p>\r\n\r\n<ul>\r\n\t<li><code>bool search(int target)</code> : Return whether&nbsp;the <code>target</code> exists in the Skiplist&nbsp;or not.</li>\r\n\t<li><code>void add(int num)</code>:&nbsp;Insert a value into the SkipList.&nbsp;</li>\r\n\t<li><code>bool erase(int num)</code>: Remove a value in&nbsp;the Skiplist.&nbsp;If <code>num</code>&nbsp;does not exist in the Skiplist, do nothing and return false. If there exists multiple <code>num</code> values, removing&nbsp;any one of them is fine.</li>\r\n</ul>\r\n\r\n<p>See more about Skiplist :&nbsp;<a href=\"https://en.wikipedia.org/wiki/Skip_list\" target=\"_blank\">https://en.wikipedia.org/wiki/Skip_list</a></p>\r\n\r\n<p>Note that duplicates may exist in the Skiplist, your code needs to handle this situation.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\nSkiplist skiplist = new Skiplist();\r\n\r\nskiplist.add(1);\r\nskiplist.add(2);\r\nskiplist.add(3);\r\nskiplist.search(0);   // return false.\r\nskiplist.add(4);\r\nskiplist.search(1);   // return true.\r\nskiplist.erase(0);    // return false, 0 is not in skiplist.\r\nskiplist.erase(1);    // return true.\r\nskiplist.search(1);   // return false, 1 has already been erased.</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= num, target&nbsp;&lt;= 20000</code></li>\r\n\t<li>At most <code>50000</code>&nbsp;calls will be made to <code>search</code>, <code>add</code>, and <code>erase</code>.</li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"6K\", \"totalSubmission\": \"10.3K\", \"totalAcceptedRaw\": 6014, \"totalSubmissionRaw\": 10304, \"acRate\": \"58.4%\"}", "similarQuestions": "[{\"title\": \"Design HashSet\", \"titleSlug\": \"design-hashset\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Design HashMap\", \"titleSlug\": \"design-hashmap\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Design Linked List\", \"titleSlug\": \"design-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}]}}, {"id": "1220", "name": "count-vowels-permutation", "content": {"questionId": "1332", "questionFrontendId": "1220", "questionTitle": "Count Vowels Permutation", "questionTitleSlug": "count-vowels-permutation", "content": "<p>Given an integer <code>n</code>, your task is to count how many strings of length <code>n</code> can be formed under the following rules:</p>\n\n<ul>\n\t<li>Each character is a lower case vowel&nbsp;(<code>&#39;a&#39;</code>, <code>&#39;e&#39;</code>, <code>&#39;i&#39;</code>, <code>&#39;o&#39;</code>, <code>&#39;u&#39;</code>)</li>\n\t<li>Each vowel&nbsp;<code>&#39;a&#39;</code> may only be followed by an <code>&#39;e&#39;</code>.</li>\n\t<li>Each vowel&nbsp;<code>&#39;e&#39;</code> may only be followed by an <code>&#39;a&#39;</code>&nbsp;or an <code>&#39;i&#39;</code>.</li>\n\t<li>Each vowel&nbsp;<code>&#39;i&#39;</code> <strong>may not</strong> be followed by another <code>&#39;i&#39;</code>.</li>\n\t<li>Each vowel&nbsp;<code>&#39;o&#39;</code> may only be followed by an <code>&#39;i&#39;</code> or a&nbsp;<code>&#39;u&#39;</code>.</li>\n\t<li>Each vowel&nbsp;<code>&#39;u&#39;</code> may only be followed by an <code>&#39;a&#39;.</code></li>\n</ul>\n\n<p>Since the answer&nbsp;may be too large,&nbsp;return it modulo <code>10^9 + 7.</code></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> All possible strings are: &quot;a&quot;, &quot;e&quot;, &quot;i&quot; , &quot;o&quot; and &quot;u&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> All possible strings are: &quot;ae&quot;, &quot;ea&quot;, &quot;ei&quot;, &quot;ia&quot;, &quot;ie&quot;, &quot;io&quot;, &quot;iu&quot;, &quot;oi&quot;, &quot;ou&quot; and &quot;ua&quot;.\n</pre>\n\n<p><strong>Example 3:&nbsp;</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5\n<strong>Output:</strong> 68</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2 * 10^4</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"13.5K\", \"totalSubmission\": \"25K\", \"totalAcceptedRaw\": 13463, \"totalSubmissionRaw\": 24993, \"acRate\": \"53.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1210", "name": "minimum-moves-to-reach-target-with-rotations", "content": {"questionId": "1322", "questionFrontendId": "1210", "questionTitle": "Minimum Moves to Reach Target with Rotations", "questionTitleSlug": "minimum-moves-to-reach-target-with-rotations", "content": "<p>In an&nbsp;<code>n*n</code>&nbsp;grid, there is a snake that spans 2 cells and starts moving from the top left corner at <code>(0, 0)</code> and <code>(0, 1)</code>. The grid has empty cells represented by zeros and blocked cells represented by ones. The snake wants to reach the lower right corner at&nbsp;<code>(n-1, n-2)</code>&nbsp;and&nbsp;<code>(n-1, n-1)</code>.</p>\n\n<p>In one move the snake can:</p>\n\n<ul>\n\t<li>Move one cell to the right&nbsp;if there are no blocked cells there. This move keeps the horizontal/vertical position of the snake as it is.</li>\n\t<li>Move down one cell&nbsp;if there are no blocked cells there. This move keeps the horizontal/vertical position of the snake as it is.</li>\n\t<li>Rotate clockwise if it&#39;s in a horizontal position and the two cells under it are both empty. In that case the snake moves from&nbsp;<code>(r, c)</code>&nbsp;and&nbsp;<code>(r, c+1)</code>&nbsp;to&nbsp;<code>(r, c)</code>&nbsp;and&nbsp;<code>(r+1, c)</code>.<br />\n\t<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/09/24/image-2.png\" style=\"width: 300px; height: 134px;\" /></li>\n\t<li>Rotate counterclockwise&nbsp;if it&#39;s in a vertical position and the two cells to its right are both empty. In that case the snake moves from&nbsp;<code>(r, c)</code>&nbsp;and&nbsp;<code>(r+1, c)</code>&nbsp;to&nbsp;<code>(r, c)</code>&nbsp;and&nbsp;<code>(r, c+1)</code>.<br />\n\t<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/09/24/image-1.png\" style=\"width: 300px; height: 121px;\" /></li>\n</ul>\n\n<p>Return the minimum number of moves to reach the target.</p>\n\n<p>If there is no way to reach the target, return&nbsp;<code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/09/24/image.png\" style=\"width: 400px; height: 439px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[0,0,0,0,0,1],\n               [1,1,0,0,1,0],\n&nbsp;              [0,0,0,0,1,1],\n&nbsp;              [0,0,1,0,1,0],\n&nbsp;              [0,1,1,0,0,0],\n&nbsp;              [0,1,1,0,0,0]]\n<strong>Output:</strong> 11\n<strong>Explanation:\n</strong>One possible solution is [right, right, rotate clockwise, right, down, down, down, down, rotate counterclockwise, right, down].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[0,0,1,1,1,1],\n&nbsp;              [0,0,0,0,1,1],\n&nbsp;              [1,1,0,0,0,1],\n&nbsp;              [1,1,1,0,0,1],\n&nbsp;              [1,1,1,0,0,1],\n&nbsp;              [1,1,1,0,0,0]]\n<strong>Output:</strong> 9\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 100</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 1</code></li>\n\t<li>It is guaranteed that the snake starts at empty cells.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.5K\", \"totalSubmission\": \"12K\", \"totalAcceptedRaw\": 5544, \"totalSubmissionRaw\": 12037, \"acRate\": \"46.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1194", "name": "tournament-winners", "content": {"questionId": "1318", "questionFrontendId": "1194", "questionTitle": "Tournament Winners", "questionTitleSlug": "tournament-winners", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.9K\", \"totalSubmission\": \"11.4K\", \"totalAcceptedRaw\": 5936, \"totalSubmissionRaw\": 11398, \"acRate\": \"52.1%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1203", "name": "sort-items-by-groups-respecting-dependencies", "content": {"questionId": "1309", "questionFrontendId": "1203", "questionTitle": "Sort Items by Groups Respecting Dependencies", "questionTitleSlug": "sort-items-by-groups-respecting-dependencies", "content": "<p>There are&nbsp;<code>n</code>&nbsp;items each&nbsp;belonging to zero or one of&nbsp;<code>m</code>&nbsp;groups where <code>group[i]</code>&nbsp;is the group that the <code>i</code>-th item belongs to and it&#39;s equal to <code>-1</code>&nbsp;if the <code>i</code>-th item belongs to no group. The items and the groups are zero indexed. A group can have no item belonging to it.</p>\n\n<p>Return a sorted list of the items such that:</p>\n\n<ul>\n\t<li>The items that belong to the same group are next to each other in the sorted list.</li>\n\t<li>There are some&nbsp;relations&nbsp;between these items where&nbsp;<code>beforeItems[i]</code>&nbsp;is a list containing all the items that should come before the&nbsp;<code>i</code>-th item in the sorted array (to the left of the&nbsp;<code>i</code>-th item).</li>\n</ul>\n\n<p>Return any solution if there is more than one solution and return an <strong>empty list</strong>&nbsp;if there is no solution.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/09/11/1359_ex1.png\" style=\"width: 191px; height: 181px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 8, m = 2, group = [-1,-1,1,0,0,1,0,-1], beforeItems = [[],[6],[5],[6],[3,6],[],[],[]]\n<strong>Output:</strong> [6,3,4,1,5,2,0,7]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 8, m = 2, group = [-1,-1,1,0,0,1,0,-1], beforeItems = [[],[6],[5],[6],[3],[],[4],[]]\n<strong>Output:</strong> []\n<strong>Explanation:</strong>&nbsp;This is the same as example 1 except that 4 needs to be before 6 in the sorted list.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= m &lt;= n &lt;= 3*10^4</code></li>\n\t<li><code>group.length == beforeItems.length == n</code></li>\n\t<li><code>-1 &lt;= group[i] &lt;= m-1</code></li>\n\t<li><code>0 &lt;= beforeItems[i].length &lt;= n-1</code></li>\n\t<li><code>0 &lt;= beforeItems[i][j] &lt;= n-1</code></li>\n\t<li><code>i != beforeItems[i][j]</code></li>\n\t<li><code>beforeItems[i]&nbsp;</code>does not contain&nbsp;duplicates elements.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"7.7K\", \"totalSubmission\": \"15.9K\", \"totalAcceptedRaw\": 7748, \"totalSubmissionRaw\": 15912, \"acRate\": \"48.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Graph", "slug": "graph"}, {"name": "Topological Sort", "slug": "topological-sort"}]}}, {"id": "1192", "name": "critical-connections-in-a-network", "content": {"questionId": "1300", "questionFrontendId": "1192", "questionTitle": "Critical Connections in a Network", "questionTitleSlug": "critical-connections-in-a-network", "content": "<p>There are&nbsp;<code>n</code> servers numbered from&nbsp;<code>0</code>&nbsp;to&nbsp;<code>n-1</code> connected by&nbsp;undirected server-to-server <code>connections</code> forming a network where <code>connections[i] = [a, b]</code>&nbsp;represents a connection between servers <code>a</code>&nbsp;and <code>b</code>. Any server can reach any other server directly or indirectly through the network.</p>\n\n<p>A <em>critical connection</em>&nbsp;is a connection that, if removed, will make some server unable to reach some other server.</p>\n\n<p>Return all critical connections in the network in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/09/03/1537_ex1_2.png\" style=\"width: 198px; height: 248px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, connections = [[0,1],[1,2],[2,0],[1,3]]\n<strong>Output:</strong> [[1,3]]\n<strong>Explanation:</strong> [[3,1]] is also accepted.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10^5</code></li>\n\t<li><code>n-1 &lt;= connections.length &lt;= 10^5</code></li>\n\t<li><code>connections[i][0] != connections[i][1]</code></li>\n\t<li>There are no repeated connections.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"87.9K\", \"totalSubmission\": \"177.1K\", \"totalAcceptedRaw\": 87907, \"totalSubmissionRaw\": 177053, \"acRate\": \"49.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1483", "name": "kth-ancestor-of-a-tree-node", "content": {"questionId": "1296", "questionFrontendId": "1483", "questionTitle": "Kth Ancestor of a Tree Node", "questionTitleSlug": "kth-ancestor-of-a-tree-node", "content": "<p>You are given a tree with&nbsp;<code>n</code>&nbsp;nodes numbered from&nbsp;<code>0</code>&nbsp;to&nbsp;<code>n-1</code>&nbsp;in the form of a parent array where <code>parent[i]</code>&nbsp;is the parent of node <code>i</code>. The root of the tree is node <code>0</code>.</p>\r\n\r\n<p>Implement the function&nbsp;<code>getKthAncestor</code><code>(int node, int k)</code>&nbsp;to return the <code>k</code>-th ancestor of the given&nbsp;<code>node</code>. If there is no such ancestor, return&nbsp;<code>-1</code>.</p>\r\n\r\n<p>The&nbsp;<em>k-th&nbsp;</em><em>ancestor</em>&nbsp;of a tree node is the <code>k</code>-th node&nbsp;in the path&nbsp;from that node to the root.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/08/28/1528_ex1.png\" style=\"width: 396px; height: 262px;\" /></strong></p>\r\n\r\n<pre>\r\n<b>Input:</b>\r\n[&quot;TreeAncestor&quot;,&quot;getKthAncestor&quot;,&quot;getKthAncestor&quot;,&quot;getKthAncestor&quot;]\r\n[[7,[-1,0,0,1,1,2,2]],[3,1],[5,2],[6,3]]\r\n\r\n<b>Output:</b>\r\n[null,1,0,-1]\r\n\r\n<b>Explanation:</b>\r\nTreeAncestor treeAncestor = new TreeAncestor(7, [-1, 0, 0, 1, 1, 2, 2]);\r\n\r\ntreeAncestor.getKthAncestor(3, 1);  // returns 1 which is the parent of 3\r\ntreeAncestor.getKthAncestor(5, 2);  // returns 0 which is the grandparent of 5\r\ntreeAncestor.getKthAncestor(6, 3);  // returns -1 because there is no such ancestor\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= k &lt;=&nbsp;n &lt;= 5*10^4</code></li>\r\n\t<li><code>parent[0] == -1</code>&nbsp;indicating that&nbsp;<code>0</code>&nbsp;is the root node.</li>\r\n\t<li><code>0 &lt;= parent[i] &lt; n</code>&nbsp;for all&nbsp;<code>0 &lt;&nbsp;i &lt; n</code></li>\r\n\t<li><code>0 &lt;= node &lt; n</code></li>\r\n\t<li>There will be at most <code>5*10^4</code> queries.</li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"9.3K\", \"totalSubmission\": \"31.3K\", \"totalAcceptedRaw\": 9323, \"totalSubmissionRaw\": 31260, \"acRate\": \"29.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1187", "name": "make-array-strictly-increasing", "content": {"questionId": "1290", "questionFrontendId": "1187", "questionTitle": "Make Array Strictly Increasing", "questionTitleSlug": "make-array-strictly-increasing", "content": "<p>Given two integer arrays&nbsp;<code>arr1</code> and <code>arr2</code>, return the minimum number of operations (possibly zero) needed&nbsp;to make <code>arr1</code> strictly increasing.</p>\r\n\r\n<p>In one operation, you can choose two indices&nbsp;<code>0 &lt;=&nbsp;i &lt; arr1.length</code>&nbsp;and&nbsp;<code>0 &lt;= j &lt; arr2.length</code>&nbsp;and do the assignment&nbsp;<code>arr1[i] = arr2[j]</code>.</p>\r\n\r\n<p>If there is no way to make&nbsp;<code>arr1</code>&nbsp;strictly increasing,&nbsp;return&nbsp;<code>-1</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr1 = [1,5,3,6,7], arr2 = [1,3,2,4]\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong> Replace <code>5</code> with <code>2</code>, then <code>arr1 = [1, 2, 3, 6, 7]</code>.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr1 = [1,5,3,6,7], arr2 = [4,3,1]\r\n<strong>Output:</strong> 2\r\n<strong>Explanation:</strong> Replace <code>5</code> with <code>3</code> and then replace <code>3</code> with <code>4</code>. <code>arr1 = [1, 3, 4, 6, 7]</code>.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr1 = [1,5,3,6,7], arr2 = [1,6,3,3]\r\n<strong>Output:</strong> -1\r\n<strong>Explanation:</strong> You can&#39;t make <code>arr1</code> strictly increasing.</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= arr1.length, arr2.length &lt;= 2000</code></li>\r\n\t<li><code>0 &lt;= arr1[i], arr2[i] &lt;= 10^9</code></li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"6.8K\", \"totalSubmission\": \"16.3K\", \"totalAcceptedRaw\": 6770, \"totalSubmissionRaw\": 16278, \"acRate\": \"41.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1425", "name": "constrained-subsequence-sum", "content": {"questionId": "1286", "questionFrontendId": "1425", "questionTitle": "Constrained Subsequence Sum", "questionTitleSlug": "constrained-subsequence-sum", "content": "<p>Given an integer array <code>nums</code> and an integer <code>k</code>, return the maximum sum of a <strong>non-empty</strong> subsequence of that array such that for every two <strong>consecutive</strong> integers in the subsequence, <code>nums[i]</code> and <code>nums[j]</code>, where <code>i &lt; j</code>, the condition <code>j - i &lt;= k</code> is satisfied.</p>\n\n<p>A <em>subsequence</em> of an array is obtained by deleting some number of elements (can be zero) from the array, leaving the remaining elements in their original order.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [10,2,-10,5,20], k = 2\n<strong>Output:</strong> 37\n<b>Explanation:</b> The subsequence is [10, 2, 5, 20].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,-2,-3], k = 1\n<strong>Output:</strong> -1\n<b>Explanation:</b> The subsequence must be non-empty, so we choose the largest number.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [10,-2,-10,-5,20], k = 2\n<strong>Output:</strong> 23\n<b>Explanation:</b> The subsequence is [10, -2, -5, 20].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"10.5K\", \"totalSubmission\": \"23.5K\", \"totalAcceptedRaw\": 10539, \"totalSubmissionRaw\": 23526, \"acRate\": \"44.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1178", "name": "number-of-valid-words-for-each-puzzle", "content": {"questionId": "1282", "questionFrontendId": "1178", "questionTitle": "Number of Valid Words for Each Puzzle", "questionTitleSlug": "number-of-valid-words-for-each-puzzle", "content": "With respect to a given <code>puzzle</code> string, a <code>word</code> is <em>valid</em>&nbsp;if both the following conditions are satisfied:\n<ul>\n\t<li><code>word</code> contains the first letter of <code>puzzle</code>.</li>\n\t<li>For each letter in <code>word</code>, that letter is in <code>puzzle</code>.<br />\n\tFor example, if the puzzle is &quot;abcdefg&quot;, then valid words are &quot;faced&quot;, &quot;cabbage&quot;, and &quot;baggage&quot;; while invalid words are &quot;beefed&quot; (doesn&#39;t include &quot;a&quot;) and &quot;based&quot; (includes &quot;s&quot; which isn&#39;t in the puzzle).</li>\n</ul>\nReturn an array <code>answer</code>, where <code>answer[i]</code> is the number of words in the given word list&nbsp;<code>words</code> that are valid with respect to the puzzle <code>puzzles[i]</code>.\n<p>&nbsp;</p>\n<p><strong>Example :</strong></p>\n\n<pre>\n<strong>Input:</strong> \nwords = [&quot;aaaa&quot;,&quot;asas&quot;,&quot;able&quot;,&quot;ability&quot;,&quot;actt&quot;,&quot;actor&quot;,&quot;access&quot;], \npuzzles = [&quot;aboveyz&quot;,&quot;abrodyz&quot;,&quot;abslute&quot;,&quot;absoryz&quot;,&quot;actresz&quot;,&quot;gaswxyz&quot;]\n<strong>Output:</strong> [1,1,3,2,4,0]\n<strong>Explanation:</strong>\n1 valid word&nbsp;for &quot;aboveyz&quot; : &quot;aaaa&quot; \n1 valid word&nbsp;for &quot;abrodyz&quot; : &quot;aaaa&quot;\n3 valid words for &quot;abslute&quot; : &quot;aaaa&quot;, &quot;asas&quot;, &quot;able&quot;\n2 valid words for&nbsp;&quot;absoryz&quot; : &quot;aaaa&quot;, &quot;asas&quot;\n4 valid words for&nbsp;&quot;actresz&quot; : &quot;aaaa&quot;, &quot;asas&quot;, &quot;actt&quot;, &quot;access&quot;\nThere&#39;re&nbsp;no valid words for&nbsp;&quot;gaswxyz&quot; cause none of the words in the list contains letter &#39;g&#39;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 10^5</code></li>\n\t<li><code>4 &lt;= words[i].length &lt;= 50</code></li>\n\t<li><code>1 &lt;= puzzles.length &lt;= 10^4</code></li>\n\t<li><code>puzzles[i].length == 7</code></li>\n\t<li><code>words[i][j]</code>, <code>puzzles[i][j]</code> are English lowercase letters.</li>\n\t<li>Each <code>puzzles[i] </code>doesn&#39;t contain repeated characters.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"7.4K\", \"totalSubmission\": \"19.2K\", \"totalAcceptedRaw\": 7386, \"totalSubmissionRaw\": 19168, \"acRate\": \"38.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "1363", "name": "largest-multiple-of-three", "content": {"questionId": "1277", "questionFrontendId": "1363", "questionTitle": "Largest Multiple of Three", "questionTitleSlug": "largest-multiple-of-three", "content": "<p>Given an integer array of <code>digits</code>,&nbsp;return the largest multiple of <strong>three</strong> that can be formed by concatenating some of the given digits in any order.</p>\n\n<p>Since the answer may not fit in an integer data type, return the answer as a string.</p>\n\n<p>If there is no answer return an empty string.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> digits = [8,1,9]\n<strong>Output:</strong> &quot;981&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> digits = [8,6,7,1,0]\n<strong>Output:</strong> &quot;8760&quot;\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> digits = [1]\n<strong>Output:</strong> &quot;&quot;\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> digits = [0,0,0,0,0,0]\n<strong>Output:</strong> &quot;0&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= digits.length &lt;= 10^4</code></li>\n\t<li><code>0 &lt;= digits[i] &lt;= 9</code></li>\n\t<li>The returning answer must not contain unnecessary leading zeros.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"9.1K\", \"totalSubmission\": \"26.7K\", \"totalAcceptedRaw\": 9068, \"totalSubmissionRaw\": 26706, \"acRate\": \"34.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1172", "name": "dinner-plate-stacks", "content": {"questionId": "1270", "questionFrontendId": "1172", "questionTitle": "Dinner Plate Stacks", "questionTitleSlug": "dinner-plate-stacks", "content": "<p>You have an infinite number of stacks arranged in a row and numbered (left to right) from 0, each of the stacks has the same&nbsp;maximum <code>capacity</code>.</p>\n\n<p>Implement the <code>DinnerPlates</code> class:</p>\n\n<ul>\n\t<li><code>DinnerPlates(int capacity)</code> Initializes the object with the maximum <code>capacity</code> of the stacks.</li>\n\t<li><code>void push(int val)</code>&nbsp;Pushes the given positive integer <code>val</code> into the leftmost stack with size less than <code>capacity</code>.</li>\n\t<li><code>int pop()</code>&nbsp;Returns the value at the top of the rightmost non-empty stack and removes it from that stack, and returns <code>-1</code> if all stacks are empty.</li>\n\t<li><code>int popAtStack(int index)</code>&nbsp;Returns the value at the top of the stack with the given <code>index</code> and removes it from that stack, and returns -1 if the stack with that&nbsp;given <code>index</code> is empty.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<b>Input: </b>\n[&quot;DinnerPlates&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;popAtStack&quot;,&quot;push&quot;,&quot;push&quot;,&quot;popAtStack&quot;,&quot;popAtStack&quot;,&quot;pop&quot;,&quot;pop&quot;,&quot;pop&quot;,&quot;pop&quot;,&quot;pop&quot;]\n[[2],[1],[2],[3],[4],[5],[0],[20],[21],[0],[2],[],[],[],[],[]]\n<b>Output: </b>\n[null,null,null,null,null,null,2,null,null,20,21,5,4,3,1,-1]\n\n<b>Explanation: </b>\nDinnerPlates D = DinnerPlates(2);  // Initialize with capacity = 2\nD.push(1);\nD.push(2);\nD.push(3);\nD.push(4);\nD.push(5);         // The stacks are now:  2 &nbsp;4\n&nbsp;                                          1 &nbsp;3 &nbsp;5\n                                           \ufe48 \ufe48 \ufe48\nD.popAtStack(0);   // Returns 2.  The stacks are now:    &nbsp;4\n            &nbsp;                                          1 &nbsp;3 &nbsp;5\n                                                       \ufe48 \ufe48 \ufe48\nD.push(20);        // The stacks are now: 20  4\n&nbsp;                                          1 &nbsp;3 &nbsp;5\n                                           \ufe48 \ufe48 \ufe48\nD.push(21);        // The stacks are now: 20  4 21\n&nbsp;                                          1 &nbsp;3 &nbsp;5\n                                           \ufe48 \ufe48 \ufe48\nD.popAtStack(0);   // Returns 20.  The stacks are now:     4 21\n             &nbsp;                                          1 &nbsp;3 &nbsp;5\n                                                        \ufe48 \ufe48 \ufe48\nD.popAtStack(2);   // Returns 21.  The stacks are now:     4\n             &nbsp;                                          1 &nbsp;3 &nbsp;5\n                                                        \ufe48 \ufe48 \ufe48 \nD.pop()            // Returns 5.  The stacks are now:      4\n             &nbsp;                                          1 &nbsp;3 \n                                                        \ufe48 \ufe48  \nD.pop()            // Returns 4.  The stacks are now:   1 &nbsp;3 \n                                                        \ufe48 \ufe48   \nD.pop()            // Returns 3.  The stacks are now:   1 \n                                                        \ufe48   \nD.pop()            // Returns 1.  There are no stacks.\nD.pop()            // Returns -1.  There are still no stacks.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= capacity&nbsp;&lt;= 20000</code></li>\n\t<li><code>1 &lt;= val&nbsp;&lt;= 20000</code></li>\n\t<li><code>0 &lt;= index&nbsp;&lt;= 100000</code></li>\n\t<li>At most <code>200000</code>&nbsp;calls will be made to <code>push</code>, <code>pop</code>, and <code>popAtStack</code>.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"9.8K\", \"totalSubmission\": \"26K\", \"totalAcceptedRaw\": 9838, \"totalSubmissionRaw\": 26017, \"acRate\": \"37.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}]}}, {"id": "1159", "name": "market-analysis-ii", "content": {"questionId": "1269", "questionFrontendId": "1159", "questionTitle": "Market Analysis II", "questionTitleSlug": "market-analysis-ii", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"6.7K\", \"totalSubmission\": \"12.1K\", \"totalAcceptedRaw\": 6695, \"totalSubmissionRaw\": 12131, \"acRate\": \"55.2%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1157", "name": "online-majority-element-in-subarray", "content": {"questionId": "1262", "questionFrontendId": "1157", "questionTitle": "Online Majority Element In Subarray", "questionTitleSlug": "online-majority-element-in-subarray", "content": "<p>Implementing the class <code>MajorityChecker</code>, which has the following API:</p>\r\n\r\n<ul>\r\n\t<li><code>MajorityChecker(int[] arr)</code> constructs an instance of MajorityChecker with the given array <code>arr</code>;</li>\r\n\t<li><code>int query(int left, int right, int threshold)</code>&nbsp;has arguments&nbsp;such that:\r\n\t<ul>\r\n\t\t<li><code>0 &lt;= left&nbsp;&lt;= right&nbsp;&lt; arr.length</code> representing a subarray of <code>arr</code>;</li>\r\n\t\t<li><code>2 * threshold &gt; right - left + 1</code>, ie. the threshold is always a strict majority of the length of&nbsp;the subarray</li>\r\n\t</ul>\r\n\t</li>\r\n</ul>\r\n\r\n<p>Each&nbsp;<code>query(...)</code> returns the element in <code>arr[left], arr[left+1], ..., arr[right]</code> that occurs at least <code>threshold</code> times, or <code>-1</code> if no such element exists.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\nMajorityChecker majorityChecker = new MajorityChecker([1,1,2,2,1,1]);\r\nmajorityChecker.query(0,5,4); // returns 1\r\nmajorityChecker.query(0,3,3); // returns -1\r\nmajorityChecker.query(2,3,2); // returns 2\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= arr.length &lt;=&nbsp;20000</code></li>\r\n\t<li><code>1 &lt;= arr[i]&nbsp;&lt;=&nbsp;20000</code></li>\r\n\t<li>For each query, <code>0 &lt;= left &lt;= right &lt; len(arr)</code></li>\r\n\t<li>For each query, <code>2 * threshold &gt; right - left + 1</code></li>\r\n\t<li>The number of queries is at most <code>10000</code></li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"8.4K\", \"totalSubmission\": \"21.4K\", \"totalAcceptedRaw\": 8428, \"totalSubmissionRaw\": 21371, \"acRate\": \"39.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Binary Search", "slug": "binary-search"}, {"name": "Segment Tree", "slug": "segment-tree"}]}}, {"id": "1632", "name": "rank-transform-of-a-matrix", "content": {"questionId": "1257", "questionFrontendId": "1632", "questionTitle": "Rank Transform of a Matrix", "questionTitleSlug": "rank-transform-of-a-matrix", "content": "<p>Given an <code>m x n</code> <code>matrix</code>, return <em>a new matrix </em><code>answer</code><em> where </em><code>answer[row][col]</code><em> is the </em><em><strong>rank</strong> of </em><code>matrix[row][col]</code>.</p>\n\n<p>The <strong>rank</strong> is an <strong>integer</strong> that represents how large an element is compared to other elements. It is calculated using the following rules:</p>\n\n<ul>\n\t<li>The rank is an integer starting from <code>1</code>.</li>\n\t<li>If two elements <code>p</code> and <code>q</code> are in the <strong>same row or column</strong>, then:\n\t<ul>\n\t\t<li>If <code>p &lt; q</code> then <code>rank(p) &lt; rank(q)</code></li>\n\t\t<li>If <code>p == q</code> then <code>rank(p) == rank(q)</code></li>\n\t\t<li>If <code>p &gt; q</code> then <code>rank(p) &gt; rank(q)</code></li>\n\t</ul>\n\t</li>\n\t<li>The <strong>rank</strong> should be as <strong>small</strong> as possible.</li>\n</ul>\n\n<p>It is guaranteed that <code>answer</code> is unique under the given rules.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/18/rank1.jpg\" style=\"width: 442px; height: 162px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,2],[3,4]]\n<strong>Output:</strong> [[1,2],[2,3]]\n<strong>Explanation:</strong>\nThe rank of matrix[0][0] is 1 because it is the smallest integer in its row and column.\nThe rank of matrix[0][1] is 2 because matrix[0][1] &gt; matrix[0][0] and matrix[0][0] is rank 1.\nThe rank of matrix[1][0] is 2 because matrix[1][0] &gt; matrix[0][0] and matrix[0][0] is rank 1.\nThe rank of matrix[1][1] is 3 because matrix[1][1] &gt; matrix[0][1], matrix[1][1] &gt; matrix[1][0], and both matrix[0][1] and matrix[1][0] are rank 2.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/18/rank2.jpg\" style=\"width: 442px; height: 162px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[7,7],[7,7]]\n<strong>Output:</strong> [[1,1],[1,1]]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/18/rank3.jpg\" style=\"width: 601px; height: 322px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[20,-21,14],[-19,4,19],[22,-47,24],[-19,4,19]]\n<strong>Output:</strong> [[4,2,3],[1,3,4],[5,1,6],[1,3,4]]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/18/rank4.jpg\" style=\"width: 601px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[7,3,6],[1,4,5],[9,8,2]]\n<strong>Output:</strong> [[5,1,4],[1,2,3],[6,3,1]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 500</code></li>\n\t<li><code>-10<sup>9</sup> &lt;= matrix[row][col] &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"2.8K\", \"totalSubmission\": \"9.3K\", \"totalAcceptedRaw\": 2764, \"totalSubmissionRaw\": 9255, \"acRate\": \"29.9%\"}", "similarQuestions": "[{\"title\": \"Rank Transform of an Array\", \"titleSlug\": \"rank-transform-of-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}, {"name": "Union Find", "slug": "union-find"}]}}, {"id": "1330", "name": "reverse-subarray-to-maximize-array-value", "content": {"questionId": "1255", "questionFrontendId": "1330", "questionTitle": "Reverse Subarray To Maximize Array Value", "questionTitleSlug": "reverse-subarray-to-maximize-array-value", "content": "<p>You are given an integer array <code>nums</code>. The <em>value</em> of this array is defined as the sum of <code>|nums[i]-nums[i+1]|</code>&nbsp;for all&nbsp;<code>0 &lt;= i &lt; nums.length-1</code>.</p>\r\n\r\n<p>You are allowed to select any subarray of the given array and reverse it. You can perform this operation <strong>only once</strong>.</p>\r\n\r\n<p>Find maximum possible value of the final array.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [2,3,1,5,4]\r\n<strong>Output:</strong> 10\r\n<b>Explanation: </b>By reversing the subarray [3,1,5] the array becomes [2,5,1,3,4] whose value is 10.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [2,4,9,24,2,1,10]\r\n<strong>Output:</strong> 68\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= nums.length &lt;= 3*10^4</code></li>\r\n\t<li><code>-10^5 &lt;= nums[i] &lt;= 10^5</code></li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"2.6K\", \"totalSubmission\": \"7.2K\", \"totalAcceptedRaw\": 2623, \"totalSubmissionRaw\": 7248, \"acRate\": \"36.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Math", "slug": "math"}]}}, {"id": "1147", "name": "longest-chunked-palindrome-decomposition", "content": {"questionId": "1251", "questionFrontendId": "1147", "questionTitle": "Longest Chunked Palindrome Decomposition", "questionTitleSlug": "longest-chunked-palindrome-decomposition", "content": "<p>Return the largest possible <code>k</code>&nbsp;such that there exists&nbsp;<code>a_1, a_2, ..., a_k</code>&nbsp;such that:</p>\r\n\r\n<ul>\r\n\t<li>Each <code>a_i</code> is a non-empty string;</li>\r\n\t<li>Their concatenation <code>a_1 + a_2 + ... + a_k</code> is equal to <code>text</code>;</li>\r\n\t<li>For all <code>1 &lt;= i &lt;= k</code>,&nbsp;&nbsp;<code>a_i = a_{k+1 - i}</code>.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> text = &quot;ghiabcdefhelloadamhelloabcdefghi&quot;\r\n<strong>Output:</strong> 7\r\n<strong>Explanation:</strong> We can split the string on &quot;(ghi)(abcdef)(hello)(adam)(hello)(abcdef)(ghi)&quot;.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> text = &quot;merchant&quot;\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong> We can split the string on &quot;(merchant)&quot;.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> text = &quot;antaprezatepzapreanta&quot;\r\n<strong>Output:</strong> 11\r\n<strong>Explanation:</strong> We can split the string on &quot;(a)(nt)(a)(pre)(za)(tpe)(za)(pre)(a)(nt)(a)&quot;.\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> text = &quot;aaa&quot;\r\n<strong>Output:</strong> 3\r\n<strong>Explanation:</strong> We can split the string on &quot;(a)(a)(a)&quot;.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>text</code> consists only of lowercase English characters.</li>\r\n\t<li><code>1 &lt;= text.length &lt;= 1000</code></li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"11.1K\", \"totalSubmission\": \"18.8K\", \"totalAcceptedRaw\": 11120, \"totalSubmissionRaw\": 18808, \"acRate\": \"59.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Rolling Hash", "slug": "rolling-hash"}]}}, {"id": "1316", "name": "distinct-echo-substrings", "content": {"questionId": "1244", "questionFrontendId": "1316", "questionTitle": "Distinct Echo Substrings", "questionTitleSlug": "distinct-echo-substrings", "content": "<p>Return the number of <strong>distinct</strong> non-empty substrings of <code>text</code>&nbsp;that can be written as the concatenation of some string with itself (i.e. it can be written as <code>a + a</code>&nbsp;where <code>a</code> is some string).</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;abcabcabc&quot;\n<strong>Output:</strong> 3\n<b>Explanation: </b>The 3 substrings are &quot;abcabc&quot;, &quot;bcabca&quot; and &quot;cabcab&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;leetcodeleetcode&quot;\n<strong>Output:</strong> 2\n<b>Explanation: </b>The 2 substrings are &quot;ee&quot; and &quot;leetcodeleetcode&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= text.length &lt;= 2000</code></li>\n\t<li><code>text</code>&nbsp;has only lowercase English letters.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"7.9K\", \"totalSubmission\": \"15.9K\", \"totalAcceptedRaw\": 7876, \"totalSubmissionRaw\": 15918, \"acRate\": \"49.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Rolling Hash", "slug": "rolling-hash"}]}}, {"id": "1301", "name": "number-of-paths-with-max-score", "content": {"questionId": "1234", "questionFrontendId": "1301", "questionTitle": "Number of Paths with Max Score", "questionTitleSlug": "number-of-paths-with-max-score", "content": "<p>You are given a square <code>board</code>&nbsp;of characters. You can move on the board starting at the bottom right square marked with the character&nbsp;<code>&#39;S&#39;</code>.</p>\r\n\r\n<p>You need&nbsp;to reach the top left square marked with the character <code>&#39;E&#39;</code>. The rest of the squares are labeled either with a numeric character&nbsp;<code>1, 2, ..., 9</code> or with an obstacle <code>&#39;X&#39;</code>. In one move you can go up, left or up-left (diagonally) only if there is no obstacle there.</p>\r\n\r\n<p>Return a list of two integers: the first integer is the maximum sum of numeric characters you can collect, and the second is the number of such paths that you can take to get that maximum sum, <strong>taken modulo <code>10^9 + 7</code></strong>.</p>\r\n\r\n<p>In case there is no path, return&nbsp;<code>[0, 0]</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n<pre><strong>Input:</strong> board = [\"E23\",\"2X2\",\"12S\"]\r\n<strong>Output:</strong> [7,1]\r\n</pre><p><strong>Example 2:</strong></p>\r\n<pre><strong>Input:</strong> board = [\"E12\",\"1X1\",\"21S\"]\r\n<strong>Output:</strong> [4,2]\r\n</pre><p><strong>Example 3:</strong></p>\r\n<pre><strong>Input:</strong> board = [\"E11\",\"XXX\",\"11S\"]\r\n<strong>Output:</strong> [0,0]\r\n</pre>\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>2 &lt;= board.length == board[i].length &lt;= 100</code></li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"6.2K\", \"totalSubmission\": \"16.4K\", \"totalAcceptedRaw\": 6217, \"totalSubmissionRaw\": 16368, \"acRate\": \"38.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1274", "name": "number-of-ships-in-a-rectangle", "content": {"questionId": "1233", "questionFrontendId": "1274", "questionTitle": "Number of Ships in a Rectangle", "questionTitleSlug": "number-of-ships-in-a-rectangle", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"8K\", \"totalSubmission\": \"12.1K\", \"totalAcceptedRaw\": 7979, \"totalSubmissionRaw\": 12133, \"acRate\": \"65.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Divide and Conquer", "slug": "divide-and-conquer"}]}}, {"id": "1127", "name": "user-purchase-platform", "content": {"questionId": "1226", "questionFrontendId": "1127", "questionTitle": "User Purchase Platform", "questionTitleSlug": "user-purchase-platform", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.9K\", \"totalSubmission\": \"11.8K\", \"totalAcceptedRaw\": 5925, \"totalSubmissionRaw\": 11787, \"acRate\": \"50.3%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1289", "name": "minimum-falling-path-sum-ii", "content": {"questionId": "1224", "questionFrontendId": "1289", "questionTitle": "Minimum Falling Path Sum II", "questionTitleSlug": "minimum-falling-path-sum-ii", "content": "<p>Given a square grid&nbsp;of integers&nbsp;<code>arr</code>, a <em>falling path with non-zero shifts</em>&nbsp;is a choice of&nbsp;exactly one element from each row of <code>arr</code>, such that no two elements chosen in adjacent rows are in&nbsp;the same column.</p>\n\n<p>Return the&nbsp;minimum&nbsp;sum of a falling path with non-zero shifts.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [[1,2,3],[4,5,6],[7,8,9]]\n<strong>Output:</strong> 13\n<strong>Explanation: </strong>\nThe possible falling paths are:\n[1,5,9], [1,5,7], [1,6,7], [1,6,8],\n[2,4,8], [2,4,9], [2,6,7], [2,6,8],\n[3,4,8], [3,4,9], [3,5,7], [3,5,9]\nThe falling path with the smallest sum is&nbsp;[1,5,7], so the answer is&nbsp;13.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length == arr[i].length &lt;= 200</code></li>\n\t<li><code>-99 &lt;= arr[i][j] &lt;= 99</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"13.6K\", \"totalSubmission\": \"21.9K\", \"totalAcceptedRaw\": 13616, \"totalSubmissionRaw\": 21904, \"acRate\": \"62.2%\"}", "similarQuestions": "[{\"title\": \"Minimum Falling Path Sum\", \"titleSlug\": \"minimum-falling-path-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1627", "name": "graph-connectivity-with-threshold", "content": {"questionId": "1223", "questionFrontendId": "1627", "questionTitle": "Graph Connectivity With Threshold", "questionTitleSlug": "graph-connectivity-with-threshold", "content": "<p>We have <code>n</code> cities labeled from <code>1</code> to <code>n</code>. Two different cities with labels <code>x</code> and <code>y</code> are directly connected by a bidirectional road if and only if <code>x</code> and <code>y</code> share a common divisor <strong>strictly greater</strong> than some <code>threshold</code>. More formally, cities with labels <code>x</code> and <code>y</code> have a road between them if there exists an integer <code>z</code> such that all of the following are true:</p>\n\n<ul>\n\t<li><code>x % z == 0</code>,</li>\n\t<li><code>y % z == 0</code>, and</li>\n\t<li><code>z &gt; threshold</code>.</li>\n</ul>\n\n<p>Given the two integers, <code>n</code> and <code>threshold</code>, and an array of <code>queries</code>, you must determine for each <code>queries[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> if cities <code>a<sub>i</sub></code> and <code>b<sub>i</sub></code> are connected (i.e. there is some path between them).</p>\n\n<p>Return <em>an array </em><code>answer</code><em>, where </em><code>answer.length == queries.length</code><em> and </em><code>answer[i]</code><em> is </em><code>true</code><em> if for the </em><code>i<sup>th</sup></code><em> query, there is a path between </em><code>a<sub>i</sub></code><em> and </em><code>b<sub>i</sub></code><em>, or </em><code>answer[i]</code><em> is </em><code>false</code><em> if there is no path.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/09/ex1.jpg\" style=\"width: 382px; height: 181px;\" />\n<pre>\n<strong>Input:</strong> n = 6, threshold = 2, queries = [[1,4],[2,5],[3,6]]\n<strong>Output:</strong> [false,false,true]\n<strong>Explanation:</strong> The divisors for each number:\n1:   1\n2:   1, 2\n3:   1, <u>3</u>\n4:   1, 2, <u>4</u>\n5:   1, <u>5</u>\n6:   1, 2, <u>3</u>, <u>6</u>\nUsing the underlined divisors above the threshold, only cities 3 and 6 share a common divisor, so they are the\nonly ones directly connected. The result of each query:\n[1,4]   1 is not connected to 4\n[2,5]   2 is not connected to 5\n[3,6]   3 is connected to 6 through path 3--6\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/10/tmp.jpg\" style=\"width: 532px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> n = 6, threshold = 0, queries = [[4,5],[3,4],[3,2],[2,6],[1,3]]\n<strong>Output:</strong> [true,true,true,true,true]\n<strong>Explanation:</strong> The divisors for each number are the same as the previous example. However, since the threshold is 0,\nall divisors can be used. Since all numbers share 1 as a divisor, all cities are connected.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/17/ex3.jpg\" style=\"width: 282px; height: 282px;\" />\n<pre>\n<strong>Input:</strong> n = 5, threshold = 1, queries = [[4,5],[4,5],[3,2],[2,3],[3,4]]\n<strong>Output:</strong> [false,false,false,false,false]\n<strong>Explanation:</strong> Only cities 2 and 4 share a common divisor 2 which is strictly greater than the threshold 1, so they are the only ones directly connected.\nPlease notice that there can be multiple queries for the same pair of nodes [x, y], and that the query [x, y] is equivalent to the query [y, x].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= threshold &lt;= n</code></li>\n\t<li><code>1 &lt;= queries.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>queries[i].length == 2</code></li>\n\t<li><code>1 &lt;= a<sub>i</sub>, b<sub>i</sub> &lt;= cities</code></li>\n\t<li><code>a<sub>i</sub> != b<sub>i</sub></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"4.8K\", \"totalSubmission\": \"12.7K\", \"totalAcceptedRaw\": 4775, \"totalSubmissionRaw\": 12697, \"acRate\": \"37.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Union Find", "slug": "union-find"}]}}, {"id": "1125", "name": "smallest-sufficient-team", "content": {"questionId": "1220", "questionFrontendId": "1125", "questionTitle": "Smallest Sufficient Team", "questionTitleSlug": "smallest-sufficient-team", "content": "<p>In a project, you have a list of required skills <code>req_skills</code>,&nbsp;and a list of <code>people</code>.&nbsp; The i-th person <code>people[i]</code>&nbsp;contains a list of skills that person has.</p>\n\n<p>Consider a <em>sufficient team</em>: a set of people such that for every required skill in <code>req_skills</code>, there is at least one person in the team who has that skill.&nbsp; We can represent these teams by the index of each person: for example, <code>team = [0, 1, 3]</code> represents the people with skills <code>people[0]</code>, <code>people[1]</code>, and <code>people[3]</code>.</p>\n\n<p>Return <strong>any</strong>&nbsp;sufficient team of the smallest possible size, represented by the index of each person.</p>\n\n<p>You may return the answer in any order.&nbsp; It is guaranteed an answer exists.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> req_skills = [\"java\",\"nodejs\",\"reactjs\"], people = [[\"java\"],[\"nodejs\"],[\"nodejs\",\"reactjs\"]]\n<strong>Output:</strong> [0,2]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> req_skills = [\"algorithms\",\"math\",\"java\",\"reactjs\",\"csharp\",\"aws\"], people = [[\"algorithms\",\"math\",\"java\"],[\"algorithms\",\"math\",\"reactjs\"],[\"java\",\"csharp\",\"aws\"],[\"reactjs\",\"csharp\"],[\"csharp\",\"math\"],[\"aws\",\"java\"]]\n<strong>Output:</strong> [1,2]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= req_skills.length &lt;= 16</code></li>\n\t<li><code>1 &lt;= people.length &lt;= 60</code></li>\n\t<li><code>1 &lt;= people[i].length, req_skills[i].length, people[i][j].length&nbsp;&lt;= 16</code></li>\n\t<li>Elements of <code>req_skills</code> and <code>people[i]</code> are (respectively) distinct.</li>\n\t<li><code>req_skills[i][j], people[i][j][k]</code> are&nbsp;lowercase English letters.</li>\n\t<li>Every skill in <code>people[i]</code>&nbsp;is a skill in <code>req_skills</code>.</li>\n\t<li>It is guaranteed a sufficient team exists.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"10.7K\", \"totalSubmission\": \"22.8K\", \"totalAcceptedRaw\": 10715, \"totalSubmissionRaw\": 22826, \"acRate\": \"46.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "1259", "name": "handshakes-that-dont-cross", "content": {"questionId": "1213", "questionFrontendId": "1259", "questionTitle": "Handshakes That Don't Cross", "questionTitleSlug": "handshakes-that-dont-cross", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"3.3K\", \"totalSubmission\": \"6.2K\", \"totalAcceptedRaw\": 3342, \"totalSubmissionRaw\": 6168, \"acRate\": \"54.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1246", "name": "palindrome-removal", "content": {"questionId": "1202", "questionFrontendId": "1246", "questionTitle": "Palindrome Removal", "questionTitleSlug": "palindrome-removal", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"6.4K\", \"totalSubmission\": \"14K\", \"totalAcceptedRaw\": 6417, \"totalSubmissionRaw\": 14008, \"acRate\": \"45.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1106", "name": "parsing-a-boolean-expression", "content": {"questionId": "1197", "questionFrontendId": "1106", "questionTitle": "Parsing A Boolean Expression", "questionTitleSlug": "parsing-a-boolean-expression", "content": "<p>Return the result of evaluating a given boolean <code>expression</code>, represented as a string.</p>\n\n<p>An expression can either be:</p>\n\n<ul>\n\t<li><code>&quot;t&quot;</code>, evaluating to <code>True</code>;</li>\n\t<li><code>&quot;f&quot;</code>, evaluating to <code>False</code>;</li>\n\t<li><code>&quot;!(expr)&quot;</code>, evaluating to the logical NOT of the inner expression <code>expr</code>;</li>\n\t<li><code>&quot;&amp;(expr1,expr2,...)&quot;</code>, evaluating to the logical AND of 2 or more inner expressions <code>expr1, expr2, ...</code>;</li>\n\t<li><code>&quot;|(expr1,expr2,...)&quot;</code>, evaluating to the logical OR of 2 or more inner expressions <code>expr1, expr2, ...</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> expression = &quot;!(f)&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> expression = &quot;|(f,t)&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> expression = &quot;&amp;(t,f)&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> expression = &quot;|(&amp;(t,f,t),!(t))&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= expression.length &lt;= 20000</code></li>\n\t<li><code>expression[i]</code>&nbsp;consists of characters in <code>{&#39;(&#39;, &#39;)&#39;, &#39;&amp;&#39;, &#39;|&#39;, &#39;!&#39;, &#39;t&#39;, &#39;f&#39;, &#39;,&#39;}</code>.</li>\n\t<li><code>expression</code> is a valid expression representing a boolean, as given in the description.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"12K\", \"totalSubmission\": \"20.4K\", \"totalAcceptedRaw\": 12001, \"totalSubmissionRaw\": 20355, \"acRate\": \"59.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "1097", "name": "game-play-analysis-v", "content": {"questionId": "1193", "questionFrontendId": "1097", "questionTitle": "Game Play Analysis V", "questionTitleSlug": "game-play-analysis-v", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"6.6K\", \"totalSubmission\": \"11.7K\", \"totalAcceptedRaw\": 6552, \"totalSubmissionRaw\": 11653, \"acRate\": \"56.2%\"}", "similarQuestions": "[{\"title\": \"Game Play Analysis IV\", \"titleSlug\": \"game-play-analysis-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "1231", "name": "divide-chocolate", "content": {"questionId": "1192", "questionFrontendId": "1231", "questionTitle": "Divide Chocolate", "questionTitleSlug": "divide-chocolate", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"20.9K\", \"totalSubmission\": \"39.2K\", \"totalAcceptedRaw\": 20927, \"totalSubmissionRaw\": 39245, \"acRate\": \"53.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "1096", "name": "brace-expansion-ii", "content": {"questionId": "1188", "questionFrontendId": "1096", "questionTitle": "Brace Expansion II", "questionTitleSlug": "brace-expansion-ii", "content": "<p>Under a grammar given below, strings can represent a set of lowercase words.&nbsp; Let&#39;s&nbsp;use <code>R(expr)</code>&nbsp;to denote the <strong>set</strong> of words the expression represents.</p>\n\n<p>Grammar can best be understood through simple examples:</p>\n\n<ul>\n\t<li>Single letters represent a singleton set containing that word.\n\t<ul>\n\t\t<li><code>R(&quot;a&quot;) = {&quot;a&quot;}</code></li>\n\t\t<li><code>R(&quot;w&quot;) = {&quot;w&quot;}</code></li>\n\t</ul>\n\t</li>\n\t<li>When we take a comma delimited list of 2 or more expressions, we take the union of possibilities.\n\t<ul>\n\t\t<li><code>R(&quot;{a,b,c}&quot;) = {&quot;a&quot;,&quot;b&quot;,&quot;c&quot;}</code></li>\n\t\t<li><code>R(&quot;{{a,b},{b,c}}&quot;) = {&quot;a&quot;,&quot;b&quot;,&quot;c&quot;}</code>&nbsp;(notice the final set only contains each word at most once)</li>\n\t</ul>\n\t</li>\n\t<li>When we concatenate two expressions, we take the set of possible concatenations between two words where the first word comes from the first expression and the second word comes from the second expression.\n\t<ul>\n\t\t<li><code>R(&quot;{a,b}{c,d}&quot;) = {&quot;ac&quot;,&quot;ad&quot;,&quot;bc&quot;,&quot;bd&quot;}</code></li>\n\t\t<li><code>R(&quot;a{b,c}{d,e}f{g,h}&quot;)&nbsp;= {&quot;abdfg&quot;, &quot;abdfh&quot;, &quot;abefg&quot;, &quot;abefh&quot;, &quot;acdfg&quot;, &quot;acdfh&quot;, &quot;acefg&quot;, &quot;acefh&quot;}</code></li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>Formally, the 3 rules for our grammar:</p>\n\n<ul>\n\t<li>For every lowercase letter <code>x</code>, we have <code>R(x) = {x}</code></li>\n\t<li>For expressions <code>e_1, e_2, ... , e_k</code>&nbsp;with <code>k &gt;= 2</code>, we have <code>R({e_1,e_2,...}) = R(e_1)&nbsp;&cup; R(e_2)&nbsp;&cup; ...</code></li>\n\t<li>For&nbsp;expressions <code>e_1</code> and <code>e_2</code>, we have <code>R(e_1 + e_2) = {a + b for (a, b) in&nbsp;R(e_1)&nbsp;&times; R(e_2)}</code>, where + denotes concatenation, and &times; denotes the cartesian product.</li>\n</ul>\n\n<p>Given an <code>expression</code> representing a set of words under the given grammar, return the&nbsp;sorted list of words that the expression represents.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;{a,b}{c,{d,e}}&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">[&quot;ac&quot;,&quot;ad&quot;,&quot;ae&quot;,&quot;bc&quot;,&quot;bd&quot;,&quot;be&quot;]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span>&quot;{{a,z},a{b,c},{ab,z}}&quot;</span>\n<strong>Output: </strong><span>[&quot;a&quot;,&quot;ab&quot;,&quot;ac&quot;,&quot;z&quot;]</span>\n<strong>Explanation: </strong>Each distinct word is written only once in the final answer.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Constraints:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= expression.length &lt;= 60</code></li>\n\t<li><code>expression[i]</code> consists of <code>&#39;{&#39;</code>, <code>&#39;}&#39;</code>, <code>&#39;,&#39;</code>or lowercase English letters.</li>\n\t<li>The given&nbsp;<code>expression</code>&nbsp;represents a set of words based on the grammar given in the description.</li>\n</ol>\n</div>\n</div>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"12.5K\", \"totalSubmission\": \"20.1K\", \"totalAcceptedRaw\": 12522, \"totalSubmissionRaw\": 20073, \"acRate\": \"62.4%\"}", "similarQuestions": "[{\"title\": \"Brace Expansion\", \"titleSlug\": \"brace-expansion\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "1095", "name": "find-in-mountain-array", "content": {"questionId": "1185", "questionFrontendId": "1095", "questionTitle": "Find in Mountain Array", "questionTitleSlug": "find-in-mountain-array", "content": "<p><em>(This problem is an&nbsp;<strong>interactive problem</strong>.)</em></p>\n\n<p>You may recall that an array&nbsp;<code>A</code> is a <em>mountain array</em> if and only if:</p>\n\n<ul>\n\t<li><code>A.length &gt;= 3</code></li>\n\t<li>There exists some&nbsp;<code>i</code>&nbsp;with&nbsp;<code>0 &lt; i&nbsp;&lt; A.length - 1</code>&nbsp;such that:\n\t<ul>\n\t\t<li><code>A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i]</code></li>\n\t\t<li><code>A[i] &gt; A[i+1] &gt; ... &gt; A[A.length - 1]</code></li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>Given a mountain&nbsp;array <code>mountainArr</code>, return the <strong>minimum</strong>&nbsp;<code>index</code> such that <code>mountainArr.get(index) == target</code>.&nbsp; If such an <code>index</code>&nbsp;doesn&#39;t exist, return <code>-1</code>.</p>\n\n<p><strong>You can&#39;t access the mountain array directly.</strong>&nbsp; You may only access the array using a&nbsp;<code>MountainArray</code>&nbsp;interface:</p>\n\n<ul>\n\t<li><code>MountainArray.get(k)</code> returns the element of the array at index <code>k</code>&nbsp;(0-indexed).</li>\n\t<li><code>MountainArray.length()</code>&nbsp;returns the length of the array.</li>\n</ul>\n\n<p>Submissions making more than <code>100</code> calls to&nbsp;<code>MountainArray.get</code>&nbsp;will be judged <em>Wrong Answer</em>.&nbsp; Also, any solutions that attempt to circumvent the judge&nbsp;will result in disqualification.</p>\n\n<ol>\n</ol>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> array = [1,2,3,4,5,3,1], target = 3\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> 3 exists in the array, at index=2 and index=5. Return the minimum index, which is 2.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> array = [0,1,2,4,2,1], target = 3\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> 3 does not exist in <code>the array,</code> so we return -1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= mountain_arr.length() &lt;= 10000</code></li>\n\t<li><code>0 &lt;= target &lt;= 10^9</code></li>\n\t<li><code>0 &lt;= mountain_arr.get(index) &lt;=&nbsp;10^9</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"20.8K\", \"totalSubmission\": \"58.1K\", \"totalAcceptedRaw\": 20819, \"totalSubmissionRaw\": 58068, \"acRate\": \"35.9%\"}", "similarQuestions": "[{\"title\": \"Peak Index in a Mountain Array\", \"titleSlug\": \"peak-index-in-a-mountain-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Removals to Make Mountain Array\", \"titleSlug\": \"minimum-number-of-removals-to-make-mountain-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "1216", "name": "valid-palindrome-iii", "content": {"questionId": "1178", "questionFrontendId": "1216", "questionTitle": "Valid Palindrome III", "questionTitleSlug": "valid-palindrome-iii", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"12K\", \"totalSubmission\": \"24.4K\", \"totalAcceptedRaw\": 12001, \"totalSubmissionRaw\": 24363, \"acRate\": \"49.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1092", "name": "shortest-common-supersequence", "content": {"questionId": "1170", "questionFrontendId": "1092", "questionTitle": "Shortest Common Supersequence ", "questionTitleSlug": "shortest-common-supersequence", "content": "<p>Given two strings <code>str1</code> and <code>str2</code>,&nbsp;return the shortest string that has both <code>str1</code>&nbsp;and <code>str2</code>&nbsp;as subsequences.&nbsp;&nbsp;If multiple answers exist, you may return any of them.</p>\n\n<p><em>(A string S is a subsequence of string T if deleting some number of characters from T (possibly 0, and the characters are chosen <u>anywhere</u> from T) results in the string S.)</em></p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>str1 = <span id=\"example-input-1-1\">&quot;abac&quot;</span>, str2 = <span id=\"example-input-1-2\">&quot;cab&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;cabac&quot;</span>\n<strong>Explanation: </strong>\nstr1 = &quot;abac&quot; is a subsequence of &quot;cabac&quot; because we can delete the first &quot;c&quot;.\nstr2 = &quot;cab&quot; is a subsequence of &quot;cabac&quot; because we can delete the last &quot;ac&quot;.\nThe answer provided is the shortest such string that satisfies these properties.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= str1.length, str2.length &lt;= 1000</code></li>\n\t<li><code>str1</code> and <code>str2</code> consist of lowercase English letters.</li>\n</ol>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"18.3K\", \"totalSubmission\": \"34.7K\", \"totalAcceptedRaw\": 18290, \"totalSubmissionRaw\": 34719, \"acRate\": \"52.7%\"}", "similarQuestions": "[{\"title\": \"Longest Common Subsequence\", \"titleSlug\": \"longest-common-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1199", "name": "minimum-time-to-build-blocks", "content": {"questionId": "1167", "questionFrontendId": "1199", "questionTitle": "Minimum Time to Build Blocks", "questionTitleSlug": "minimum-time-to-build-blocks", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"2.6K\", \"totalSubmission\": \"6.7K\", \"totalAcceptedRaw\": 2576, \"totalSubmissionRaw\": 6731, \"acRate\": \"38.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1183", "name": "maximum-number-of-ones", "content": {"questionId": "1152", "questionFrontendId": "1183", "questionTitle": "Maximum Number of Ones", "questionTitleSlug": "maximum-number-of-ones", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"1.5K\", \"totalSubmission\": \"2.7K\", \"totalAcceptedRaw\": 1541, \"totalSubmissionRaw\": 2731, \"acRate\": \"56.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "1074", "name": "number-of-submatrices-that-sum-to-target", "content": {"questionId": "1145", "questionFrontendId": "1074", "questionTitle": "Number of Submatrices That Sum to Target", "questionTitleSlug": "number-of-submatrices-that-sum-to-target", "content": "<p>Given a <code>matrix</code>&nbsp;and a <code>target</code>, return the number of non-empty submatrices that sum to <font face=\"monospace\">target</font>.</p>\n\n<p>A submatrix <code>x1, y1, x2, y2</code> is the set of all cells <code>matrix[x][y]</code> with <code>x1 &lt;= x &lt;= x2</code> and <code>y1 &lt;= y &lt;= y2</code>.</p>\n\n<p>Two submatrices <code>(x1, y1, x2, y2)</code> and <code>(x1&#39;, y1&#39;, x2&#39;, y2&#39;)</code> are different if they have some coordinate&nbsp;that is different: for example, if <code>x1 != x1&#39;</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/02/mate1.jpg\" style=\"width: 242px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[0,1,0],[1,1,1],[0,1,0]], target = 0\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The four 1x1 submatrices that only contain 0.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix = [[1,-1],[-1,1]], target = 0\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The two 1x2 submatrices, plus the two 2x1 submatrices, plus the 2x2 submatrix.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix = [[904]], target = 0\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= matrix.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= matrix[0].length &lt;= 100</code></li>\n\t<li><code>-1000 &lt;= matrix[i] &lt;= 1000</code></li>\n\t<li><code>-10^8 &lt;= target &lt;= 10^8</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"22K\", \"totalSubmission\": \"35.9K\", \"totalAcceptedRaw\": 22013, \"totalSubmissionRaw\": 35941, \"acRate\": \"61.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "1168", "name": "optimize-water-distribution-in-a-village", "content": {"questionId": "1144", "questionFrontendId": "1168", "questionTitle": "Optimize Water Distribution in a Village", "questionTitleSlug": "optimize-water-distribution-in-a-village", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"9.8K\", \"totalSubmission\": \"15.9K\", \"totalAcceptedRaw\": 9848, \"totalSubmissionRaw\": 15856, \"acRate\": \"62.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Union Find", "slug": "union-find"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "1163", "name": "last-substring-in-lexicographical-order", "content": {"questionId": "1133", "questionFrontendId": "1163", "questionTitle": "Last Substring in Lexicographical Order", "questionTitleSlug": "last-substring-in-lexicographical-order", "content": "<p>Given a string <code>s</code>, return the last substring of <code>s</code> in lexicographical order.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;abab&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;bab&quot;</span>\n<strong>Explanation: </strong>The substrings are [&quot;a&quot;, &quot;ab&quot;, &quot;aba&quot;, &quot;abab&quot;, &quot;b&quot;, &quot;ba&quot;, &quot;bab&quot;]. The lexicographically maximum substring is &quot;bab&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;leetcode&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">&quot;tcode&quot;</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= s.length &lt;= 4&nbsp;* 10^5</code></li>\n\t<li><font face=\"monospace\">s</font> contains only lowercase English letters.</li>\n</ol>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"20.6K\", \"totalSubmission\": \"57K\", \"totalAcceptedRaw\": 20619, \"totalSubmissionRaw\": 56963, \"acRate\": \"36.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Suffix Array", "slug": "suffix-array"}]}}, {"id": "1153", "name": "string-transforms-into-another-string", "content": {"questionId": "1124", "questionFrontendId": "1153", "questionTitle": "String Transforms Into Another String", "questionTitleSlug": "string-transforms-into-another-string", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"28K\", \"totalSubmission\": \"77.6K\", \"totalAcceptedRaw\": 27953, \"totalSubmissionRaw\": 77637, \"acRate\": \"36.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Graph", "slug": "graph"}]}}, {"id": "1044", "name": "longest-duplicate-substring", "content": {"questionId": "1122", "questionFrontendId": "1044", "questionTitle": "Longest Duplicate Substring", "questionTitleSlug": "longest-duplicate-substring", "content": "<p>Given a string <code>s</code>, consider all <em>duplicated substrings</em>: (contiguous) substrings of s that occur 2 or more times.&nbsp;The occurrences&nbsp;may overlap.</p>\n\n<p>Return <strong>any</strong> duplicated&nbsp;substring that has the longest possible length.&nbsp;If <code>s</code> does not have a duplicated substring, the answer is <code>&quot;&quot;</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"banana\"\n<strong>Output:</strong> \"ana\"\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"abcd\"\n<strong>Output:</strong> \"\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= s.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"31.8K\", \"totalSubmission\": \"100.5K\", \"totalAcceptedRaw\": 31832, \"totalSubmissionRaw\": 100504, \"acRate\": \"31.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Binary Search", "slug": "binary-search"}, {"name": "Suffix Array", "slug": "suffix-array"}]}}, {"id": "1121", "name": "divide-array-into-increasing-sequences", "content": {"questionId": "1118", "questionFrontendId": "1121", "questionTitle": "Divide Array Into Increasing Sequences", "questionTitleSlug": "divide-array-into-increasing-sequences", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"3K\", \"totalSubmission\": \"5.3K\", \"totalAcceptedRaw\": 3047, \"totalSubmissionRaw\": 5263, \"acRate\": \"57.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "1036", "name": "escape-a-large-maze", "content": {"questionId": "1106", "questionFrontendId": "1036", "questionTitle": "Escape a Large Maze", "questionTitleSlug": "escape-a-large-maze", "content": "<p>In a 1 million by 1 million grid, the coordinates of each grid square are <code>(x, y)</code>.</p>\n\n<p>We start at the <code>source</code> square and want to reach the <code>target</code> square.&nbsp; Each move, we can walk to a 4-directionally adjacent square in the grid that isn&#39;t in the given list of <code>blocked</code> squares.</p>\n\n<p>Return <code>true</code> if and only if it is possible to reach the target square through a sequence of moves.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> blocked = [[0,1],[1,0]], source = [0,0], target = [0,2]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The target square is inaccessible starting from the source square, because we can&#39;t walk outside the grid.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> blocked = [], source = [0,0], target = [999999,999999]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Because there are no blocked cells, it&#39;s possible to reach the target square.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= blocked.length &lt;= 200</code></li>\n\t<li><code>blocked[i].length == 2</code></li>\n\t<li><code>0 &lt;= blocked[i][j] &lt; 10^6</code></li>\n\t<li><code>source.length == target.length == 2</code></li>\n\t<li><code>0 &lt;= source[i][j], target[i][j] &lt; 10^6</code></li>\n\t<li><code>source != target</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"11K\", \"totalSubmission\": \"31.6K\", \"totalAcceptedRaw\": 11035, \"totalSubmissionRaw\": 31554, \"acRate\": \"35.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "1136", "name": "parallel-courses", "content": {"questionId": "1101", "questionFrontendId": "1136", "questionTitle": "Parallel Courses", "questionTitleSlug": "parallel-courses", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"11.1K\", \"totalSubmission\": \"18.1K\", \"totalAcceptedRaw\": 11115, \"totalSubmissionRaw\": 18146, \"acRate\": \"61.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "1032", "name": "stream-of-characters", "content": {"questionId": "1097", "questionFrontendId": "1032", "questionTitle": "Stream of Characters", "questionTitleSlug": "stream-of-characters", "content": "<p>Implement the <code>StreamChecker</code> class as follows:</p>\r\n\r\n<ul>\r\n\t<li><code>StreamChecker(words)</code>: Constructor, init the data structure with the given words.</li>\r\n\t<li><code>query(letter)</code>: returns true if and only if for some <code>k &gt;= 1</code>, the last <code>k</code>&nbsp;characters queried (in order from oldest to newest, including this letter just queried) spell one of the words in the given list.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\nStreamChecker streamChecker = new StreamChecker([&quot;cd&quot;,&quot;f&quot;,&quot;kl&quot;]); // init the dictionary.\r\nstreamChecker.query(&#39;a&#39;);          // return false\r\nstreamChecker.query(&#39;b&#39;);          // return false\r\nstreamChecker.query(&#39;c&#39;);          // return false\r\nstreamChecker.query(&#39;d&#39;);          // return true, because &#39;cd&#39; is in the wordlist\r\nstreamChecker.query(&#39;e&#39;);          // return false\r\nstreamChecker.query(&#39;f&#39;);          // return true, because &#39;f&#39; is in the wordlist\r\nstreamChecker.query(&#39;g&#39;);          // return false\r\nstreamChecker.query(&#39;h&#39;);          // return false\r\nstreamChecker.query(&#39;i&#39;);          // return false\r\nstreamChecker.query(&#39;j&#39;);          // return false\r\nstreamChecker.query(&#39;k&#39;);          // return false\r\nstreamChecker.query(&#39;l&#39;);          // return true, because &#39;kl&#39; is in the wordlist\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= words.length &lt;= 2000</code></li>\r\n\t<li><code>1 &lt;= words[i].length &lt;= 2000</code></li>\r\n\t<li>Words will only consist of lowercase English letters.</li>\r\n\t<li>Queries will only consist of lowercase English letters.</li>\r\n\t<li>The number of queries is at most&nbsp;40000.</li>\r\n</ul>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"43.2K\", \"totalSubmission\": \"89K\", \"totalAcceptedRaw\": 43198, \"totalSubmissionRaw\": 89003, \"acRate\": \"48.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Trie", "slug": "trie"}]}}, {"id": "1028", "name": "recover-a-tree-from-preorder-traversal", "content": {"questionId": "1093", "questionFrontendId": "1028", "questionTitle": "Recover a Tree From Preorder Traversal", "questionTitleSlug": "recover-a-tree-from-preorder-traversal", "content": "<p>We run a&nbsp;preorder&nbsp;depth-first search (DFS) on the <code>root</code> of a binary tree.</p>\n\n<p>At each node in this traversal, we output <code>D</code> dashes (where <code>D</code> is the depth of this node), then we output the value of this node.&nbsp; If the depth of a node is <code>D</code>, the depth of its immediate child is <code>D + 1</code>.&nbsp; The depth of the <code>root</code> node is <code>0</code>.</p>\n\n<p>If a node has only one child, that child is guaranteed to be <strong>the left child</strong>.</p>\n\n<p>Given the output <code>S</code> of this traversal, recover the tree and return <em>its</em> <code>root</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/04/08/recover-a-tree-from-preorder-traversal.png\" style=\"width: 320px; height: 200px;\" />\n<pre>\n<strong>Input:</strong> S = &quot;1-2--3--4-5--6--7&quot;\n<strong>Output:</strong> [1,2,5,3,4,6,7]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/04/11/screen-shot-2019-04-10-at-114101-pm.png\" style=\"width: 256px; height: 250px;\" />\n<pre>\n<strong>Input:</strong> S = &quot;1-2--3---4-5--6---7&quot;\n<strong>Output:</strong> [1,2,5,3,null,6,null,4,null,7]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/04/11/screen-shot-2019-04-10-at-114955-pm.png\" style=\"width: 276px; height: 250px;\" />\n<pre>\n<strong>Input:</strong> S = &quot;1-401--349---90--88&quot;\n<strong>Output:</strong> [1,401,null,349,88,90]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the original tree is in the range <code>[1, 1000]</code>.</li>\n\t<li><code>1 &lt;= Node.val &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"22.8K\", \"totalSubmission\": \"32.3K\", \"totalAcceptedRaw\": 22835, \"totalSubmissionRaw\": 32340, \"acRate\": \"70.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "1088", "name": "confusing-number-ii", "content": {"questionId": "1077", "questionFrontendId": "1088", "questionTitle": "Confusing Number II", "questionTitleSlug": "confusing-number-ii", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"17.6K\", \"totalSubmission\": \"39.2K\", \"totalAcceptedRaw\": 17617, \"totalSubmissionRaw\": 39185, \"acRate\": \"45.0%\"}", "similarQuestions": "[{\"title\": \"Confusing Number\", \"titleSlug\": \"confusing-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "1067", "name": "digit-count-in-range", "content": {"questionId": "1068", "questionFrontendId": "1067", "questionTitle": "Digit Count in Range", "questionTitleSlug": "digit-count-in-range", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"1.9K\", \"totalSubmission\": \"4.7K\", \"totalAcceptedRaw\": 1925, \"totalSubmissionRaw\": 4693, \"acRate\": \"41.0%\"}", "similarQuestions": "[{\"title\": \"Number of Digit One\", \"titleSlug\": \"number-of-digit-one\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1063", "name": "number-of-valid-subarrays", "content": {"questionId": "1061", "questionFrontendId": "1063", "questionTitle": "Number of Valid Subarrays", "questionTitleSlug": "number-of-valid-subarrays", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"4.3K\", \"totalSubmission\": \"5.9K\", \"totalAcceptedRaw\": 4253, \"totalSubmissionRaw\": 5900, \"acRate\": \"72.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}]}}, {"id": "1012", "name": "numbers-with-repeated-digits", "content": {"questionId": "1057", "questionFrontendId": "1012", "questionTitle": "Numbers With Repeated Digits", "questionTitleSlug": "numbers-with-repeated-digits", "content": "<p>Given a positive integer <code>N</code>, return the number of positive integers less than or equal to <code>N</code> that have at least 1 repeated digit.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">20</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\r\n<strong>Explanation: </strong>The only positive number (&lt;= 20) with at least 1 repeated digit is 11.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">100</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">10</span>\r\n<strong>Explanation: </strong>The positive numbers (&lt;= 100) with atleast 1 repeated digit are 11, 22, 33, 44, 55, 66, 77, 88, 99, and 100.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">1000</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">262</span>\r\n</pre>\r\n</div>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span>Note:</span></strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\r\n</ol>\r\n</div>\r\n</div>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"6.3K\", \"totalSubmission\": \"16.7K\", \"totalAcceptedRaw\": 6256, \"totalSubmissionRaw\": 16652, \"acRate\": \"37.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "1001", "name": "grid-illumination", "content": {"questionId": "1043", "questionFrontendId": "1001", "questionTitle": "Grid Illumination", "questionTitleSlug": "grid-illumination", "content": "<p>You are given a <code>grid</code> of size <code>N x N</code>, and each cell of this grid has a lamp that is initially <strong>turned off</strong>.</p>\n\n<p>You are also given an array of lamp positions <code>lamps</code>, where <code>lamps[i] = [row<sub>i</sub>, col<sub>i</sub>]</code> indicates that the lamp at <code>grid[row<sub>i</sub>][col<sub>i</sub>]</code> is <strong>turned on</strong>. When a lamp is turned on, it <strong>illuminates its cell</strong> and <strong>all&nbsp;other cells</strong> in the same <strong>row, column, or diagonal</strong>.</p>\n\n<p>Finally, you are given a query array <code>queries</code>, where&nbsp;<code>queries[i] = [row<sub>i</sub>, col<sub>i</sub>]</code>. For the <code>i<sup>th</sup></code>&nbsp;query, determine whether <code>grid[row<sub>i</sub>][col<sub>i</sub>]</code> is illuminated or not. After answering the <code>i<sup>th</sup></code> query,&nbsp;<strong>turn off</strong> the lamp at&nbsp;<code>grid[row<sub>i</sub>][col<sub>i</sub>]</code> and&nbsp;its <strong>8 adjacent lamps</strong> if they exist. A lamp is adjacent if its cell shares either&nbsp;a side or corner with&nbsp;<code>grid[row<sub>i</sub>][col<sub>i</sub>]</code>.</p>\n\n<p>Return <em>an array of integers </em><code>ans</code><em>,</em><em>&nbsp;where </em><code>ans[i]</code><em> should be </em><code>1</code><em>&nbsp;if the lamp in the&nbsp;</em><code>i<sup>th</sup></code><em> query was illuminated, or&nbsp;</em><code>0</code><em>&nbsp;if the lamp was not.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/19/illu_1.jpg\" style=\"width: 750px; height: 209px;\" />\n<pre>\n<strong>Input:</strong> N = 5, lamps = [[0,0],[4,4]], queries = [[1,1],[1,0]]\n<strong>Output:</strong> [1,0]\n<strong>Explanation:</strong> We have the initial grid with all lamps turned off. In the above picture we see the grid after turning on the lamp at grid[0][0] then turning on the lamp at grid[4][4].\nThe 0<sup>th</sup>&nbsp;query asks if the lamp at grid[1][1] is illuminated or not (the blue square). It is illuminated, so set ans[0] = 1. Then, we turn off all lamps in the red square.\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/19/illu_step1.jpg\" style=\"width: 500px; height: 218px;\" />\nThe 1<sup>st</sup>&nbsp;query asks if the lamp at grid[1][0] is illuminated or not (the blue square). It is not illuminated, so set ans[1] = 0. Then, we turn off all lamps in the red rectangle.\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/19/illu_step2.jpg\" style=\"width: 500px; height: 219px;\" />\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> N = 5, lamps = [[0,0],[4,4]], queries = [[1,1],[1,1]]\n<strong>Output:</strong> [1,1]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> N = 5, lamps = [[0,0],[0,4]], queries = [[0,4],[0,1],[1,4]]\n<strong>Output:</strong> [1,1,0]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 10<sup>9</sup></code></li>\n\t<li><code>0 &lt;= lamps.length &lt;= 20000</code></li>\n\t<li><code>lamps[i].length == 2</code></li>\n\t<li><code>0 &lt;= lamps[i][j] &lt; N</code></li>\n\t<li><code>0 &lt;= queries.length &lt;= 20000</code></li>\n\t<li><code>queries[i].length == 2</code></li>\n\t<li><code>0 &lt;= queries[i][j] &lt; N</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"9.9K\", \"totalSubmission\": \"27.1K\", \"totalAcceptedRaw\": 9888, \"totalSubmissionRaw\": 27118, \"acRate\": \"36.5%\"}", "similarQuestions": "[{\"title\": \"N-Queens\", \"titleSlug\": \"n-queens\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}]}}, {"id": "1000", "name": "minimum-cost-to-merge-stones", "content": {"questionId": "1042", "questionFrontendId": "1000", "questionTitle": "Minimum Cost to Merge Stones", "questionTitleSlug": "minimum-cost-to-merge-stones", "content": "<p>There are <code>N</code> piles of stones arranged in a row.&nbsp; The <code>i</code>-th pile has <code>stones[i]</code> stones.</p>\r\n\r\n<p>A <em>move</em> consists of merging <strong>exactly&nbsp;<code>K</code>&nbsp;consecutive</strong> piles into one pile, and the cost of this move is equal to the total number of stones in these <code>K</code> piles.</p>\r\n\r\n<p>Find the minimum cost to merge all piles of stones into one pile.&nbsp; If it is impossible, return <code>-1</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>stones = <span id=\"example-input-1-1\">[3,2,4,1]</span>, K = <span id=\"example-input-1-2\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">20</span>\r\n<strong>Explanation: </strong>\r\nWe start with [3, 2, 4, 1].\r\nWe merge [3, 2] for a cost of 5, and we are left with [5, 4, 1].\r\nWe merge [4, 1] for a cost of 5, and we are left with [5, 5].\r\nWe merge [5, 5] for a cost of 10, and we are left with [10].\r\nThe total cost was 20, and this is the minimum possible.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>stones = <span id=\"example-input-2-1\">[3,2,4,1]</span>, K = <span id=\"example-input-2-2\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">-1</span>\r\n<strong>Explanation: </strong>After any merge operation, there are 2 piles left, and we can&#39;t merge anymore.  So the task is impossible.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>stones = <span id=\"example-input-3-1\">[3,5,1,2,6]</span>, K = <span id=\"example-input-3-2\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">25</span>\r\n<strong>Explanation: </strong>\r\nWe start with [3, 5, 1, 2, 6].\r\nWe merge [5, 1, 2] for a cost of 8, and we are left with [3, 8, 6].\r\nWe merge [3, 8, 6] for a cost of 17, and we are left with [17].\r\nThe total cost was 25, and this is the minimum possible.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span>Note:</span></strong></p>\r\n\r\n<ul>\r\n\t<li><code><span>1 &lt;= stones.length &lt;= 30</span></code></li>\r\n\t<li><code><span>2 &lt;= K &lt;= 30</span></code></li>\r\n\t<li><code><span>1 &lt;= stones[i] &lt;= 100</span></code></li>\r\n</ul>\r\n</div>\r\n</div>\r\n</div>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"17.9K\", \"totalSubmission\": \"44.3K\", \"totalAcceptedRaw\": 17864, \"totalSubmissionRaw\": 44263, \"acRate\": \"40.4%\"}", "similarQuestions": "[{\"title\": \"Burst Balloons\", \"titleSlug\": \"burst-balloons\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Cost to Connect Sticks\", \"titleSlug\": \"minimum-cost-to-connect-sticks\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "996", "name": "number-of-squareful-arrays", "content": {"questionId": "1038", "questionFrontendId": "996", "questionTitle": "Number of Squareful Arrays", "questionTitleSlug": "number-of-squareful-arrays", "content": "<p>Given an array <code>A</code> of non-negative integers, the array is <em>squareful</em> if for every pair of adjacent elements, their sum is a perfect square.</p>\r\n\r\n<p>Return the number of permutations of A that are squareful.&nbsp; Two permutations <code>A1</code> and <code>A2</code> differ if and only if there is some index <code>i</code> such that <code>A1[i] != A2[i]</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,17,8]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\r\n<strong>Explanation: </strong>\r\n[1,8,17] and [17,8,1] are the valid permutations.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[2,2,2]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">1</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 12</code></li>\r\n\t<li><code>0 &lt;= A[i] &lt;= 1e9</code></li>\r\n</ol>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"16.2K\", \"totalSubmission\": \"33.8K\", \"totalAcceptedRaw\": 16167, \"totalSubmissionRaw\": 33801, \"acRate\": \"47.8%\"}", "similarQuestions": "[{\"title\": \"Permutations II\", \"titleSlug\": \"permutations-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Backtracking", "slug": "backtracking"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "995", "name": "minimum-number-of-k-consecutive-bit-flips", "content": {"questionId": "1037", "questionFrontendId": "995", "questionTitle": "Minimum Number of K Consecutive Bit Flips", "questionTitleSlug": "minimum-number-of-k-consecutive-bit-flips", "content": "<p>In an array <code>A</code> containing only 0s and 1s, a <i><code>K</code>-bit flip&nbsp;</i>consists of choosing a (contiguous) subarray of length <code>K</code> and simultaneously changing every 0 in the subarray to 1, and every 1 in the subarray to 0.</p>\r\n\r\n<p>Return the minimum number of <code>K</code>-bit flips required so that there is no 0 in the array.&nbsp; If it is not possible, return <code>-1</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[0,1,0]</span>, K = <span id=\"example-input-1-2\">1</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\r\n<strong>Explanation: </strong>Flip A[0], then flip A[2].\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[1,1,0]</span>, K = <span id=\"example-input-2-2\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">-1</span>\r\n<strong>Explanation:</strong>&nbsp;No matter how we flip subarrays of size 2, we can&#39;t make the array become [1,1,1].\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">[0,0,0,1,0,1,1,0]</span>, K = <span id=\"example-input-3-2\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\r\n<strong>Explanation:</strong>\r\nFlip A[0],A[1],A[2]:&nbsp;A becomes [1,1,1,1,0,1,1,0]\r\nFlip A[4],A[5],A[6]:&nbsp;A becomes [1,1,1,1,1,0,0,0]\r\nFlip A[5],A[6],A[7]:&nbsp;A becomes [1,1,1,1,1,1,1,1]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;=&nbsp;30000</code></li>\r\n\t<li><code>1 &lt;= K &lt;= A.length</code></li>\r\n</ol>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"15.9K\", \"totalSubmission\": \"32.2K\", \"totalAcceptedRaw\": 15905, \"totalSubmissionRaw\": 32180, \"acRate\": \"49.4%\"}", "similarQuestions": "[{\"title\": \"Bulb Switcher\", \"titleSlug\": \"bulb-switcher\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "992", "name": "subarrays-with-k-different-integers", "content": {"questionId": "1034", "questionFrontendId": "992", "questionTitle": "Subarrays with K Different Integers", "questionTitleSlug": "subarrays-with-k-different-integers", "content": "<p>Given an array <code>A</code> of positive integers, call a (contiguous, not necessarily distinct) subarray of <code>A</code> <em>good</em> if the number of different integers in that subarray is exactly <code>K</code>.</p>\r\n\r\n<p>(For example, <code>[1,2,3,1,2]</code> has <code>3</code> different integers: <code>1</code>, <code>2</code>, and <code>3</code>.)</p>\r\n\r\n<p>Return the number of good subarrays of <code>A</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[1,2,1,2,3]</span>, K = <span id=\"example-input-1-2\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">7</span>\r\n<strong>Explanation: </strong>Subarrays formed with exactly 2 different integers: [1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2].\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[1,2,1,3,4]</span>, K = <span id=\"example-input-2-2\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">3</span>\r\n<strong>Explanation: </strong>Subarrays formed with exactly 3 different integers: [1,2,1,3], [2,1,3], [1,3,4].\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 20000</code></li>\r\n\t<li><code>1 &lt;= A[i] &lt;= A.length</code></li>\r\n\t<li><code>1 &lt;= K &lt;= A.length</code></li>\r\n</ol>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"37.2K\", \"totalSubmission\": \"74.1K\", \"totalAcceptedRaw\": 37196, \"totalSubmissionRaw\": 74056, \"acRate\": \"50.2%\"}", "similarQuestions": "[{\"title\": \"Longest Substring Without Repeating Characters\", \"titleSlug\": \"longest-substring-without-repeating-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Substring with At Most Two Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-two-distinct-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Substring with At Most K Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-k-distinct-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Two Pointers", "slug": "two-pointers"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "982", "name": "triples-with-bitwise-and-equal-to-zero", "content": {"questionId": "1024", "questionFrontendId": "982", "questionTitle": "Triples with Bitwise AND Equal To Zero", "questionTitleSlug": "triples-with-bitwise-and-equal-to-zero", "content": "<p>Given an array of integers <code>A</code>, find the number of&nbsp;triples of indices (i, j, k)&nbsp;such that:</p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= i &lt; A.length</code></li>\r\n\t<li><code>0 &lt;= j &lt; A.length</code></li>\r\n\t<li><code>0 &lt;= k &lt; A.length</code></li>\r\n\t<li><code>A[i]&nbsp;&amp; A[j]&nbsp;&amp; A[k] == 0</code>, where <code>&amp;</code>&nbsp;represents the bitwise-AND operator.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[2,1,3]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">12</span>\r\n<strong>Explanation: </strong>We could choose the following i, j, k triples:\r\n(i=0, j=0, k=1) : 2 &amp; 2 &amp; 1\r\n(i=0, j=1, k=0) : 2 &amp; 1 &amp; 2\r\n(i=0, j=1, k=1) : 2 &amp; 1 &amp; 1\r\n(i=0, j=1, k=2) : 2 &amp; 1 &amp; 3\r\n(i=0, j=2, k=1) : 2 &amp; 3 &amp; 1\r\n(i=1, j=0, k=0) : 1 &amp; 2 &amp; 2\r\n(i=1, j=0, k=1) : 1 &amp; 2 &amp; 1\r\n(i=1, j=0, k=2) : 1 &amp; 2 &amp; 3\r\n(i=1, j=1, k=0) : 1 &amp; 1 &amp; 2\r\n(i=1, j=2, k=0) : 1 &amp; 3 &amp; 2\r\n(i=2, j=0, k=1) : 3 &amp; 2 &amp; 1\r\n(i=2, j=1, k=0) : 3 &amp; 1 &amp; 2\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code><font face=\"monospace\">1 &lt;= A.length &lt;= 1000</font></code></li>\r\n\t<li><code>0 &lt;= A[i] &lt; 2^16</code></li>\r\n</ol>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"9.1K\", \"totalSubmission\": \"16.3K\", \"totalAcceptedRaw\": 9087, \"totalSubmissionRaw\": 16265, \"acRate\": \"55.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "980", "name": "unique-paths-iii", "content": {"questionId": "1022", "questionFrontendId": "980", "questionTitle": "Unique Paths III", "questionTitleSlug": "unique-paths-iii", "content": "<p>On a 2-dimensional&nbsp;<code>grid</code>, there are 4 types of squares:</p>\r\n\r\n<ul>\r\n\t<li><code>1</code> represents the starting square.&nbsp; There is exactly one starting square.</li>\r\n\t<li><code>2</code> represents the ending square.&nbsp; There is exactly one ending square.</li>\r\n\t<li><code>0</code> represents empty squares we can walk over.</li>\r\n\t<li><code>-1</code> represents obstacles that we cannot walk over.</li>\r\n</ul>\r\n\r\n<p>Return the number of 4-directional walks&nbsp;from the starting square to the ending square, that <strong>walk over every non-obstacle square&nbsp;exactly once</strong>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[[1,0,0,0],[0,0,0,0],[0,0,2,-1]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\r\n<strong>Explanation: </strong>We have the following two paths: \r\n1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2)\r\n2. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2)</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[[1,0,0,0],[0,0,0,0],[0,0,0,2]]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">4</span>\r\n<strong>Explanation: </strong>We have the following four paths: \r\n1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2),(2,3)\r\n2. (0,0),(0,1),(1,1),(1,0),(2,0),(2,1),(2,2),(1,2),(0,2),(0,3),(1,3),(2,3)\r\n3. (0,0),(1,0),(2,0),(2,1),(2,2),(1,2),(1,1),(0,1),(0,2),(0,3),(1,3),(2,3)\r\n4. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2),(2,3)</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[[0,1],[2,0]]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">0</span>\r\n<strong>Explanation: </strong>\r\nThere is no path that walks over every empty square exactly once.\r\nNote that the starting and ending square can be anywhere in the grid.\r\n</pre>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= grid.length * grid[0].length &lt;= 20</code></li>\r\n</ol>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"61K\", \"totalSubmission\": \"79.2K\", \"totalAcceptedRaw\": 61027, \"totalSubmissionRaw\": 79177, \"acRate\": \"77.1%\"}", "similarQuestions": "[{\"title\": \"Sudoku Solver\", \"titleSlug\": \"sudoku-solver\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Unique Paths II\", \"titleSlug\": \"unique-paths-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Word Search II\", \"titleSlug\": \"word-search-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "975", "name": "odd-even-jump", "content": {"questionId": "1017", "questionFrontendId": "975", "questionTitle": "Odd Even Jump", "questionTitleSlug": "odd-even-jump", "content": "<p>You are given an integer array <code>A</code>. From some starting index, you can make a series of jumps. The (1st, 3rd, 5th, ...) jumps in the series are called <strong>odd-numbered jumps</strong>, and the (2nd, 4th, 6th, ...) jumps in the series are called <strong>even-numbered jumps</strong>. Note that the <strong>jumps</strong> are numbered, not the indices.</p>\n\n<p>You may jump forward from index <code>i</code> to index <code>j</code> (with <code>i &lt; j</code>) in the following way:</p>\n\n<ul>\n\t<li>During <strong>odd-numbered jumps</strong> (i.e., jumps 1, 3, 5, ...), you jump to the index <code>j</code> such that <code>A[i] &lt;= A[j]</code> and <code>A[j]</code> is the smallest possible value. If there are multiple such indices <code>j</code>, you can only jump to the <strong>smallest</strong> such index <code>j</code>.</li>\n\t<li>During <strong>even-numbered jumps</strong> (i.e., jumps 2, 4, 6, ...), you jump to the index <code>j</code> such that <code>A[i] &gt;= A[j]</code> and <code>A[j]</code> is the largest possible value. If there are multiple such indices <code>j</code>, you can only jump to the <strong>smallest</strong> such index <code>j</code>.</li>\n\t<li>It may be the case that for some index <code>i</code>, there are no legal jumps.</li>\n</ul>\n\n<p>A starting index is <strong>good</strong> if, starting from that index, you can reach the end of the array (index <code>A.length - 1</code>) by jumping some number of times (possibly 0 or more than once).</p>\n\n<p>Return <em>the number of <strong>good</strong> starting indices</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> A = [10,13,12,14,15]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \nFrom starting index i = 0, we can make our 1st jump to i = 2 (since A[2] is the smallest among A[1], A[2], A[3],\nA[4] that is greater or equal to A[0]), then we cannot jump any more.\nFrom starting index i = 1 and i = 2, we can make our 1st jump to i = 3, then we cannot jump any more.\nFrom starting index i = 3, we can make our 1st jump to i = 4, so we have reached the end.\nFrom starting index i = 4, we have reached the end already.\nIn total, there are 2 different starting indices i = 3 and i = 4, where we can reach the end with some number of\njumps.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> A = [2,3,1,1,4]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> \nFrom starting index i = 0, we make jumps to i = 1, i = 2, i = 3:\n\nDuring our 1st jump (odd-numbered), we first jump to i = 1 because A[1] is the smallest value in [A[1], A[2],\nA[3], A[4]] that is greater than or equal to A[0].\n\nDuring our 2nd jump (even-numbered), we jump from i = 1 to i = 2 because A[2] is the largest value in [A[2], A[3],\nA[4]] that is less than or equal to A[1]. A[3] is also the largest value, but 2 is a smaller index, so we can\nonly jump to i = 2 and not i = 3\n\nDuring our 3rd jump (odd-numbered), we jump from i = 2 to i = 3 because A[3] is the smallest value in [A[3], A[4]]\nthat is greater than or equal to A[2].\n\nWe can&#39;t jump from i = 3 to i = 4, so the starting index i = 0 is not good.\n\nIn a similar manner, we can deduce that:\nFrom starting index i = 1, we jump to i = 4, so we reach the end.\nFrom starting index i = 2, we jump to i = 3, and then we can&#39;t jump anymore.\nFrom starting index i = 3, we jump to i = 4, so we reach the end.\nFrom starting index i = 4, we are already at the end.\nIn total, there are 3 different starting indices i = 1, i = 3, and i = 4, where we can reach the end with some\nnumber of jumps.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> A = [5,1,3,4,2]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> \nWe can reach the end from starting indices 1, 2, and 4.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= A.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= A[i] &lt; 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"36.1K\", \"totalSubmission\": \"86.7K\", \"totalAcceptedRaw\": 36107, \"totalSubmissionRaw\": 86667, \"acRate\": \"41.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Stack", "slug": "stack"}, {"name": "Ordered Map", "slug": "ordered-map"}]}}, {"id": "972", "name": "equal-rational-numbers", "content": {"questionId": "1012", "questionFrontendId": "972", "questionTitle": "Equal Rational Numbers", "questionTitleSlug": "equal-rational-numbers", "content": "<p>Given two strings <code>S</code> and <code>T</code>, each of which represents a non-negative rational number, return <strong>True</strong> if and only if they represent the same number. The strings may use parentheses to denote the repeating part of the rational number.</p>\r\n\r\n<p>In general a rational number can be represented using up to&nbsp;three parts: an&nbsp;<em>integer part</em>, a&nbsp;<em>non-repeating part,</em> and a&nbsp;<em>repeating part</em>. The number will be represented&nbsp;in one of the following three ways:</p>\r\n\r\n<ul>\r\n\t<li><code>&lt;IntegerPart&gt;</code> (e.g. 0, 12, 123)</li>\r\n\t<li><code>&lt;IntegerPart&gt;&lt;.&gt;&lt;NonRepeatingPart&gt;</code> &nbsp;(e.g. 0.5, 1., 2.12, 2.0001)</li>\r\n\t<li><code>&lt;IntegerPart&gt;&lt;.&gt;&lt;NonRepeatingPart&gt;&lt;(&gt;&lt;RepeatingPart&gt;&lt;)&gt;</code> (e.g. 0.1(6), 0.9(9), 0.00(1212))</li>\r\n</ul>\r\n\r\n<p>The repeating portion of a decimal expansion is conventionally denoted within a pair of round brackets.&nbsp; For example:</p>\r\n\r\n<p>1 / 6 = 0.16666666... = 0.1(6) = 0.1666(6) = 0.166(66)</p>\r\n\r\n<p>Both 0.1(6) or 0.1666(6) or 0.166(66) are correct representations of 1 / 6.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>S = <span id=\"example-input-1-1\">&quot;0.(52)&quot;</span>, T = <span id=\"example-input-1-2\">&quot;0.5(25)&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\r\n<strong>Explanation:\r\n</strong>Because &quot;0.(52)&quot; represents 0.52525252..., and &quot;0.5(25)&quot; represents 0.52525252525..... , the strings represent the same number.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>S = <span id=\"example-input-2-1\">&quot;0.1666(6)&quot;</span>, T = <span id=\"example-input-2-2\">&quot;0.166(66)&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">true</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>S = <span id=\"example-input-3-1\">&quot;0.9(9)&quot;</span>, T = <span id=\"example-input-3-2\">&quot;1.&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">true</span>\r\n<strong>Explanation: </strong>\r\n&quot;0.9(9)&quot; represents 0.999999999... repeated forever, which equals 1.  [<a href=\"https://en.wikipedia.org/wiki/0.999...\" target=\"_blank\">See this link for an explanation.</a>]\r\n&quot;1.&quot; represents the number 1, which is formed correctly: (IntegerPart) = &quot;1&quot; and (NonRepeatingPart) = &quot;&quot;.</pre>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li>Each part consists only of digits.</li>\r\n\t<li>The <code>&lt;IntegerPart&gt;</code>&nbsp;will&nbsp;not begin with 2 or more zeros.&nbsp; (There is no other restriction on the digits of each part.)</li>\r\n\t<li><code>1 &lt;= &lt;IntegerPart&gt;.length &lt;= 4 </code></li>\r\n\t<li><code>0 &lt;= &lt;NonRepeatingPart&gt;.length &lt;= 4 </code></li>\r\n\t<li><code>1 &lt;= &lt;RepeatingPart&gt;.length &lt;= 4</code></li>\r\n</ol>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"4.3K\", \"totalSubmission\": \"10.4K\", \"totalAcceptedRaw\": 4329, \"totalSubmissionRaw\": 10361, \"acRate\": \"41.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "968", "name": "binary-tree-cameras", "content": {"questionId": "1008", "questionFrontendId": "968", "questionTitle": "Binary Tree Cameras", "questionTitleSlug": "binary-tree-cameras", "content": "<p>Given a binary tree, we install cameras on the nodes of the tree.&nbsp;</p>\r\n\r\n<p>Each camera at&nbsp;a node can monitor <strong>its parent, itself, and its immediate children</strong>.</p>\r\n\r\n<p>Calculate the minimum number of cameras needed to monitor all nodes of the tree.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/29/bst_cameras_01.png\" style=\"width: 138px; height: 163px;\" />\r\n<div>\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[0,0,null,0,0]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\r\n<strong>Explanation: </strong>One camera is enough to monitor all nodes if placed as shown.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/29/bst_cameras_02.png\" style=\"width: 139px; height: 312px;\" />\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[0,0,null,0,null,0,null,null,0]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">2\r\n<strong>Explanation:</strong> At least two cameras are needed to monitor all nodes of the tree. The above image shows one of the valid configurations of camera placement.</span>\r\n</pre>\r\n\r\n<p><br />\r\n<strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li>The number of nodes in the given tree will be in the range&nbsp;<code>[1, 1000]</code>.</li>\r\n\t<li><strong>Every</strong> node has value 0.</li>\r\n</ol>\r\n</div>\r\n</div>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"26.6K\", \"totalSubmission\": \"69.4K\", \"totalAcceptedRaw\": 26635, \"totalSubmissionRaw\": 69414, \"acRate\": \"38.4%\"}", "similarQuestions": "[{\"title\": \"Distribute Coins in Binary Tree\", \"titleSlug\": \"distribute-coins-in-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "964", "name": "least-operators-to-express-number", "content": {"questionId": "1004", "questionFrontendId": "964", "questionTitle": "Least Operators to Express Number", "questionTitleSlug": "least-operators-to-express-number", "content": "<p>Given a single positive integer <code>x</code>, we will write an expression of the form <code>x (op1) x (op2) x (op3) x ...</code>&nbsp;where each operator <code>op1</code>, <code>op2</code>, etc. is either addition, subtraction, multiplication, or division (<code>+</code>, <code>-</code>, <code>*</code>, or <code>/)</code>.&nbsp; For example, with <code>x = 3</code>, we might write <code>3 * 3 / 3 + 3 - 3</code>&nbsp;which is a value of <font face=\"monospace\">3</font>.</p>\r\n\r\n<p>When writing such an expression, we adhere to the following conventions:</p>\r\n\r\n<ol>\r\n\t<li>The division operator (<code>/</code>) returns rational numbers.</li>\r\n\t<li>There are no parentheses placed anywhere.</li>\r\n\t<li>We use the usual order of operations: multiplication and division happens before addition and subtraction.</li>\r\n\t<li>It&#39;s not allowed to use the unary negation&nbsp;operator (<code>-</code>).&nbsp; For example, &quot;<code>x&nbsp;- x</code>&quot;&nbsp;is a valid expression as it only uses subtraction, but &quot;<code>-x +&nbsp;x</code>&quot; is not because it uses negation.</li>\r\n</ol>\r\n\r\n<p>We would like to write an expression with the least number of operators such that the expression equals the given <code>target</code>.&nbsp; Return the least number of operators used.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>x = <span id=\"example-input-1-1\">3</span>, target = <span id=\"example-input-1-2\">19</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">5</span>\r\n<strong>Explanation: </strong><span id=\"example-output-1\">3 * 3 + 3 * 3 + 3 / 3.  The expression contains 5 operations.</span>\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<div>\r\n<pre>\r\n<strong>Input: </strong>x = <span id=\"example-input-2-1\">5</span>, target = <span id=\"example-input-2-2\">501</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">8</span>\r\n<strong>Explanation: </strong><span id=\"example-output-1\">5 * 5 * 5 * 5 - 5 * 5 * 5 + 5 / 5.  The expression contains 8 operations.</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>x = <span id=\"example-input-3-1\">100</span>, target = <span id=\"example-input-3-2\">100000000</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\r\n<strong>Explanation: </strong><span id=\"example-output-1\">100 * 100 * 100 * 100.  The expression contains 3 operations.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>2 &lt;= x &lt;= 100</code></li>\r\n\t<li><code>1 &lt;= target &lt;= 2 * 10^8</code></li>\r\n</ul>\r\n\r\n<div>\r\n<div>\r\n<div>&nbsp;</div>\r\n</div>\r\n</div>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.9K\", \"totalSubmission\": \"13.2K\", \"totalAcceptedRaw\": 5906, \"totalSubmissionRaw\": 13215, \"acRate\": \"44.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "960", "name": "delete-columns-to-make-sorted-iii", "content": {"questionId": "1000", "questionFrontendId": "960", "questionTitle": "Delete Columns to Make Sorted III", "questionTitleSlug": "delete-columns-to-make-sorted-iii", "content": "<p>We are given an array&nbsp;<code>A</code> of <code>N</code> lowercase letter strings, all of the same length.</p>\r\n\r\n<p>Now, we may choose any set of deletion indices, and for each string, we delete all the characters in those indices.</p>\r\n\r\n<p>For example, if we have an array <code>A = [&quot;babca&quot;,&quot;bbazb&quot;]</code> and deletion indices <code>{0, 1, 4}</code>, then the final array after deletions is <code>[&quot;bc&quot;,&quot;az&quot;]</code>.</p>\r\n\r\n<p>Suppose we chose a set of deletion indices <code>D</code> such that after deletions, the final array has <strong>every element (row) in&nbsp;lexicographic</strong> order.</p>\r\n\r\n<p>For clarity, <code>A[0]</code> is in lexicographic order (ie. <code>A[0][0] &lt;= A[0][1] &lt;= ... &lt;= A[0][A[0].length - 1]</code>), <code>A[1]</code> is in lexicographic order (ie. <code>A[1][0] &lt;= A[1][1] &lt;= ... &lt;= A[1][A[1].length - 1]</code>), and so on.</p>\r\n\r\n<p>Return the minimum possible value of <code>D.length</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;babca&quot;,&quot;bbazb&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\r\n<strong>Explanation: </strong>After deleting columns 0, 1, and 4, the final array is A = [&quot;bc&quot;, &quot;az&quot;].\r\nBoth these rows are individually in lexicographic order (ie. A[0][0] &lt;= A[0][1] and A[1][0] &lt;= A[1][1]).\r\nNote that A[0] &gt; A[1] - the array A isn&#39;t necessarily in lexicographic order.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[&quot;edcba&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">4</span>\r\n<strong>Explanation: </strong>If we delete less than 4 columns, the only row won&#39;t be lexicographically sorted.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[&quot;ghi&quot;,&quot;def&quot;,&quot;abc&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">0</span>\r\n<strong>Explanation: </strong>All rows are already lexicographically sorted.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 100</code></li>\r\n\t<li><code>1 &lt;= A[i].length &lt;= 100</code></li>\r\n</ol>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"7.4K\", \"totalSubmission\": \"13.7K\", \"totalAcceptedRaw\": 7410, \"totalSubmissionRaw\": 13697, \"acRate\": \"54.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "956", "name": "tallest-billboard", "content": {"questionId": "993", "questionFrontendId": "956", "questionTitle": "Tallest Billboard", "questionTitleSlug": "tallest-billboard", "content": "<p>You are installing a billboard and want it to have the largest height.&nbsp; The billboard will have two steel supports, one on each side.&nbsp; Each steel support must be an equal height.</p>\r\n\r\n<p>You have a collection of <code>rods</code> which can be welded together.&nbsp; For example, if you have rods of lengths 1, 2, and 3, you can weld them together to make a support of length 6.</p>\r\n\r\n<p>Return the largest possible height of your billboard installation.&nbsp; If you cannot support the billboard, return 0.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,3,6]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">6</span>\r\n<strong>Explanation:</strong> We have two disjoint subsets {1,2,3} and {6}, which have the same sum = 6.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,2,3,4,5,6]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">10</span>\r\n<strong>Explanation:</strong> We have two disjoint subsets {2,3,5} and {4,6}, which have the same sum = 10.\r\n</pre>\r\n</div>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[1,2]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">0</span>\r\n<strong>Explanation: </strong>The billboard cannot be supported, so we return 0.\r\n</pre>\r\n</div>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>0 &lt;= rods.length &lt;= 20</code></li>\r\n\t<li><code>1 &lt;= rods[i] &lt;= 1000</code></li>\r\n\t<li><code>The sum of rods is at most 5000.</code></li>\r\n</ol>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"8.8K\", \"totalSubmission\": \"22.2K\", \"totalAcceptedRaw\": 8816, \"totalSubmissionRaw\": 22200, \"acRate\": \"39.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "952", "name": "largest-component-size-by-common-factor", "content": {"questionId": "989", "questionFrontendId": "952", "questionTitle": "Largest Component Size by Common Factor", "questionTitleSlug": "largest-component-size-by-common-factor", "content": "<p>Given a non-empty&nbsp;array of unique positive integers <code>A</code>, consider the following graph:</p>\r\n\r\n<ul>\r\n\t<li>There are <code>A.length</code> nodes, labelled <code>A[0]</code> to <code>A[A.length - 1];</code></li>\r\n\t<li>There is an edge between <code>A[i]</code> and <code>A[j]</code>&nbsp;if and only if&nbsp;<code>A[i]</code> and <code>A[j]</code> share a common factor greater than 1.</li>\r\n</ul>\r\n\r\n<p>Return the size of the largest connected component in the graph.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[4,6,15,35]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">4</span>\r\n<span><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/01/ex1.png\" style=\"width: 257px; height: 50px;\" /></span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[20,50,9,63]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">2</span>\r\n<span><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/01/ex2.png\" style=\"width: 293px; height: 50px;\" /></span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[2,3,6,7,4,12,21,39]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">8</span>\r\n<span><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/01/ex3.png\" style=\"width: 346px; height: 180px;\" /></span>\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 20000</code></li>\r\n\t<li><code>1 &lt;= A[i] &lt;= 100000</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"24.7K\", \"totalSubmission\": \"68.5K\", \"totalAcceptedRaw\": 24681, \"totalSubmissionRaw\": 68527, \"acRate\": \"36.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Union Find", "slug": "union-find"}]}}, {"id": "943", "name": "find-the-shortest-superstring", "content": {"questionId": "980", "questionFrontendId": "943", "questionTitle": "Find the Shortest Superstring", "questionTitleSlug": "find-the-shortest-superstring", "content": "<p>Given an array A of strings, find any&nbsp;smallest string that contains each string in <code>A</code> as a&nbsp;substring.</p>\r\n\r\n<p>We may assume that no string in <code>A</code> is substring of another string in <code>A</code>.</p>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;alex&quot;,&quot;loves&quot;,&quot;leetcode&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">&quot;alexlovesleetcode&quot;</span>\r\n<strong>Explanation: </strong>All permutations of &quot;alex&quot;,&quot;loves&quot;,&quot;leetcode&quot; would also be accepted.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[&quot;catg&quot;,&quot;ctaagt&quot;,&quot;gcta&quot;,&quot;ttca&quot;,&quot;atgcatc&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">&quot;gctaagttcatgcatc&quot;</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 12</code></li>\r\n\t<li><code>1 &lt;= A[i].length &lt;= 20</code></li>\r\n</ol>\r\n\r\n<div>\r\n<div>&nbsp;</div>\r\n</div>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"11.9K\", \"totalSubmission\": \"27.4K\", \"totalAcceptedRaw\": 11890, \"totalSubmissionRaw\": 27418, \"acRate\": \"43.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "940", "name": "distinct-subsequences-ii", "content": {"questionId": "977", "questionFrontendId": "940", "questionTitle": "Distinct Subsequences II", "questionTitleSlug": "distinct-subsequences-ii", "content": "<p>Given a string <code>S</code>, count the number of distinct, non-empty subsequences of <code>S</code> .</p>\r\n\r\n<p>Since the result may be large, <strong>return the answer modulo <code>10^9 + 7</code></strong>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;abc&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">7</span>\r\n<span><strong>Explanation</strong>: The 7 distinct subsequences are &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;ab&quot;, &quot;ac&quot;, &quot;bc&quot;, and &quot;abc&quot;.</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;aba&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">6\r\n</span><strong>Explanation</strong>: The 6 distinct subsequences are &quot;a&quot;, &quot;b&quot;, &quot;ab&quot;, &quot;ba&quot;, &quot;aa&quot; and &quot;aba&quot;.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">&quot;aaa&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">3\r\n</span><strong>Explanation</strong>: The 3 distinct subsequences are &quot;a&quot;, &quot;aa&quot; and &quot;aaa&quot;.\r\n</pre>\r\n</div>\r\n</div>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>S</code> contains only lowercase letters.</li>\r\n\t<li><code>1 &lt;= S.length &lt;= 2000</code></li>\r\n</ol>\r\n\r\n<div>\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<div>&nbsp;</div>\r\n</div>\r\n</div>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"12.3K\", \"totalSubmission\": \"29.8K\", \"totalAcceptedRaw\": 12338, \"totalSubmissionRaw\": 29756, \"acRate\": \"41.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "936", "name": "stamping-the-sequence", "content": {"questionId": "973", "questionFrontendId": "936", "questionTitle": "Stamping The Sequence", "questionTitleSlug": "stamping-the-sequence", "content": "<p>You want to form a <code>target</code>&nbsp;string of <strong>lowercase letters</strong>.</p>\r\n\r\n<p>At the beginning, your sequence is <code>target.length</code>&nbsp;<code>&#39;?&#39;</code> marks.&nbsp; You also have a <code>stamp</code>&nbsp;of lowercase letters.</p>\r\n\r\n<p>On each turn, you may place the stamp over the sequence, and replace every letter in the sequence with the corresponding letter from the stamp.&nbsp; You can make up to <code>10 * target.length</code> turns.</p>\r\n\r\n<p>For example, if the initial sequence is <font face=\"monospace\">&quot;?????&quot;</font>, and your stamp is <code>&quot;abc&quot;</code>,&nbsp; then you may make <font face=\"monospace\">&quot;abc??&quot;, &quot;?abc?&quot;, &quot;??abc&quot;&nbsp;</font>in the first turn.&nbsp; (Note that the stamp must be fully contained in the boundaries of the sequence in order to stamp.)</p>\r\n\r\n<p>If the sequence is possible to stamp, then return an array of&nbsp;the index of the left-most letter being stamped at each turn.&nbsp; If the sequence is not possible to stamp, return an empty array.</p>\r\n\r\n<p>For example, if the sequence is <font face=\"monospace\">&quot;ababc&quot;</font>, and the stamp is <code>&quot;abc&quot;</code>, then we could return the answer <code>[0, 2]</code>, corresponding to the moves <font face=\"monospace\">&quot;?????&quot; -&gt; &quot;abc??&quot; -&gt; &quot;ababc&quot;</font>.</p>\r\n\r\n<p>Also, if the sequence is possible to stamp, it is guaranteed it is possible to stamp within <code>10 * target.length</code>&nbsp;moves.&nbsp; Any answers specifying more than this number of moves&nbsp;will not be accepted.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>stamp = <span id=\"example-input-1-1\">&quot;abc&quot;</span>, target = <span id=\"example-input-1-2\">&quot;ababc&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[0,2]</span>\r\n([1,0,2] would also be accepted as an answer, as well as some other answers.)\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>stamp = <span id=\"example-input-2-1\">&quot;</span><span id=\"example-input-2-2\">abca</span><span>&quot;</span>, target = <span id=\"example-input-2-2\">&quot;</span><span>aabcaca&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[3,0,1]</span>\r\n</pre>\r\n\r\n<div>\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n</div>\r\n</div>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= stamp.length &lt;= target.length &lt;= 1000</code></li>\r\n\t<li><code>stamp</code> and <code>target</code> only contain lowercase letters.</li>\r\n</ol>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"10.6K\", \"totalSubmission\": \"22.4K\", \"totalAcceptedRaw\": 10555, \"totalSubmissionRaw\": 22426, \"acRate\": \"47.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "928", "name": "minimize-malware-spread-ii", "content": {"questionId": "964", "questionFrontendId": "928", "questionTitle": "Minimize Malware Spread II", "questionTitleSlug": "minimize-malware-spread-ii", "content": "<p>(This problem is the same as <em>Minimize Malware Spread</em>, with the differences bolded.)</p>\r\n\r\n<p>In a network of nodes, each node <code>i</code> is directly connected to another node <code>j</code> if and only if&nbsp;<code>graph[i][j] = 1</code>.</p>\r\n\r\n<p>Some nodes <code>initial</code> are initially infected by malware.&nbsp; Whenever two nodes are directly connected and at least one of those two nodes is infected by malware, both nodes will be infected by malware.&nbsp; This spread of malware will continue until no more nodes can be infected in this manner.</p>\r\n\r\n<p>Suppose <code>M(initial)</code>&nbsp;is the final number of nodes infected with malware in the entire network, after the spread of malware stops.</p>\r\n\r\n<p>We will&nbsp;remove one node from the initial list, <strong>completely removing it and any connections from this node to any other node</strong>.&nbsp; Return the node that if removed, would minimize&nbsp;<code>M(initial)</code>.&nbsp; If multiple nodes could be removed to minimize <code>M(initial)</code>, return such a node with the smallest index.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>graph = <span id=\"example-input-1-1\">[[1,1,0],[1,1,0],[0,0,1]]</span>, initial = <span id=\"example-input-1-2\">[0,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">0</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>graph = <span id=\"example-input-2-1\">[[1,1,0],[1,1,1],[0,1,1]]</span>, initial = <span id=\"example-input-2-2\">[0,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">1</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>graph = <span id=\"example-input-3-1\">[[1,1,0,0],[1,1,1,0],[0,1,1,1],[0,0,1,1]]</span>, initial = <span id=\"example-input-3-2\">[0,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">1</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt; graph.length = graph[0].length &lt;= 300</code></li>\r\n\t<li><code>0 &lt;= graph[i][j] == graph[j][i] &lt;= 1</code></li>\r\n\t<li><code>graph[i][i] = 1</code></li>\r\n\t<li><code>1 &lt;= initial.length &lt; graph.length</code></li>\r\n\t<li><code>0 &lt;= initial[i] &lt; graph.length</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"11K\", \"totalSubmission\": \"26.9K\", \"totalAcceptedRaw\": 11040, \"totalSubmissionRaw\": 26924, \"acRate\": \"41.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Union Find", "slug": "union-find"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "927", "name": "three-equal-parts", "content": {"questionId": "963", "questionFrontendId": "927", "questionTitle": "Three Equal Parts", "questionTitleSlug": "three-equal-parts", "content": "<p>Given an array <code>A</code> of <code>0</code>s and <code>1</code>s, divide the array into 3 non-empty parts such that all of these parts represent the same binary value.</p>\r\n\r\n<p>If it is possible, return <strong>any</strong> <code>[i, j]</code>&nbsp;with <code>i+1 &lt; j</code>, such that:</p>\r\n\r\n<ul>\r\n\t<li><code>A[0], A[1], ..., A[i]</code> is the first part;</li>\r\n\t<li><code>A[i+1], A[i+2], ..., A[j-1]</code> is the second part, and</li>\r\n\t<li><code>A[j], A[j+1], ..., A[A.length - 1]</code> is the third part.</li>\r\n\t<li>All three parts have equal binary value.</li>\r\n</ul>\r\n\r\n<p>If it is not possible, return <code>[-1, -1]</code>.</p>\r\n\r\n<p>Note that the entire part is used when considering what binary value it represents.&nbsp; For example, <code>[1,1,0]</code>&nbsp;represents <code>6</code>&nbsp;in decimal,&nbsp;not <code>3</code>.&nbsp; Also, leading zeros are allowed, so&nbsp;<code>[0,1,1]</code> and <code>[1,1]</code> represent the same value.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,0,1,0,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[0,3]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,1,0,1,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[-1,-1]</span></pre>\r\n</div>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>3 &lt;= A.length &lt;= 30000</code></li>\r\n\t<li><code>A[i] == 0</code>&nbsp;or <code>A[i] == 1</code></li>\r\n</ol>\r\n\r\n<div>\r\n<div>&nbsp;</div>\r\n</div>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"8.4K\", \"totalSubmission\": \"24.5K\", \"totalAcceptedRaw\": 8424, \"totalSubmissionRaw\": 24503, \"acRate\": \"34.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Binary Search", "slug": "binary-search"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "924", "name": "minimize-malware-spread", "content": {"questionId": "960", "questionFrontendId": "924", "questionTitle": "Minimize Malware Spread", "questionTitleSlug": "minimize-malware-spread", "content": "<p>In a network of nodes, each node <code>i</code> is directly connected to another node <code>j</code> if and only if&nbsp;<code>graph[i][j] = 1</code>.</p>\n\n<p>Some nodes <code>initial</code> are initially infected by malware.&nbsp; Whenever two nodes are directly connected and at least one of those two nodes is infected by malware, both nodes will be infected by malware.&nbsp; This spread of malware will continue until no more nodes can be infected in this manner.</p>\n\n<p>Suppose <code>M(initial)</code>&nbsp;is the final number of nodes infected with malware in the entire network, after the spread of malware stops.</p>\n\n<p>We will&nbsp;remove one node from the initial list.&nbsp; Return the node that if removed, would minimize&nbsp;<code>M(initial)</code>.&nbsp; If multiple nodes could be removed to minimize <code>M(initial)</code>, return such a node with the smallest index.</p>\n\n<p>Note that if a node was removed from the <code>initial</code>&nbsp;list of infected nodes, it may still be infected later as a result of the malware spread.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>graph = [[1,1,0],[1,1,0],[0,0,1]], initial = [0,1]\n<strong>Output: </strong>0\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>graph = [[1,0,0],[0,1,0],[0,0,1]], initial = [0,2]\n<strong>Output: </strong>0\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>graph = [[1,1,1],[1,1,1],[1,1,1]], initial = [1,2]\n<strong>Output: </strong>1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>1 &lt; graph.length = graph[0].length &lt;= 300</code></li>\n\t<li><code>0 &lt;= graph[i][j] == graph[j][i] &lt;= 1</code></li>\n\t<li><code>graph[i][i] == 1</code></li>\n\t<li><code>1 &lt;= initial.length &lt;= graph.length</code></li>\n\t<li><code>0 &lt;= initial[i] &lt; graph.length</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"27.1K\", \"totalSubmission\": \"64.8K\", \"totalAcceptedRaw\": 27112, \"totalSubmissionRaw\": 64805, \"acRate\": \"41.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Union Find", "slug": "union-find"}]}}, {"id": "920", "name": "number-of-music-playlists", "content": {"questionId": "956", "questionFrontendId": "920", "questionTitle": "Number of Music Playlists", "questionTitleSlug": "number-of-music-playlists", "content": "<p>Your music player contains <code>N</code>&nbsp;different songs and she wants to listen to <code>L</code><strong> </strong>(not necessarily different) songs during your trip. &nbsp;You&nbsp;create&nbsp;a playlist so&nbsp;that:</p>\r\n\r\n<ul>\r\n\t<li>Every song is played at least once</li>\r\n\t<li>A song can only be played again only if&nbsp;<code>K</code>&nbsp;other songs have been played</li>\r\n</ul>\r\n\r\n<p>Return the number of possible playlists.&nbsp; <strong>As the answer can be very large, return it modulo <code>10^9 + 7</code></strong>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<div>\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>N = <span id=\"example-input-1-1\">3</span>, L = <span id=\"example-input-1-2\">3</span>, K = <span id=\"example-input-1-3\">1</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">6\r\n<strong>Explanation</strong>: </span><span>There are 6 possible playlists. [1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1].</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>N = <span id=\"example-input-2-1\">2</span>, L = <span id=\"example-input-2-2\">3</span>, K = <span id=\"example-input-2-3\">0</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">6\r\n</span><span id=\"example-output-1\"><strong>Explanation</strong>: </span><span>There are 6 possible playlists. [1, 1, 2], [1, 2, 1], [2, 1, 1], [2, 2, 1], [2, 1, 2], [1, 2, 2]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>N = <span id=\"example-input-3-1\">2</span>, L = <span id=\"example-input-3-2\">3</span>, K = <span id=\"example-input-3-3\">1</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">2\r\n<strong>Explanation</strong>: </span><span>There are 2 possible playlists. [1, 2, 1], [2, 1, 2]</span>\r\n</pre>\r\n</div>\r\n</div>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>0 &lt;= K &lt; N &lt;= L &lt;= 100</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"12.1K\", \"totalSubmission\": \"25.4K\", \"totalAcceptedRaw\": 12109, \"totalSubmissionRaw\": 25443, \"acRate\": \"47.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "913", "name": "cat-and-mouse", "content": {"questionId": "949", "questionFrontendId": "913", "questionTitle": "Cat and Mouse", "questionTitleSlug": "cat-and-mouse", "content": "<p>A game on an <strong>undirected</strong> graph is played by two players, Mouse and Cat, who alternate turns.</p>\n\n<p>The graph is given as follows: <code>graph[a]</code> is a list of all nodes <code>b</code> such that <code>ab</code> is an edge of the graph.</p>\n\n<p>The mouse starts at node <code>1</code> and goes first, the cat starts at node <code>2</code> and goes second, and there is a hole at node <code>0</code>.</p>\n\n<p>During each player&#39;s turn, they <strong>must</strong> travel along one&nbsp;edge of the graph that meets where they are.&nbsp; For example, if the Mouse is at node 1, it <strong>must</strong> travel to any node in <code>graph[1]</code>.</p>\n\n<p>Additionally, it is not allowed for the Cat to travel to the Hole (node 0.)</p>\n\n<p>Then, the game can end in three&nbsp;ways:</p>\n\n<ul>\n\t<li>If ever the Cat occupies the same node as the Mouse, the Cat wins.</li>\n\t<li>If ever the Mouse reaches the Hole, the Mouse wins.</li>\n\t<li>If ever a position is repeated (i.e., the players are in the same position as a previous turn, and&nbsp;it is the same player&#39;s turn to move), the game is a draw.</li>\n</ul>\n\n<p>Given a <code>graph</code>, and assuming both players play optimally, return</p>\n\n<ul>\n\t<li><code>1</code>&nbsp;if the mouse wins the game,</li>\n\t<li><code>2</code>&nbsp;if the cat wins the game, or</li>\n\t<li><code>0</code>&nbsp;if the game is a draw.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/17/cat1.jpg\" style=\"width: 300px; height: 300px;\" />\n<pre>\n<strong>Input:</strong> graph = [[2,5],[3],[0,4,5],[1,4,5],[2,3],[0,2,3]]\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/17/cat2.jpg\" style=\"width: 200px; height: 200px;\" />\n<pre>\n<strong>Input:</strong> graph = [[1,3],[0],[3],[0,2]]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= graph.length &lt;= 50</code></li>\n\t<li><code>1&nbsp;&lt;= graph[i].length &lt; graph.length</code></li>\n\t<li><code>0 &lt;= graph[i][j] &lt; graph.length</code></li>\n\t<li><code>graph[i][j] != i</code></li>\n\t<li><code>graph[i]</code> is unique.</li>\n\t<li>The mouse and the cat can always move.&nbsp;</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"10K\", \"totalSubmission\": \"29.6K\", \"totalAcceptedRaw\": 9990, \"totalSubmissionRaw\": 29572, \"acRate\": \"33.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}, {"name": "Minimax", "slug": "minimax"}]}}, {"id": "906", "name": "super-palindromes", "content": {"questionId": "942", "questionFrontendId": "906", "questionTitle": "Super Palindromes", "questionTitleSlug": "super-palindromes", "content": "<p>Let&#39;s say a positive integer is a&nbsp;<em>superpalindrome</em>&nbsp;if it is a palindrome, and it is also the square of a palindrome.</p>\r\n\r\n<p>Now, given two positive&nbsp;integers <code>L</code> and <code>R</code> (represented as strings), return the number of superpalindromes in the inclusive range <code>[L, R]</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>L = <span id=\"example-input-1-1\">&quot;4&quot;</span>, R = <span id=\"example-input-1-2\">&quot;1000&quot;</span>\r\n<strong>Output: </strong>4\r\n<span><strong>Explanation</strong>: </span>4, 9, 121, and 484 are superpalindromes.\r\nNote that 676 is not a superpalindrome: 26 * 26 = 676, but 26 is not a palindrome.</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= len(L) &lt;= 18</code></li>\r\n\t<li><code>1 &lt;= len(R) &lt;= 18</code></li>\r\n\t<li><code>L</code> and <code>R</code> are strings representing integers in the range <code>[1, 10^18)</code>.</li>\r\n\t<li><code>int(L) &lt;= int(R)</code></li>\r\n</ol>\r\n\r\n<div>\r\n<p>&nbsp;</p>\r\n</div>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"6.1K\", \"totalSubmission\": \"18.4K\", \"totalAcceptedRaw\": 6054, \"totalSubmissionRaw\": 18436, \"acRate\": \"32.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "903", "name": "valid-permutations-for-di-sequence", "content": {"questionId": "939", "questionFrontendId": "903", "questionTitle": "Valid Permutations for DI Sequence", "questionTitleSlug": "valid-permutations-for-di-sequence", "content": "<p>We are given <code>S</code>, a length <code>n</code> string of characters from the set <code>{&#39;D&#39;, &#39;I&#39;}</code>. (These letters stand for &quot;decreasing&quot; and &quot;increasing&quot;.)</p>\r\n\r\n<p>A&nbsp;<em>valid permutation</em>&nbsp;is a permutation <code>P[0], P[1], ..., P[n]</code> of integers&nbsp;<code>{0, 1, ..., n}</code>, such that for all <code>i</code>:</p>\r\n\r\n<ul>\r\n\t<li>If <code>S[i] == &#39;D&#39;</code>, then <code>P[i] &gt; P[i+1]</code>, and;</li>\r\n\t<li>If <code>S[i] == &#39;I&#39;</code>, then <code>P[i] &lt; P[i+1]</code>.</li>\r\n</ul>\r\n\r\n<p>How many valid permutations are there?&nbsp; Since the answer may be large, <strong>return your answer modulo <code>10^9 + 7</code></strong>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;DID&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">5</span>\r\n<strong>Explanation: </strong>\r\nThe 5 valid permutations of (0, 1, 2, 3) are:\r\n(1, 0, 3, 2)\r\n(2, 0, 3, 1)\r\n(2, 1, 3, 0)\r\n(3, 0, 2, 1)\r\n(3, 1, 2, 0)\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= S.length &lt;= 200</code></li>\r\n\t<li><code>S</code> consists only of characters from the set <code>{&#39;D&#39;, &#39;I&#39;}</code>.</li>\r\n</ol>\r\n\r\n<div>\r\n<p>&nbsp;</p>\r\n</div>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"7.7K\", \"totalSubmission\": \"14.2K\", \"totalAcceptedRaw\": 7674, \"totalSubmissionRaw\": 14175, \"acRate\": \"54.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Divide and Conquer", "slug": "divide-and-conquer"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "902", "name": "numbers-at-most-n-given-digit-set", "content": {"questionId": "938", "questionFrontendId": "902", "questionTitle": "Numbers At Most N Given Digit Set", "questionTitleSlug": "numbers-at-most-n-given-digit-set", "content": "<p>Given an array of <code>digits</code> which is sorted in <strong>non-decreasing</strong> order. You can write numbers using each <code>digits[i]</code> as many times as we want. For example, if <code>digits = [&#39;1&#39;,&#39;3&#39;,&#39;5&#39;]</code>, we may write numbers such as <code>&#39;13&#39;</code>, <code>&#39;551&#39;</code>, and <code>&#39;1351315&#39;</code>.</p>\n\n<p>Return <em>the number of positive integers that can be generated </em>that are less than or equal to a given integer <code>n</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> digits = [&quot;1&quot;,&quot;3&quot;,&quot;5&quot;,&quot;7&quot;], n = 100\n<strong>Output:</strong> 20\n<strong>Explanation: </strong>\nThe 20 numbers that can be written are:\n1, 3, 5, 7, 11, 13, 15, 17, 31, 33, 35, 37, 51, 53, 55, 57, 71, 73, 75, 77.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> digits = [&quot;1&quot;,&quot;4&quot;,&quot;9&quot;], n = 1000000000\n<strong>Output:</strong> 29523\n<strong>Explanation: </strong>\nWe can write 3 one digit numbers, 9 two digit numbers, 27 three digit numbers,\n81 four digit numbers, 243 five digit numbers, 729 six digit numbers,\n2187 seven digit numbers, 6561 eight digit numbers, and 19683 nine digit numbers.\nIn total, this is 29523 integers that can be written using the digits array.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> digits = [&quot;7&quot;], n = 8\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= digits.length &lt;= 9</code></li>\n\t<li><code>digits[i].length == 1</code></li>\n\t<li><code>digits[i]</code> is a digit from&nbsp;<code>&#39;1&#39;</code>&nbsp;to <code>&#39;9&#39;</code>.</li>\n\t<li>All the values in&nbsp;<code>digits</code> are <strong>unique</strong>.</li>\n\t<li><code>digits</code> is sorted in&nbsp;<strong>non-decreasing</strong> order.</li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"19.6K\", \"totalSubmission\": \"54.2K\", \"totalAcceptedRaw\": 19551, \"totalSubmissionRaw\": 54182, \"acRate\": \"36.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "899", "name": "orderly-queue", "content": {"questionId": "935", "questionFrontendId": "899", "questionTitle": "Orderly Queue", "questionTitleSlug": "orderly-queue", "content": "<p>A string <code>S</code> of lowercase letters is given.&nbsp; Then, we may make any number of <em>moves</em>.</p>\r\n\r\n<p>In each move, we&nbsp;choose one&nbsp;of the first <code>K</code> letters (starting from the left), remove it,&nbsp;and place it at the end of the string.</p>\r\n\r\n<p>Return the lexicographically smallest string we could have after any number of moves.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>S = <span id=\"example-input-1-1\">&quot;cba&quot;</span>, K = <span id=\"example-input-1-2\">1</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">&quot;acb&quot;</span>\r\n<strong>Explanation: </strong>\r\nIn the first move, we move the 1st character (&quot;c&quot;) to the end, obtaining the string &quot;bac&quot;.\r\nIn the second move, we move the 1st character (&quot;b&quot;) to the end, obtaining the final result &quot;acb&quot;.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>S = <span id=\"example-input-2-1\">&quot;baaca&quot;</span>, K = <span id=\"example-input-2-2\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">&quot;aaabc&quot;</span>\r\n<strong>Explanation: </strong>\r\nIn the first move, we move the 1st character (&quot;b&quot;) to the end, obtaining the string &quot;aacab&quot;.\r\nIn the second move, we move the 3rd character (&quot;c&quot;) to the end, obtaining the final result &quot;aaabc&quot;.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= K &lt;= S.length&nbsp;&lt;= 1000</code></li>\r\n\t<li><code>S</code>&nbsp;consists of lowercase letters only.</li>\r\n</ol>\r\n</div>\r\n</div>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"8.8K\", \"totalSubmission\": \"16.6K\", \"totalAcceptedRaw\": 8789, \"totalSubmissionRaw\": 16627, \"acRate\": \"52.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "String", "slug": "string"}]}}, {"id": "895", "name": "maximum-frequency-stack", "content": {"questionId": "931", "questionFrontendId": "895", "questionTitle": "Maximum Frequency Stack", "questionTitleSlug": "maximum-frequency-stack", "content": "<p>Implement <code>FreqStack</code>, a class which simulates the operation of a stack-like data structure.</p>\r\n\r\n<p><code>FreqStack</code>&nbsp;has two functions:</p>\r\n\r\n<ul>\r\n\t<li><code>push(int x)</code>, which pushes an integer <code>x</code> onto the stack.</li>\r\n\t<li><code>pop()</code>, which <strong>removes</strong> and returns the most frequent element in the stack.\r\n\t<ul>\r\n\t\t<li>If there is a tie for most frequent element, the element closest to the top of the stack is removed and returned.</li>\r\n\t</ul>\r\n\t</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>\r\n<span id=\"example-input-1-1\">[&quot;FreqStack&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;pop&quot;,&quot;pop&quot;,&quot;pop&quot;,&quot;pop&quot;]</span>,\r\n<span id=\"example-input-1-2\">[[],[5],[7],[5],[7],[4],[5],[],[],[],[]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[null,null,null,null,null,null,null,5,7,5,4]</span>\r\n<strong>Explanation</strong>:\r\nAfter making six .push operations, the stack is [5,7,5,7,4,5] from bottom to top.  Then:\r\n\r\npop() -&gt; returns 5, as 5 is the most frequent.\r\nThe stack becomes [5,7,5,7,4].\r\n\r\npop() -&gt; returns 7, as 5 and 7 is the most frequent, but 7 is closest to the top.\r\nThe stack becomes [5,7,5,4].\r\n\r\npop() -&gt; returns 5.\r\nThe stack becomes [5,7,4].\r\n\r\npop() -&gt; returns 4.\r\nThe stack becomes [5,7].\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li>Calls to <code>FreqStack.push(int x)</code>&nbsp;will be such that <code>0 &lt;= x &lt;= 10^9</code>.</li>\r\n\t<li>It is guaranteed that <code>FreqStack.pop()</code> won&#39;t be called if the stack has zero elements.</li>\r\n\t<li>The total number of <code>FreqStack.push</code> calls will not exceed <code>10000</code> in a single test case.</li>\r\n\t<li>The total number of <code>FreqStack.pop</code>&nbsp;calls will not exceed <code>10000</code> in a single test case.</li>\r\n\t<li>The total number of <code>FreqStack.push</code> and <code>FreqStack.pop</code> calls will not exceed <code>150000</code> across all test cases.</li>\r\n</ul>\r\n\r\n<div>\r\n<p>&nbsp;</p>\r\n</div>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"45K\", \"totalSubmission\": \"72.5K\", \"totalAcceptedRaw\": 44963, \"totalSubmissionRaw\": 72502, \"acRate\": \"62.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Stack", "slug": "stack"}]}}, {"id": "891", "name": "sum-of-subsequence-widths", "content": {"questionId": "927", "questionFrontendId": "891", "questionTitle": "Sum of Subsequence Widths", "questionTitleSlug": "sum-of-subsequence-widths", "content": "<p>Given an array of integers <code>A</code>, consider all non-empty subsequences of <code>A</code>.</p>\r\n\r\n<p>For any sequence S, let the&nbsp;<em>width</em>&nbsp;of S be the difference between the maximum and minimum element of S.</p>\r\n\r\n<p>Return the sum of the widths of all subsequences of A.&nbsp;</p>\r\n\r\n<p>As the answer may be very large, <strong>return the answer modulo 10^9 + 7</strong>.</p>\r\n\r\n<div>\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[2,1,3]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">6</span>\r\n<strong>Explanation:\r\n</strong>Subsequences are [1], [2], [3], [2,1], [2,3], [1,3], [2,1,3].\r\nThe corresponding widths are 0, 0, 0, 1, 1, 2, 2.\r\nThe sum of these widths is 6.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= A.length &lt;= 20000</code></li>\r\n\t<li><code>1 &lt;= A[i] &lt;= 20000</code></li>\r\n</ul>\r\n</div>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"9.6K\", \"totalSubmission\": \"29.4K\", \"totalAcceptedRaw\": 9629, \"totalSubmissionRaw\": 29373, \"acRate\": \"32.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Math", "slug": "math"}]}}, {"id": "887", "name": "super-egg-drop", "content": {"questionId": "923", "questionFrontendId": "887", "questionTitle": "Super Egg Drop", "questionTitleSlug": "super-egg-drop", "content": "<p>You are given <code>K</code> eggs, and you have access to a building with <code>N</code> floors from <code>1</code> to <code>N</code>.&nbsp;</p>\r\n\r\n<p>Each egg is identical in function, and if an egg breaks, you cannot drop it&nbsp;again.</p>\r\n\r\n<p>You know that there exists a floor <code>F</code> with <code>0 &lt;= F &lt;= N</code> such that any egg dropped at a floor higher than <code>F</code> will break, and any egg dropped at or below floor <code>F</code> will not break.</p>\r\n\r\n<p>Each <em>move</em>, you may take an egg (if you have an unbroken one) and drop it from any floor <code>X</code> (with&nbsp;<code>1 &lt;= X &lt;= N</code>).&nbsp;</p>\r\n\r\n<p>Your goal is to know&nbsp;<strong>with certainty</strong>&nbsp;what the value of <code>F</code> is.</p>\r\n\r\n<p>What is the minimum number of moves that you need to know with certainty&nbsp;what <code>F</code> is, regardless of the initial value of <code>F</code>?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>K = <span id=\"example-input-1-1\">1</span>, N = <span id=\"example-input-1-2\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\r\n<strong>Explanation: </strong>\r\nDrop the egg from floor 1.  If it breaks, we know with certainty that F = 0.\r\nOtherwise, drop the egg from floor 2.  If it breaks, we know with certainty that F = 1.\r\nIf it didn&#39;t break, then we know with certainty F = 2.\r\nHence, we needed 2 moves in the worst case to know what F is with certainty.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>K = <span id=\"example-input-2-1\">2</span>, N = 6\r\n<strong>Output: </strong><span id=\"example-output-2\">3</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>K = <span id=\"example-input-3-1\">3</span>, N = <span id=\"example-input-3-2\">14</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">4</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= K &lt;= 100</code></li>\r\n\t<li><code>1 &lt;= N &lt;= 10000</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"25.4K\", \"totalSubmission\": \"93.8K\", \"totalAcceptedRaw\": 25382, \"totalSubmissionRaw\": 93774, \"acRate\": \"27.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Binary Search", "slug": "binary-search"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "882", "name": "reachable-nodes-in-subdivided-graph", "content": {"questionId": "918", "questionFrontendId": "882", "questionTitle": "Reachable Nodes In Subdivided Graph", "questionTitleSlug": "reachable-nodes-in-subdivided-graph", "content": "<p>Starting with an&nbsp;<strong>undirected</strong> graph (the &quot;original graph&quot;) with nodes from <code>0</code> to <code>N-1</code>, subdivisions are made to some of the edges.</p>\r\n\r\n<p>The graph is given as follows: <code>edges[k]</code> is a list of integer pairs <code>(i, j, n)</code> such that <code>(i, j)</code> is an edge of the original graph,</p>\r\n\r\n<p>and <code>n</code> is the total number of <strong>new</strong> nodes on that edge.&nbsp;</p>\r\n\r\n<p>Then, the edge <code>(i, j)</code> is deleted from the original graph,&nbsp;<code>n</code>&nbsp;new nodes <code>(x_1, x_2, ..., x_n)</code> are added to the original graph,</p>\r\n\r\n<p>and <code>n+1</code> new&nbsp;edges <code>(i, x_1), (x_1, x_2), (x_2, x_3), ..., (x_{n-1}, x_n), (x_n, j)</code>&nbsp;are added to the original&nbsp;graph.</p>\r\n\r\n<p>Now, you start at node <code>0</code>&nbsp;from the original graph, and in each move, you travel along one&nbsp;edge.&nbsp;</p>\r\n\r\n<p>Return how many nodes you can reach in at most <code>M</code> moves.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><code>edges </code>= <span id=\"example-input-1-1\">[[0,1,10],[0,2,1],[1,2,2]]</span>, M = <span id=\"example-input-1-2\">6</span>, N = <span id=\"example-input-1-3\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">13</span>\r\n<strong>Explanation: </strong>\r\nThe nodes that are reachable in the final graph after M = 6 moves are indicated below.\r\n<span><img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/08/01/origfinal.png\" style=\"width: 487px; height: 200px;\" /></span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><code>edges </code>= <span id=\"example-input-2-1\">[[0,1,4],[1,2,6],[0,2,8],[1,3,1]]</span>, M = <span id=\"example-input-2-2\">10</span>, N = <span id=\"example-input-2-3\">4</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">23</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>0 &lt;= edges.length &lt;= 10000</code></li>\r\n\t<li><code>0 &lt;= edges[i][0] &lt;&nbsp;edges[i][1] &lt; N</code></li>\r\n\t<li>There does not exist any&nbsp;<code>i != j</code> for which <code>edges[i][0] == edges[j][0]</code> and <code>edges[i][1] == edges[j][1]</code>.</li>\r\n\t<li>The original graph&nbsp;has no parallel edges.</li>\r\n\t<li><code>0 &lt;= edges[i][2] &lt;= 10000</code></li>\r\n\t<li><code>0 &lt;= M &lt;= 10^9</code></li>\r\n\t<li><code><font face=\"monospace\">1 &lt;= N &lt;= 3000</font></code></li>\r\n\t<li>A reachable node is a node that can be travelled to&nbsp;using at most&nbsp;M moves starting from&nbsp;node 0.</li>\r\n</ol>\r\n\r\n<div>\r\n<div>&nbsp;</div>\r\n</div>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"6.6K\", \"totalSubmission\": \"15.7K\", \"totalAcceptedRaw\": 6620, \"totalSubmissionRaw\": 15710, \"acRate\": \"42.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Heap", "slug": "heap"}]}}, {"id": "879", "name": "profitable-schemes", "content": {"questionId": "911", "questionFrontendId": "879", "questionTitle": "Profitable Schemes", "questionTitleSlug": "profitable-schemes", "content": "<p>There is a group of&nbsp;<code>G</code> members, and a list of various crimes they could commit.</p>\n\n<p>The <code>i<sup>th</sup></code>&nbsp;crime generates a <code>profit[i]</code> and requires <code>group[i]</code>&nbsp;members to participate in it.</p>\n\n<p>If a&nbsp;member participates in one crime, that member can&#39;t participate in another crime.</p>\n\n<p>Let&#39;s call a <em>profitable&nbsp;scheme</em>&nbsp;any subset of these crimes that generates at least <code>P</code> profit, and the total number of&nbsp;members participating in that subset of crimes is at most <code>G</code>.</p>\n\n<p>How many schemes can be chosen?&nbsp; Since the answer may be very&nbsp;large, <strong>return it modulo</strong> <code>10^9 + 7</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>G = <span id=\"example-input-1-1\">5</span>, P = <span id=\"example-input-1-2\">3</span>, group = <span id=\"example-input-1-3\">[2,2]</span>, profit = <span id=\"example-input-1-4\">[2,3]</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n<strong>Explanation: </strong>\nTo make a profit of at least 3, the group could either commit crimes 0 and 1, or just crime 1.\nIn total, there are 2 schemes.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>G = <span id=\"example-input-2-1\">10</span>, P = <span id=\"example-input-2-2\">5</span>, group = <span id=\"example-input-2-3\">[2,3,5]</span>, profit = <span id=\"example-input-2-4\">[6,7,8]</span>\n<strong>Output: </strong><span id=\"example-output-2\">7</span>\n<strong>Explanation: </strong>\nTo make a profit of at least 5, the group could commit any crimes, as long as they commit one.\nThere are 7 possible schemes: (0), (1), (2), (0,1), (0,2), (1,2), and (0,1,2).\n</pre>\n\n<p>&nbsp;</p>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= G &lt;= 100</code></li>\n\t<li><code>0 &lt;= P &lt;= 100</code></li>\n\t<li><code>1 &lt;= group[i] &lt;= 100</code></li>\n\t<li><code>0 &lt;= profit[i] &lt;= 100</code></li>\n\t<li><code>1 &lt;= group.length = profit.length &lt;= 100</code></li>\n</ol>\n\n<div>\n<div>&nbsp;</div>\n</div>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"10.6K\", \"totalSubmission\": \"26.4K\", \"totalAcceptedRaw\": 10580, \"totalSubmissionRaw\": 26436, \"acRate\": \"40.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "878", "name": "nth-magical-number", "content": {"questionId": "910", "questionFrontendId": "878", "questionTitle": "Nth Magical Number", "questionTitleSlug": "nth-magical-number", "content": "<p>A positive integer is <em>magical</em> if it is divisible by either <code>a</code> or <code>b</code>.</p>\n\n<p>Given the three integers <code>n</code>, <code>a</code>, and <code>b</code>, return the <code>n<sup>th</sup></code> magical number. Since the answer may be very large, <strong>return it modulo </strong><code>10<sup>9</sup> + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 1, a = 2, b = 3\n<strong>Output:</strong> 2\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 4, a = 2, b = 3\n<strong>Output:</strong> 6\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> n = 5, a = 2, b = 4\n<strong>Output:</strong> 10\n</pre><p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> n = 3, a = 6, b = 4\n<strong>Output:</strong> 8\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10<sup>9</sup></code></li>\n\t<li><code>2 &lt;= a, b &lt;= 4 * 10<sup>4</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"10.8K\", \"totalSubmission\": \"37.5K\", \"totalAcceptedRaw\": 10773, \"totalSubmissionRaw\": 37465, \"acRate\": \"28.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "871", "name": "minimum-number-of-refueling-stops", "content": {"questionId": "902", "questionFrontendId": "871", "questionTitle": "Minimum Number of Refueling Stops", "questionTitleSlug": "minimum-number-of-refueling-stops", "content": "<p>A car travels from a starting position to a destination which is <code>target</code> miles east of the starting position.</p>\r\n\r\n<p>Along the way, there are gas stations.&nbsp; Each <code>station[i]</code>&nbsp;represents a gas station that is <code>station[i][0]</code> miles east of the starting position, and has <code>station[i][1]</code> liters of gas.</p>\r\n\r\n<p>The car starts with an infinite tank of gas, which initially has&nbsp;<code>startFuel</code>&nbsp;liters of fuel in it.&nbsp; It uses 1 liter of gas per 1 mile that it drives.</p>\r\n\r\n<p>When the car&nbsp;reaches a gas station, it may stop and refuel, transferring all the gas from the station into the car.</p>\r\n\r\n<p>What is the least number of refueling stops the car must make in order to reach its destination?&nbsp; If it cannot reach the destination, return <code>-1</code>.</p>\r\n\r\n<p>Note that if the car reaches a gas station with 0 fuel left, the car can still refuel there.&nbsp; If the car reaches the destination with 0 fuel left, it is still considered to have arrived.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>target = <span id=\"example-input-1-1\">1</span>, startFuel = <span id=\"example-input-1-2\">1</span>, stations = <span id=\"example-input-1-3\">[]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">0</span>\r\n<strong>Explanation: </strong>We can reach the target without refueling.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>target = <span id=\"example-input-2-1\">100</span>, startFuel = <span id=\"example-input-2-2\">1</span>, stations = <span id=\"example-input-2-3\">[[10,100]]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">-1</span>\r\n<strong>Explanation: </strong>We can&#39;t reach the target (or even the first gas station).\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>target = <span id=\"example-input-3-1\">100</span>, startFuel = <span id=\"example-input-3-2\">10</span>, stations = <span id=\"example-input-3-3\">[[10,60],[20,30],[30,30],[60,40]]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">2</span>\r\n<strong>Explanation: </strong>\r\nWe start with 10 liters of fuel.\r\nWe drive to position 10, expending 10 liters of fuel.  We refuel from 0 liters to 60 liters of gas.\r\nThen, we drive from position 10 to position 60 (expending 50 liters of fuel),\r\nand refuel from 10 liters to 50 liters of gas.  We then drive to and reach the target.\r\nWe made 2 refueling stops along the way, so we return 2.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= target, startFuel, stations[i][1] &lt;= 10^9</code></li>\r\n\t<li><code>0 &lt;= stations.length &lt;= 500</code></li>\r\n\t<li><code>0 &lt; stations[0][0] &lt; stations[1][0] &lt; ... &lt; stations[stations.length-1][0] &lt; target</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"23.9K\", \"totalSubmission\": \"74.4K\", \"totalAcceptedRaw\": 23903, \"totalSubmissionRaw\": 74403, \"acRate\": \"32.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Heap", "slug": "heap"}]}}, {"id": "864", "name": "shortest-path-to-get-all-keys", "content": {"questionId": "895", "questionFrontendId": "864", "questionTitle": "Shortest Path to Get All Keys", "questionTitleSlug": "shortest-path-to-get-all-keys", "content": "<p>We are given a 2-dimensional&nbsp;<code>grid</code>.&nbsp;<code>&quot;.&quot;</code> is an empty cell, <code>&quot;#&quot;</code> is&nbsp;a wall, <code>&quot;@&quot;</code> is the starting point, (<code>&quot;a&quot;</code>, <code>&quot;b&quot;</code>, ...) are keys, and (<code>&quot;A&quot;</code>,&nbsp;<code>&quot;B&quot;</code>, ...) are locks.</p>\r\n\r\n<p>We start at the starting point, and one move consists of walking one space in one of the 4 cardinal directions.&nbsp; We cannot walk outside the grid, or walk into a wall.&nbsp; If we walk over a key, we pick it up.&nbsp; We can&#39;t walk over a lock unless we have the corresponding key.</p>\r\n\r\n<p>For some <font face=\"monospace\">1 &lt;= K &lt;= 6</font>, there is exactly one lowercase and one uppercase letter of the first <code>K</code> letters of the English alphabet in the grid.&nbsp; This means that there is exactly one key for each lock, and one lock for each key; and also that the letters used to represent the keys and locks were&nbsp;chosen in the same order as the English alphabet.</p>\r\n\r\n<p>Return the lowest number of moves to acquire all keys.&nbsp; If&nbsp;it&#39;s impossible, return <code>-1</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;@.a.#&quot;,&quot;###.#&quot;,&quot;b.A.B&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">8</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[&quot;@..aA&quot;,&quot;..B#.&quot;,&quot;....b&quot;]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">6</span>\r\n</pre>\r\n</div>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= grid.length&nbsp;&lt;= 30</code></li>\r\n\t<li><code>1 &lt;= grid[0].length&nbsp;&lt;= 30</code></li>\r\n\t<li><code>grid[i][j]</code> contains only<code> &#39;.&#39;</code>, <code>&#39;#&#39;</code>, <code>&#39;@&#39;</code>,&nbsp;<code>&#39;a&#39;-</code><code>&#39;f</code><code>&#39;</code> and <code>&#39;A&#39;-&#39;F&#39;</code></li>\r\n\t<li>The number of keys is in <code>[1, 6]</code>.&nbsp; Each key has a different letter and opens exactly one lock.</li>\r\n</ol>\r\n</div>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"12.5K\", \"totalSubmission\": \"30.1K\", \"totalAcceptedRaw\": 12516, \"totalSubmissionRaw\": 30143, \"acRate\": \"41.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Heap", "slug": "heap"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "710", "name": "random-pick-with-blacklist", "content": {"questionId": "894", "questionFrontendId": "710", "questionTitle": "Random Pick with Blacklist", "questionTitleSlug": "random-pick-with-blacklist", "content": "<p>Given a blacklist&nbsp;<code>B</code> containing unique integers&nbsp;from <code>[0, N)</code>, write a function to return a uniform random integer from <code>[0, N)</code> which is <strong>NOT</strong>&nbsp;in <code>B</code>.</p>\r\n\r\n<p>Optimize it such that it minimizes the call to system&rsquo;s <code>Math.random()</code>.</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= N &lt;= 1000000000</code></li>\r\n\t<li><code>0 &lt;= B.length &lt; min(100000, N)</code></li>\r\n\t<li><code>[0, N)</code>&nbsp;does NOT include N. See <a href=\"https://en.wikipedia.org/wiki/Interval_(mathematics)\" target=\"_blank\">interval notation</a>.</li>\r\n</ol>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: \r\n</strong><span id=\"example-input-1-1\">[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]\r\n</span><span id=\"example-input-1-2\">[[1,[]],[],[],[]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[null,0,0,0]</span>\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: \r\n</strong><span id=\"example-input-2-1\">[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]\r\n</span><span id=\"example-input-2-2\">[[2,[]],[],[],[]]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[null,1,1,1]</span>\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: \r\n</strong><span id=\"example-input-3-1\">[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]\r\n</span><span id=\"example-input-3-2\">[[3,[1]],[],[],[]]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">[null,0,0,2]</span>\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: \r\n</strong><span id=\"example-input-4-1\">[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]\r\n</span><span id=\"example-input-4-2\">[[4,[2]],[],[],[]]</span>\r\n<strong>Output: </strong><span id=\"example-output-4\">[null,1,3,1]</span>\r\n</pre>\r\n\r\n<p><strong>Explanation of Input Syntax:</strong></p>\r\n\r\n<p>The input is two lists:&nbsp;the subroutines called&nbsp;and their&nbsp;arguments.&nbsp;<code>Solution</code>&#39;s&nbsp;constructor has two arguments,&nbsp;<code>N</code> and the blacklist <code>B</code>. <code>pick</code> has no arguments.&nbsp;Arguments&nbsp;are&nbsp;always wrapped with a list, even if there aren&#39;t any.</p>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"15.8K\", \"totalSubmission\": \"48.5K\", \"totalAcceptedRaw\": 15824, \"totalSubmissionRaw\": 48482, \"acRate\": \"32.6%\"}", "similarQuestions": "[{\"title\": \"Random Pick Index\", \"titleSlug\": \"random-pick-index\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Random Pick with Weight\", \"titleSlug\": \"random-pick-with-weight\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Binary Search", "slug": "binary-search"}, {"name": "Sort", "slug": "sort"}, {"name": "Random", "slug": "random"}]}}, {"id": "862", "name": "shortest-subarray-with-sum-at-least-k", "content": {"questionId": "892", "questionFrontendId": "862", "questionTitle": "Shortest Subarray with Sum at Least K", "questionTitleSlug": "shortest-subarray-with-sum-at-least-k", "content": "<p>Return the <strong>length</strong> of the shortest, non-empty, contiguous&nbsp;subarray of <code>A</code> with sum at least <code>K</code>.</p>\r\n\r\n<p>If there is no non-empty subarray with sum at least <code>K</code>, return <code>-1</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[1]</span>, K = <span id=\"example-input-1-2\">1</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[1,2]</span>, K = <span id=\"example-input-2-2\">4</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">-1</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">[2,-1,2]</span>, K = <span id=\"example-input-3-2\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 50000</code></li>\r\n\t<li><code>-10 ^ 5&nbsp;&lt;= A[i] &lt;= 10 ^ 5</code></li>\r\n\t<li><code>1 &lt;= K &lt;= 10 ^ 9</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"40.6K\", \"totalSubmission\": \"162.1K\", \"totalAcceptedRaw\": 40625, \"totalSubmissionRaw\": 162107, \"acRate\": \"25.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Queue", "slug": "queue"}]}}, {"id": "857", "name": "minimum-cost-to-hire-k-workers", "content": {"questionId": "887", "questionFrontendId": "857", "questionTitle": "Minimum Cost to Hire K Workers", "questionTitleSlug": "minimum-cost-to-hire-k-workers", "content": "<p>There are <code>N</code> workers.&nbsp; The <code>i</code>-th worker has a <code>quality[i]</code> and a minimum wage expectation <code>wage[i]</code>.</p>\r\n\r\n<p>Now we want to hire exactly <code>K</code>&nbsp;workers to form a <em>paid group</em>.&nbsp; When hiring a group of K workers, we must pay them according to the following rules:</p>\r\n\r\n<ol>\r\n\t<li>Every worker in the paid group should be paid in the ratio of their quality compared to other workers in the paid group.</li>\r\n\t<li>Every worker in the paid group must be paid at least their minimum wage expectation.</li>\r\n</ol>\r\n\r\n<p>Return the least amount of money needed to form a paid group satisfying the above conditions.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>quality = <span id=\"example-input-1-1\">[10,20,5]</span>, wage = <span id=\"example-input-1-2\">[70,50,30]</span>, K = <span id=\"example-input-1-3\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">105.00000\r\n<strong>Explanation</strong>: </span><span>We pay 70 to 0-th worker and 35 to 2-th worker.</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>quality = <span id=\"example-input-2-1\">[3,1,10,10,1]</span>, wage = <span id=\"example-input-2-2\">[4,8,2,2,7]</span>, K = <span id=\"example-input-2-3\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">30.66667\r\n<strong>Explanation</strong>: </span><span>We pay 4 to 0-th worker, 13.33333 to 2-th and 3-th workers seperately.</span> \r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= K &lt;= N &lt;= 10000</code>, where <code>N = quality.length = wage.length</code></li>\r\n\t<li><code>1 &lt;= quality[i] &lt;= 10000</code></li>\r\n\t<li><code>1 &lt;= wage[i] &lt;= 10000</code></li>\r\n\t<li>Answers within <code>10^-5</code> of the correct answer will be considered correct.</li>\r\n</ol>\r\n</div>\r\n</div>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"34.5K\", \"totalSubmission\": \"68.7K\", \"totalAcceptedRaw\": 34473, \"totalSubmissionRaw\": 68709, \"acRate\": \"50.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Heap", "slug": "heap"}]}}, {"id": "854", "name": "k-similar-strings", "content": {"questionId": "884", "questionFrontendId": "854", "questionTitle": "K-Similar Strings", "questionTitleSlug": "k-similar-strings", "content": "<p>Strings&nbsp;<code>A</code> and <code>B</code> are <code>K</code>-similar (for some non-negative integer <code>K</code>) if we can swap the positions of two letters in <code>A</code> exactly <code>K</code>&nbsp;times so that the resulting string equals <code>B</code>.</p>\r\n\r\n<p>Given two anagrams <code>A</code> and <code>B</code>, return the smallest <code>K</code>&nbsp;for which <code>A</code> and <code>B</code> are <code>K</code>-similar.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">&quot;ab&quot;</span>, B = <span id=\"example-input-1-2\">&quot;ba&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">&quot;abc&quot;</span>, B = <span id=\"example-input-2-2\">&quot;bca&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">2</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">&quot;abac&quot;</span>, B = <span id=\"example-input-3-2\">&quot;baca&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">2</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-4-1\">&quot;aabc&quot;</span>, B = <span id=\"example-input-4-2\">&quot;abca&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-4\">2</span></pre>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length == B.length &lt;= 20</code></li>\r\n\t<li><code>A</code> and <code>B</code> contain only lowercase letters from the set <code>{&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;}</code></li>\r\n</ol>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"21.2K\", \"totalSubmission\": \"55K\", \"totalAcceptedRaw\": 21158, \"totalSubmissionRaw\": 54976, \"acRate\": \"38.5%\"}", "similarQuestions": "[{\"title\": \"Couples Holding Hands\", \"titleSlug\": \"couples-holding-hands\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "850", "name": "rectangle-area-ii", "content": {"questionId": "880", "questionFrontendId": "850", "questionTitle": "Rectangle Area II", "questionTitleSlug": "rectangle-area-ii", "content": "<p>We are given a list of (axis-aligned) <code>rectangles</code>. Each <code>rectangle[i] = [x<sub>i1</sub>, y<sub>i1</sub>, x<sub>i2</sub>, y<sub>i2</sub>] </code>, where <code>(x<sub>i1</sub>, y<sub>i1</sub>)</code> are the coordinates of the bottom-left corner, and <code>(x<sub>i2</sub>, y<sub>i2</sub>)</code> are the coordinates of the top-right corner of the <code>i<sup>th</sup></code> rectangle.</p>\n\n<p>Find the total area covered by all <code>rectangles</code> in the plane. Since the answer may be too large, return it <strong>modulo</strong> <code>10<sup>9</sup> + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/06/06/rectangle_area_ii_pic.png\" style=\"width: 600px; height: 450px;\" />\n<pre>\n<strong>Input:</strong> rectangles = [[0,0,2,2],[1,0,2,3],[1,0,3,1]]\n<strong>Output:</strong> 6\n<strong>Explanation: </strong>As illustrated in the picture.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> rectangles = [[0,0,1000000000,1000000000]]\n<strong>Output:</strong> 49\n<strong>Explanation: </strong>The answer is 10<sup>18</sup> modulo (10<sup>9</sup> + 7), which is (10<sup>9</sup>)<sup>2</sup> = (-7)<sup>2</sup> = 49.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= rectangles.length &lt;= 200</code></li>\n\t<li><code><font face=\"monospace\">rectanges[i].length = 4</font></code></li>\n\t<li><code>0 &lt;= rectangles[i][j] &lt;= 10<sup>9</sup></code></li>\n\t<li>The total area covered by all rectangles will never exceed <code>2<sup>63</sup> - 1</code> and thus will fit in a <strong>64-bit</strong> signed integer.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"14.2K\", \"totalSubmission\": \"29.5K\", \"totalAcceptedRaw\": 14231, \"totalSubmissionRaw\": 29456, \"acRate\": \"48.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Segment Tree", "slug": "segment-tree"}, {"name": "Line Sweep", "slug": "line-sweep"}]}}, {"id": "847", "name": "shortest-path-visiting-all-nodes", "content": {"questionId": "877", "questionFrontendId": "847", "questionTitle": "Shortest Path Visiting All Nodes", "questionTitleSlug": "shortest-path-visiting-all-nodes", "content": "<p>An undirected, connected graph of N nodes (labeled&nbsp;<code>0, 1, 2, ..., N-1</code>) is given as <code>graph</code>.</p>\r\n\r\n<p><code>graph.length = N</code>, and <code>j != i</code>&nbsp;is in the list&nbsp;<code>graph[i]</code>&nbsp;exactly once, if and only if nodes <code>i</code> and <code>j</code> are connected.</p>\r\n\r\n<p>Return the length of the shortest path that visits every node. You may start and stop at any node, you may revisit nodes multiple times, and you may reuse edges.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[[1,2,3],[0],[0],[0]]\r\n<strong>Output: </strong>4\r\n<strong>Explanation</strong>: One possible path is [1,0,2,0,3]</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[[1],[0,2,4],[1,3,4],[2],[1,2]]\r\n<strong>Output: </strong>4\r\n<strong>Explanation</strong>: One possible path is [0,1,4,2,3]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= graph.length &lt;= 12</code></li>\r\n\t<li><code>0 &lt;= graph[i].length &lt;&nbsp;graph.length</code></li>\r\n</ol>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"19.2K\", \"totalSubmission\": \"36.1K\", \"totalAcceptedRaw\": 19181, \"totalSubmissionRaw\": 36115, \"acRate\": \"53.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "843", "name": "guess-the-word", "content": {"questionId": "873", "questionFrontendId": "843", "questionTitle": "Guess the Word", "questionTitleSlug": "guess-the-word", "content": "<p>This problem is an&nbsp;<strong><em>interactive problem</em></strong>&nbsp;new to the LeetCode platform.</p>\r\n\r\n<p>We are given a word list of unique words, each word is 6 letters long, and one word in this list is chosen as <strong>secret</strong>.</p>\r\n\r\n<p>You may call <code>master.guess(word)</code>&nbsp;to guess a word.&nbsp; The guessed word should have&nbsp;type <code>string</code>&nbsp;and must be from the original list&nbsp;with 6 lowercase letters.</p>\r\n\r\n<p>This function returns an&nbsp;<code>integer</code>&nbsp;type, representing&nbsp;the number of exact matches (value and position) of your guess to the <strong>secret word</strong>.&nbsp; Also, if your guess is not in the given wordlist, it will return <code>-1</code> instead.</p>\r\n\r\n<p>For each test case, you have 10 guesses to guess the word. At the end of any number of calls, if you have made 10 or less calls to <code>master.guess</code>&nbsp;and at least one of these guesses was the <strong>secret</strong>, you pass the testcase.</p>\r\n\r\n<p>Besides the example test case below, there will be 5&nbsp;additional test cases, each with 100 words in the word list.&nbsp; The letters of each word in those testcases were chosen&nbsp;independently at random from <code>&#39;a&#39;</code> to <code>&#39;z&#39;</code>, such that every word in the given word lists is unique.</p>\r\n\r\n<pre>\r\n<strong>Example 1:</strong>\r\n<strong>Input:</strong>&nbsp;secret = &quot;acckzz&quot;, wordlist = [&quot;acckzz&quot;,&quot;ccbazz&quot;,&quot;eiowzz&quot;,&quot;abcczz&quot;]\r\n\r\n<strong>Explanation:</strong>\r\n\r\n<code>master.guess(&quot;aaaaaa&quot;)</code> returns -1, because&nbsp;<code>&quot;aaaaaa&quot;</code>&nbsp;is not in wordlist.\r\n<code>master.guess(&quot;acckzz&quot;) </code>returns 6, because&nbsp;<code>&quot;acckzz&quot;</code> is secret and has all 6&nbsp;matches.\r\n<code>master.guess(&quot;ccbazz&quot;)</code> returns 3, because<code>&nbsp;&quot;ccbazz&quot;</code>&nbsp;has 3 matches.\r\n<code>master.guess(&quot;eiowzz&quot;)</code> returns 2, because&nbsp;<code>&quot;eiowzz&quot;</code>&nbsp;has 2&nbsp;matches.\r\n<code>master.guess(&quot;abcczz&quot;)</code> returns 4, because&nbsp;<code>&quot;abcczz&quot;</code> has 4 matches.\r\n\r\nWe made 5 calls to&nbsp;master.guess and one of them was the secret, so we pass the test case.\r\n</pre>\r\n\r\n<p><strong>Note:</strong>&nbsp; Any solutions that attempt to circumvent the judge&nbsp;will result in disqualification.</p>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"62.1K\", \"totalSubmission\": \"133.9K\", \"totalAcceptedRaw\": 62079, \"totalSubmissionRaw\": 133942, \"acRate\": \"46.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Minimax", "slug": "minimax"}]}}, {"id": "839", "name": "similar-string-groups", "content": {"questionId": "869", "questionFrontendId": "839", "questionTitle": "Similar String Groups", "questionTitleSlug": "similar-string-groups", "content": "<p>Two strings <code>X</code>&nbsp;and <code>Y</code>&nbsp;are similar if we can swap two letters (in different positions) of <code>X</code>, so that&nbsp;it equals <code>Y</code>. Also two strings <code>X</code> and <code>Y</code> are similar if they are equal.</p>\n\n<p>For example, <code>&quot;tars&quot;</code>&nbsp;and <code>&quot;rats&quot;</code>&nbsp;are similar (swapping at positions <code>0</code> and <code>2</code>), and <code>&quot;rats&quot;</code> and <code>&quot;arts&quot;</code> are similar, but <code>&quot;star&quot;</code> is not similar to <code>&quot;tars&quot;</code>, <code>&quot;rats&quot;</code>, or <code>&quot;arts&quot;</code>.</p>\n\n<p>Together, these form two connected groups by similarity: <code>{&quot;tars&quot;, &quot;rats&quot;, &quot;arts&quot;}</code> and <code>{&quot;star&quot;}</code>.&nbsp; Notice that <code>&quot;tars&quot;</code> and <code>&quot;arts&quot;</code> are in the same group even though they are not similar.&nbsp; Formally, each group is such that a word is in the group if and only if it is similar to at least one other word in the group.</p>\n\n<p>We are given a list <code>strs</code> of strings where every string in <code>strs</code> is an anagram of every other string in <code>strs</code>. How many groups are there?</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> strs = [&quot;tars&quot;,&quot;rats&quot;,&quot;arts&quot;,&quot;star&quot;]\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> strs = [&quot;omv&quot;,&quot;ovm&quot;]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= strs.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= strs[i].length &lt;= 1000</code></li>\n\t<li><code>sum(strs[i].length) &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>strs[i]</code> consists of lowercase letters only.</li>\n\t<li>All words in <code>strs</code> have the same length and are anagrams of each other.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"30.4K\", \"totalSubmission\": \"76.8K\", \"totalAcceptedRaw\": 30396, \"totalSubmissionRaw\": 76846, \"acRate\": \"39.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Union Find", "slug": "union-find"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "489", "name": "robot-room-cleaner", "content": {"questionId": "865", "questionFrontendId": "489", "questionTitle": "Robot Room Cleaner", "questionTitleSlug": "robot-room-cleaner", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"66.9K\", \"totalSubmission\": \"93K\", \"totalAcceptedRaw\": 66919, \"totalSubmissionRaw\": 93008, \"acRate\": \"71.9%\"}", "similarQuestions": "[{\"title\": \"Walls and Gates\", \"titleSlug\": \"walls-and-gates\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "834", "name": "sum-of-distances-in-tree", "content": {"questionId": "863", "questionFrontendId": "834", "questionTitle": "Sum of Distances in Tree", "questionTitleSlug": "sum-of-distances-in-tree", "content": "<p>An undirected, connected&nbsp;tree with <code>N</code> nodes labelled <code>0...N-1</code> and <code>N-1</code> <code>edges</code>&nbsp;are&nbsp;given.</p>\r\n\r\n<p>The <code>i</code>th edge connects nodes&nbsp;<code>edges[i][0] </code>and<code>&nbsp;edges[i][1]</code>&nbsp;together.</p>\r\n\r\n<p>Return a list <code>ans</code>, where <code>ans[i]</code> is the sum of the distances between node <code>i</code> and all other nodes.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>N = 6, edges = [[0,1],[0,2],[2,3],[2,4],[2,5]]\r\n<strong>Output: </strong>[8,12,6,10,10,10]\r\n<strong>Explanation: </strong>\r\nHere is a diagram of the given tree:\r\n  0\r\n / \\\r\n1   2\r\n   /|\\\r\n  3 4 5\r\nWe can see that dist(0,1) + dist(0,2) + dist(0,3) + dist(0,4) + dist(0,5)\r\nequals 1 + 1 + 2 + 2 + 2 = 8.  Hence, answer[0] = 8, and so on.\r\n</pre>\r\n\r\n<p>Note:<font face=\"monospace\">&nbsp;<code>1 &lt;= N &lt;= 10000</code></font></p>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"17.1K\", \"totalSubmission\": \"37.8K\", \"totalAcceptedRaw\": 17147, \"totalSubmissionRaw\": 37840, \"acRate\": \"45.3%\"}", "similarQuestions": "[{\"title\": \"Distribute Coins in Binary Tree\", \"titleSlug\": \"distribute-coins-in-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "829", "name": "consecutive-numbers-sum", "content": {"questionId": "856", "questionFrontendId": "829", "questionTitle": "Consecutive Numbers Sum", "questionTitleSlug": "consecutive-numbers-sum", "content": "<p>Given a positive integer&nbsp;<code>N</code>, how many ways can we write it as a sum of&nbsp;consecutive positive integers?</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>5\r\n<strong>Output: </strong>2\r\n<strong>Explanation: </strong>5 = 5 = 2 + 3</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>9\r\n<strong>Output: </strong>3\r\n<strong>Explanation: </strong>9 = 9 = 4 + 5 = 2 + 3 + 4</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>15\r\n<strong>Output: </strong>4\r\n<strong>Explanation: </strong>15 = 15 = 8 + 7 = 4 + 5 + 6 = 1 + 2 + 3 + 4 + 5</pre>\r\n\r\n<p><strong>Note:</strong>&nbsp;<code>1 &lt;= N &lt;= 10 ^ 9</code>.</p>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"37.1K\", \"totalSubmission\": \"94.1K\", \"totalAcceptedRaw\": 37114, \"totalSubmissionRaw\": 94081, \"acRate\": \"39.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "828", "name": "count-unique-characters-of-all-substrings-of-a-given-string", "content": {"questionId": "855", "questionFrontendId": "828", "questionTitle": "Count Unique Characters of All Substrings of a Given String", "questionTitleSlug": "count-unique-characters-of-all-substrings-of-a-given-string", "content": "<p>Let&#39;s define a function <code>countUniqueChars(s)</code>&nbsp;that returns the number of unique characters on <code>s</code>, for example if <code>s = &quot;LEETCODE&quot;</code>&nbsp;then <code>&quot;L&quot;</code>, <code>&quot;T&quot;</code>,<code>&quot;C&quot;</code>,<code>&quot;O&quot;</code>,<code>&quot;D&quot;</code> are the unique characters since they appear only once in <code>s</code>, therefore&nbsp;<code>countUniqueChars(s) = 5</code>.<br />\n<br />\nOn this problem given a string <code>s</code> we need to return the sum of&nbsp;<code>countUniqueChars(t)</code>&nbsp;where <code>t</code> is a substring of <code>s</code>. Notice that some substrings can be repeated so on this case you have to count the repeated ones too.</p>\n\n<p>Since the answer can be very large, return&nbsp;the answer&nbsp;modulo&nbsp;<code>10 ^ 9 + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ABC&quot;\n<strong>Output:</strong> 10\n<strong>Explanation: </strong>All possible substrings are: &quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;AB&quot;,&quot;BC&quot; and &quot;ABC&quot;.\nEvey substring is composed with only unique letters.\nSum of lengths of all substring is 1 + 1 + 1 + 2 + 2 + 3 = 10\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ABA&quot;\n<strong>Output:</strong> 8\n<strong>Explanation: </strong>The same as example 1, except <code>countUniqueChars</code>(&quot;ABA&quot;) = 1.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;LEETCODE&quot;\n<strong>Output:</strong> 92\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 10^4</code></li>\n\t<li><code>s</code>&nbsp;contain upper-case English letters only.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"13.3K\", \"totalSubmission\": \"28.4K\", \"totalAcceptedRaw\": 13274, \"totalSubmissionRaw\": 28425, \"acRate\": \"46.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Two Pointers", "slug": "two-pointers"}]}}, {"id": "827", "name": "making-a-large-island", "content": {"questionId": "854", "questionFrontendId": "827", "questionTitle": "Making A Large Island", "questionTitleSlug": "making-a-large-island", "content": "<p>In a 2D grid of <code>0</code>s and <code>1</code>s, we change at most one <code>0</code> to a <code>1</code>.</p>\r\n\r\n<p>After, what is the size of the largest island?&nbsp;(An island is a 4-directionally connected group of <code>1</code>s).</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[[1, 0], [0, 1]]\r\n<strong>Output:</strong> 3\r\n<strong>Explanation:</strong> Change one 0 to 1 and connect two 1s, then we get an island with area = 3.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[[1, 1], [1, 0]]\r\n<strong>Output:</strong> 4\r\n<strong>Explanation: </strong>Change the 0 to 1 and make the island bigger, only one island with area = 4.</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[[1, 1], [1, 1]]\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> Can&#39;t change any 0 to 1, only one island with area = 4.</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Notes:</p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= grid.length = grid[0].length &lt;= 50</code>.</li>\r\n\t<li><code>0 &lt;= grid[i][j] &lt;= 1</code>.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"24K\", \"totalSubmission\": \"51K\", \"totalAcceptedRaw\": 23975, \"totalSubmissionRaw\": 51007, \"acRate\": \"47.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "818", "name": "race-car", "content": {"questionId": "836", "questionFrontendId": "818", "questionTitle": "Race Car", "questionTitleSlug": "race-car", "content": "<p>Your car starts at position 0 and speed +1 on an infinite number line.&nbsp; (Your car can go into negative positions.)</p>\r\n\r\n<p>Your car drives automatically according to a sequence of instructions A (accelerate) and R (reverse).</p>\r\n\r\n<p>When you get an instruction &quot;A&quot;, your car does the following:&nbsp;<code>position += speed, speed *= 2</code>.</p>\r\n\r\n<p>When you get an instruction &quot;R&quot;, your car does the following: if your speed is positive then&nbsp;<code>speed = -1</code>&nbsp;, otherwise&nbsp;<code>speed = 1</code>.&nbsp; (Your position stays the same.)</p>\r\n\r\n<p>For example, after commands &quot;AAR&quot;, your car goes to positions 0-&gt;1-&gt;3-&gt;3, and your speed goes to 1-&gt;2-&gt;4-&gt;-1.</p>\r\n\r\n<p>Now for some target position, say the <strong>length</strong> of the shortest sequence of instructions to get there.</p>\r\n\r\n<pre>\r\n<strong>Example 1:</strong>\r\n<strong>Input:</strong> \r\ntarget = 3\r\n<strong>Output:</strong> 2\r\n<strong>Explanation:</strong> \r\nThe shortest instruction sequence is &quot;AA&quot;.\r\nYour position goes from 0-&gt;1-&gt;3.\r\n</pre>\r\n\r\n<pre>\r\n<strong>Example 2:</strong>\r\n<strong>Input:</strong> \r\ntarget = 6\r\n<strong>Output:</strong> 5\r\n<strong>Explanation:</strong> \r\nThe shortest instruction sequence is &quot;AAARA&quot;.\r\nYour position goes from 0-&gt;1-&gt;3-&gt;7-&gt;7-&gt;6.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= target &lt;= 10000</code>.</li>\r\n</ul>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"22K\", \"totalSubmission\": \"55.6K\", \"totalAcceptedRaw\": 22007, \"totalSubmissionRaw\": 55591, \"acRate\": \"39.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Heap", "slug": "heap"}]}}, {"id": "815", "name": "bus-routes", "content": {"questionId": "833", "questionFrontendId": "815", "questionTitle": "Bus Routes", "questionTitleSlug": "bus-routes", "content": "<p>We have a list of bus routes. Each <code>routes[i]</code> is a bus route that the i-th bus&nbsp;repeats forever. For example if <code>routes[0] = [1, 5, 7]</code>, this means that the first&nbsp;bus (0-th indexed) travels in the sequence 1-&gt;5-&gt;7-&gt;1-&gt;5-&gt;7-&gt;1-&gt;... forever.</p>\n\n<p>We start at bus stop <code>S</code> (initially not on a bus), and we want to go to bus stop <code>T</code>. Travelling by buses only, what is the least number of buses we must take to reach our destination? Return -1 if it is not possible.</p>\n\n<pre>\n<strong>Example:</strong>\n<strong>Input:</strong> \nroutes = [[1, 2, 7], [3, 6, 7]]\nS = 1\nT = 6\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \nThe best strategy is take the first bus to the bus stop 7, then take the second bus to the bus stop 6.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= routes.length &lt;= 500</code>.</li>\n\t<li><code>1 &lt;= routes[i].length &lt;= 10^5</code>.</li>\n\t<li><code>0 &lt;= routes[i][j] &lt; 10 ^ 6</code>.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"43.7K\", \"totalSubmission\": \"101.2K\", \"totalAcceptedRaw\": 43655, \"totalSubmissionRaw\": 101219, \"acRate\": \"43.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "810", "name": "chalkboard-xor-game", "content": {"questionId": "828", "questionFrontendId": "810", "questionTitle": "Chalkboard XOR Game", "questionTitleSlug": "chalkboard-xor-game", "content": "<p>We are given non-negative integers nums[i] which are written on a chalkboard.&nbsp; Alice and Bob take turns erasing exactly one number from the chalkboard, with Alice starting first.&nbsp; If erasing a number causes&nbsp;the bitwise XOR of all the elements of the chalkboard to become&nbsp;0, then that player loses.&nbsp; (Also, we&#39;ll say the bitwise XOR of one element is that element itself, and the bitwise XOR of no elements is 0.)</p>\r\n\r\n<p>Also, if any player starts their turn with the bitwise XOR of all the elements of the chalkboard equal to 0, then that player wins.</p>\r\n\r\n<p>Return True if and only if Alice wins the game, assuming both players play optimally.</p>\r\n\r\n<pre>\r\n<strong>Example:</strong>\r\n<strong>Input:</strong> nums = [1, 1, 2]\r\n<strong>Output:</strong> false\r\n<strong>Explanation:</strong> \r\nAlice has two choices: erase 1 or erase 2. \r\nIf she erases 1, the nums array becomes [1, 2]. The bitwise XOR of all the elements of the chalkboard is 1 XOR 2 = 3. Now Bob can remove any element he wants, because Alice will be the one to erase the last element and she will lose. \r\nIf Alice erases 2 first, now nums becomes [1, 1]. The bitwise XOR of all the elements of the chalkboard is 1 XOR 1 = 0. Alice will lose.\r\n\r\n</pre>\r\n\r\n<p><strong>Notes: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= N &lt;= 1000</code>.&nbsp;</li>\r\n\t<li><code>0 &lt;= nums[i] &lt;= 2^16</code>.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"4.6K\", \"totalSubmission\": \"9.4K\", \"totalAcceptedRaw\": 4640, \"totalSubmissionRaw\": 9407, \"acRate\": \"49.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "805", "name": "split-array-with-same-average", "content": {"questionId": "823", "questionFrontendId": "805", "questionTitle": "Split Array With Same Average", "questionTitleSlug": "split-array-with-same-average", "content": "<p>In a given integer array A, we must move every element of A to either list B or list C. (B and C initially start empty.)</p>\r\n\r\n<p>Return true if and only if after such a move, it is possible that the average value of B is equal to the average value of C, and B and C are both non-empty.</p>\r\n\r\n<pre>\r\n<strong>Example :</strong>\r\n<strong>Input:</strong> \r\n[1,2,3,4,5,6,7,8]\r\n<strong>Output:</strong> true\r\n<strong>Explanation: </strong>We can split the array into [1,4,5,8] and [2,3,6,7], and both of them have the average of 4.5.\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li>The length of <code>A</code> will be in the range&nbsp;[1, 30].</li>\r\n\t<li><code>A[i]</code> will be in the range of <code>[0, 10000]</code>.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"17.4K\", \"totalSubmission\": \"65.4K\", \"totalAcceptedRaw\": 17362, \"totalSubmissionRaw\": 65403, \"acRate\": \"26.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "803", "name": "bricks-falling-when-hit", "content": {"questionId": "821", "questionFrontendId": "803", "questionTitle": "Bricks Falling When Hit", "questionTitleSlug": "bricks-falling-when-hit", "content": "<p>You are given an <code>m x n</code> binary <code>grid</code>, where each <code>1</code> represents a brick and <code>0</code> represents an empty space. A brick is <strong>stable</strong> if:</p>\n\n<ul>\n\t<li>It is directly connected to the top of the grid, or</li>\n\t<li>At least one other brick in its four adjacent cells is <strong>stable</strong>.</li>\n</ul>\n\n<p>You are also given an array <code>hits</code>, which is a sequence of erasures we want to apply. Each time we want to erase the brick at the location <code>hits[i] = (row<sub>i</sub>, col<sub>i</sub>)</code>. The brick on that location&nbsp;(if it exists) will disappear. Some other bricks may no longer be stable because of that erasure and will <strong>fall</strong>. Once a brick falls, it is <strong>immediately</strong> erased from the <code>grid</code> (i.e., it does not land on other stable bricks).</p>\n\n<p>Return <em>an array </em><code>result</code><em>, where each </em><code>result[i]</code><em> is the number of bricks that will <strong>fall</strong> after the </em><code>i<sup>th</sup></code><em> erasure is applied.</em></p>\n\n<p><strong>Note</strong> that an erasure may refer to a location with no brick, and if it does, no bricks drop.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,0,0,0],[1,1,1,0]], hits = [[1,0]]\n<strong>Output:</strong> [2]\n<strong>Explanation: </strong>Starting with the grid:\n[[1,0,0,0],\n [<u>1</u>,1,1,0]]\nWe erase the underlined brick at (1,0), resulting in the grid:\n[[1,0,0,0],\n [0,<u>1</u>,<u>1</u>,0]]\nThe two underlined bricks are no longer stable as they are no longer connected to the top nor adjacent to another stable brick, so they will fall. The resulting grid is:\n[[1,0,0,0],\n [0,0,0,0]]\nHence the result is [2].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,0,0,0],[1,1,0,0]], hits = [[1,1],[1,0]]\n<strong>Output:</strong> [0,0]\n<strong>Explanation: </strong>Starting with the grid:\n[[1,0,0,0],\n [1,<u>1</u>,0,0]]\nWe erase the underlined brick at (1,1), resulting in the grid:\n[[1,0,0,0],\n [1,0,0,0]]\nAll remaining bricks are still stable, so no bricks fall. The grid remains the same:\n[[1,0,0,0],\n [<u>1</u>,0,0,0]]\nNext, we erase the underlined brick at (1,0), resulting in the grid:\n[[1,0,0,0],\n [0,0,0,0]]\nOnce again, all remaining bricks are still stable, so no bricks fall.\nHence the result is [0,0].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>grid[i][j]</code> is <code>0</code> or <code>1</code>.</li>\n\t<li><code>1 &lt;= hits.length &lt;= 4 * 10<sup>4</sup></code></li>\n\t<li><code>hits[i].length == 2</code></li>\n\t<li><code>0 &lt;= x<sub>i&nbsp;</sub>&lt;= m - 1</code></li>\n\t<li><code>0 &lt;=&nbsp;y<sub>i</sub> &lt;= n - 1</code></li>\n\t<li>All <code>(x<sub>i</sub>, y<sub>i</sub>)</code> are unique.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"16.7K\", \"totalSubmission\": \"53.6K\", \"totalAcceptedRaw\": 16733, \"totalSubmissionRaw\": 53616, \"acRate\": \"31.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Union Find", "slug": "union-find"}]}}, {"id": "798", "name": "smallest-rotation-with-highest-score", "content": {"questionId": "814", "questionFrontendId": "798", "questionTitle": "Smallest Rotation with Highest Score", "questionTitleSlug": "smallest-rotation-with-highest-score", "content": "<p>&nbsp;Given an array <code>A</code>, we may rotate it by a non-negative integer <code>K</code> so that the array becomes <code>A[K], A[K+1], A{K+2], ... A[A.length - 1], A[0], A[1], ..., A[K-1]</code>.&nbsp; Afterward, any entries that are less than or equal to their index are worth 1 point.&nbsp;</p>\r\n\r\n<p>For example, if we have <code>[2, 4, 1, 3, 0]</code>, and we rotate by <code>K = 2</code>, it becomes <code>[1, 3, 0, 2, 4]</code>.&nbsp; This is worth 3 points because 1 &gt; 0 [no points], 3 &gt; 1 [no points], 0 &lt;= 2 [one point], 2 &lt;= 3 [one point], 4 &lt;= 4 [one point].</p>\r\n\r\n<p>Over all possible rotations, return the rotation index K that corresponds to the highest score we could receive.&nbsp; If there are multiple answers, return the smallest such index K.</p>\r\n\r\n<pre>\r\n<strong>Example 1:</strong>\r\n<strong>Input:</strong> [2, 3, 1, 4, 0]\r\n<strong>Output:</strong> 3\r\n<strong>Explanation: </strong> \r\nScores for each K are listed below: \r\nK = 0,  A = [2,3,1,4,0],    score 2\r\nK = 1,  A = [3,1,4,0,2],    score 3\r\nK = 2,  A = [1,4,0,2,3],    score 3\r\nK = 3,  A = [4,0,2,3,1],    score 4\r\nK = 4,  A = [0,2,3,1,4],    score 3\r\n</pre>\r\n\r\n<p>So we should choose K = 3, which has the highest score.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n<strong>Example 2:</strong>\r\n<strong>Input:</strong> [1, 3, 0, 2, 4]\r\n<strong>Output:</strong> 0\r\n<strong>Explanation: </strong> A will always have 3 points no matter how it shifts.\r\nSo we will choose the smallest K, which is 0.\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>A</code>&nbsp;will have&nbsp;length at most <code>20000</code>.</li>\r\n\t<li><code>A[i]</code> will be in the range <code>[0, A.length]</code>.</li>\r\n</ul>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"6.6K\", \"totalSubmission\": \"14.8K\", \"totalAcceptedRaw\": 6624, \"totalSubmissionRaw\": 14810, \"acRate\": \"44.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "793", "name": "preimage-size-of-factorial-zeroes-function", "content": {"questionId": "809", "questionFrontendId": "793", "questionTitle": "Preimage Size of Factorial Zeroes Function", "questionTitleSlug": "preimage-size-of-factorial-zeroes-function", "content": "<p>Let <code>f(x)</code> be the number of zeroes at the end of <code>x!</code>. (Recall that <code>x! = 1 * 2 * 3 * ... * x</code>, and by convention, <code>0! = 1</code>.)</p>\r\n\r\n<p>For example, <code>f(3) = 0</code> because 3! = 6 has no zeroes at the end, while <code>f(11) = 2</code> because 11! = 39916800 has 2 zeroes at the end. Given <code>K</code>, find how many non-negative integers <code>x</code> have the property that <code>f(x) = K</code>.</p>\r\n\r\n<pre>\r\n<strong>Example 1:</strong>\r\n<strong>Input:</strong> K = 0\r\n<strong>Output:</strong> 5\r\n<strong>Explanation:</strong> 0!, 1!, 2!, 3!, and 4! end with K = 0 zeroes.\r\n\r\n<strong>Example 2:</strong>\r\n<strong>Input:</strong> K = 5\r\n<strong>Output:</strong> 0\r\n<strong>Explanation:</strong> There is no x such that x! ends in K = 5 zeroes.\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>K</code> will be an integer in the range <code>[0, 10^9]</code>.</li>\r\n</ul>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"9K\", \"totalSubmission\": \"22.1K\", \"totalAcceptedRaw\": 8970, \"totalSubmissionRaw\": 22140, \"acRate\": \"40.5%\"}", "similarQuestions": "[{\"title\": \"Factorial Trailing Zeroes\", \"titleSlug\": \"factorial-trailing-zeroes\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "786", "name": "k-th-smallest-prime-fraction", "content": {"questionId": "802", "questionFrontendId": "786", "questionTitle": "K-th Smallest Prime Fraction", "questionTitleSlug": "k-th-smallest-prime-fraction", "content": "<p>A sorted list <code>A</code> contains 1, plus some number of primes.&nbsp; Then, for every p &lt; q in the list, we consider the fraction p/q.</p>\r\n\r\n<p>What is the <code>K</code>-th smallest fraction considered?&nbsp; Return your answer as an array of ints, where <code>answer[0] = p</code> and <code>answer[1] = q</code>.</p>\r\n\r\n<pre>\r\n<strong>Examples:</strong>\r\n<strong>Input:</strong> A = [1, 2, 3, 5], K = 3\r\n<strong>Output:</strong> [2, 5]\r\n<strong>Explanation:</strong>\r\nThe fractions to be considered in sorted order are:\r\n1/5, 1/3, 2/5, 1/2, 3/5, 2/3.\r\nThe third fraction is 2/5.\r\n\r\n<strong>Input:</strong> A = [1, 7], K = 1\r\n<strong>Output:</strong> [1, 7]\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>A</code> will have length between <code>2</code> and <code>2000</code>.</li>\r\n\t<li>Each <code>A[i]</code> will be between <code>1</code> and <code>30000</code>.</li>\r\n\t<li><code>K</code> will be between <code>1</code> and <code>A.length * (A.length - 1) / 2</code>.</li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"16K\", \"totalSubmission\": \"38.4K\", \"totalAcceptedRaw\": 15951, \"totalSubmissionRaw\": 38373, \"acRate\": \"41.6%\"}", "similarQuestions": "[{\"title\": \"Kth Smallest Element in a Sorted Matrix\", \"titleSlug\": \"kth-smallest-element-in-a-sorted-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Smallest Number in Multiplication Table\", \"titleSlug\": \"kth-smallest-number-in-multiplication-table\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find K-th Smallest Pair Distance\", \"titleSlug\": \"find-k-th-smallest-pair-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Heap", "slug": "heap"}]}}, {"id": "782", "name": "transform-to-chessboard", "content": {"questionId": "798", "questionFrontendId": "782", "questionTitle": "Transform to Chessboard", "questionTitleSlug": "transform-to-chessboard", "content": "<p>An N x N <code>board</code> contains only <code>0</code>s and <code>1</code>s. In each move, you can swap any 2 rows with each other, or any 2 columns with each other.</p>\r\n\r\n<p>What is the minimum number of moves to transform the board into a &quot;chessboard&quot; - a board where no <code>0</code>s and no <code>1</code>s are 4-directionally adjacent? If the task is impossible, return -1.</p>\r\n\r\n<pre>\r\n<strong>Examples:</strong>\r\n<strong>Input:</strong> board = [[0,1,1,0],[0,1,1,0],[1,0,0,1],[1,0,0,1]]\r\n<strong>Output:</strong> 2\r\n<strong>Explanation:</strong>\r\nOne potential sequence of moves is shown below, from left to right:\r\n\r\n0110     1010     1010\r\n0110 --&gt; 1010 --&gt; 0101\r\n1001     0101     1010\r\n1001     0101     0101\r\n\r\nThe first move swaps the first and second column.\r\nThe second move swaps the second and third row.\r\n\r\n\r\n<strong>Input:</strong> board = [[0, 1], [1, 0]]\r\n<strong>Output:</strong> 0\r\n<strong>Explanation:</strong>\r\nAlso note that the board with 0 in the top left corner,\r\n01\r\n10\r\n\r\nis also a valid chessboard.\r\n\r\n<strong>Input:</strong> board = [[1, 0], [1, 0]]\r\n<strong>Output:</strong> -1\r\n<strong>Explanation:</strong>\r\nNo matter what sequence of moves you make, you cannot end with a valid chessboard.\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>board</code> will have the same number of rows and columns, a number in the range <code>[2, 30]</code>.</li>\r\n\t<li><code>board[i][j]</code> will be only <code>0</code>s or <code>1</code>s.</li>\r\n</ul>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"6.3K\", \"totalSubmission\": \"13.4K\", \"totalAcceptedRaw\": 6284, \"totalSubmissionRaw\": 13450, \"acRate\": \"46.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Math", "slug": "math"}]}}, {"id": "780", "name": "reaching-points", "content": {"questionId": "796", "questionFrontendId": "780", "questionTitle": "Reaching Points", "questionTitleSlug": "reaching-points", "content": "<p>A move consists of taking a point <code>(x, y)</code> and transforming it to either <code>(x, x+y)</code> or <code>(x+y, y)</code>.</p>\r\n\r\n<p>Given a starting point <code>(sx, sy)</code> and a target point <code>(tx, ty)</code>, return <code>True</code> if and only if a sequence of moves exists to transform the point <code>(sx, sy)</code> to <code>(tx, ty)</code>. Otherwise, return <code>False</code>.</p>\r\n\r\n<pre>\r\n<strong>Examples:</strong>\r\n<strong>Input:</strong> sx = 1, sy = 1, tx = 3, ty = 5\r\n<strong>Output:</strong> True\r\n<strong>Explanation:</strong>\r\nOne series of moves that transforms the starting point to the target is:\r\n(1, 1) -&gt; (1, 2)\r\n(1, 2) -&gt; (3, 2)\r\n(3, 2) -&gt; (3, 5)\r\n\r\n<strong>Input:</strong> sx = 1, sy = 1, tx = 2, ty = 2\r\n<strong>Output:</strong> False\r\n\r\n<strong>Input:</strong> sx = 1, sy = 1, tx = 1, ty = 1\r\n<strong>Output:</strong> True\r\n\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>sx, sy, tx, ty</code> will all be integers in the range <code>[1, 10^9]</code>.</li>\r\n</ul>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"26.5K\", \"totalSubmission\": \"88K\", \"totalAcceptedRaw\": 26462, \"totalSubmissionRaw\": 88012, \"acRate\": \"30.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "778", "name": "swim-in-rising-water", "content": {"questionId": "794", "questionFrontendId": "778", "questionTitle": "Swim in Rising Water", "questionTitleSlug": "swim-in-rising-water", "content": "<p>On an N x N <code>grid</code>, each square <code>grid[i][j]</code> represents the elevation at that point <code>(i,j)</code>.</p>\r\n\r\n<p>Now rain starts to fall. At time <code>t</code>, the depth of the water everywhere is <code>t</code>. You can swim from a square to another 4-directionally adjacent square if and only if the elevation of both squares individually are&nbsp;at most&nbsp;<code>t</code>. You can swim infinite distance in zero time. Of course, you must stay within the boundaries of the grid during your swim.</p>\r\n\r\n<p>You start at the top left square <code>(0, 0)</code>. What is the least time until you can reach the bottom right square <code>(N-1, N-1)</code>?</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [[0,2],[1,3]]\r\n<strong>Output:</strong> 3\r\n<strong>Explanation:</strong>\r\nAt time <code>0</code>, you are in grid location <code>(0, 0)</code>.\r\nYou cannot go anywhere else because 4-directionally adjacent neighbors have a higher elevation than t = 0.\r\n\r\nYou cannot reach point <code>(1, 1)</code> until time <code>3</code>.\r\nWhen the depth of water is <code>3</code>, we can swim anywhere inside the grid.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [[0,1,2,3,4],[24,23,22,21,5],[12,13,14,15,16],[11,17,18,19,20],[10,9,8,7,6]]\r\n<strong>Output:</strong> 16\r\n<strong>Explanation:</strong>\r\n<strong> 0  1  2  3  4</strong>\r\n24 23 22 21  <strong>5</strong>\r\n<strong>12 13 14 15 16</strong>\r\n<strong>11</strong> 17 18 19 20\r\n<strong>10  9  8  7  6</strong>\r\n\r\nThe final route is marked in bold.\r\nWe need to wait until time 16 so that (0, 0) and (4, 4) are connected.\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>2 &lt;= N &lt;= 50</code>.</li>\r\n\t<li>grid[i][j] is a permutation of [0, ..., N*N - 1].</li>\r\n</ol>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"29.1K\", \"totalSubmission\": \"53.7K\", \"totalAcceptedRaw\": 29113, \"totalSubmissionRaw\": 53728, \"acRate\": \"54.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Heap", "slug": "heap"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Union Find", "slug": "union-find"}]}}, {"id": "774", "name": "minimize-max-distance-to-gas-station", "content": {"questionId": "788", "questionFrontendId": "774", "questionTitle": "Minimize Max Distance to Gas Station", "questionTitleSlug": "minimize-max-distance-to-gas-station", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"17.8K\", \"totalSubmission\": \"37.2K\", \"totalAcceptedRaw\": 17831, \"totalSubmissionRaw\": 37240, \"acRate\": \"47.9%\"}", "similarQuestions": "[{\"title\": \"Koko Eating Bananas\", \"titleSlug\": \"koko-eating-bananas\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "773", "name": "sliding-puzzle", "content": {"questionId": "787", "questionFrontendId": "773", "questionTitle": "Sliding Puzzle", "questionTitleSlug": "sliding-puzzle", "content": "<p>On a 2x3 <code>board</code>, there are 5 tiles represented by the integers 1 through 5, and an empty square represented by 0.</p>\r\n\r\n<p>A move consists of choosing <code>0</code>&nbsp;and a 4-directionally adjacent number and swapping it.</p>\r\n\r\n<p>The state of the board is <em>solved</em> if and only if the <code>board</code> is <code>[[1,2,3],[4,5,0]].</code></p>\r\n\r\n<p>Given a puzzle board, return the least number of moves required so that the state of the board is solved. If it is impossible for the state of the board to be solved, return -1.</p>\r\n\r\n<p><strong>Examples:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> board = [[1,2,3],[4,0,5]]\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong> Swap the 0 and the 5 in one move.\r\n</pre>\r\n\r\n<pre>\r\n<strong>Input:</strong> board = [[1,2,3],[5,4,0]]\r\n<strong>Output:</strong> -1\r\n<strong>Explanation:</strong> No number of moves will make the board solved.\r\n</pre>\r\n\r\n<pre>\r\n<strong>Input:</strong> board = [[4,1,2],[5,0,3]]\r\n<strong>Output:</strong> 5\r\n<strong>Explanation:</strong> 5 is the smallest number of moves that solves the board.\r\nAn example path:\r\nAfter move 0: [[4,1,2],[5,0,3]]\r\nAfter move 1: [[4,1,2],[0,5,3]]\r\nAfter move 2: [[0,1,2],[4,5,3]]\r\nAfter move 3: [[1,0,2],[4,5,3]]\r\nAfter move 4: [[1,2,0],[4,5,3]]\r\nAfter move 5: [[1,2,3],[4,5,0]]\r\n</pre>\r\n\r\n<pre>\r\n<strong>Input:</strong> board = [[3,2,4],[1,5,0]]\r\n<strong>Output:</strong> 14\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>board</code> will be a 2 x 3 array as described above.</li>\r\n\t<li><code>board[i][j]</code> will be a permutation of <code>[0, 1, 2, 3, 4, 5]</code>.</li>\r\n</ul>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"46.4K\", \"totalSubmission\": \"76.9K\", \"totalAcceptedRaw\": 46384, \"totalSubmissionRaw\": 76926, \"acRate\": \"60.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "772", "name": "basic-calculator-iii", "content": {"questionId": "785", "questionFrontendId": "772", "questionTitle": "Basic Calculator III", "questionTitleSlug": "basic-calculator-iii", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"48.2K\", \"totalSubmission\": \"112.4K\", \"totalAcceptedRaw\": 48230, \"totalSubmissionRaw\": 112407, \"acRate\": \"42.9%\"}", "similarQuestions": "[{\"title\": \"Basic Calculator\", \"titleSlug\": \"basic-calculator\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator II\", \"titleSlug\": \"basic-calculator-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator IV\", \"titleSlug\": \"basic-calculator-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Build Binary Expression Tree From Infix Expression\", \"titleSlug\": \"build-binary-expression-tree-from-infix-expression\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Stack", "slug": "stack"}]}}, {"id": "770", "name": "basic-calculator-iv", "content": {"questionId": "781", "questionFrontendId": "770", "questionTitle": "Basic Calculator IV", "questionTitleSlug": "basic-calculator-iv", "content": "<p>Given an <code>expression</code>&nbsp;such as <code>expression = &quot;e + 8 - a + 5&quot;</code> and an evaluation map such as <code>{&quot;e&quot;: 1}</code> (given in terms of <code>evalvars = [&quot;e&quot;]</code> and <code>evalints = [1]</code>), return a list of tokens representing the simplified expression, such as <code>[&quot;-1*a&quot;,&quot;14&quot;]</code></p>\r\n\r\n<ul>\r\n\t<li>An expression alternates chunks and symbols, with a space separating each chunk and symbol.</li>\r\n\t<li>A chunk is either an expression in parentheses, a variable, or a non-negative integer.</li>\r\n\t<li>A variable is a string of lowercase letters (not including digits.) Note that variables can be multiple letters, and note that variables never have a leading coefficient or unary operator like <code>&quot;2x&quot;</code> or <code>&quot;-x&quot;</code>.</li>\r\n</ul>\r\n\r\n<p>Expressions are evaluated in the usual order: brackets first, then multiplication, then addition and subtraction. For example, <code>expression = &quot;1 + 2 * 3&quot;</code> has an answer of <code>[&quot;7&quot;]</code>.</p>\r\n\r\n<p>The format of the output is as follows:</p>\r\n\r\n<ul>\r\n\t<li>For each term of free variables with non-zero coefficient, we write the free variables within a term in sorted order lexicographically. For example, we would never write a term like <code>&quot;b*a*c&quot;</code>, only <code>&quot;a*b*c&quot;</code>.</li>\r\n\t<li>Terms have degree equal to the number of free variables being multiplied, counting multiplicity. (For example, <code>&quot;a*a*b*c&quot;</code> has degree 4.) We write the largest degree terms of our answer first, breaking ties by lexicographic order ignoring the leading coefficient of the term.</li>\r\n\t<li>The leading coefficient of the term is placed directly to the left with an asterisk separating it from the variables (if they exist.)&nbsp; A leading coefficient of 1 is still printed.</li>\r\n\t<li>An example of a well formatted answer is <code>[&quot;-2*a*a*a&quot;, &quot;3*a*a*b&quot;, &quot;3*b*b&quot;, &quot;4*a&quot;, &quot;5*c&quot;, &quot;-6&quot;]</code>&nbsp;</li>\r\n\t<li>Terms (including constant terms) with coefficient 0 are not included.&nbsp; For example, an expression of &quot;0&quot; has an output of [].</li>\r\n</ul>\r\n\r\n<p><strong>Examples:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> expression = &quot;e + 8 - a + 5&quot;, evalvars = [&quot;e&quot;], evalints = [1]\r\n<strong>Output:</strong> [&quot;-1*a&quot;,&quot;14&quot;]\r\n\r\n<strong>Input:</strong> expression = &quot;e - 8 + temperature - pressure&quot;,\r\nevalvars = [&quot;e&quot;, &quot;temperature&quot;], evalints = [1, 12]\r\n<strong>Output:</strong> [&quot;-1*pressure&quot;,&quot;5&quot;]\r\n\r\n<strong>Input:</strong> expression = &quot;(e + 8) * (e - 8)&quot;, evalvars = [], evalints = []\r\n<strong>Output:</strong> [&quot;1*e*e&quot;,&quot;-64&quot;]\r\n\r\n<strong>Input:</strong> expression = &quot;7 - 7&quot;, evalvars = [], evalints = []\r\n<strong>Output:</strong> []\r\n\r\n<strong>Input:</strong> expression = &quot;a * b * c + b * a * c * 4&quot;, evalvars = [], evalints = []\r\n<strong>Output:</strong> [&quot;5*a*b*c&quot;]\r\n\r\n<strong>Input:</strong> expression = &quot;((a - b) * (b - c) + (c - a)) * ((a - b) + (b - c) * (c - a))&quot;,\r\nevalvars = [], evalints = []\r\n<strong>Output:</strong> [&quot;-1*a*a*b*b&quot;,&quot;2*a*a*b*c&quot;,&quot;-1*a*a*c*c&quot;,&quot;1*a*b*b*b&quot;,&quot;-1*a*b*b*c&quot;,&quot;-1*a*b*c*c&quot;,&quot;1*a*c*c*c&quot;,&quot;-1*b*b*b*c&quot;,&quot;2*b*b*c*c&quot;,&quot;-1*b*c*c*c&quot;,&quot;2*a*a*b&quot;,&quot;-2*a*a*c&quot;,&quot;-2*a*b*b&quot;,&quot;2*a*c*c&quot;,&quot;1*b*b*b&quot;,&quot;-1*b*b*c&quot;,&quot;1*b*c*c&quot;,&quot;-1*c*c*c&quot;,&quot;-1*a*a&quot;,&quot;1*a*b&quot;,&quot;1*a*c&quot;,&quot;-1*b*c&quot;]\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>expression</code> will have length in range <code>[1, 250]</code>.</li>\r\n\t<li><code>evalvars, evalints</code> will have equal lengths in range <code>[0, 100]</code>.</li>\r\n</ol>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.5K\", \"totalSubmission\": \"10.1K\", \"totalAcceptedRaw\": 5482, \"totalSubmissionRaw\": 10071, \"acRate\": \"54.4%\"}", "similarQuestions": "[{\"title\": \"Parse Lisp Expression\", \"titleSlug\": \"parse-lisp-expression\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator III\", \"titleSlug\": \"basic-calculator-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "String", "slug": "string"}, {"name": "Stack", "slug": "stack"}]}}, {"id": "768", "name": "max-chunks-to-make-sorted-ii", "content": {"questionId": "779", "questionFrontendId": "768", "questionTitle": "Max Chunks To Make Sorted II", "questionTitleSlug": "max-chunks-to-make-sorted-ii", "content": "<p><em>This question is the same as &quot;Max Chunks to Make Sorted&quot; except the integers of the given array are not necessarily distinct, the input array could be up to length <code>2000</code>, and the elements could be up to <code>10**8</code>.</em></p>\r\n\r\n<hr />\r\n\r\n<p>Given an array <code>arr</code> of integers (<strong>not necessarily distinct</strong>), we split the array into some number of &quot;chunks&quot; (partitions), and individually sort each chunk.&nbsp; After concatenating them,&nbsp;the result equals the sorted array.</p>\r\n\r\n<p>What is the most number of chunks we could have made?</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [5,4,3,2,1]\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong>\r\nSplitting into two or more chunks will not return the required result.\r\nFor example, splitting into [5, 4], [3, 2, 1] will result in [4, 5, 1, 2, 3], which isn&#39;t sorted.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> arr = [2,1,3,4,4]\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong>\r\nWe can split into two chunks, such as [2, 1], [3, 4, 4].\r\nHowever, splitting into [2, 1], [3], [4], [4] is the highest number of chunks possible.\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>arr</code> will have length in range <code>[1, 2000]</code>.</li>\r\n\t<li><code>arr[i]</code> will be an integer in range <code>[0, 10**8]</code>.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"24.2K\", \"totalSubmission\": \"48.8K\", \"totalAcceptedRaw\": 24170, \"totalSubmissionRaw\": 48794, \"acRate\": \"49.5%\"}", "similarQuestions": "[{\"title\": \"Max Chunks To Make Sorted\", \"titleSlug\": \"max-chunks-to-make-sorted\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "431", "name": "encode-n-ary-tree-to-binary-tree", "content": {"questionId": "771", "questionFrontendId": "431", "questionTitle": "Encode N-ary Tree to Binary Tree", "questionTitleSlug": "encode-n-ary-tree-to-binary-tree", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"10.4K\", \"totalSubmission\": \"14K\", \"totalAcceptedRaw\": 10436, \"totalSubmissionRaw\": 14049, \"acRate\": \"74.3%\"}", "similarQuestions": "[{\"title\": \"Serialize and Deserialize N-ary Tree\", \"titleSlug\": \"serialize-and-deserialize-n-ary-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "765", "name": "couples-holding-hands", "content": {"questionId": "770", "questionFrontendId": "765", "questionTitle": "Couples Holding Hands", "questionTitleSlug": "couples-holding-hands", "content": "<p>\r\nN couples sit in 2N seats arranged in a row and want to hold hands.  We want to know the minimum number of swaps so that every couple is sitting side by side.  A <i>swap</i> consists of choosing <b>any</b> two people, then they stand up and switch seats. \r\n</p><p>\r\nThe people and seats are represented by an integer from <code>0</code> to <code>2N-1</code>, the couples are numbered in order, the first couple being <code>(0, 1)</code>, the second couple being <code>(2, 3)</code>, and so on with the last couple being <code>(2N-2, 2N-1)</code>.\r\n</p><p>\r\nThe couples' initial seating is given by <code>row[i]</code> being the value of the person who is initially sitting in the i-th seat.\r\n\r\n<p><b>Example 1:</b><br /><pre>\r\n<b>Input:</b> row = [0, 2, 1, 3]\r\n<b>Output:</b> 1\r\n<b>Explanation:</b> We only need to swap the second (row[1]) and third (row[2]) person.\r\n</pre></p>\r\n\r\n<p><b>Example 2:</b><br /><pre>\r\n<b>Input:</b> row = [3, 2, 0, 1]\r\n<b>Output:</b> 0\r\n<b>Explanation:</b> All couples are already seated side by side.\r\n</pre></p>\r\n\r\n<p>\r\n<b>Note:</b>\r\n<ol> \r\n<li> <code>len(row)</code> is even and in the range of <code>[4, 60]</code>.</li>\r\n<li> <code>row</code> is guaranteed to be a permutation of <code>0...len(row)-1</code>.</li>\r\n</ol>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"30K\", \"totalSubmission\": \"54.4K\", \"totalAcceptedRaw\": 29975, \"totalSubmissionRaw\": 54376, \"acRate\": \"55.1%\"}", "similarQuestions": "[{\"title\": \"First Missing Positive\", \"titleSlug\": \"first-missing-positive\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Missing Number\", \"titleSlug\": \"missing-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"K-Similar Strings\", \"titleSlug\": \"k-similar-strings\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}, {"name": "Union Find", "slug": "union-find"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "428", "name": "serialize-and-deserialize-n-ary-tree", "content": {"questionId": "765", "questionFrontendId": "428", "questionTitle": "Serialize and Deserialize N-ary Tree", "questionTitleSlug": "serialize-and-deserialize-n-ary-tree", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"40.8K\", \"totalSubmission\": \"67K\", \"totalAcceptedRaw\": 40815, \"totalSubmissionRaw\": 66991, \"acRate\": \"60.9%\"}", "similarQuestions": "[{\"title\": \"Serialize and Deserialize Binary Tree\", \"titleSlug\": \"serialize-and-deserialize-binary-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Serialize and Deserialize BST\", \"titleSlug\": \"serialize-and-deserialize-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Encode N-ary Tree to Binary Tree\", \"titleSlug\": \"encode-n-ary-tree-to-binary-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}]}}, {"id": "761", "name": "special-binary-string", "content": {"questionId": "763", "questionFrontendId": "761", "questionTitle": "Special Binary String", "questionTitleSlug": "special-binary-string", "content": "<p>\r\n<i>Special</i> binary strings are binary strings with the following two properties:\r\n</p><p>\r\n<li>The number of 0's is equal to the number of 1's.</li>\r\n<li>Every prefix of the binary string has at least as many 1's as 0's.</li>\r\n</p><p>\r\nGiven a special string <code>S</code>, a <i>move</i> consists of choosing two consecutive, non-empty, special substrings of <code>S</code>, and swapping them.  <i>(Two strings are consecutive if the last character of the first string is exactly one index before the first character of the second string.)</i>\r\n</p><p>\r\nAt the end of any number of moves, what is the lexicographically largest resulting string possible?\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> S = \"11011000\"\r\n<b>Output:</b> \"11100100\"\r\n<b>Explanation:</b>\r\nThe strings \"10\" [occuring at S[1]] and \"1100\" [at S[3]] are swapped.\r\nThis is the lexicographically largest string possible after some number of swaps.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><ol>\r\n<li><code>S</code> has length at most <code>50</code>.</li>\r\n<li><code>S</code> is guaranteed to be a <i>special</i> binary string as defined above.</li>\r\n</ol></p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"10.3K\", \"totalSubmission\": \"17.5K\", \"totalAcceptedRaw\": 10285, \"totalSubmissionRaw\": 17545, \"acRate\": \"58.6%\"}", "similarQuestions": "[{\"title\": \"Valid Parenthesis String\", \"titleSlug\": \"valid-parenthesis-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Recursion", "slug": "recursion"}]}}, {"id": "759", "name": "employee-free-time", "content": {"questionId": "761", "questionFrontendId": "759", "questionTitle": "Employee Free Time", "questionTitleSlug": "employee-free-time", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"52K\", \"totalSubmission\": \"76.9K\", \"totalAcceptedRaw\": 51998, \"totalSubmissionRaw\": 76915, \"acRate\": \"67.6%\"}", "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Interval List Intersections\", \"titleSlug\": \"interval-list-intersections\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Heap", "slug": "heap"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "757", "name": "set-intersection-size-at-least-two", "content": {"questionId": "759", "questionFrontendId": "757", "questionTitle": "Set Intersection Size At Least Two", "questionTitleSlug": "set-intersection-size-at-least-two", "content": "<p>An integer interval <code>[a, b]</code> (for integers <code>a &lt; b</code>) is a set of all consecutive integers from <code>a</code> to <code>b</code>, including <code>a</code> and <code>b</code>.</p>\n\n<p>Find the minimum size of a set S such that for every integer interval A in <code>intervals</code>, the intersection of S with A has a size of at least two.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,3],[1,4],[2,5],[3,5]]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Consider the set S = {2, 3, 4}.  For each interval, there are at least 2 elements from S in the interval.\nAlso, there isn&#39;t a smaller size set that fulfills the above condition.\nThus, we output the size of this set, which is 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,2],[2,3],[2,4],[4,5]]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> An example of a minimum sized set is {1, 2, 3, 4, 5}.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= intervals.length &lt;= 3000</code></li>\n\t<li><code>intervals[i].length == 2</code></li>\n\t<li><code>0 &lt;= a<sub>i</sub> &lt;&nbsp;b<sub>i</sub> &lt;= 10<sup>8</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"10.4K\", \"totalSubmission\": \"24.8K\", \"totalAcceptedRaw\": 10371, \"totalSubmissionRaw\": 24757, \"acRate\": \"41.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "753", "name": "cracking-the-safe", "content": {"questionId": "754", "questionFrontendId": "753", "questionTitle": "Cracking the Safe", "questionTitleSlug": "cracking-the-safe", "content": "<p>There is a box protected by a password. The password is a sequence of&nbsp;<code>n</code> digits&nbsp;where each digit can be one of the first <code>k</code> digits <code>0, 1, ..., k-1</code>.</p>\n\n<p>While entering a password,&nbsp;the last <code>n</code> digits entered will automatically be matched against the correct password.</p>\n\n<p>For example, assuming the correct password is <code>&quot;345&quot;</code>,&nbsp;if you type <code>&quot;012345&quot;</code>, the box will open because the correct password matches the suffix of the entered password.</p>\n\n<p>Return any password of <strong>minimum length</strong> that is guaranteed to open the box at some point of entering it.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> n = 1, k = 2\n<b>Output:</b> &quot;01&quot;\n<b>Note:</b> &quot;10&quot; will be accepted too.\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> n = 2, k = 2\n<b>Output:</b> &quot;00110&quot;\n<b>Note:</b> &quot;01100&quot;, &quot;10011&quot;, &quot;11001&quot; will be accepted too.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li><code>n</code> will be in the range <code>[1, 4]</code>.</li>\n\t<li><code>k</code> will be in the range <code>[1, 10]</code>.</li>\n\t<li><code>k^n</code> will be at most <code>4096</code>.</li>\n</ol>\n\n<p>&nbsp;</p>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"32.5K\", \"totalSubmission\": \"62.8K\", \"totalAcceptedRaw\": 32461, \"totalSubmissionRaw\": 62750, \"acRate\": \"51.7%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "749", "name": "contain-virus", "content": {"questionId": "750", "questionFrontendId": "749", "questionTitle": "Contain Virus", "questionTitleSlug": "contain-virus", "content": "<p>\r\nA virus is spreading rapidly, and your task is to quarantine the infected area by installing walls.\r\n</p><p>\r\nThe world is modeled as a 2-D array of cells, where <code>0</code> represents uninfected cells, and <code>1</code> represents cells contaminated with the virus.  A wall (and only one wall) can be installed <b>between any two 4-directionally adjacent cells</b>, on the shared boundary.\r\n</p><p>\r\nEvery night, the virus spreads to all neighboring cells in all four directions unless blocked by a wall.\r\nResources are limited. Each day, you can install walls around only one region -- the affected area (continuous block of infected cells) that threatens the most uninfected cells the following night. There will never be a tie.\r\n</p><p>\r\nCan you save the day? If so, what is the number of walls required? If not, and the world becomes fully infected, return the number of walls used.\r\n</p><p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> grid = \r\n[[0,1,0,0,0,0,0,1],\r\n [0,1,0,0,0,0,0,1],\r\n [0,0,0,0,0,0,0,1],\r\n [0,0,0,0,0,0,0,0]]\r\n<b>Output:</b> 10\r\n<b>Explanation:</b>\r\nThere are 2 contaminated regions.\r\nOn the first day, add 5 walls to quarantine the viral region on the left. The board after the virus spreads is:\r\n\r\n[[0,1,0,0,0,0,1,1],\r\n [0,1,0,0,0,0,1,1],\r\n [0,0,0,0,0,0,1,1],\r\n [0,0,0,0,0,0,0,1]]\r\n\r\nOn the second day, add 5 walls to quarantine the viral region on the right. The virus is fully contained.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> grid = \r\n[[1,1,1],\r\n [1,0,1],\r\n [1,1,1]]\r\n<b>Output:</b> 4\r\n<b>Explanation:</b> Even though there is only one cell saved, there are 4 walls built.\r\nNotice that walls are only built on the shared boundary of two different cells.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 3:</b><br />\r\n<pre>\r\n<b>Input:</b> grid = \r\n[[1,1,1,0,0,0,0,0,0],\r\n [1,0,1,0,1,1,1,1,1],\r\n [1,1,1,0,0,0,0,0,0]]\r\n<b>Output:</b> 13\r\n<b>Explanation:</b> The region on the left only builds two new walls.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The number of rows and columns of <code>grid</code> will each be in the range <code>[1, 50]</code>.</li>\r\n<li>Each <code>grid[i][j]</code> will be either <code>0</code> or <code>1</code>.</li>\r\n<li>Throughout the described process, there is always a contiguous viral region that will infect <b>strictly more</b> uncontaminated squares in the next round.</li>\r\n</ol>\r\n</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"5.8K\", \"totalSubmission\": \"12.3K\", \"totalAcceptedRaw\": 5829, \"totalSubmissionRaw\": 12260, \"acRate\": \"47.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "745", "name": "prefix-and-suffix-search", "content": {"questionId": "746", "questionFrontendId": "745", "questionTitle": "Prefix and Suffix Search", "questionTitleSlug": "prefix-and-suffix-search", "content": "<p>Design a special dictionary which has some words and allows you to search the words in it by a prefix and a suffix.</p>\n\n<p>Implement the <code>WordFilter</code> class:</p>\n\n<ul>\n\t<li><code>WordFilter(string[] words)</code> Initializes the object with the <code>words</code> in the dictionary.</li>\n\t<li><code>f(string prefix, string suffix)</code> Returns <em>the index of the word in the dictionary</em> which has the prefix <code>prefix</code> and the suffix <code>suffix</code>. If there is&nbsp;more than one valid index, return <strong>the largest</strong> of them. If there is no such word in the dictionary, return <code>-1</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;WordFilter&quot;, &quot;f&quot;]\n[[[&quot;apple&quot;]], [&quot;a&quot;, &quot;e&quot;]]\n<strong>Output</strong>\n[null, 0]\n\n<strong>Explanation</strong>\nWordFilter wordFilter = new WordFilter([&quot;apple&quot;]);\nwordFilter.f(&quot;a&quot;, &quot;e&quot;); // return 0, because the word at index 0 has prefix = &quot;a&quot; and suffix = &#39;e&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 15000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 10</code></li>\n\t<li><code>1 &lt;= prefix.length, suffix.length&nbsp;&lt;= 10</code></li>\n\t<li><code>words[i]</code>, <code>prefix</code> and <code>suffix</code> consist of lower-case English letters only.</li>\n\t<li>At most <code>15000</code> calls will be made to the function <code>f</code>.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"20.9K\", \"totalSubmission\": \"59.7K\", \"totalAcceptedRaw\": 20870, \"totalSubmissionRaw\": 59740, \"acRate\": \"34.9%\"}", "similarQuestions": "[{\"title\": \"Design Add and Search Words Data Structure\", \"titleSlug\": \"design-add-and-search-words-data-structure\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Trie", "slug": "trie"}]}}, {"id": "741", "name": "cherry-pickup", "content": {"questionId": "741", "questionFrontendId": "741", "questionTitle": "Cherry Pickup", "questionTitleSlug": "cherry-pickup", "content": "<p>You are given an <code>n x n</code> <code>grid</code> representing a field of cherries, each cell is one of three possible integers.</p>\n\n<ul>\n\t<li><code>0</code> means the cell is empty, so you can pass through,</li>\n\t<li><code>1</code> means the cell contains a cherry that you can pick up and pass through, or</li>\n\t<li><code>-1</code> means the cell contains a thorn that blocks your way.</li>\n</ul>\n\n<p>Return <em>the maximum number of cherries you can collect by following the rules below</em>:</p>\n\n<ul>\n\t<li>Starting at the position <code>(0, 0)</code> and reaching <code>(n - 1, n - 1)</code> by moving right or down through valid path cells (cells with value <code>0</code> or <code>1</code>).</li>\n\t<li>After reaching <code>(n - 1, n - 1)</code>, returning to <code>(0, 0)</code> by moving left or up through valid path cells.</li>\n\t<li>When passing through a path cell containing a cherry, you pick it up, and the cell becomes an empty cell <code>0</code>.</li>\n\t<li>If there is no valid path between <code>(0, 0)</code> and <code>(n - 1, n - 1)</code>, then no cherries can be collected.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/14/grid.jpg\" style=\"width: 242px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> grid = [[0,1,-1],[1,0,-1],[1,1,1]]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The player started at (0, 0) and went down, down, right right to reach (2, 2).\n4 cherries were picked up during this single trip, and the matrix becomes [[0,1,-1],[0,0,-1],[0,0,0]].\nThen, the player went left, up, up, left to return home, picking up one more cherry.\nThe total number of cherries picked up is 5, and this is the maximum possible.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,1,-1],[1,-1,1],[-1,1,1]]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= n &lt;= 50</code></li>\n\t<li><code>grid[i][j]</code> is <code>-1</code>, <code>0</code>, or <code>1</code>.</li>\n\t<li><code>grid[0][0] != -1</code></li>\n\t<li><code>grid[n - 1][n - 1] != -1</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"33.2K\", \"totalSubmission\": \"95.3K\", \"totalAcceptedRaw\": 33206, \"totalSubmissionRaw\": 95310, \"acRate\": \"34.8%\"}", "similarQuestions": "[{\"title\": \"Minimum Path Sum\", \"titleSlug\": \"minimum-path-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Dungeon Game\", \"titleSlug\": \"dungeon-game\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "736", "name": "parse-lisp-expression", "content": {"questionId": "736", "questionFrontendId": "736", "questionTitle": "Parse Lisp Expression", "questionTitleSlug": "parse-lisp-expression", "content": "<p>\r\nYou are given a string <code>expression</code> representing a Lisp-like expression to return the integer value of.\r\n</p><p>\r\nThe syntax for these expressions is given as follows.\r\n</p><p>\r\n<li>An expression is either an integer, a let-expression, an add-expression, a mult-expression, or an assigned variable.  Expressions always evaluate to a single integer.</li>\r\n</p><p>\r\n<li>(An integer could be positive or negative.)</li>\r\n</p><p>\r\n<li>A let-expression takes the form <code>(let v1 e1 v2 e2 ... vn en expr)</code>, where <code>let</code> is always the string <code>\"let\"</code>, then there are 1 or more pairs of alternating variables and expressions, meaning that the first variable <code>v1</code> is assigned the value of the expression <code>e1</code>, the second variable <code>v2</code> is assigned the value of the expression <code>e2</code>, and so on <b>sequentially</b>; and then the value of this let-expression is the value of the expression <code>expr</code>.</li>\r\n</p><p>\r\n<li>An add-expression takes the form <code>(add e1 e2)</code> where <code>add</code> is always the string <code>\"add\"</code>, there are always two expressions <code>e1, e2</code>, and this expression evaluates to the addition of the evaluation of <code>e1</code> and the evaluation of <code>e2</code>.</li>\r\n</p><p>\r\n<li>A mult-expression takes the form <code>(mult e1 e2)</code> where <code>mult</code> is always the string <code>\"mult\"</code>, there are always two expressions <code>e1, e2</code>, and this expression evaluates to the multiplication of the evaluation of <code>e1</code> and the evaluation of <code>e2</code>.</li>\r\n</p><p>\r\n<li>For the purposes of this question, we will use a smaller subset of variable names.  A variable starts with a lowercase letter, then zero or more lowercase letters or digits.  Additionally for your convenience, the names \"add\", \"let\", or \"mult\" are protected and will never be used as variable names.</li>\r\n</p><p>\r\n<li>Finally, there is the concept of scope.  When an expression of a variable name is evaluated, <b>within the context of that evaluation</b>, the innermost scope (in terms of parentheses) is checked first for the value of that variable, and then outer scopes are checked sequentially.  It is guaranteed that every expression is legal.  Please see the examples for more details on scope.</li>\r\n</p>\r\n\r\n<p><b>Evaluation Examples:</b><br />\r\n<pre>\r\n<b>Input:</b> (add 1 2)\r\n<b>Output:</b> 3\r\n\r\n<b>Input:</b> (mult 3 (add 2 3))\r\n<b>Output:</b> 15\r\n\r\n<b>Input:</b> (let x 2 (mult x 5))\r\n<b>Output:</b> 10\r\n\r\n<b>Input:</b> (let x 2 (mult x (let x 3 y 4 (add x y))))\r\n<b>Output:</b> 14\r\n<b>Explanation:</b> In the expression (add x y), when checking for the value of the variable x,\r\nwe check from the innermost scope to the outermost in the context of the variable we are trying to evaluate.\r\nSince x = 3 is found first, the value of x is 3.\r\n\r\n<b>Input:</b> (let x 3 x 2 x)\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> Assignment in let statements is processed sequentially.\r\n\r\n<b>Input:</b> (let x 1 y 2 x (add x y) (add x y))\r\n<b>Output:</b> 5\r\n<b>Explanation:</b> The first (add x y) evaluates as 3, and is assigned to x.\r\nThe second (add x y) evaluates as 3+2 = 5.\r\n\r\n<b>Input:</b> (let x 2 (add (let x 3 (let x 4 x)) x))\r\n<b>Output:</b> 6\r\n<b>Explanation:</b> Even though (let x 4 x) has a deeper scope, it is outside the context\r\nof the final x in the add-expression.  That final x will equal 2.\r\n\r\n<b>Input:</b> (let a1 3 b2 (add a1 1) b2) \r\n<b>Output</b> 4\r\n<b>Explanation:</b> Variable names can contain digits after the first character.\r\n\r\n</pre>\r\n\r\n<p><b>Note:</b>\r\n<li>The given string <code>expression</code> is well formatted: There are no leading or trailing spaces, there is only a single space separating different components of the string, and no space between adjacent parentheses.  The expression is guaranteed to be legal and evaluate to an integer.</li>\r\n<li>The length of <code>expression</code> is at most 2000.  (It is also non-empty, as that would not be a legal expression.)</li>\r\n<li>The answer and all intermediate calculations of that answer are guaranteed to fit in a 32-bit integer.</li>\r\n</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"14.2K\", \"totalSubmission\": \"28.6K\", \"totalAcceptedRaw\": 14246, \"totalSubmissionRaw\": 28595, \"acRate\": \"49.8%\"}", "similarQuestions": "[{\"title\": \"Ternary Expression Parser\", \"titleSlug\": \"ternary-expression-parser\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Atoms\", \"titleSlug\": \"number-of-atoms\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator IV\", \"titleSlug\": \"basic-calculator-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "732", "name": "my-calendar-iii", "content": {"questionId": "732", "questionFrontendId": "732", "questionTitle": "My Calendar III", "questionTitleSlug": "my-calendar-iii", "content": "<p>Implement a <code>MyCalendarThree</code> class to store your events. A new event can <b>always</b> be added.</p>\r\n\r\n<p>Your class will have one method, <code>book(int start, int end)</code>. Formally, this represents a booking on the half open interval <code>[start, end)</code>, the range of real numbers <code>x</code> such that <code>start &lt;= x &lt; end</code>.</p>\r\n\r\n<p>A <i>K-booking</i> happens when <b>K</b> events have some non-empty intersection (ie., there is some time that is common to all K events.)</p>\r\n\r\n<p>For each call to the method <code>MyCalendar.book</code>, return an integer <code>K</code> representing the largest integer such that there exists a <code>K</code>-booking in the calendar.</p>\r\nYour class will be called like this: <code>MyCalendarThree cal = new MyCalendarThree();</code> <code>MyCalendarThree.book(start, end)</code>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\nMyCalendarThree();\r\nMyCalendarThree.book(10, 20); // returns 1\r\nMyCalendarThree.book(50, 60); // returns 1\r\nMyCalendarThree.book(10, 40); // returns 2\r\nMyCalendarThree.book(5, 15); // returns 3\r\nMyCalendarThree.book(5, 10); // returns 3\r\nMyCalendarThree.book(25, 55); // returns 3\r\n<b>Explanation:</b> \r\nThe first two events can be booked and are disjoint, so the maximum K-booking is a 1-booking.\r\nThe third event [10, 40) intersects the first event, and the maximum K-booking is a 2-booking.\r\nThe remaining events cause the maximum K-booking to be only a 3-booking.\r\nNote that the last event locally causes a 2-booking, but the answer is still 3 because\r\neg. [10, 20), [10, 40), and [5, 15) are still triple booked.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ul>\r\n\t<li>The number of calls to <code>MyCalendarThree.book</code> per test case will be at most <code>400</code>.</li>\r\n\t<li>In calls to <code>MyCalendarThree.book(start, end)</code>, <code>start</code> and <code>end</code> are integers in the range <code>[0, 10^9]</code>.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"23.8K\", \"totalSubmission\": \"38.9K\", \"totalAcceptedRaw\": 23795, \"totalSubmissionRaw\": 38892, \"acRate\": \"61.2%\"}", "similarQuestions": "[{\"title\": \"My Calendar I\", \"titleSlug\": \"my-calendar-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"My Calendar II\", \"titleSlug\": \"my-calendar-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Segment Tree", "slug": "segment-tree"}, {"name": "Ordered Map", "slug": "ordered-map"}]}}, {"id": "730", "name": "count-different-palindromic-subsequences", "content": {"questionId": "730", "questionFrontendId": "730", "questionTitle": "Count Different Palindromic Subsequences", "questionTitleSlug": "count-different-palindromic-subsequences", "content": "<p>\r\nGiven a string S, find the number of different non-empty palindromic subsequences in S, and <b>return that number modulo <code>10^9 + 7</code>.</b>\r\n</p><p>\r\nA subsequence of a string S is obtained by deleting 0 or more characters from S.\r\n</p><p>\r\nA sequence is palindromic if it is equal to the sequence reversed.\r\n</p><p>\r\nTwo sequences <code>A_1, A_2, ...</code> and <code>B_1, B_2, ...</code> are different if there is some <code>i</code> for which <code>A_i != B_i</code>.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> \r\nS = 'bccb'\r\n<b>Output:</b> 6\r\n<b>Explanation:</b> \r\nThe 6 different non-empty palindromic subsequences are 'b', 'c', 'bb', 'cc', 'bcb', 'bccb'.\r\nNote that 'bcb' is counted only once, even though it occurs twice.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> \r\nS = 'abcdabcdabcdabcdabcdabcdabcdabcddcbadcbadcbadcbadcbadcbadcbadcba'\r\n<b>Output:</b> 104860361\r\n<b>Explanation:</b> \r\nThere are 3104860382 different non-empty palindromic subsequences, which is 104860361 modulo 10^9 + 7.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<li>The length of <code>S</code> will be in the range <code>[1, 1000]</code>.</li>\r\n<li>Each character <code>S[i]</code> will be in the set <code>{'a', 'b', 'c', 'd'}</code>.</li>\r\n</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"17.9K\", \"totalSubmission\": \"41.4K\", \"totalAcceptedRaw\": 17881, \"totalSubmissionRaw\": 41358, \"acRate\": \"43.2%\"}", "similarQuestions": "[{\"title\": \"Longest Palindromic Subsequence\", \"titleSlug\": \"longest-palindromic-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "727", "name": "minimum-window-subsequence", "content": {"questionId": "727", "questionFrontendId": "727", "questionTitle": "Minimum Window Subsequence", "questionTitleSlug": "minimum-window-subsequence", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"49.4K\", \"totalSubmission\": \"117.1K\", \"totalAcceptedRaw\": 49355, \"totalSubmissionRaw\": 117066, \"acRate\": \"42.2%\"}", "similarQuestions": "[{\"title\": \"Minimum Window Substring\", \"titleSlug\": \"minimum-window-substring\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Longest Continuous Increasing Subsequence\", \"titleSlug\": \"longest-continuous-increasing-subsequence\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "726", "name": "number-of-atoms", "content": {"questionId": "726", "questionFrontendId": "726", "questionTitle": "Number of Atoms", "questionTitleSlug": "number-of-atoms", "content": "<p>Given a chemical <code>formula</code> (given as a string), return the count of each atom.</p>\n\n<p>The atomic element always starts with an uppercase character, then zero or more lowercase letters, representing the name.</p>\n\n<p>One or more digits representing that element&#39;s count may follow if the count is greater than 1. If the count is 1, no digits will follow. For example, H2O and H2O2 are possible, but H1O2 is impossible.</p>\n\n<p>Two formulas concatenated together to produce another formula. For example, H2O2He3Mg4 is also a formula.</p>\n\n<p>A formula placed in parentheses, and a count (optionally added) is also a formula. For example, (H2O2) and (H2O2)3 are formulas.</p>\n\n<p>Given a <code>formula</code>, return <em>the count of all elements as a string in the following form</em>: the first name (in sorted order), followed by its count (if that count is more than 1), followed by the second name (in sorted order), followed by its count (if that count is more than 1), and so on.</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> formula = &quot;H2O&quot;\n<strong>Output:</strong> &quot;H2O&quot;\n<strong>Explanation:</strong> The count of elements are {&#39;H&#39;: 2, &#39;O&#39;: 1}.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> formula = &quot;Mg(OH)2&quot;\n<strong>Output:</strong> &quot;H2MgO2&quot;\n<strong>Explanation:</strong> The count of elements are {&#39;H&#39;: 2, &#39;Mg&#39;: 1, &#39;O&#39;: 2}.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> formula = &quot;K4(ON(SO3)2)2&quot;\n<strong>Output:</strong> &quot;K4N2O14S4&quot;\n<strong>Explanation:</strong> The count of elements are {&#39;K&#39;: 4, &#39;N&#39;: 2, &#39;O&#39;: 14, &#39;S&#39;: 4}.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> formula = &quot;Be32&quot;\n<strong>Output:</strong> &quot;Be32&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= formula.length&nbsp;&lt;= 1000</code></li>\n\t<li><code>formula</code> consists of English letters, digits, <code>&#39;(&#39;</code>, and <code>&#39;)&#39;</code>.</li>\n\t<li><code>formula</code> is always valid.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"28.1K\", \"totalSubmission\": \"55.1K\", \"totalAcceptedRaw\": 28126, \"totalSubmissionRaw\": 55146, \"acRate\": \"51.0%\"}", "similarQuestions": "[{\"title\": \"Decode String\", \"titleSlug\": \"decode-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Encode String with Shortest Length\", \"titleSlug\": \"encode-string-with-shortest-length\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Parse Lisp Expression\", \"titleSlug\": \"parse-lisp-expression\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Stack", "slug": "stack"}, {"name": "Recursion", "slug": "recursion"}]}}, {"id": "719", "name": "find-k-th-smallest-pair-distance", "content": {"questionId": "719", "questionFrontendId": "719", "questionTitle": "Find K-th Smallest Pair Distance", "questionTitleSlug": "find-k-th-smallest-pair-distance", "content": "<p>Given an integer array, return the k-th smallest <b>distance</b> among all the pairs. The distance of a pair (A, B) is defined as the absolute difference between A and B. </p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b>\r\nnums = [1,3,1]\r\nk = 1\r\n<b>Output: 0</b> \r\n<b>Explanation:</b>\r\nHere are all the pairs:\r\n(1,3) -> 2\r\n(1,1) -> 0\r\n(3,1) -> 2\r\nThen the 1st smallest distance pair is (1,1), and its distance is 0.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li><code>2 <= len(nums) <= 10000</code>.</li>\r\n<li><code>0 <= nums[i] < 1000000</code>.</li>\r\n<li><code>1 <= k <= len(nums) * (len(nums) - 1) / 2</code>.</li>\r\n</ol>\r\n</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"38.9K\", \"totalSubmission\": \"120.4K\", \"totalAcceptedRaw\": 38880, \"totalSubmissionRaw\": 120360, \"acRate\": \"32.3%\"}", "similarQuestions": "[{\"title\": \"Find K Pairs with Smallest Sums\", \"titleSlug\": \"find-k-pairs-with-smallest-sums\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Smallest Element in a Sorted Matrix\", \"titleSlug\": \"kth-smallest-element-in-a-sorted-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find K Closest Elements\", \"titleSlug\": \"find-k-closest-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Smallest Number in Multiplication Table\", \"titleSlug\": \"kth-smallest-number-in-multiplication-table\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"K-th Smallest Prime Fraction\", \"titleSlug\": \"k-th-smallest-prime-fraction\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Binary Search", "slug": "binary-search"}, {"name": "Heap", "slug": "heap"}]}}, {"id": "715", "name": "range-module", "content": {"questionId": "715", "questionFrontendId": "715", "questionTitle": "Range Module", "questionTitleSlug": "range-module", "content": "<p>A Range Module is a module that tracks ranges of numbers. Your task is to design and implement the following interfaces in an efficient manner.</p>\r\n\r\n<p><li><code>addRange(int left, int right)</code> Adds the half-open interval <code>[left, right)</code>, tracking every real number in that interval.  Adding an interval that partially overlaps with currently tracked numbers should add any numbers in the interval <code>[left, right)</code> that are not already tracked.</li></p>\r\n\r\n<p><li><code>queryRange(int left, int right)</code> Returns true if and only if every real number in the interval <code>[left, right)</code>\r\n is currently being tracked.</li></p>\r\n\r\n<p><li><code>removeRange(int left, int right)</code> Stops tracking every real number currently being tracked in the interval <code>[left, right)</code>.</li></p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>addRange(10, 20)</b>: null\r\n<b>removeRange(14, 16)</b>: null\r\n<b>queryRange(10, 14)</b>: true (Every number in [10, 14) is being tracked)\r\n<b>queryRange(13, 15)</b>: false (Numbers like 14, 14.03, 14.17 in [13, 15) are not being tracked)\r\n<b>queryRange(16, 17)</b>: true (The number 16 in [16, 17) is still being tracked, despite the remove operation)\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<li>A half open interval <code>[left, right)</code> denotes all real numbers <code>left <= x < right</code>.</li>\r\n\r\n<li><code>0 < left < right < 10^9</code> in all calls to <code>addRange, queryRange, removeRange</code>.</li>\r\n<li>The total number of calls to <code>addRange</code> in a single test case is at most <code>1000</code>.</li>\r\n<li>The total number of calls to <code>queryRange</code> in a single test case is at most <code>5000</code>.</li>\r\n<li>The total number of calls to <code>removeRange</code> in a single test case is at most <code>1000</code>.</li>\r\n</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"22.6K\", \"totalSubmission\": \"56.8K\", \"totalAcceptedRaw\": 22587, \"totalSubmissionRaw\": 56814, \"acRate\": \"39.8%\"}", "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Insert Interval\", \"titleSlug\": \"insert-interval\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Data Stream as Disjoint Intervals\", \"titleSlug\": \"data-stream-as-disjoint-intervals\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Segment Tree", "slug": "segment-tree"}, {"name": "Ordered Map", "slug": "ordered-map"}]}}, {"id": "711", "name": "number-of-distinct-islands-ii", "content": {"questionId": "711", "questionFrontendId": "711", "questionTitle": "Number of Distinct Islands II", "questionTitleSlug": "number-of-distinct-islands-ii", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"6.5K\", \"totalSubmission\": \"13.2K\", \"totalAcceptedRaw\": 6473, \"totalSubmissionRaw\": 13243, \"acRate\": \"48.9%\"}", "similarQuestions": "[{\"title\": \"Number of Distinct Islands\", \"titleSlug\": \"number-of-distinct-islands\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "699", "name": "falling-squares", "content": {"questionId": "699", "questionFrontendId": "699", "questionTitle": "Falling Squares", "questionTitleSlug": "falling-squares", "content": "<p>On an infinite number line (x-axis), we drop given squares in the order they are given.</p>\r\n\r\n<p>The <code>i</code>-th square dropped (<code>positions[i] = (left, side_length)</code>) is a square with the left-most point being <code>positions[i][0]</code> and sidelength <code>positions[i][1]</code>.</p>\r\n\r\n<p>The square is dropped with the bottom edge parallel to the number line, and from a higher height than all currently landed squares. We wait for each square to stick before dropping the next.</p>\r\n\r\n<p>The squares are infinitely sticky on their bottom edge, and will remain fixed to any positive length surface they touch (either the number line or another square). Squares dropped adjacent to each other will not stick together prematurely.</p>\r\n&nbsp;\r\n\r\n<p>Return a list <code>ans</code> of heights. Each height <code>ans[i]</code> represents the current highest height of any square we have dropped, after dropping squares represented by <code>positions[0], positions[1], ..., positions[i]</code>.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> [[1, 2], [2, 3], [6, 1]]\r\n<b>Output:</b> [2, 5, 5]\r\n<b>Explanation:</b>\r\n</pre>\r\n\r\n<p>After the first drop of <code>positions[0] = [1, 2]: _aa _aa ------- </code>The maximum height of any square is 2.</p>\r\n\r\n<p>After the second drop of <code>positions[1] = [2, 3]: __aaa __aaa __aaa _aa__ _aa__ -------------- </code>The maximum height of any square is 5. The larger square stays on top of the smaller square despite where its center of gravity is, because squares are infinitely sticky on their bottom edge.</p>\r\n\r\n<p>After the third drop of <code>positions[1] = [6, 1]: __aaa __aaa __aaa _aa _aa___a -------------- </code>The maximum height of any square is still 5. Thus, we return an answer of <code>[2, 5, 5]</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n&nbsp;\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> [[100, 100], [200, 100]]\r\n<b>Output:</b> [100, 100]\r\n<b>Explanation:</b> Adjacent squares don&#39;t get stuck prematurely - only their bottom edge can stick to surfaces.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= positions.length &lt;= 1000</code>.</li>\r\n\t<li><code>1 &lt;= positions[i][0] &lt;= 10^8</code>.</li>\r\n\t<li><code>1 &lt;= positions[i][1] &lt;= 10^6</code>.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"14.7K\", \"totalSubmission\": \"34.8K\", \"totalAcceptedRaw\": 14713, \"totalSubmissionRaw\": 34771, \"acRate\": \"42.3%\"}", "similarQuestions": "[{\"title\": \"The Skyline Problem\", \"titleSlug\": \"the-skyline-problem\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Segment Tree", "slug": "segment-tree"}, {"name": "Ordered Map", "slug": "ordered-map"}]}}, {"id": "691", "name": "stickers-to-spell-word", "content": {"questionId": "691", "questionFrontendId": "691", "questionTitle": "Stickers to Spell Word", "questionTitleSlug": "stickers-to-spell-word", "content": "<p>\r\nWe are given N different types of stickers.  Each sticker has a lowercase English word on it.\r\n</p><p>\r\nYou would like to spell out the given <code>target</code> string by cutting individual letters from your collection of stickers and rearranging them.\r\n</p><p>\r\nYou can use each sticker more than once if you want, and you have infinite quantities of each sticker.\r\n</p><p>\r\nWhat is the minimum number of stickers that you need to spell out the <code>target</code>?  If the task is impossible, return -1.\r\n</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n<p>Input:<pre>\r\n[\"with\", \"example\", \"science\"], \"thehat\"\r\n</pre></p>\r\n\r\n<p>Output:<pre>\r\n3\r\n</pre></p>\r\n\r\n<p>Explanation:<pre>\r\nWe can use 2 \"with\" stickers, and 1 \"example\" sticker.\r\nAfter cutting and rearrange the letters of those stickers, we can form the target \"thehat\".\r\nAlso, this is the minimum number of stickers necessary to form the target string.\r\n</pre></p>\r\n\r\n<p><b>Example 2:</b></p>\r\n<p>Input:<pre>\r\n[\"notice\", \"possible\"], \"basicbasic\"\r\n</pre></p>\r\n\r\n<p>Output:<pre>\r\n-1\r\n</pre></p>\r\n\r\n<p>Explanation:<pre>\r\nWe can't form the target \"basicbasic\" from cutting letters from the given stickers.\r\n</pre></p>\r\n\r\n<p><b>Note:</b>\r\n<li><code>stickers</code> has length in the range <code>[1, 50]</code>.</li>\r\n<li><code>stickers</code> consists of lowercase English words (without apostrophes).</li>\r\n<li><code>target</code> has length in the range <code>[1, 15]</code>, and consists of lowercase English letters.</li>\r\n<li>In all test cases, all words were chosen <u>randomly</u> from the 1000 most common US English words, and the target was chosen as a concatenation of two random words.</li>\r\n<li>The time limit may be more challenging than usual.  It is expected that a 50 sticker test case can be solved within 35ms on average.</li>\r\n</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"17.7K\", \"totalSubmission\": \"40.3K\", \"totalAcceptedRaw\": 17706, \"totalSubmissionRaw\": 40264, \"acRate\": \"44.0%\"}", "similarQuestions": "[{\"title\": \"Ransom Note\", \"titleSlug\": \"ransom-note\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "689", "name": "maximum-sum-of-3-non-overlapping-subarrays", "content": {"questionId": "689", "questionFrontendId": "689", "questionTitle": "Maximum Sum of 3 Non-Overlapping Subarrays", "questionTitleSlug": "maximum-sum-of-3-non-overlapping-subarrays", "content": "<p>In a given array <code>nums</code> of positive integers, find three non-overlapping subarrays with maximum sum.</p>\r\n\r\n<p>Each subarray will be of size <code>k</code>, and we want to maximize the sum of all <code>3*k</code> entries.</p>\r\n\r\n<p>Return the result as a list of indices representing the starting position of each interval (0-indexed). If there are multiple answers, return the lexicographically smallest one.</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> [1,2,1,2,6,7,5,1], 2\r\n<b>Output:</b> [0, 3, 5]\r\n<b>Explanation:</b> Subarrays [1, 2], [2, 6], [7, 5] correspond to the starting indices [0, 3, 5].\r\nWe could have also taken [2, 1], but an answer of [1, 3, 5] would be lexicographically larger.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ul>\r\n\t<li><code>nums.length</code> will be between 1 and 20000.</li>\r\n\t<li><code>nums[i]</code> will be between 1 and 65535.</li>\r\n\t<li><code>k</code> will be between 1 and floor(nums.length / 3).</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"50.1K\", \"totalSubmission\": \"106.4K\", \"totalAcceptedRaw\": 50070, \"totalSubmissionRaw\": 106380, \"acRate\": \"47.1%\"}", "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock III\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "685", "name": "redundant-connection-ii", "content": {"questionId": "685", "questionFrontendId": "685", "questionTitle": "Redundant Connection II", "questionTitleSlug": "redundant-connection-ii", "content": "<p>In this problem, a rooted tree is a <b>directed</b> graph such that, there is exactly one node (the root) for which all other nodes are descendants of this node, plus every node has exactly one parent, except for the root node which has no parents.</p>\n\n<p>The given input is a directed graph that started as a rooted tree with <code>n</code> nodes (with distinct values from <code>1</code> to <code>n</code>), with one additional directed edge added. The added edge has two different vertices chosen from <code>1</code> to <code>n</code>, and was not an edge that already existed.</p>\n\n<p>The resulting graph is given as a 2D-array of <code>edges</code>. Each element of <code>edges</code> is a pair <code>[u<sub>i</sub>, v<sub>i</sub>]</code> that represents a <b>directed</b> edge connecting nodes <code>u<sub>i</sub></code> and <code>v<sub>i</sub></code>, where <code>u<sub>i</sub></code> is a parent of child <code>v<sub>i</sub></code>.</p>\n\n<p>Return <em>an edge that can be removed so that the resulting graph is a rooted tree of</em> <code>n</code> <em>nodes</em>. If there are multiple answers, return the answer that occurs last in the given 2D-array.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/20/graph1.jpg\" style=\"width: 222px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> edges = [[1,2],[1,3],[2,3]]\n<strong>Output:</strong> [2,3]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/20/graph2.jpg\" style=\"width: 222px; height: 382px;\" />\n<pre>\n<strong>Input:</strong> edges = [[1,2],[2,3],[3,4],[4,1],[1,5]]\n<strong>Output:</strong> [4,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == edges.length</code></li>\n\t<li><code>3 &lt;= n &lt;= 1000</code></li>\n\t<li><code>edges[i].length == 2</code></li>\n\t<li><code>1 &lt;= u<sub>i</sub>, v<sub>i</sub> &lt;= n</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"39.2K\", \"totalSubmission\": \"119.3K\", \"totalAcceptedRaw\": 39161, \"totalSubmissionRaw\": 119309, \"acRate\": \"32.8%\"}", "similarQuestions": "[{\"title\": \"Redundant Connection\", \"titleSlug\": \"redundant-connection\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Union Find", "slug": "union-find"}, {"name": "Graph", "slug": "graph"}]}}, {"id": "683", "name": "k-empty-slots", "content": {"questionId": "683", "questionFrontendId": "683", "questionTitle": "K Empty Slots", "questionTitleSlug": "k-empty-slots", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"48.8K\", \"totalSubmission\": \"136K\", \"totalAcceptedRaw\": 48801, \"totalSubmissionRaw\": 136043, \"acRate\": \"35.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Ordered Map", "slug": "ordered-map"}]}}, {"id": "679", "name": "24-game", "content": {"questionId": "679", "questionFrontendId": "679", "questionTitle": "24 Game", "questionTitleSlug": "24-game", "content": "<p>\r\nYou have 4 cards each containing a number from 1 to 9.  You need to judge whether they could operated through <code>*</code>, <code>/</code>, <code>+</code>, <code>-</code>, <code>(</code>, <code>)</code> to get the value of 24.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> [4, 1, 8, 7]\r\n<b>Output:</b> True\r\n<b>Explanation:</b> (8-4) * (7-1) = 24\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> [1, 2, 1, 2]\r\n<b>Output:</b> False\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The division operator <code>/</code> represents real division, not integer division.  For example, 4 / (1 - 2/3) = 12.</li>\r\n<li>Every operation done is between two numbers.  In particular, we cannot use <code>-</code> as a unary operator.  For example, with <code>[1, 1, 1, 1]</code> as input, the expression <code>-1 - 1 - 1 - 1</code> is not allowed.</li>\r\n<li>You cannot concatenate numbers together.  For example, if the input is <code>[1, 2, 1, 2]</code>, we cannot write this as 12 + 12.</li>\r\n</ol>\r\n</p>\r\n</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"45.7K\", \"totalSubmission\": \"97.2K\", \"totalAcceptedRaw\": 45676, \"totalSubmissionRaw\": 97204, \"acRate\": \"47.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "675", "name": "cut-off-trees-for-golf-event", "content": {"questionId": "675", "questionFrontendId": "675", "questionTitle": "Cut Off Trees for Golf Event", "questionTitleSlug": "cut-off-trees-for-golf-event", "content": "<p>You are asked to cut off all the trees in a forest for a golf event. The forest is represented as an <code>m x n</code> matrix. In this matrix:</p>\n\n<ul>\n\t<li><code>0</code> means the cell cannot be walked through.</li>\n\t<li><code>1</code> represents an empty cell that can be walked through.</li>\n\t<li>A number greater than <code>1</code> represents a tree in a cell that can be walked through, and this number is the tree&#39;s height.</li>\n</ul>\n\n<p>In one step, you can walk in any of the four directions: north, east, south, and west. If you are standing in a cell with a tree, you can choose whether to cut it off.</p>\n\n<p>You must cut off the trees in order from shortest to tallest. When you cut off a tree, the value at its cell becomes <code>1</code> (an empty cell).</p>\n\n<p>Starting from the point <code>(0, 0)</code>, return <em>the minimum steps you need to walk to cut off all the trees</em>. If you cannot cut off all the trees, return <code>-1</code>.</p>\n\n<p>You are guaranteed that no two trees have the same height, and there is at least one tree needs to be cut off.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/26/trees1.jpg\" style=\"width: 242px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> forest = [[1,2,3],[0,0,4],[7,6,5]]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> Following the path above allows you to cut off the trees from shortest to tallest in 6 steps.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/26/trees2.jpg\" style=\"width: 242px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> forest = [[1,2,3],[0,0,0],[7,6,5]]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> The trees in the bottom row cannot be accessed as the middle row is blocked.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> forest = [[2,3,4],[0,0,5],[8,7,6]]\n<strong>Output:</strong> 6\n<b>Explanation:</b> You can follow the same path as Example 1 to cut off all the trees.\nNote that you can cut off the first tree at (0, 0) before making any steps.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == forest.length</code></li>\n\t<li><code>n == forest[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 50</code></li>\n\t<li><code>0 &lt;= forest[i][j] &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"38.3K\", \"totalSubmission\": \"109.6K\", \"totalAcceptedRaw\": 38336, \"totalSubmissionRaw\": 109636, \"acRate\": \"35.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "668", "name": "kth-smallest-number-in-multiplication-table", "content": {"questionId": "668", "questionFrontendId": "668", "questionTitle": "Kth Smallest Number in Multiplication Table", "questionTitleSlug": "kth-smallest-number-in-multiplication-table", "content": "<p>\r\nNearly every one have used the <a href=\"https://en.wikipedia.org/wiki/Multiplication_table\">Multiplication Table</a>. But could you find out the <code>k-th</code> smallest number quickly from the multiplication table?\r\n</p>\r\n\r\n<p>\r\nGiven the height <code>m</code> and the length <code>n</code> of a <code>m * n</code> Multiplication Table, and a positive integer <code>k</code>, you need to return the <code>k-th</code> smallest number in this table.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> m = 3, n = 3, k = 5\r\n<b>Output:</b> \r\n<b>Explanation:</b> \r\nThe Multiplication Table:\r\n1\t2\t3\r\n2\t4\t6\r\n3\t6\t9\r\n\r\nThe 5-th smallest number is 3 (1, 2, 2, 3, 3).\r\n</pre>\r\n</p>\r\n\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> m = 2, n = 3, k = 6\r\n<b>Output:</b> \r\n<b>Explanation:</b> \r\nThe Multiplication Table:\r\n1\t2\t3\r\n2\t4\t6\r\n\r\nThe 6-th smallest number is 6 (1, 2, 2, 3, 4, 6).\r\n</pre>\r\n</p>\r\n\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The <code>m</code> and <code>n</code> will be in the range [1, 30000].</li>\r\n<li>The <code>k</code> will be in the range [1, m * n]</li>\r\n</ol>\r\n</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"24.5K\", \"totalSubmission\": \"51.5K\", \"totalAcceptedRaw\": 24452, \"totalSubmissionRaw\": 51460, \"acRate\": \"47.5%\"}", "similarQuestions": "[{\"title\": \"Kth Smallest Element in a Sorted Matrix\", \"titleSlug\": \"kth-smallest-element-in-a-sorted-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find K-th Smallest Pair Distance\", \"titleSlug\": \"find-k-th-smallest-pair-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"K-th Smallest Prime Fraction\", \"titleSlug\": \"k-th-smallest-prime-fraction\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "664", "name": "strange-printer", "content": {"questionId": "664", "questionFrontendId": "664", "questionTitle": "Strange Printer", "questionTitleSlug": "strange-printer", "content": "<p>\r\nThere is a strange printer with the following two special requirements:\r\n\r\n<ol>\r\n<li>The printer can only print a sequence of the same character each time.</li>\r\n<li>At each turn, the printer can print new characters starting from and ending at any places, and will cover the original existing characters.</li>\r\n</ol>\r\n\r\n</p>\r\n\r\n<p>\r\nGiven a string consists of lower English letters only, your job is to count the minimum number of turns the printer needed in order to print it.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> \"aaabbb\"\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> Print \"aaa\" first and then print \"bbb\".\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> \"aba\"\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> Print \"aaa\" first and then print \"b\" from the second place of the string, which will cover the existing character 'a'.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Hint</b>: Length of the given string will not exceed 100.</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"16.7K\", \"totalSubmission\": \"40.5K\", \"totalAcceptedRaw\": 16656, \"totalSubmissionRaw\": 40454, \"acRate\": \"41.2%\"}", "similarQuestions": "[{\"title\": \"Remove Boxes\", \"titleSlug\": \"remove-boxes\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Strange Printer II\", \"titleSlug\": \"strange-printer-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "660", "name": "remove-9", "content": {"questionId": "660", "questionFrontendId": "660", "questionTitle": "Remove 9", "questionTitleSlug": "remove-9", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"7.3K\", \"totalSubmission\": \"13.5K\", \"totalAcceptedRaw\": 7276, \"totalSubmissionRaw\": 13480, \"acRate\": \"54.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "656", "name": "coin-path", "content": {"questionId": "656", "questionFrontendId": "656", "questionTitle": "Coin Path", "questionTitleSlug": "coin-path", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"10K\", \"totalSubmission\": \"33.9K\", \"totalAcceptedRaw\": 9998, \"totalSubmissionRaw\": 33936, \"acRate\": \"29.5%\"}", "similarQuestions": "[{\"title\": \"House Robber\", \"titleSlug\": \"house-robber\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"House Robber II\", \"titleSlug\": \"house-robber-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "644", "name": "maximum-average-subarray-ii", "content": {"questionId": "644", "questionFrontendId": "644", "questionTitle": "Maximum Average Subarray II", "questionTitleSlug": "maximum-average-subarray-ii", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"14.8K\", \"totalSubmission\": \"43.9K\", \"totalAcceptedRaw\": 14831, \"totalSubmissionRaw\": 43894, \"acRate\": \"33.8%\"}", "similarQuestions": "[{\"title\": \"Maximum Average Subarray I\", \"titleSlug\": \"maximum-average-subarray-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "642", "name": "design-search-autocomplete-system", "content": {"questionId": "642", "questionFrontendId": "642", "questionTitle": "Design Search Autocomplete System", "questionTitleSlug": "design-search-autocomplete-system", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"72.1K\", \"totalSubmission\": \"157.6K\", \"totalAcceptedRaw\": 72077, \"totalSubmissionRaw\": 157606, \"acRate\": \"45.7%\"}", "similarQuestions": "[{\"title\": \"Implement Trie (Prefix Tree)\", \"titleSlug\": \"implement-trie-prefix-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}, {"name": "Trie", "slug": "trie"}]}}, {"id": "639", "name": "decode-ways-ii", "content": {"questionId": "639", "questionFrontendId": "639", "questionTitle": "Decode Ways II", "questionTitleSlug": "decode-ways-ii", "content": "<p>\r\nA message containing letters from <code>A-Z</code> is being encoded to numbers using the following mapping way:\r\n</p>\r\n\r\n<pre>\r\n'A' -> 1\r\n'B' -> 2\r\n...\r\n'Z' -> 26\r\n</pre>\r\n\r\n<p>\r\nBeyond that, now the encoded string can also contain the character '*', which can be treated as one of the numbers from 1 to 9.\r\n</p>\r\n\r\n\r\n<p>\r\nGiven the encoded message containing digits and the character '*', return the total number of ways to decode it.\r\n</p>\r\n\r\n<p>\r\nAlso, since the answer may be very large, you should return the output mod 10<sup>9</sup> + 7.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> \"*\"\r\n<b>Output:</b> 9\r\n<b>Explanation:</b> The encoded message can be decoded to the string: \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\".\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> \"1*\"\r\n<b>Output:</b> 9 + 9 = 18\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The length of the input string will fit in range [1, 10<sup>5</sup>].</li>\r\n<li>The input string will only contain the character '*' and digits '0' - '9'.</li>\r\n</ol>\r\n</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"35.7K\", \"totalSubmission\": \"130.8K\", \"totalAcceptedRaw\": 35697, \"totalSubmissionRaw\": 130818, \"acRate\": \"27.3%\"}", "similarQuestions": "[{\"title\": \"Decode Ways\", \"titleSlug\": \"decode-ways\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "632", "name": "smallest-range-covering-elements-from-k-lists", "content": {"questionId": "632", "questionFrontendId": "632", "questionTitle": "Smallest Range Covering Elements from K Lists", "questionTitleSlug": "smallest-range-covering-elements-from-k-lists", "content": "<p>You have <code>k</code> lists of sorted integers in <strong>non-decreasing&nbsp;order</strong>. Find the <b>smallest</b> range that includes at least one number from each of the <code>k</code> lists.</p>\n\n<p>We define the range <code>[a, b]</code> is smaller than range <code>[c, d]</code> if <code>b - a &lt; d - c</code> <strong>or</strong> <code>a &lt; c</code> if <code>b - a == d - c</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [[4,10,15,24,26],[0,9,12,20],[5,18,22,30]]\n<strong>Output:</strong> [20,24]\n<strong>Explanation: </strong>\nList 1: [4, 10, 15, 24,26], 24 is in range [20,24].\nList 2: [0, 9, 12, 20], 20 is in range [20,24].\nList 3: [5, 18, 22, 30], 22 is in range [20,24].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [[1,2,3],[1,2,3],[1,2,3]]\n<strong>Output:</strong> [1,1]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [[10,10],[11,11]]\n<strong>Output:</strong> [10,11]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [[10],[11]]\n<strong>Output:</strong> [10,11]\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [[1],[2],[3],[4],[5],[6],[7]]\n<strong>Output:</strong> [1,7]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>nums.length == k</code></li>\n\t<li><code>1 &lt;= k &lt;= 3500</code></li>\n\t<li><code>1 &lt;= nums[i].length &lt;= 50</code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums[i][j] &lt;= 10<sup>5</sup></code></li>\n\t<li><code>nums[i]</code>&nbsp;is sorted in <strong>non-decreasing</strong> order.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"42.9K\", \"totalSubmission\": \"79.9K\", \"totalAcceptedRaw\": 42921, \"totalSubmissionRaw\": 79895, \"acRate\": \"53.7%\"}", "similarQuestions": "[{\"title\": \"Minimum Window Substring\", \"titleSlug\": \"minimum-window-substring\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Two Pointers", "slug": "two-pointers"}, {"name": "String", "slug": "string"}]}}, {"id": "631", "name": "design-excel-sum-formula", "content": {"questionId": "631", "questionFrontendId": "631", "questionTitle": "Design Excel Sum Formula", "questionTitleSlug": "design-excel-sum-formula", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"4.4K\", \"totalSubmission\": \"13.7K\", \"totalAcceptedRaw\": 4411, \"totalSubmissionRaw\": 13738, \"acRate\": \"32.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}]}}, {"id": "630", "name": "course-schedule-iii", "content": {"questionId": "630", "questionFrontendId": "630", "questionTitle": "Course Schedule III", "questionTitleSlug": "course-schedule-iii", "content": "<p>There are <code>n</code> different online courses numbered from <code>1</code> to <code>n</code>. Each course has some duration(course length) <code>t</code> and closed on <code>d<sub>th</sub></code> day. A course should be taken <b>continuously</b> for <code>t</code> days and must be finished before or on the <code>d<sub>th</sub></code> day. You will start at the <code>1<sub>st</sub></code> day.</p>\r\n\r\n<p>Given <code>n</code> online courses represented by pairs <code>(t,d)</code>, your task is to find the maximal number of courses that can be taken.</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> [[100, 200], [200, 1300], [1000, 1250], [2000, 3200]]\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> \r\nThere&#39;re totally 4 courses, but you can take 3 courses at most:\r\nFirst, take the 1st course, it costs 100 days so you will finish it on the 100th day, and ready to take the next course on the 101st day.\r\nSecond, take the 3rd course, it costs 1000 days so you will finish it on the 1100th day, and ready to take the next course on the 1101st day. \r\nThird, take the 2nd course, it costs 200 days so you will finish it on the 1300th day. \r\nThe 4th course cannot be taken now, since you will finish it on the 3300th day, which exceeds the closed date.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>The integer 1 &lt;= d, t, n &lt;= 10,000.</li>\r\n\t<li>You can&#39;t take two courses simultaneously.</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"25.5K\", \"totalSubmission\": \"76K\", \"totalAcceptedRaw\": 25547, \"totalSubmissionRaw\": 75975, \"acRate\": \"33.6%\"}", "similarQuestions": "[{\"title\": \"Course Schedule\", \"titleSlug\": \"course-schedule\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Course Schedule II\", \"titleSlug\": \"course-schedule-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "629", "name": "k-inverse-pairs-array", "content": {"questionId": "629", "questionFrontendId": "629", "questionTitle": "K Inverse Pairs Array", "questionTitleSlug": "k-inverse-pairs-array", "content": "<p>Given two integers <code>n</code> and <code>k</code>, find how many different arrays consist of numbers from <code>1</code> to <code>n</code> such that there are exactly <code>k</code> inverse pairs.</p>\r\n\r\n<p>We define an inverse pair as following: For <code>i<sub>th</sub></code> and <code>j<sub>th</sub></code> element in the array, if <code>i</code> &lt; <code>j</code> and <code>a[i]</code> &gt; <code>a[j]</code> then it&#39;s an inverse pair; Otherwise, it&#39;s not.</p>\r\n\r\n<p>Since the answer may be very large, the answer should be modulo 10<sup>9</sup> + 7.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> n = 3, k = 0\r\n<b>Output:</b> 1\r\n<b>Explanation:</b> \r\nOnly the array [1,2,3] which consists of numbers from 1 to 3 has exactly 0 inverse pair.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> n = 3, k = 1\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> \r\nThe array [1,3,2] and [2,1,3] have exactly 1 inverse pair.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>The integer <code>n</code> is in the range [1, 1000] and <code>k</code> is in the range [0, 1000].</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"12.2K\", \"totalSubmission\": \"38.8K\", \"totalAcceptedRaw\": 12213, \"totalSubmissionRaw\": 38803, \"acRate\": \"31.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "618", "name": "students-report-by-geography", "content": {"questionId": "618", "questionFrontendId": "618", "questionTitle": "Students Report By Geography", "questionTitleSlug": "students-report-by-geography", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"9.2K\", \"totalSubmission\": \"15.7K\", \"totalAcceptedRaw\": 9160, \"totalSubmissionRaw\": 15712, \"acRate\": \"58.3%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "615", "name": "average-salary-departments-vs-company", "content": {"questionId": "615", "questionFrontendId": "615", "questionTitle": "Average Salary: Departments VS Company", "questionTitleSlug": "average-salary-departments-vs-company", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"13.5K\", \"totalSubmission\": \"26.5K\", \"totalAcceptedRaw\": 13498, \"totalSubmissionRaw\": 26504, \"acRate\": \"50.9%\"}", "similarQuestions": "[{\"title\": \"Countries You Can Safely Invest In\", \"titleSlug\": \"countries-you-can-safely-invest-in\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "601", "name": "human-traffic-of-stadium", "content": {"questionId": "601", "questionFrontendId": "601", "questionTitle": "Human Traffic of Stadium", "questionTitleSlug": "human-traffic-of-stadium", "content": "<p>Table: <code>Stadium</code></p>\n\n<pre>\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| visit_date    | date    |\n| people        | int     |\n+---------------+---------+\nvisit_date is the primary key for this table.\nEach row of this table contains the visit date and visit id to the stadium with the number of people during the visit.\nNo two rows will have the same visit_date, and as the id increases, the dates increase as well.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to display the records with three or more rows with <strong>consecutive</strong> <code>id</code>&#39;s, and the number of people is greater than or equal to 100 for each.</p>\n\n<p>Return the result table ordered by <code>visit_date</code> in <strong>ascending order</strong>.</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n\n<pre>\n<code>Stadium</code> table:\n+------+------------+-----------+\n| id   | visit_date | people    |\n+------+------------+-----------+\n| 1    | 2017-01-01 | 10        |\n| 2    | 2017-01-02 | 109       |\n| 3    | 2017-01-03 | 150       |\n| 4    | 2017-01-04 | 99        |\n| 5    | 2017-01-05 | 145       |\n| 6    | 2017-01-06 | 1455      |\n| 7    | 2017-01-07 | 199       |\n| 8    | 2017-01-09 | 188       |\n+------+------------+-----------+\n\nResult table:\n+------+------------+-----------+\n| id   | visit_date | people    |\n+------+------------+-----------+\n| 5    | 2017-01-05 | 145       |\n| 6    | 2017-01-06 | 1455      |\n| 7    | 2017-01-07 | 199       |\n| 8    | 2017-01-09 | 188       |\n+------+------------+-----------+\nThe four rows with ids 5, 6, 7, and 8 have consecutive ids and each of them has &gt;= 100 people attended. Note that row 8 was included even though the visit_date was not the next day after row 7.\nThe rows with ids 2 and 3 are not included because we need at least three consecutive ids.</pre>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"35.4K\", \"totalSubmission\": \"80.6K\", \"totalAcceptedRaw\": 35407, \"totalSubmissionRaw\": 80616, \"acRate\": \"43.9%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "600", "name": "non-negative-integers-without-consecutive-ones", "content": {"questionId": "600", "questionFrontendId": "600", "questionTitle": "Non-negative Integers without Consecutive Ones", "questionTitleSlug": "non-negative-integers-without-consecutive-ones", "content": "<p>Given a positive integer n, find the number of <b>non-negative</b> integers less than or equal to n, whose binary representations do NOT contain <b>consecutive ones</b>.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> 5\r\n<b>Output:</b> 5\r\n<b>Explanation:</b> \r\nHere are the non-negative integers <= 5 with their corresponding binary representations:\r\n0 : 0\r\n1 : 1\r\n2 : 10\r\n3 : 11\r\n4 : 100\r\n5 : 101\r\nAmong them, only integer 3 disobeys the rule (two consecutive ones) and the other 5 satisfy the rule. \r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n1 <= n <= 10<sup>9</sup>\r\n</p>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"13.6K\", \"totalSubmission\": \"39.5K\", \"totalAcceptedRaw\": 13616, \"totalSubmissionRaw\": 39492, \"acRate\": \"34.5%\"}", "similarQuestions": "[{\"title\": \"House Robber\", \"titleSlug\": \"house-robber\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"House Robber II\", \"titleSlug\": \"house-robber-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Ones and Zeroes\", \"titleSlug\": \"ones-and-zeroes\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "591", "name": "tag-validator", "content": {"questionId": "591", "questionFrontendId": "591", "questionTitle": "Tag Validator", "questionTitleSlug": "tag-validator", "content": "<p>Given a string representing a code snippet, you need to implement a tag validator to parse the code and return whether it is valid. A code snippet is valid if all the following rules hold:<p>\r\n<ol>\r\n<li>The code must be wrapped in a <b>valid closed tag</b>. Otherwise, the code is invalid.</li>\r\n<li>A <b>closed tag</b> (not necessarily valid) has exactly the following format : <code>&lt;TAG_NAME&gt;TAG_CONTENT&lt;/TAG_NAME&gt;</code>. Among them, <code>&lt;TAG_NAME&gt;</code> is the start tag, and <code>&lt;/TAG_NAME&gt;</code> is the end tag. The TAG_NAME in start and end tags should be the same. A closed tag is <b>valid</b> if and only if the TAG_NAME and TAG_CONTENT are valid.</li>\r\n<li>A <b>valid</b> <code>TAG_NAME</code> only contain <b>upper-case letters</b>, and has length in range [1,9]. Otherwise, the <code>TAG_NAME</code> is <b>invalid</b>.</li>\r\n<li>A <b>valid</b> <code>TAG_CONTENT</code> may contain other <b>valid closed tags</b>, <b>cdata</b> and any characters (see note1) <b>EXCEPT</b> unmatched <code>&lt;</code>, unmatched start and end tag, and unmatched or closed tags with invalid TAG_NAME. Otherwise, the <code>TAG_CONTENT</code> is <b>invalid</b>.</li>\r\n<li>A start tag is unmatched if no end tag exists with the same TAG_NAME, and vice versa. However, you also need to consider the issue of unbalanced when tags are nested.</li>\r\n<li>A <code>&lt;</code> is unmatched if you cannot find a subsequent <code>></code>. And when you find a <code>&lt;</code> or <code>&lt;/</code>, all the subsequent characters until the next <code>></code> should be parsed as TAG_NAME  (not necessarily valid).</li>\r\n<li>The cdata has the following format : <code>&lt;![CDATA[CDATA_CONTENT]]&gt;</code>. The range of <code>CDATA_CONTENT</code> is defined as the characters between <code>&lt;![CDATA[</code> and the <b>first subsequent</b> <code>]]></code>. </li>\r\n<li><code>CDATA_CONTENT</code> may contain <b>any characters</b>. The function of cdata is to forbid the validator to parse <code>CDATA_CONTENT</code>, so even it has some characters that can be parsed as tag (no matter valid or invalid), you should treat it as <b>regular characters</b>. </li>\r\n</ol>\r\n\r\n<p><b>Valid Code Examples:</b><br />\r\n<pre>\r\n<b>Input:</b> \"&lt;DIV&gt;This is the first line &lt;![CDATA[&lt;div&gt;]]&gt;&lt;/DIV&gt;\"<br />\r\n<b>Output:</b> True<br />\r\n<b>Explanation:</b> <br>\r\nThe code is wrapped in a closed tag : &lt;DIV> and &lt;/DIV>. <br>\r\nThe TAG_NAME is valid, the TAG_CONTENT consists of some characters and cdata. <br>\r\nAlthough CDATA_CONTENT has unmatched start tag with invalid TAG_NAME, it should be considered as plain text, not parsed as tag.<br>\r\nSo TAG_CONTENT is valid, and then the code is valid. Thus return true.<br />\r\n\r\n<b>Input:</b> \"&lt;DIV>>>  ![cdata[]] &lt;![CDATA[&lt;div>]>]]>]]>>]&lt;/DIV>\"<br />\r\n<b>Output:</b> True<br />\r\n<b>Explanation:</b><br />\r\nWe first separate the code into : start_tag|tag_content|end_tag.<br />\r\nstart_tag -> <b>\"&lt;DIV&gt;\"</b><br />\r\nend_tag -> <b>\"&lt;/DIV>\"</b><br />\r\ntag_content could also be separated into : text1|cdata|text2.<br />\r\ntext1 -> <b>\">>  ![cdata[]] \"</b><br />\r\ncdata -> <b>\"&lt;![CDATA[&lt;div>]>]]>\"</b>, where the CDATA_CONTENT is <b>\"&lt;div>]>\"</b><br />\r\ntext2 -> <b>\"]]>>]\"</b><br />\r\n\r\nThe reason why start_tag is NOT <b>\"&lt;DIV>>>\"</b> is because of the rule 6.\r\nThe reason why cdata is NOT <b>\"&lt;![CDATA[&lt;div>]>]]>]]>\"</b> is because of the rule 7.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Invalid Code Examples:</b><br />\r\n<pre>\r\n<b>Input:</b> \"&lt;A>  &lt;B> &lt;/A>   &lt;/B>\"\r\n<b>Output:</b> False\r\n<b>Explanation:</b> Unbalanced. If \"&lt;A>\" is closed, then \"&lt;B>\" must be unmatched, and vice versa.\r\n\r\n<b>Input:</b> \"&lt;DIV&gt;  div tag is not closed  &lt;DIV&gt;\"\r\n<b>Output:</b> False\r\n\r\n<b>Input:</b> \"&lt;DIV&gt;  unmatched &lt  &lt;/DIV&gt;\"\r\n<b>Output:</b> False\r\n\r\n<b>Input:</b> \"&lt;DIV&gt; closed tags with invalid tag name  &lt;b>123&lt;/b> &lt;/DIV&gt;\"\r\n<b>Output:</b> False\r\n\r\n<b>Input:</b> \"&lt;DIV&gt; unmatched tags with invalid tag name  &lt;/1234567890> and &lt;CDATA[[]]>  &lt;/DIV&gt;\"\r\n<b>Output:</b> False\r\n\r\n<b>Input:</b> \"&lt;DIV&gt;  unmatched start tag &lt;B>  and unmatched end tag &lt;/C>  &lt;/DIV&gt;\"\r\n<b>Output:</b> False\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>For simplicity, you could assume the input code (including the <b>any characters</b> mentioned above) only contain <code>letters</code>, <code>digits</code>, <code>'&lt;'</code>,<code>'>'</code>,<code>'/'</code>,<code>'!'</code>,<code>'['</code>,<code>']'</code> and <code>' '</code>.</li>\r\n</ol>\r\n</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"8.2K\", \"totalSubmission\": \"23.7K\", \"totalAcceptedRaw\": 8203, \"totalSubmissionRaw\": 23671, \"acRate\": \"34.7%\"}", "similarQuestions": "[{\"title\": \"Add Bold Tag in String\", \"titleSlug\": \"add-bold-tag-in-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Stack", "slug": "stack"}]}}, {"id": "588", "name": "design-in-memory-file-system", "content": {"questionId": "588", "questionFrontendId": "588", "questionTitle": "Design In-Memory File System", "questionTitleSlug": "design-in-memory-file-system", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"25.5K\", \"totalSubmission\": \"54.8K\", \"totalAcceptedRaw\": 25467, \"totalSubmissionRaw\": 54787, \"acRate\": \"46.5%\"}", "similarQuestions": "[{\"title\": \"LRU Cache\", \"titleSlug\": \"lru-cache\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"LFU Cache\", \"titleSlug\": \"lfu-cache\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Design Log Storage System\", \"titleSlug\": \"design-log-storage-system\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}]}}, {"id": "587", "name": "erect-the-fence", "content": {"questionId": "587", "questionFrontendId": "587", "questionTitle": "Erect the Fence", "questionTitleSlug": "erect-the-fence", "content": "<p>There are some trees, where each tree is represented by (x,y) coordinate in a two-dimensional garden. Your job is to fence the entire garden using the <b>minimum length</b> of rope as it is expensive. The garden is well fenced only if all the trees are enclosed. Your task is to help find the coordinates of trees which are exactly located on the fence perimeter.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> [[1,1],[2,2],[2,0],[2,4],[3,3],[4,2]]\r\n<b>Output:</b> [[1,1],[2,0],[4,2],[3,3],[2,4]]\r\n<b>Explanation:</b>\r\n<img src=\"https://assets.leetcode.com/uploads/2018/10/12/erect_the_fence_1.png\" style=\"width: 100%; max-width: 320px\" />\r\n</pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> [[1,2],[2,2],[4,2]]\r\n<b>Output:</b> [[1,2],[2,2],[4,2]]\r\n<b>Explanation:</b>\r\n<img src=\"https://assets.leetcode.com/uploads/2018/10/12/erect_the_fence_2.png\" style=\"width: 100%; max-width: 320px\" />\r\nEven you only have trees in a line, you need to use rope to enclose them. \r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li>All trees should be enclosed together. You cannot cut the rope to enclose trees that will separate them in more than one group.</li>\r\n\t<li>All input integers will range from 0 to 100.</li>\r\n\t<li>The garden has at least one tree.</li>\r\n\t<li>All coordinates are distinct.</li>\r\n\t<li>Input points have <b>NO</b> order. No order required for output.</li>\r\n\t<li>input types have been changed on April 15, 2019. Please reset to default code definition to get new method signature.</li>\r\n</ol>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"10.4K\", \"totalSubmission\": \"28.6K\", \"totalAcceptedRaw\": 10366, \"totalSubmissionRaw\": 28594, \"acRate\": \"36.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Geometry", "slug": "geometry"}]}}, {"id": "579", "name": "find-cumulative-salary-of-an-employee", "content": {"questionId": "579", "questionFrontendId": "579", "questionTitle": "Find Cumulative Salary of an Employee", "questionTitleSlug": "find-cumulative-salary-of-an-employee", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"14.8K\", \"totalSubmission\": \"39.2K\", \"totalAcceptedRaw\": 14833, \"totalSubmissionRaw\": 39159, \"acRate\": \"37.9%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "571", "name": "find-median-given-frequency-of-numbers", "content": {"questionId": "571", "questionFrontendId": "571", "questionTitle": "Find Median Given Frequency of Numbers", "questionTitleSlug": "find-median-given-frequency-of-numbers", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"9.9K\", \"totalSubmission\": \"21.8K\", \"totalAcceptedRaw\": 9937, \"totalSubmissionRaw\": 21821, \"acRate\": \"45.5%\"}", "similarQuestions": "[{\"title\": \"Median Employee Salary\", \"titleSlug\": \"median-employee-salary\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "569", "name": "median-employee-salary", "content": {"questionId": "569", "questionFrontendId": "569", "questionTitle": "Median Employee Salary", "questionTitleSlug": "median-employee-salary", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"13.6K\", \"totalSubmission\": \"22.4K\", \"totalAcceptedRaw\": 13597, \"totalSubmissionRaw\": 22419, \"acRate\": \"60.6%\"}", "similarQuestions": "[{\"title\": \"Find Median Given Frequency of Numbers\", \"titleSlug\": \"find-median-given-frequency-of-numbers\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Database", "topicTags": []}}, {"id": "568", "name": "maximum-vacation-days", "content": {"questionId": "568", "questionFrontendId": "568", "questionTitle": "Maximum Vacation Days", "questionTitleSlug": "maximum-vacation-days", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"26.4K\", \"totalSubmission\": \"64K\", \"totalAcceptedRaw\": 26428, \"totalSubmissionRaw\": 63997, \"acRate\": \"41.3%\"}", "similarQuestions": "[{\"title\": \"Cheapest Flights Within K Stops\", \"titleSlug\": \"cheapest-flights-within-k-stops\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "564", "name": "find-the-closest-palindrome", "content": {"questionId": "564", "questionFrontendId": "564", "questionTitle": "Find the Closest Palindrome", "questionTitleSlug": "find-the-closest-palindrome", "content": "<p>Given an integer n, find the closest integer (not including itself), which is a palindrome. </p>\r\n\r\n<p>The 'closest' is defined as absolute difference minimized between two integers.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> \"123\"\r\n<b>Output:</b> \"121\"\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The input <b>n</b> is a positive integer represented by string, whose length will not exceed 18.</li>\r\n<li>If there is a tie, return the smaller one as answer.</li>\r\n</ol>\r\n</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"23.7K\", \"totalSubmission\": \"117.2K\", \"totalAcceptedRaw\": 23660, \"totalSubmissionRaw\": 117199, \"acRate\": \"20.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "552", "name": "student-attendance-record-ii", "content": {"questionId": "552", "questionFrontendId": "552", "questionTitle": "Student Attendance Record II", "questionTitleSlug": "student-attendance-record-ii", "content": "<p>Given a positive integer <b>n</b>, return the number of all possible attendance records with length n, which will be regarded as rewardable. The answer may be very large, return it after mod 10<sup>9</sup> + 7.</p>\r\n\r\n<p>A student attendance record is a string that only contains the following three characters:</p>\r\n\r\n<p>\r\n<ol>\r\n<li><b>'A'</b> : Absent. </li>\r\n<li><b>'L'</b> : Late.</li>\r\n<li> <b>'P'</b> : Present. </li>\r\n</ol>\r\n</p>\r\n\r\n<p>\r\nA record is regarded as rewardable if it doesn't contain <b>more than one 'A' (absent)</b> or <b>more than two continuous 'L' (late)</b>.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> n = 2\r\n<b>Output:</b> 8 \r\n<b>Explanation:</b>\r\nThere are 8 records with length 2 will be regarded as rewardable:\r\n\"PP\" , \"AP\", \"PA\", \"LP\", \"PL\", \"AL\", \"LA\", \"LL\"\r\nOnly \"AA\" won't be regarded as rewardable owing to more than one absent times. \r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\nThe value of <b>n</b> won't exceed 100,000.\r\n</p>\r\n\r\n\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"27.2K\", \"totalSubmission\": \"73.3K\", \"totalAcceptedRaw\": 27186, \"totalSubmissionRaw\": 73297, \"acRate\": \"37.1%\"}", "similarQuestions": "[{\"title\": \"Student Attendance Record I\", \"titleSlug\": \"student-attendance-record-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "546", "name": "remove-boxes", "content": {"questionId": "546", "questionFrontendId": "546", "questionTitle": "Remove Boxes", "questionTitleSlug": "remove-boxes", "content": "<p>Given several boxes with different colors represented by different positive numbers.<br />\nYou may experience several rounds to remove boxes until there is no box left. Each time you can choose some continuous boxes with the same color (composed of k boxes, k &gt;= 1), remove them and get <code>k*k</code> points.<br />\nFind the maximum points you can get.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> boxes = [1,3,2,2,2,3,4,3,1]\n<strong>Output:</strong> 23\n<strong>Explanation:</strong>\n[1, 3, 2, 2, 2, 3, 4, 3, 1] \n----&gt; [1, 3, 3, 4, 3, 1] (3*3=9 points) \n----&gt; [1, 3, 3, 3, 1] (1*1=1 points) \n----&gt; [1, 1] (3*3=9 points) \n----&gt; [] (2*2=4 points)\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= boxes.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= boxes[i]&nbsp;&lt;= 100</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"17.5K\", \"totalSubmission\": \"39.7K\", \"totalAcceptedRaw\": 17470, \"totalSubmissionRaw\": 39660, \"acRate\": \"44.0%\"}", "similarQuestions": "[{\"title\": \"Strange Printer\", \"titleSlug\": \"strange-printer\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "527", "name": "word-abbreviation", "content": {"questionId": "527", "questionFrontendId": "527", "questionTitle": "Word Abbreviation", "questionTitleSlug": "word-abbreviation", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"18.2K\", \"totalSubmission\": \"32.5K\", \"totalAcceptedRaw\": 18174, \"totalSubmissionRaw\": 32528, \"acRate\": \"55.9%\"}", "similarQuestions": "[{\"title\": \"Valid Word Abbreviation\", \"titleSlug\": \"valid-word-abbreviation\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Unique Word Abbreviation\", \"titleSlug\": \"minimum-unique-word-abbreviation\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "517", "name": "super-washing-machines", "content": {"questionId": "517", "questionFrontendId": "517", "questionTitle": "Super Washing Machines", "questionTitleSlug": "super-washing-machines", "content": "<p>You have <b>n</b> super washing machines on a line. Initially, each washing machine has some dresses or is empty. \r\n</p>\r\n\r\n<p>For each <b>move</b>, you could choose <b>any m</b> (1 &le; m &le; n) washing machines, and pass <b>one dress</b> of each washing machine to one of its adjacent washing machines <b> at the same time </b>.  </p>\r\n\r\n<p>Given an integer array representing the number of dresses in each washing machine from left to right on the line, you should find the <b>minimum number of moves</b> to make all the washing machines have the same number of dresses. If it is not possible to do it, return -1.</p>\r\n\r\n<p><b>Example1</b>\r\n<pre>\r\n<b>Input:</b> [1,0,5]\r\n\r\n<b>Output:</b> 3\r\n\r\n<b>Explanation:</b> \r\n1st move:    1     0 <-- 5    =>    1     1     4\r\n2nd move:    1 <-- 1 <-- 4    =>    2     1     3    \r\n3rd move:    2     1 <-- 3    =>    2     2     2   \r\n</pre>\r\n\r\n<p><b>Example2</b>\r\n<pre>\r\n<b>Input:</b> [0,3,0]\r\n\r\n<b>Output:</b> 2\r\n\r\n<b>Explanation:</b> \r\n1st move:    0 <-- 3     0    =>    1     2     0    \r\n2nd move:    1     2 --> 0    =>    1     1     1     \r\n</pre>\r\n\r\n<p><b>Example3</b>\r\n<pre>\r\n<b>Input:</b> [0,2,0]\r\n\r\n<b>Output:</b> -1\r\n\r\n<b>Explanation:</b> \r\nIt's impossible to make all the three washing machines have the same number of dresses. \r\n</pre>\r\n\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The range of n is [1, 10000].</li>\r\n<li>The range of dresses number in a super washing machine is [0, 1e5].</li>\r\n</ol>\r\n</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"18K\", \"totalSubmission\": \"46.7K\", \"totalAcceptedRaw\": 17964, \"totalSubmissionRaw\": 46713, \"acRate\": \"38.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "514", "name": "freedom-trail", "content": {"questionId": "514", "questionFrontendId": "514", "questionTitle": "Freedom Trail", "questionTitleSlug": "freedom-trail", "content": "<p>In the video game Fallout 4, the quest &quot;Road to Freedom&quot; requires players to reach a metal dial called the &quot;Freedom Trail Ring&quot;, and use the dial to spell a specific keyword in order to open the door.</p>\r\n\r\n<p>Given a string <b>ring</b>, which represents the code engraved on the outer ring and another string <b>key</b>, which represents the keyword needs to be spelled. You need to find the <b>minimum</b> number of steps in order to spell all the characters in the keyword.</p>\r\n\r\n<p>Initially, the first character of the <b>ring</b> is aligned at 12:00 direction. You need to spell all the characters in the string <b>key</b> one by one by rotating the ring clockwise or anticlockwise to make each character of the string <b>key</b> aligned at 12:00 direction and then by pressing the center button.</p>\r\n\r\n<p>At the stage of rotating the ring to spell the key character <b>key[i]</b>:</p>\r\n\r\n<ol>\r\n\t<li>You can rotate the <b>ring</b> clockwise or anticlockwise <b>one place</b>, which counts as 1 step. The final purpose of the rotation is to align one of the string <b>ring&#39;s</b> characters at the 12:00 direction, where this character must equal to the character <b>key[i]</b>.</li>\r\n\t<li>If the character <b>key[i]</b> has been aligned at the 12:00 direction, you need to press the center button to spell, which also counts as 1 step. After the pressing, you could begin to spell the next character in the key (next stage), otherwise, you&#39;ve finished all the spelling.</li>\r\n</ol>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<center><img src=\"https://assets.leetcode.com/uploads/2018/10/22/ring.jpg\" style=\"width: 26%;\" /></center>\r\n&nbsp;\r\n\r\n<pre>\r\n<b>Input:</b> ring = &quot;godding&quot;, key = &quot;gd&quot;\r\n<b>Output:</b> 4\r\n<b>Explanation:</b>\r\nFor the first key character &#39;g&#39;, since it is already in place, we just need 1 step to spell this character. \r\nFor the second key character &#39;d&#39;, we need to rotate the ring &quot;godding&quot; anticlockwise by two steps to make it become &quot;ddinggo&quot;.\r\nAlso, we need 1 more step for spelling.\r\nSo the final output is 4.\r\n</pre>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>Length of both ring and <b>key</b> will be in range 1 to 100.</li>\r\n\t<li>There are only lowercase letters in both strings and might be some duplcate characters in both strings.</li>\r\n\t<li>It&#39;s guaranteed that string <b>key</b> could always be spelled by rotating the string <b>ring</b>.</li>\r\n</ol>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"21.3K\", \"totalSubmission\": \"47.5K\", \"totalAcceptedRaw\": 21271, \"totalSubmissionRaw\": 47503, \"acRate\": \"44.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Divide and Conquer", "slug": "divide-and-conquer"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "502", "name": "ipo", "content": {"questionId": "502", "questionFrontendId": "502", "questionTitle": "IPO", "questionTitleSlug": "ipo", "content": "<p>\r\nSuppose LeetCode will start its IPO soon. In order to sell a good price of its shares to Venture Capital, LeetCode would like to work on some projects to increase its capital before the IPO. Since it has limited resources, it can only finish at most <b>k</b> distinct projects before the IPO. Help LeetCode design the best way to maximize its total capital after finishing at most <b>k</b> distinct projects. \r\n</p>\r\n\r\n<p>\r\nYou are given several projects. For each project <b>i</b>, it has a pure profit <b>P<sub>i</sub></b> and a minimum capital of <b>C<sub>i</sub></b> is needed to start the corresponding project. Initially, you have <b>W</b> capital. When you finish a project, you will obtain its pure profit and the profit will be added to your total capital.\r\n</p>\r\n\r\n<p>\r\nTo sum up, pick a list of at most <b>k</b> distinct projects from given projects to maximize your final capital, and output your final maximized capital.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> k=2, W=0, Profits=[1,2,3], Capital=[0,1,1].\r\n\r\n<b>Output:</b> 4\r\n\r\n<b>Explanation:</b> Since your initial capital is 0, you can only start the project indexed 0.\r\n             After finishing it you will obtain profit 1 and your capital becomes 1.\r\n             With capital 1, you can either start the project indexed 1 or the project indexed 2.\r\n             Since you can choose at most 2 projects, you need to finish the project indexed 2 to get the maximum capital.\r\n             Therefore, output the final maximized capital, which is 0 + 1 + 3 = 4.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>You may assume all numbers in the input are non-negative integers.</li>\r\n<li>The length of Profits array and Capital array will not exceed 50,000.</li>\r\n<li>The answer is guaranteed to fit in a 32-bit signed integer.</li>\r\n</ol>\r\n</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"20.5K\", \"totalSubmission\": \"50K\", \"totalAcceptedRaw\": 20548, \"totalSubmissionRaw\": 49993, \"acRate\": \"41.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Heap", "slug": "heap"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "499", "name": "the-maze-iii", "content": {"questionId": "499", "questionFrontendId": "499", "questionTitle": "The Maze III", "questionTitleSlug": "the-maze-iii", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"16.3K\", \"totalSubmission\": \"38.8K\", \"totalAcceptedRaw\": 16329, \"totalSubmissionRaw\": 38830, \"acRate\": \"42.1%\"}", "similarQuestions": "[{\"title\": \"The Maze\", \"titleSlug\": \"the-maze\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"The Maze II\", \"titleSlug\": \"the-maze-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "493", "name": "reverse-pairs", "content": {"questionId": "493", "questionFrontendId": "493", "questionTitle": "Reverse Pairs", "questionTitleSlug": "reverse-pairs", "content": "<p>Given an array <code>nums</code>, we call <code>(i, j)</code> an <b><i>important reverse pair</i></b> if <code>i &lt; j</code> and <code>nums[i] &gt; 2*nums[j]</code>.</p>\r\n\r\n<p>You need to return the number of important reverse pairs in the given array.</p>\r\n\r\n<p><b>Example1:</b>\r\n<pre>\r\n<b>Input</b>: [1,3,2,3,1]\r\n<b>Output</b>: 2\r\n</pre></p>\r\n\r\n<p><b>Example2:</b>\r\n<pre>\r\n<b>Input</b>: [2,4,3,5,1]\r\n<b>Output</b>: 3\r\n</pre></p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The length of the given array will not exceed <code>50,000</code>.</li>\r\n<li>All the numbers in the input array are in the range of 32-bit integer.</li>\r\n</ol>\r\n</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"46.9K\", \"totalSubmission\": \"178.1K\", \"totalAcceptedRaw\": 46895, \"totalSubmissionRaw\": 178139, \"acRate\": \"26.3%\"}", "similarQuestions": "[{\"title\": \"Count of Smaller Numbers After Self\", \"titleSlug\": \"count-of-smaller-numbers-after-self\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count of Range Sum\", \"titleSlug\": \"count-of-range-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Divide and Conquer", "slug": "divide-and-conquer"}, {"name": "Sort", "slug": "sort"}, {"name": "Binary Indexed Tree", "slug": "binary-indexed-tree"}, {"name": "Segment Tree", "slug": "segment-tree"}]}}, {"id": "1643", "name": "kth-smallest-instructions", "content": {"questionId": "489", "questionFrontendId": "1643", "questionTitle": "Kth Smallest Instructions", "questionTitleSlug": "kth-smallest-instructions", "content": "<p>Bob is standing at cell <code>(0, 0)</code>, and he wants to reach <code>destination</code>: <code>(row, column)</code>. He can only travel <strong>right</strong> and <strong>down</strong>. You are going to help Bob by providing <strong>instructions</strong> for him to reach <code>destination</code>.</p>\n\n<p>The <strong>instructions</strong> are represented as a string, where each character is either:</p>\n\n<ul>\n\t<li><code>&#39;H&#39;</code>, meaning move horizontally (go <strong>right</strong>), or</li>\n\t<li><code>&#39;V&#39;</code>, meaning move vertically (go <strong>down</strong>).</li>\n</ul>\n\n<p>Multiple <strong>instructions</strong> will lead Bob to <code>destination</code>. For example, if <code>destination</code> is <code>(2, 3)</code>, both <code>&quot;HHHVV&quot;</code> and <code>&quot;HVHVH&quot;</code> are valid <strong>instructions</strong>.</p>\n\n<ul>\n</ul>\n\n<p>However, Bob is very picky. Bob has a lucky number <code>k</code>, and he wants the <code>k<sup>th</sup></code> <strong>lexicographically smallest instructions</strong> that will lead him to <code>destination</code>. <code>k</code> is <strong>1-indexed</strong>.</p>\n\n<p>Given an integer array <code>destination</code> and an integer <code>k</code>, return <em>the </em><code>k<sup>th</sup></code><em> <b>lexicographically smallest instructions</b>&nbsp;that will take Bob to </em><code>destination</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/12/ex1.png\" style=\"width: 300px; height: 229px;\" /></p>\n\n<pre>\n<strong>Input:</strong> destination = [2,3], k = 1\n<strong>Output:</strong> &quot;HHHVV&quot;\n<strong>Explanation:</strong> All the instructions that reach (2, 3) in lexicographic order are as follows:\n[&quot;HHHVV&quot;, &quot;HHVHV&quot;, &quot;HHVVH&quot;, &quot;HVHHV&quot;, &quot;HVHVH&quot;, &quot;HVVHH&quot;, &quot;VHHHV&quot;, &quot;VHHVH&quot;, &quot;VHVHH&quot;, &quot;VVHHH&quot;].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/12/ex2.png\" style=\"width: 300px; height: 229px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> destination = [2,3], k = 2\n<strong>Output:</strong> &quot;HHVHV&quot;\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/12/ex3.png\" style=\"width: 300px; height: 229px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> destination = [2,3], k = 3\n<strong>Output:</strong> &quot;HHVVH&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>destination.length == 2</code></li>\n\t<li><code>1 &lt;= row, column &lt;= 15</code></li>\n\t<li><code>1 &lt;= k &lt;= nCr(row + column, row)</code>, where <code>nCr(a, b)</code> denotes <code>a</code> choose <code>b</code>\u200b\u200b\u200b\u200b\u200b.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"3.9K\", \"totalSubmission\": \"9.2K\", \"totalAcceptedRaw\": 3916, \"totalSubmissionRaw\": 9201, \"acRate\": \"42.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "488", "name": "zuma-game", "content": {"questionId": "488", "questionFrontendId": "488", "questionTitle": "Zuma Game", "questionTitleSlug": "zuma-game", "content": "<p>Think about Zuma Game. You have a row of balls on the table, colored red(R), yellow(Y), blue(B), green(G), and white(W). You also have several balls in your hand.</p>\n\n<p>Each time, you may choose a ball in your hand, and insert it into the row (including the leftmost place and rightmost place). Then, if there is a group of 3 or more balls in the same color touching, remove these balls. Keep doing this until no more balls can be removed.</p>\n\n<p>Find the minimal balls you have to insert to remove all the balls on the table. If you cannot remove all the balls, output -1.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> board = &quot;WRRBBW&quot;, hand = &quot;RB&quot;\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> WRRBBW -&gt; WRR[R]BBW -&gt; WBBW -&gt; WBB[B]W -&gt; WW\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> board = &quot;WWRRBBWW&quot;, hand = &quot;WRBRW&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> WWRRBBWW -&gt; WWRR[R]BBWW -&gt; WWBBWW -&gt; WWBB[B]WW -&gt; WWWW -&gt; empty\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> board = &quot;G&quot;, hand = &quot;GGGGG&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> G -&gt; G[G] -&gt; GG[G] -&gt; empty \n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> board = &quot;RBYYBBRRB&quot;, hand = &quot;YRBGB&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> RBYYBBRRB -&gt; RBYY[Y]BBRRB -&gt; RBBBRRB -&gt; RRRB -&gt; B -&gt; B[B] -&gt; BB[B] -&gt; empty \n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>You may assume that the initial row of balls on the table won&rsquo;t have any 3 or more consecutive balls with the same color.</li>\n\t<li><code>1 &lt;= board.length &lt;= 16</code></li>\n\t<li><code>1 &lt;= hand.length &lt;= 5</code></li>\n\t<li>Both input strings will be non-empty and only contain characters &#39;R&#39;,&#39;Y&#39;,&#39;B&#39;,&#39;G&#39;,&#39;W&#39;.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"15K\", \"totalSubmission\": \"38.8K\", \"totalAcceptedRaw\": 15038, \"totalSubmissionRaw\": 38773, \"acRate\": \"38.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "483", "name": "smallest-good-base", "content": {"questionId": "483", "questionFrontendId": "483", "questionTitle": "Smallest Good Base", "questionTitleSlug": "smallest-good-base", "content": "<p>For an integer n, we call k&gt;=2 a <i><b>good base</b></i> of n, if all digits of n base k are 1.</p>\r\n\r\n<p>Now given a string representing n, you should return the smallest good base of n in string format.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> &quot;13&quot;\r\n<b>Output:</b> &quot;3&quot;\r\n<b>Explanation:</b> 13 base 3 is 111.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> &quot;4681&quot;\r\n<b>Output:</b> &quot;8&quot;\r\n<b>Explanation:</b> 4681 base 8 is 11111.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 3:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> &quot;1000000000000000000&quot;\r\n<b>Output:</b> &quot;999999999999999999&quot;\r\n<b>Explanation:</b> 1000000000000000000 base 999999999999999999 is 11.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>The range of n is [3, 10^18].</li>\r\n\t<li>The string representing n is always valid and will not have leading zeros.</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"13.7K\", \"totalSubmission\": \"37.9K\", \"totalAcceptedRaw\": 13661, \"totalSubmissionRaw\": 37859, \"acRate\": \"36.1%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "480", "name": "sliding-window-median", "content": {"questionId": "480", "questionFrontendId": "480", "questionTitle": "Sliding Window Median", "questionTitleSlug": "sliding-window-median", "content": "<p>Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value.</p>\nExamples:\n\n<p><code>[2,3,4]</code> , the median is <code>3</code></p>\n\n<p><code>[2,3]</code>, the median is <code>(2 + 3) / 2 = 2.5</code></p>\n\n<p>Given an array <i>nums</i>, there is a sliding window of size <i>k</i> which is moving from the very left of the array to the very right. You can only see the <i>k</i> numbers in the window. Each time the sliding window moves right by one position. Your job is to output the median array for each window in the original array.</p>\n\n<p>For example,<br />\nGiven <i>nums</i> = <code>[1,3,-1,-3,5,3,6,7]</code>, and <i>k</i> = 3.</p>\n\n<pre>\nWindow position                Median\n---------------               -----\n[1  3  -1] -3  5  3  6  7       1\n 1 [3  -1  -3] 5  3  6  7       -1\n 1  3 [-1  -3  5] 3  6  7       -1\n 1  3  -1 [-3  5  3] 6  7       3\n 1  3  -1  -3 [5  3  6] 7       5\n 1  3  -1  -3  5 [3  6  7]      6\n</pre>\n\n<p>Therefore, return the median sliding window as <code>[1,-1,-1,3,5,6]</code>.</p>\n\n<p><b>Note: </b><br />\nYou may assume <code>k</code> is always valid, ie: <code>k</code> is always smaller than input array&#39;s size for non-empty array.<br />\nAnswers within&nbsp;<code>10^-5</code>&nbsp;of the actual value will be accepted as correct.</p>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"65.2K\", \"totalSubmission\": \"170.2K\", \"totalAcceptedRaw\": 65232, \"totalSubmissionRaw\": 170232, \"acRate\": \"38.3%\"}", "similarQuestions": "[{\"title\": \"Find Median from Data Stream\", \"titleSlug\": \"find-median-from-data-stream\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "479", "name": "largest-palindrome-product", "content": {"questionId": "479", "questionFrontendId": "479", "questionTitle": "Largest Palindrome Product", "questionTitleSlug": "largest-palindrome-product", "content": "<p>Find the largest palindrome made from the product of two n-digit numbers.</p>\r\n\r\n<p>Since the result could be very large, you should return the largest palindrome mod 1337.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<p>Input: 2</p>\r\n\r\n<p>Output: 987</p>\r\n\r\n<p>Explanation: 99 x 91 = 9009, 9009 % 1337 = 987</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<p>The range of n is [1,8].</p>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"17.6K\", \"totalSubmission\": \"59.8K\", \"totalAcceptedRaw\": 17573, \"totalSubmissionRaw\": 59769, \"acRate\": \"29.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "472", "name": "concatenated-words", "content": {"questionId": "472", "questionFrontendId": "472", "questionTitle": "Concatenated Words", "questionTitleSlug": "concatenated-words", "content": "<p>Given a list of words (<strong>without duplicates</strong>), please write a program that returns all concatenated words in the given list of words.</p>\n\n<p>A concatenated word is defined as a string that is comprised entirely of at least two shorter words in the given array.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;cat&quot;,&quot;cats&quot;,&quot;catsdogcats&quot;,&quot;dog&quot;,&quot;dogcatsdog&quot;,&quot;hippopotamuses&quot;,&quot;rat&quot;,&quot;ratcatdogcat&quot;]\n<strong>Output:</strong> [&quot;catsdogcats&quot;,&quot;dogcatsdog&quot;,&quot;ratcatdogcat&quot;]\n<strong>Explanation:</strong> &quot;catsdogcats&quot; can be concatenated by &quot;cats&quot;, &quot;dog&quot; and &quot;cats&quot;; \n&quot;dogcatsdog&quot; can be concatenated by &quot;dog&quot;, &quot;cats&quot; and &quot;dog&quot;; \n&quot;ratcatdogcat&quot; can be concatenated by &quot;rat&quot;, &quot;cat&quot;, &quot;dog&quot; and &quot;cat&quot;.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;cat&quot;,&quot;dog&quot;,&quot;catdog&quot;]\n<strong>Output:</strong> [&quot;catdog&quot;]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= words[i].length &lt;= 1000</code></li>\n\t<li><code>words[i]</code> consists of only lowercase English letters.</li>\n\t<li><code>0 &lt;= sum(words[i].length) &lt;= 6 * 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"80.9K\", \"totalSubmission\": \"179.8K\", \"totalAcceptedRaw\": 80900, \"totalSubmissionRaw\": 179830, \"acRate\": \"45.0%\"}", "similarQuestions": "[{\"title\": \"Word Break II\", \"titleSlug\": \"word-break-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Trie", "slug": "trie"}]}}, {"id": "471", "name": "encode-string-with-shortest-length", "content": {"questionId": "471", "questionFrontendId": "471", "questionTitle": "Encode String with Shortest Length", "questionTitleSlug": "encode-string-with-shortest-length", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"19.8K\", \"totalSubmission\": \"40.6K\", \"totalAcceptedRaw\": 19806, \"totalSubmissionRaw\": 40566, \"acRate\": \"48.8%\"}", "similarQuestions": "[{\"title\": \"Decode String\", \"titleSlug\": \"decode-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Atoms\", \"titleSlug\": \"number-of-atoms\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "466", "name": "count-the-repetitions", "content": {"questionId": "466", "questionFrontendId": "466", "questionTitle": "Count The Repetitions", "questionTitleSlug": "count-the-repetitions", "content": "<p>Define <code>S = [s,n]</code> as the string S which consists of n connected strings s. For example, <code>[\"abc\", 3]</code> =\"abcabcabc\". </p>\r\n<p>On the other hand, we define that string s1 can be obtained from string s2 if we can remove some characters from s2 such that it becomes s1. For example, \u201cabc\u201d  can be obtained from \u201cabdbec\u201d based on our definition, but it can not be obtained from \u201cacbbe\u201d.</p>\r\n<p>You are given two non-empty strings s1 and s2 (each at most 100 characters long) and two integers 0 &le; n1 &le; 10<sup>6</sup> and 1 &le; n2 &le; 10<sup>6</sup>. Now consider the strings S1 and S2, where <code>S1=[s1,n1]</code> and <code>S2=[s2,n2]</code>. Find the maximum integer M such that <code>[S2,M]</code> can be obtained from <code>S1</code>.</p>\r\n\r\n<p><b>Example:</b>\r\n<pre>\r\nInput:\r\ns1=\"acb\", n1=4\r\ns2=\"ab\", n2=2\r\n\r\nReturn:\r\n2\r\n</pre>\r\n</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"11.7K\", \"totalSubmission\": \"41K\", \"totalAcceptedRaw\": 11692, \"totalSubmissionRaw\": 40988, \"acRate\": \"28.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "465", "name": "optimal-account-balancing", "content": {"questionId": "465", "questionFrontendId": "465", "questionTitle": "Optimal Account Balancing", "questionTitleSlug": "optimal-account-balancing", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"41K\", \"totalSubmission\": \"85.3K\", \"totalAcceptedRaw\": 40959, \"totalSubmissionRaw\": 85306, \"acRate\": \"48.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "460", "name": "lfu-cache", "content": {"questionId": "460", "questionFrontendId": "460", "questionTitle": "LFU Cache", "questionTitleSlug": "lfu-cache", "content": "<p>Design and implement a data structure for <a href=\"https://en.wikipedia.org/wiki/Least_frequently_used\" target=\"_blank\">Least Frequently Used (LFU)</a> cache.</p>\n\n<p>Implement the&nbsp;<code>LFUCache</code> class:</p>\n\n<ul>\n\t<li><code>LFUCache(int capacity)</code> Initializes the object with the <code>capacity</code> of the data structure.</li>\n\t<li><code>int get(int key)</code> Gets the value&nbsp;of the <code>key</code> if the <code>key</code> exists in the cache.&nbsp;Otherwise, returns <code>-1</code>.</li>\n\t<li><code>void put(int key, int value)</code> Sets or inserts the value if the <code>key</code> is not already present. When the cache reaches its <code>capacity</code>, it should invalidate the least frequently used item before inserting a new item. For this problem, when there is a tie (i.e., two or more keys with the same frequency), <strong>the least recently</strong> used <code>key</code> would be evicted.</li>\n</ul>\n\n<p><strong>Notice&nbsp;that</strong> the number of times an item is used is the number of calls to the&nbsp;<code>get</code>&nbsp;and&nbsp;<code>put</code>&nbsp;functions for that item since it was inserted. This number is set to zero when the item is removed.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;LFUCache&quot;, &quot;put&quot;, &quot;put&quot;, &quot;get&quot;, &quot;put&quot;, &quot;get&quot;, &quot;get&quot;, &quot;put&quot;, &quot;get&quot;, &quot;get&quot;, &quot;get&quot;]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [3], [4, 4], [1], [3], [4]]\n<strong>Output</strong>\n[null, null, null, 1, null, -1, 3, null, -1, 3, 4]\n\n<strong>Explanation</strong>\nLFUCache lfu = new LFUCache(2);\nlfu.put(1, 1);\nlfu.put(2, 2);\nlfu.get(1);      // return 1\nlfu.put(3, 3);   // evicts key 2\nlfu.get(2);      // return -1 (not found)\nlfu.get(3);      // return 3\nlfu.put(4, 4);   // evicts key 1.\nlfu.get(1);      // return -1 (not found)\nlfu.get(3);      // return 3\nlfu.get(4);      // return 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;=&nbsp;capacity, key, value &lt;= 10<sup>4</sup></code></li>\n\t<li>At most <code>10<sup>5</sup></code> calls will be made to <code>get</code> and <code>put</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you do both operations in <code>O(1)</code> time complexity?<span style=\"display: none;\">&nbsp;</span>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"90.1K\", \"totalSubmission\": \"254.4K\", \"totalAcceptedRaw\": 90132, \"totalSubmissionRaw\": 254394, \"acRate\": \"35.4%\"}", "similarQuestions": "[{\"title\": \"LRU Cache\", \"titleSlug\": \"lru-cache\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Design In-Memory File System\", \"titleSlug\": \"design-in-memory-file-system\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}]}}, {"id": "458", "name": "poor-pigs", "content": {"questionId": "458", "questionFrontendId": "458", "questionTitle": "Poor Pigs", "questionTitleSlug": "poor-pigs", "content": "<p>There are <code>buckets</code> buckets of liquid, where <strong>exactly one</strong> of the buckets is poisonous. To figure out which one is poisonous, you feed some number of (poor) pigs the liquid to see whether they will die or not. Unfortunately, you only have <code>minutesToTest</code> minutes to determine which bucket is poisonous.</p>\n\n<p>You can feed the pigs according to these steps:</p>\n\n<ol>\n\t<li>Choose some live pigs to feed.</li>\n\t<li>For each pig, choose which buckets to feed it. The pig will consume all the chosen buckets simultaneously and will take no time.</li>\n\t<li>Wait for <code>minutesToDie</code> minutes. You may <strong>not</strong> feed any other pigs during this time.</li>\n\t<li>After <code>minutesToDie</code> minutes have passed, any pigs that have been fed the poisonous bucket will die, and all others will survive.</li>\n\t<li>Repeat this process until you run out of time.</li>\n</ol>\n\n<p>Given <code>buckets</code>, <code>minutesToDie</code>, and <code>minutesToTest</code>, return <em>the <strong>minimum</strong> number of pigs needed to figure out which bucket is poisonous within the allotted time</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> buckets = 1000, minutesToDie = 15, minutesToTest = 60\n<strong>Output:</strong> 5\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> buckets = 4, minutesToDie = 15, minutesToTest = 15\n<strong>Output:</strong> 2\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> buckets = 4, minutesToDie = 15, minutesToTest = 30\n<strong>Output:</strong> 2\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= buckets &lt;= 1000</code></li>\n\t<li><code>1 &lt;=&nbsp;minutesToDie &lt;=&nbsp;minutesToTest &lt;= 100</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"30.3K\", \"totalSubmission\": \"55.7K\", \"totalAcceptedRaw\": 30294, \"totalSubmissionRaw\": 55702, \"acRate\": \"54.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "446", "name": "arithmetic-slices-ii-subsequence", "content": {"questionId": "446", "questionFrontendId": "446", "questionTitle": "Arithmetic Slices II - Subsequence", "questionTitleSlug": "arithmetic-slices-ii-subsequence", "content": "<p>A sequence of numbers is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.</p>\r\n\r\n<p>For example, these are arithmetic sequences:</p>\r\n\r\n<pre>\r\n1, 3, 5, 7, 9\r\n7, 7, 7, 7\r\n3, -1, -5, -9</pre>\r\n\r\n<p>The following sequence is not arithmetic.</p>\r\n\r\n<pre>\r\n1, 1, 2, 5, 7</pre>\r\n&nbsp;\r\n\r\n<p>A zero-indexed array A consisting of N numbers is given. A <b>subsequence</b> slice of that array is any sequence of integers (P<sub>0</sub>, P<sub>1</sub>, ..., P<sub>k</sub>) such that 0 &le; P<sub>0</sub> &lt; P<sub>1</sub> &lt; ... &lt; P<sub>k</sub> &lt; N.</p>\r\n\r\n<p>A <b>subsequence</b> slice (P<sub>0</sub>, P<sub>1</sub>, ..., P<sub>k</sub>) of array A is called arithmetic if the sequence A[P<sub>0</sub>], A[P<sub>1</sub>], ..., A[P<sub>k-1</sub>], A[P<sub>k</sub>] is arithmetic. In particular, this means that k &ge; 2.</p>\r\n\r\n<p>The function should return the number of arithmetic subsequence slices in the array A.</p>\r\n\r\n<p>The input contains N integers. Every integer is in the range of -2<sup>31</sup> and 2<sup>31</sup>-1 and 0 &le; N &le; 1000. The output is guaranteed to be less than 2<sup>31</sup>-1.</p>\r\n&nbsp;\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> [2, 4, 6, 8, 10]\r\n\r\n<b>Output:</b> 7\r\n\r\n<b>Explanation:</b>\r\nAll arithmetic subsequence slices are:\r\n[2,4,6]\r\n[4,6,8]\r\n[6,8,10]\r\n[2,4,6,8]\r\n[4,6,8,10]\r\n[2,4,6,8,10]\r\n[2,6,10]\r\n</pre>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"23.4K\", \"totalSubmission\": \"70.7K\", \"totalAcceptedRaw\": 23447, \"totalSubmissionRaw\": 70693, \"acRate\": \"33.2%\"}", "similarQuestions": "[{\"title\": \"Arithmetic Slices\", \"titleSlug\": \"arithmetic-slices\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "440", "name": "k-th-smallest-in-lexicographical-order", "content": {"questionId": "440", "questionFrontendId": "440", "questionTitle": "K-th Smallest in Lexicographical Order", "questionTitleSlug": "k-th-smallest-in-lexicographical-order", "content": "<p>Given integers <code>n</code> and <code>k</code>, find the lexicographically k-th smallest integer in the range from <code>1</code> to <code>n</code>.</p>\r\n\r\n<p>Note: 1 &le; k &le; n &le; 10<sup>9</sup>.</p>\r\n\r\n<p><b>Example:</b>\r\n<pre>\r\n<b>Input:</b>\r\nn: 13   k: 2\r\n\r\n<b>Output:</b>\r\n10\r\n\r\n<b>Explanation:</b>\r\nThe lexicographical order is [1, 10, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9], so the second smallest number is 10.\r\n</pre>\r\n</p>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"14.1K\", \"totalSubmission\": \"47.6K\", \"totalAcceptedRaw\": 14076, \"totalSubmissionRaw\": 47650, \"acRate\": \"29.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "432", "name": "all-oone-data-structure", "content": {"questionId": "432", "questionFrontendId": "432", "questionTitle": "All O`one Data Structure", "questionTitleSlug": "all-oone-data-structure", "content": "<p>Implement a data structure supporting the following operations:</p>\r\n\r\n<p>\r\n<ol>\r\n<li>Inc(Key) - Inserts a new key <Key> with value 1. Or increments an existing key by 1. Key is guaranteed to be a <b>non-empty</b> string.</li>\r\n<li>Dec(Key) - If Key's value is 1, remove it from the data structure. Otherwise decrements an existing key by 1. If the key does not exist, this function does nothing. Key is guaranteed to be a <b>non-empty</b> string.</li>\r\n<li>GetMaxKey() - Returns one of the keys with maximal value. If no element exists, return an empty string <code>\"\"</code>.</li>\r\n<li>GetMinKey() - Returns one of the keys with minimal value. If no element exists, return an empty string <code>\"\"</code>.</li>\r\n</ol>\r\n</p>\r\n\r\n<p>\r\nChallenge: Perform all these in O(1) time complexity.\r\n</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"36.7K\", \"totalSubmission\": \"111K\", \"totalAcceptedRaw\": 36657, \"totalSubmissionRaw\": 111029, \"acRate\": \"33.0%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Design", "slug": "design"}]}}, {"id": "425", "name": "word-squares", "content": {"questionId": "425", "questionFrontendId": "425", "questionTitle": "Word Squares", "questionTitleSlug": "word-squares", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"44.6K\", \"totalSubmission\": \"89.9K\", \"totalAcceptedRaw\": 44650, \"totalSubmissionRaw\": 89876, \"acRate\": \"49.7%\"}", "similarQuestions": "[{\"title\": \"Valid Word Square\", \"titleSlug\": \"valid-word-square\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}, {"name": "Trie", "slug": "trie"}]}}, {"id": "420", "name": "strong-password-checker", "content": {"questionId": "420", "questionFrontendId": "420", "questionTitle": "Strong Password Checker", "questionTitleSlug": "strong-password-checker", "content": "<p>A password is considered strong if the below conditions are all met:</p>\n\n<ul>\n\t<li>It has at least <code>6</code> characters and at most <code>20</code> characters.</li>\n\t<li>It contains at least <strong>one lowercase</strong> letter, at least <strong>one uppercase</strong> letter, and at least <strong>one digit</strong>.</li>\n\t<li>It does&nbsp;not contain three repeating characters in a row (i.e.,&nbsp;<code>&quot;...aaa...&quot;</code> is weak, but <code>&quot;...aa...a...&quot;</code> is strong, assuming other conditions are met).</li>\n</ul>\n\n<p>Given a string <code>password</code>, return <em>the minimum number of steps required to make <code>password</code> strong. if <code>password</code> is already strong, return <code>0</code>.</em></p>\n\n<p>In one step, you can:</p>\n\n<ul>\n\t<li>Insert one character to <code>password</code>,</li>\n\t<li>Delete one character from <code>password</code>, or</li>\n\t<li>Replace&nbsp;one character of <code>password</code> with another character.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> password = \"a\"\n<strong>Output:</strong> 5\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> password = \"aA1\"\n<strong>Output:</strong> 3\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> password = \"1337C0d3\"\n<strong>Output:</strong> 0\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= password.length &lt;= 50</code></li>\n\t<li><code>password</code> consists of letters, digits, dot&nbsp;<code>&#39;.&#39;</code> or exclamation mark <code>&#39;!&#39;</code>.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"14.6K\", \"totalSubmission\": \"105.9K\", \"totalAcceptedRaw\": 14564, \"totalSubmissionRaw\": 105862, \"acRate\": \"13.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": []}}, {"id": "411", "name": "minimum-unique-word-abbreviation", "content": {"questionId": "411", "questionFrontendId": "411", "questionTitle": "Minimum Unique Word Abbreviation", "questionTitleSlug": "minimum-unique-word-abbreviation", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"11.7K\", \"totalSubmission\": \"31.8K\", \"totalAcceptedRaw\": 11742, \"totalSubmissionRaw\": 31829, \"acRate\": \"36.9%\"}", "similarQuestions": "[{\"title\": \"Generalized Abbreviation\", \"titleSlug\": \"generalized-abbreviation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Valid Word Abbreviation\", \"titleSlug\": \"valid-word-abbreviation\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Word Abbreviation\", \"titleSlug\": \"word-abbreviation\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}, {"name": "Bit Manipulation", "slug": "bit-manipulation"}]}}, {"id": "410", "name": "split-array-largest-sum", "content": {"questionId": "410", "questionFrontendId": "410", "questionTitle": "Split Array Largest Sum", "questionTitleSlug": "split-array-largest-sum", "content": "<p>Given an array <code>nums</code> which consists of non-negative integers and an integer <code>m</code>, you can split the array into <code>m</code> non-empty continuous subarrays.</p>\n\n<p>Write an algorithm to minimize the largest sum among these <code>m</code> subarrays.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [7,2,5,10,8], m = 2\n<strong>Output:</strong> 18\n<strong>Explanation:</strong>\nThere are four ways to split nums into two subarrays.\nThe best way is to split it into [7,2,5] and [10,8],\nwhere the largest sum among the two subarrays is only 18.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,5], m = 2\n<strong>Output:</strong> 9\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,4,4], m = 3\n<strong>Output:</strong> 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>6</sup></code></li>\n\t<li><code>1 &lt;= m &lt;= min(50, nums.length)</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"108.4K\", \"totalSubmission\": \"236.2K\", \"totalAcceptedRaw\": 108415, \"totalSubmissionRaw\": 236229, \"acRate\": \"45.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "407", "name": "trapping-rain-water-ii", "content": {"questionId": "407", "questionFrontendId": "407", "questionTitle": "Trapping Rain Water II", "questionTitleSlug": "trapping-rain-water-ii", "content": "<p>Given an <code>m x n</code> matrix of positive integers representing the height of each unit cell in a 2D elevation map, compute the volume of water it is able to trap after raining.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\nGiven the following 3x6 height map:\n[\n  [1,4,3,1,3,2],\n  [3,2,1,3,2,4],\n  [2,3,3,2,3,1]\n]\n\nReturn 4.\n</pre>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/13/rainwater_empty.png\" style=\"width: 100%; max-width: 500px;\" /></p>\n\n<p>The above image represents the elevation map <code>[[1,4,3,1,3,2],[3,2,1,3,2,4],[2,3,3,2,3,1]]</code> before the rain.</p>\n\n<p>&nbsp;</p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/13/rainwater_fill.png\" style=\"width: 100%; max-width: 500px;\" /></p>\n\n<p>After the rain, water is trapped between the blocks. The total volume of water trapped is 4.</p>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= m, n &lt;= 110</code></li>\n\t<li><code>0 &lt;= heightMap[i][j] &lt;= 20000</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"47.9K\", \"totalSubmission\": \"109.8K\", \"totalAcceptedRaw\": 47900, \"totalSubmissionRaw\": 109809, \"acRate\": \"43.6%\"}", "similarQuestions": "[{\"title\": \"Trapping Rain Water\", \"titleSlug\": \"trapping-rain-water\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Heap", "slug": "heap"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "403", "name": "frog-jump", "content": {"questionId": "403", "questionFrontendId": "403", "questionTitle": "Frog Jump", "questionTitleSlug": "frog-jump", "content": "<p>A frog is crossing a river. The river is divided into x units and at each unit there may or may not exist a stone. The frog can jump on a stone, but it must not jump into the water.</p>\r\n\r\n<p>Given a list of stones' positions (in units) in sorted ascending order, determine if the frog is able to cross the river by landing on the last stone. Initially, the frog is on the first stone and assume the first jump must be 1 unit.\r\n</p>\r\n\r\n<p>If the frog's last jump was <i>k</i> units, then its next jump must be either <i>k</i> - 1, <i>k</i>, or <i>k</i> + 1 units. Note that the frog can only jump in the forward direction.</p>\r\n\r\n<p><b>Note:</b>\r\n<ul>\r\n<li>The number of stones is &ge; 2 and is < 1,100.</li>\r\n<li>Each stone's position will be a non-negative integer < 2<sup>31</sup>.</li>\r\n<li>The first stone's position is always 0.</li>\r\n</ul>\r\n</p>\r\n\r\n<p><b>Example 1:</b>\r\n<pre>\r\n<b>[0,1,3,5,6,8,12,17]</b>\r\n\r\nThere are a total of 8 stones.\r\nThe first stone at the 0th unit, second stone at the 1st unit,\r\nthird stone at the 3rd unit, and so on...\r\nThe last stone at the 17th unit.\r\n\r\n<b>Return true</b>. The frog can jump to the last stone by jumping \r\n1 unit to the 2nd stone, then 2 units to the 3rd stone, then \r\n2 units to the 4th stone, then 3 units to the 6th stone, \r\n4 units to the 7th stone, and 5 units to the 8th stone.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b>\r\n<pre>\r\n<b>[0,1,2,3,4,8,9,11]</b>\r\n\r\n<b>Return false</b>. There is no way to jump to the last stone as \r\nthe gap between the 5th and 6th stone is too large.\r\n</pre>\r\n</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"107.7K\", \"totalSubmission\": \"263K\", \"totalAcceptedRaw\": 107683, \"totalSubmissionRaw\": 263044, \"acRate\": \"40.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "391", "name": "perfect-rectangle", "content": {"questionId": "391", "questionFrontendId": "391", "questionTitle": "Perfect Rectangle", "questionTitleSlug": "perfect-rectangle", "content": "<p>Given N axis-aligned rectangles where N &gt; 0, determine if they all together form an exact cover of a rectangular region.</p>\r\n\r\n<p>Each rectangle is represented as a bottom-left point and a top-right point. For example, a unit square is represented as [1,1,2,2]. (coordinate of bottom-left point is (1, 1) and top-right point is (2, 2)).</p>\r\n\r\n<div style=\"float:right\"><img src=\"https://assets.leetcode.com/uploads/2018/10/22/rectangle_perfect.gif\" style=\"width: 249px; height: 250px;\" /></div>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\nrectangles = [\r\n  [1,1,3,3],\r\n  [3,1,4,2],\r\n  [3,2,4,4],\r\n  [1,3,2,4],\r\n  [2,3,3,4]\r\n]\r\n\r\nReturn true. All 5 rectangles together form an exact cover of a rectangular region.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div style=\"clear:both\">&nbsp;</div>\r\n\r\n<div style=\"float:right\"><img src=\"https://assets.leetcode.com/uploads/2018/10/22/rectangle_separated.gif\" style=\"width: 249px; height: 250px;\" /></div>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\nrectangles = [\r\n  [1,1,2,3],\r\n  [1,3,2,4],\r\n  [3,1,4,2],\r\n  [3,2,4,4]\r\n]\r\n\r\nReturn false. Because there is a gap between the two rectangular regions.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div style=\"clear:both\">&nbsp;</div>\r\n\r\n<div style=\"float:right\"><img src=\"https://assets.leetcode.com/uploads/2018/10/22/rectangle_hole.gif\" style=\"width: 249px; height: 250px;\" /></div>\r\n\r\n<p><b>Example 3:</b></p>\r\n\r\n<pre>\r\nrectangles = [\r\n  [1,1,3,3],\r\n  [3,1,4,2],\r\n  [1,3,2,4],\r\n  [3,2,4,4]\r\n]\r\n\r\nReturn false. Because there is a gap in the top center.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div style=\"clear:both\">&nbsp;</div>\r\n\r\n<div style=\"float:right\"><img src=\"https://assets.leetcode.com/uploads/2018/10/22/rectangle_intersect.gif\" style=\"width: 249px; height: 250px;\" /></div>\r\n\r\n<p><b>Example 4:</b></p>\r\n\r\n<pre>\r\nrectangles = [\r\n  [1,1,3,3],\r\n  [3,1,4,2],\r\n  [1,3,2,4],\r\n  [2,2,4,4]\r\n]\r\n\r\nReturn false. Because two of the rectangles overlap with each other.\r\n</pre>\r\n\r\n<p>&nbsp;</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"27.9K\", \"totalSubmission\": \"90.3K\", \"totalAcceptedRaw\": 27934, \"totalSubmissionRaw\": 90260, \"acRate\": \"30.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Line Sweep", "slug": "line-sweep"}]}}, {"id": "381", "name": "insert-delete-getrandom-o1-duplicates-allowed", "content": {"questionId": "381", "questionFrontendId": "381", "questionTitle": "Insert Delete GetRandom O(1) - Duplicates allowed", "questionTitleSlug": "insert-delete-getrandom-o1-duplicates-allowed", "content": "<p>Design a data structure that supports all following operations in <i>average</i> <b>O(1)</b> time.</p>\r\n<b>Note: Duplicate elements are allowed.</b>\r\n<p>\r\n<ol>\r\n<li><code>insert(val)</code>: Inserts an item val to the collection.</li>\r\n<li><code>remove(val)</code>: Removes an item val from the collection if present.</li>\r\n<li><code>getRandom</code>: Returns a random element from current collection of elements. The probability of each element being returned is <b>linearly related</b> to the number of same value the collection contains.</li>\r\n</ol>\r\n</p>\r\n\r\n<p><b>Example:</b>\r\n<pre>\r\n// Init an empty collection.\r\nRandomizedCollection collection = new RandomizedCollection();\r\n\r\n// Inserts 1 to the collection. Returns true as the collection did not contain 1.\r\ncollection.insert(1);\r\n\r\n// Inserts another 1 to the collection. Returns false as the collection contained 1. Collection now contains [1,1].\r\ncollection.insert(1);\r\n\r\n// Inserts 2 to the collection, returns true. Collection now contains [1,1,2].\r\ncollection.insert(2);\r\n\r\n// getRandom should return 1 with the probability 2/3, and returns 2 with the probability 1/3.\r\ncollection.getRandom();\r\n\r\n// Removes 1 from the collection, returns true. Collection now contains [1,2].\r\ncollection.remove(1);\r\n\r\n// getRandom should return 1 and 2 both equally likely.\r\ncollection.getRandom();\r\n</pre>\r\n</p>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"76.6K\", \"totalSubmission\": \"221.2K\", \"totalAcceptedRaw\": 76627, \"totalSubmissionRaw\": 221202, \"acRate\": \"34.6%\"}", "similarQuestions": "[{\"title\": \"Insert Delete GetRandom O(1)\", \"titleSlug\": \"insert-delete-getrandom-o1\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Hash Table", "slug": "hash-table"}, {"name": "Design", "slug": "design"}]}}, {"id": "363", "name": "max-sum-of-rectangle-no-larger-than-k", "content": {"questionId": "363", "questionFrontendId": "363", "questionTitle": "Max Sum of Rectangle No Larger Than K", "questionTitleSlug": "max-sum-of-rectangle-no-larger-than-k", "content": "<p>Given a non-empty 2D matrix <i>matrix</i> and an integer <i>k</i>, find the max sum of a rectangle in the <i>matrix</i> such that its sum is no larger than <i>k</i>.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>matrix = <span id=\"example-input-1-1\">[[1,0,1],[0,-2,3]]</span>, k = <span id=\"example-input-1-2\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">2 \r\n<strong>Explanation:</strong></span>&nbsp;Because the sum of rectangle <code>[[0, 1], [-2, 3]]</code> is 2,\r\n&nbsp;            and 2 is the max number no larger than k (k = 2).</pre>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>The rectangle inside the matrix must have an area &gt; 0.</li>\r\n\t<li>What if the number of rows is much larger than the number of columns?</li>\r\n</ol>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"50.5K\", \"totalSubmission\": \"132K\", \"totalAcceptedRaw\": 50453, \"totalSubmissionRaw\": 131985, \"acRate\": \"38.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Queue", "slug": "queue"}]}}, {"id": "358", "name": "rearrange-string-k-distance-apart", "content": {"questionId": "358", "questionFrontendId": "358", "questionTitle": "Rearrange String k Distance Apart", "questionTitleSlug": "rearrange-string-k-distance-apart", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"40K\", \"totalSubmission\": \"112.6K\", \"totalAcceptedRaw\": 39971, \"totalSubmissionRaw\": 112588, \"acRate\": \"35.5%\"}", "similarQuestions": "[{\"title\": \"Task Scheduler\", \"titleSlug\": \"task-scheduler\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Reorganize String\", \"titleSlug\": \"reorganize-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Heap", "slug": "heap"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "354", "name": "russian-doll-envelopes", "content": {"questionId": "354", "questionFrontendId": "354", "questionTitle": "Russian Doll Envelopes", "questionTitleSlug": "russian-doll-envelopes", "content": "<p>You have a number of envelopes with widths and heights given as a pair of integers <code>(w, h)</code>. One envelope can fit into another if and only if both the width and height of one envelope is greater than the width and height of the other envelope.</p>\r\n\r\n<p>What is the maximum number of envelopes can you Russian doll? (put one inside other)</p>\r\n\r\n<p><b>Note:</b><br />\r\nRotation is not allowed.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<div>\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[[5,4],[6,4],[6,7],[2,3]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">3 \r\n<strong>Explanation: T</strong></span>he maximum number of envelopes you can Russian doll is <code>3</code> ([2,3] =&gt; [5,4] =&gt; [6,7]).\r\n</pre>\r\n</div>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"78.4K\", \"totalSubmission\": \"217.8K\", \"totalAcceptedRaw\": 78362, \"totalSubmissionRaw\": 217841, \"acRate\": \"36.0%\"}", "similarQuestions": "[{\"title\": \"Longest Increasing Subsequence\", \"titleSlug\": \"longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "352", "name": "data-stream-as-disjoint-intervals", "content": {"questionId": "352", "questionFrontendId": "352", "questionTitle": "Data Stream as Disjoint Intervals", "questionTitleSlug": "data-stream-as-disjoint-intervals", "content": "<p>Given a data stream input of non-negative integers a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>, ..., summarize the numbers seen so far as a list of disjoint intervals.</p>\n\n<p>For example, suppose the integers from the data stream are 1, 3, 7, 2, 6, ..., then the summary will be:</p>\n\n<pre>\n[1, 1]\n[1, 1], [3, 3]\n[1, 1], [3, 3], [7, 7]\n[1, 3], [7, 7]\n[1, 3], [6, 7]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Follow up:</b></p>\n\n<p>What if there are lots of merges and the number of disjoint intervals are small compared to the data stream&#39;s size?</p>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"40.2K\", \"totalSubmission\": \"83.1K\", \"totalAcceptedRaw\": 40151, \"totalSubmissionRaw\": 83114, \"acRate\": \"48.3%\"}", "similarQuestions": "[{\"title\": \"Summary Ranges\", \"titleSlug\": \"summary-ranges\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Right Interval\", \"titleSlug\": \"find-right-interval\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Range Module\", \"titleSlug\": \"range-module\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Ordered Map", "slug": "ordered-map"}]}}, {"id": "340", "name": "longest-substring-with-at-most-k-distinct-characters", "content": {"questionId": "340", "questionFrontendId": "340", "questionTitle": "Longest Substring with At Most K Distinct Characters", "questionTitleSlug": "longest-substring-with-at-most-k-distinct-characters", "content": null, "difficulty": "Medium", "stats": "{\"totalAccepted\": \"166.8K\", \"totalSubmission\": \"372K\", \"totalAcceptedRaw\": 166833, \"totalSubmissionRaw\": 372034, \"acRate\": \"44.8%\"}", "similarQuestions": "[{\"title\": \"Longest Substring Without Repeating Characters\", \"titleSlug\": \"longest-substring-without-repeating-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Substring with At Most Two Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-two-distinct-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Repeating Character Replacement\", \"titleSlug\": \"longest-repeating-character-replacement\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Subarrays with K Different Integers\", \"titleSlug\": \"subarrays-with-k-different-integers\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Max Consecutive Ones III\", \"titleSlug\": \"max-consecutive-ones-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Two Pointers", "slug": "two-pointers"}, {"name": "String", "slug": "string"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "336", "name": "palindrome-pairs", "content": {"questionId": "336", "questionFrontendId": "336", "questionTitle": "Palindrome Pairs", "questionTitleSlug": "palindrome-pairs", "content": "<p>Given a list of <b>unique</b> words, return all the pairs of the&nbsp;<b><i>distinct</i></b> indices <code>(i, j)</code> in the given list, so that the concatenation of the two words&nbsp;<code>words[i] + words[j]</code> is a palindrome.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;abcd&quot;,&quot;dcba&quot;,&quot;lls&quot;,&quot;s&quot;,&quot;sssll&quot;]\n<strong>Output:</strong> [[0,1],[1,0],[3,2],[2,4]]\n<strong>Explanation:</strong> The palindromes are [&quot;dcbaabcd&quot;,&quot;abcddcba&quot;,&quot;slls&quot;,&quot;llssssll&quot;]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;bat&quot;,&quot;tab&quot;,&quot;cat&quot;]\n<strong>Output:</strong> [[0,1],[1,0]]\n<strong>Explanation:</strong> The palindromes are [&quot;battab&quot;,&quot;tabbat&quot;]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;a&quot;,&quot;&quot;]\n<strong>Output:</strong> [[0,1],[1,0]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 5000</code></li>\n\t<li><code>0 &lt;= words[i].length &lt;= 300</code></li>\n\t<li><code>words[i]</code> consists of lower-case English letters.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"108.3K\", \"totalSubmission\": \"315.6K\", \"totalAcceptedRaw\": 108285, \"totalSubmissionRaw\": 315567, \"acRate\": \"34.3%\"}", "similarQuestions": "[{\"title\": \"Longest Palindromic Substring\", \"titleSlug\": \"longest-palindromic-substring\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Shortest Palindrome\", \"titleSlug\": \"shortest-palindrome\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "String", "slug": "string"}, {"name": "Trie", "slug": "trie"}]}}, {"id": "335", "name": "self-crossing", "content": {"questionId": "335", "questionFrontendId": "335", "questionTitle": "Self Crossing", "questionTitleSlug": "self-crossing", "content": "<p>You are given an array <i>x</i> of <code>n</code> positive numbers. You start at point <code>(0,0)</code> and moves <code>x[0]</code> metres to the north, then <code>x[1]</code> metres to the west, <code>x[2]</code> metres to the south, <code>x[3]</code> metres to the east and so on. In other words, after each move your direction changes counter-clockwise.</p>\r\n\r\n<p>Write a one-pass algorithm with <code>O(1)</code> extra space to determine, if your path crosses itself, or not.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<strong>\u250c\u2500\u2500\u2500\u2510\r\n\u2502 &nbsp; \u2502\r\n\u2514\u2500\u2500\u2500\u253c\u2500\u2500&gt;\r\n&nbsp; &nbsp; \u2502\r\n\r\nInput: </strong><code>[2,1,1,2]</code>\r\n<strong>Output: </strong>true\r\n</pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<strong>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 &nbsp; &nbsp; &nbsp;\u2502\r\n\u2502\r\n\u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500&gt;\r\n\r\nInput:</strong> <code>[1,2,3,4]</code>\r\n<strong>Output: </strong>false \r\n</pre>\r\n\r\n<p><b>Example 3:</b></p>\r\n\r\n<pre>\r\n<strong>\u250c\u2500\u2500\u2500\u2510\r\n\u2502 &nbsp; \u2502\r\n\u2514\u2500\u2500\u2500\u253c&gt;\r\n\r\nInput:</strong> <code>[1,1,1,1]</code>\r\n<strong>Output:</strong> true \r\n</pre>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"24.3K\", \"totalSubmission\": \"85K\", \"totalAcceptedRaw\": 24257, \"totalSubmissionRaw\": 85046, \"acRate\": \"28.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "330", "name": "patching-array", "content": {"questionId": "330", "questionFrontendId": "330", "questionTitle": "Patching Array", "questionTitleSlug": "patching-array", "content": "<p>Given a sorted positive integer array <i>nums</i> and an integer <i>n</i>, add/patch elements to the array such that any number in range <code>[1, n]</code> inclusive can be formed by the sum of some elements in the array. Return the minimum number of patches required.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><i>nums</i> = <code>[1,3]</code>, <i>n</i> = <code>6</code>\r\n<strong>Output: </strong>1 \r\n<strong>Explanation:</strong>\r\nCombinations of <i>nums</i> are <code>[1], [3], [1,3]</code>, which form possible sums of: <code>1, 3, 4</code>.\r\nNow if we add/patch <code>2</code> to <i>nums</i>, the combinations are: <code>[1], [2], [3], [1,3], [2,3], [1,2,3]</code>.\r\nPossible sums are <code>1, 2, 3, 4, 5, 6</code>, which now covers the range <code>[1, 6]</code>.\r\nSo we only need <code>1</code> patch.</pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><i>nums</i> = <code>[1,5,10]</code>, <i>n</i> = <code>20</code>\r\n<strong>Output:</strong> 2\r\n<strong>Explanation: </strong>The two patches can be <code>[2, 4]</code>.\r\n</pre>\r\n\r\n<p><b>Example 3:</b></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><i>nums</i> = <code>[1,2,2]</code>, <i>n</i> = <code>5</code>\r\n<strong>Output:</strong> 0\r\n</pre>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"38.2K\", \"totalSubmission\": \"109.7K\", \"totalAcceptedRaw\": 38200, \"totalSubmissionRaw\": 109708, \"acRate\": \"34.8%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "329", "name": "longest-increasing-path-in-a-matrix", "content": {"questionId": "329", "questionFrontendId": "329", "questionTitle": "Longest Increasing Path in a Matrix", "questionTitleSlug": "longest-increasing-path-in-a-matrix", "content": "<p>Given an integer matrix, find the length of the longest increasing path.</p>\r\n\r\n<p>From each cell, you can either move to four directions: left, right, up or down. You may NOT move diagonally or move outside of the boundary (i.e. wrap-around is not allowed).</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>nums = \r\n[\r\n  [<font color=\"red\">9</font>,9,4],\r\n  [<font color=\"red\">6</font>,6,8],\r\n  [<font color=\"red\">2</font>,<font color=\"red\">1</font>,1]\r\n] \r\n<strong>Output:</strong> 4 \r\n<strong>Explanation:</strong> The longest increasing path is <code>[1, 2, 6, 9]</code>.\r\n</pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = \r\n[\r\n  [<font color=\"red\">3</font>,<font color=\"red\">4</font>,<font color=\"red\">5</font>],\r\n  [3,2,<font color=\"red\">6</font>],\r\n  [2,2,1]\r\n] \r\n<strong>Output: </strong>4 \r\n<strong>Explanation: </strong>The longest increasing path is <code>[3, 4, 5, 6]</code>. Moving diagonally is not allowed.\r\n</pre>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"180.7K\", \"totalSubmission\": \"408.8K\", \"totalAcceptedRaw\": 180723, \"totalSubmissionRaw\": 408829, \"acRate\": \"44.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Topological Sort", "slug": "topological-sort"}, {"name": "Memoization", "slug": "memoization"}]}}, {"id": "327", "name": "count-of-range-sum", "content": {"questionId": "327", "questionFrontendId": "327", "questionTitle": "Count of Range Sum", "questionTitleSlug": "count-of-range-sum", "content": "<p>Given an integer array <code>nums</code>, return the number of range sums that lie in <code>[lower, upper]</code> inclusive.<br />\r\nRange sum <code>S(i, j)</code> is defined as the sum of the elements in <code>nums</code> between indices <code>i</code> and <code>j</code> (<code>i</code> &le; <code>j</code>), inclusive.</p>\r\n\r\n<p><b>Note:</b><br />\r\nA naive algorithm of <i>O</i>(<i>n</i><sup>2</sup>) is trivial. You MUST do better than that.</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><i>nums</i> = <code>[-2,5,-1]</code>, <i>lower</i> = <code>-2</code>, <i>upper</i> = <code>2</code>,\r\n<strong>Output: </strong>3 \r\n<strong>Explanation: </strong>The three ranges are : <code>[0,0]</code>, <code>[2,2]</code>, <code>[0,2]</code> and their respective sums are: <code>-2, -1, 2</code>.\r\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= nums.length &lt;= 10^4</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"46.9K\", \"totalSubmission\": \"131.1K\", \"totalAcceptedRaw\": 46895, \"totalSubmissionRaw\": 131069, \"acRate\": \"35.8%\"}", "similarQuestions": "[{\"title\": \"Count of Smaller Numbers After Self\", \"titleSlug\": \"count-of-smaller-numbers-after-self\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Reverse Pairs\", \"titleSlug\": \"reverse-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Divide and Conquer", "slug": "divide-and-conquer"}, {"name": "Sort", "slug": "sort"}, {"name": "Binary Indexed Tree", "slug": "binary-indexed-tree"}, {"name": "Segment Tree", "slug": "segment-tree"}]}}, {"id": "321", "name": "create-maximum-number", "content": {"questionId": "321", "questionFrontendId": "321", "questionTitle": "Create Maximum Number", "questionTitleSlug": "create-maximum-number", "content": "<p>Given two arrays of length <code>m</code> and <code>n</code> with digits <code>0-9</code> representing two numbers. Create the maximum number of length <code>k &lt;= m + n</code> from digits of the two. The relative order of the digits from the same array must be preserved. Return an array of the <code>k</code> digits.</p>\r\n\r\n<p><strong>Note: </strong>You should try to optimize your time and space complexity.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>\r\nnums1 = <code>[3, 4, 6, 5]</code>\r\nnums2 = <code>[9, 1, 2, 5, 8, 3]</code>\r\nk = <code>5</code>\r\n<strong>Output:</strong>\r\n<code>[9, 8, 6, 5, 3]</code></pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>\r\nnums1 = <code>[6, 7]</code>\r\nnums2 = <code>[6, 0, 4]</code>\r\nk = <code>5</code>\r\n<strong>Output:</strong>\r\n<code>[6, 7, 6, 0, 4]</code></pre>\r\n\r\n<p><b>Example 3:</b></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>\r\nnums1 = <code>[3, 9]</code>\r\nnums2 = <code>[8, 9]</code>\r\nk = <code>3</code>\r\n<strong>Output:</strong>\r\n<code>[9, 8, 9]</code>\r\n</pre>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"41.9K\", \"totalSubmission\": \"153K\", \"totalAcceptedRaw\": 41893, \"totalSubmissionRaw\": 152969, \"acRate\": \"27.4%\"}", "similarQuestions": "[{\"title\": \"Remove K Digits\", \"titleSlug\": \"remove-k-digits\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Swap\", \"titleSlug\": \"maximum-swap\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "317", "name": "shortest-distance-from-all-buildings", "content": {"questionId": "317", "questionFrontendId": "317", "questionTitle": "Shortest Distance from All Buildings", "questionTitleSlug": "shortest-distance-from-all-buildings", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"81.7K\", \"totalSubmission\": \"192.8K\", \"totalAcceptedRaw\": 81709, \"totalSubmissionRaw\": 192753, \"acRate\": \"42.4%\"}", "similarQuestions": "[{\"title\": \"Walls and Gates\", \"titleSlug\": \"walls-and-gates\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Best Meeting Point\", \"titleSlug\": \"best-meeting-point\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"As Far from Land as Possible\", \"titleSlug\": \"as-far-from-land-as-possible\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "315", "name": "count-of-smaller-numbers-after-self", "content": {"questionId": "315", "questionFrontendId": "315", "questionTitle": "Count of Smaller Numbers After Self", "questionTitleSlug": "count-of-smaller-numbers-after-self", "content": "<p>You are given an integer array <i>nums</i> and you have to return a new <i>counts</i> array. The <i>counts</i> array has the property where <code>counts[i]</code> is the number of smaller elements to the right of <code>nums[i]</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,2,6,1]\n<strong>Output:</strong> [2,1,1,0]\n<strong>Explanation:</strong>\nTo the right of 5 there are <b>2</b> smaller elements (2 and 1).\nTo the right of 2 there is only <b>1</b> smaller element (1).\nTo the right of 6 there is <b>1</b> smaller element (1).\nTo the right of 1 there is <b>0</b> smaller element.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= nums.length &lt;= 10^5</code></li>\n\t<li><code>-10^4&nbsp;&lt;= nums[i] &lt;= 10^4</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"152.8K\", \"totalSubmission\": \"359.9K\", \"totalAcceptedRaw\": 152751, \"totalSubmissionRaw\": 359943, \"acRate\": \"42.4%\"}", "similarQuestions": "[{\"title\": \"Count of Range Sum\", \"titleSlug\": \"count-of-range-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Queue Reconstruction by Height\", \"titleSlug\": \"queue-reconstruction-by-height\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Reverse Pairs\", \"titleSlug\": \"reverse-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"How Many Numbers Are Smaller Than the Current Number\", \"titleSlug\": \"how-many-numbers-are-smaller-than-the-current-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Divide and Conquer", "slug": "divide-and-conquer"}, {"name": "Sort", "slug": "sort"}, {"name": "Binary Indexed Tree", "slug": "binary-indexed-tree"}, {"name": "Segment Tree", "slug": "segment-tree"}]}}, {"id": "312", "name": "burst-balloons", "content": {"questionId": "312", "questionFrontendId": "312", "questionTitle": "Burst Balloons", "questionTitleSlug": "burst-balloons", "content": "<p>You are given <code>n</code> balloons, indexed from <code>0</code> to <code>n - 1</code>. Each balloon is painted with a number on it represented by an array <code>nums</code>. You are asked to burst all the balloons.</p>\n\n<p>If you burst the <code>i<sup>th</sup></code> balloon, you will get <code>nums[left] * nums[i] * nums[right]</code> coins. Here <code>left</code> and <code>right</code> are adjacent indices of <code>i</code>. After the burst, the <code>left</code> and <code>right</code> then becomes adjacent.</p>\n\n<p>Return <em>the maximum coins you can collect by bursting the balloons wisely</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,1,5,8]\n<strong>Output:</strong> 167\n<code><strong>Explanation:\n</strong></code>nums = [3,1,5,8] --&gt; [3,5,8] --&gt; [3,8] --&gt; [8] --&gt; []\ncoins =  3*1*5    +   3*5*8   +  1*3*8  + 1*8*1 = 167</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,5]\n<strong>Output:</strong> 10\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 500</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"123.1K\", \"totalSubmission\": \"229.9K\", \"totalAcceptedRaw\": 123141, \"totalSubmissionRaw\": 229908, \"acRate\": \"53.6%\"}", "similarQuestions": "[{\"title\": \"Minimum Cost to Merge Stones\", \"titleSlug\": \"minimum-cost-to-merge-stones\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Divide and Conquer", "slug": "divide-and-conquer"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "308", "name": "range-sum-query-2d-mutable", "content": {"questionId": "308", "questionFrontendId": "308", "questionTitle": "Range Sum Query 2D - Mutable", "questionTitleSlug": "range-sum-query-2d-mutable", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"51.6K\", \"totalSubmission\": \"139.7K\", \"totalAcceptedRaw\": 51650, \"totalSubmissionRaw\": 139721, \"acRate\": \"37.0%\"}", "similarQuestions": "[{\"title\": \"Range Sum Query 2D - Immutable\", \"titleSlug\": \"range-sum-query-2d-immutable\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Range Sum Query - Mutable\", \"titleSlug\": \"range-sum-query-mutable\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Indexed Tree", "slug": "binary-indexed-tree"}, {"name": "Segment Tree", "slug": "segment-tree"}]}}, {"id": "305", "name": "number-of-islands-ii", "content": {"questionId": "305", "questionFrontendId": "305", "questionTitle": "Number of Islands II", "questionTitleSlug": "number-of-islands-ii", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"83.8K\", \"totalSubmission\": \"210.6K\", \"totalAcceptedRaw\": 83789, \"totalSubmissionRaw\": 210579, \"acRate\": \"39.8%\"}", "similarQuestions": "[{\"title\": \"Number of Islands\", \"titleSlug\": \"number-of-islands\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Union Find", "slug": "union-find"}]}}, {"id": "302", "name": "smallest-rectangle-enclosing-black-pixels", "content": {"questionId": "302", "questionFrontendId": "302", "questionTitle": "Smallest Rectangle Enclosing Black Pixels", "questionTitleSlug": "smallest-rectangle-enclosing-black-pixels", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"29.3K\", \"totalSubmission\": \"56.1K\", \"totalAcceptedRaw\": 29262, \"totalSubmissionRaw\": 56065, \"acRate\": \"52.2%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "301", "name": "remove-invalid-parentheses", "content": {"questionId": "301", "questionFrontendId": "301", "questionTitle": "Remove Invalid Parentheses", "questionTitleSlug": "remove-invalid-parentheses", "content": "<p>Remove the minimum number of invalid parentheses in order to make the input string valid. Return all possible results.</p>\r\n\r\n<p><strong>Note:</strong>&nbsp;The input string may contain letters other than the parentheses <code>(</code> and <code>)</code>.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> &quot;()())()&quot;\r\n<b>Output:</b> [&quot;()()()&quot;, &quot;(())()&quot;]\r\n</pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> &quot;(a)())()&quot;\r\n<b>Output:</b> [&quot;(a)()()&quot;, &quot;(a())()&quot;]\r\n</pre>\r\n\r\n<p><b>Example 3:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> &quot;)(&quot;\r\n<b>Output: </b>[&quot;&quot;]\r\n</pre>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"240.5K\", \"totalSubmission\": \"543.7K\", \"totalAcceptedRaw\": 240497, \"totalSubmissionRaw\": 543672, \"acRate\": \"44.2%\"}", "similarQuestions": "[{\"title\": \"Valid Parentheses\", \"titleSlug\": \"valid-parentheses\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "297", "name": "serialize-and-deserialize-binary-tree", "content": {"questionId": "297", "questionFrontendId": "297", "questionTitle": "Serialize and Deserialize Binary Tree", "questionTitleSlug": "serialize-and-deserialize-binary-tree", "content": "<p>Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment.</p>\n\n<p>Design an algorithm to serialize and deserialize a binary tree. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary tree can be serialized to a string and this string can be deserialized to the original tree structure.</p>\n\n<p><strong>Clarification:</strong> The input/output format is the same as <a href=\"/faq/#binary-tree\">how LeetCode serializes a binary tree</a>. You do not necessarily need to follow this format, so please be creative and come up with different approaches yourself.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/15/serdeser.jpg\" style=\"width: 442px; height: 324px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,null,null,4,5]\n<strong>Output:</strong> [1,2,3,null,null,4,5]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1]\n<strong>Output:</strong> [1]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,2]\n<strong>Output:</strong> [1,2]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"391.9K\", \"totalSubmission\": \"797.9K\", \"totalAcceptedRaw\": 391910, \"totalSubmissionRaw\": 797871, \"acRate\": \"49.1%\"}", "similarQuestions": "[{\"title\": \"Encode and Decode Strings\", \"titleSlug\": \"encode-and-decode-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Serialize and Deserialize BST\", \"titleSlug\": \"serialize-and-deserialize-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Duplicate Subtrees\", \"titleSlug\": \"find-duplicate-subtrees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Serialize and Deserialize N-ary Tree\", \"titleSlug\": \"serialize-and-deserialize-n-ary-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Design", "slug": "design"}]}}, {"id": "296", "name": "best-meeting-point", "content": {"questionId": "296", "questionFrontendId": "296", "questionTitle": "Best Meeting Point", "questionTitleSlug": "best-meeting-point", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"39.6K\", \"totalSubmission\": \"68.3K\", \"totalAcceptedRaw\": 39587, \"totalSubmissionRaw\": 68292, \"acRate\": \"58.0%\"}", "similarQuestions": "[{\"title\": \"Shortest Distance from All Buildings\", \"titleSlug\": \"shortest-distance-from-all-buildings\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Moves to Equal Array Elements II\", \"titleSlug\": \"minimum-moves-to-equal-array-elements-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Sort", "slug": "sort"}]}}, {"id": "295", "name": "find-median-from-data-stream", "content": {"questionId": "295", "questionFrontendId": "295", "questionTitle": "Find Median from Data Stream", "questionTitleSlug": "find-median-from-data-stream", "content": "<p>Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value.</p>\r\nFor example,\r\n\r\n<p><code>[2,3,4]</code>, the median is <code>3</code></p>\r\n\r\n<p><code>[2,3]</code>, the median is <code>(2 + 3) / 2 = 2.5</code></p>\r\n\r\n<p>Design a data structure that supports the following two operations:</p>\r\n\r\n<ul>\r\n\t<li>void addNum(int num) - Add a integer number from the data stream to the data structure.</li>\r\n\t<li>double findMedian() - Return the median of all elements so far.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\naddNum(1)\r\naddNum(2)\r\nfindMedian() -&gt; 1.5\r\naddNum(3) \r\nfindMedian() -&gt; 2\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Follow up:</strong></p>\r\n\r\n<ol>\r\n\t<li>If all integer numbers from the stream are between 0&nbsp;and 100, how would you optimize it?</li>\r\n\t<li>If 99% of all integer numbers from the stream are between 0 and 100, how would you optimize it?</li>\r\n</ol>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"253K\", \"totalSubmission\": \"548.5K\", \"totalAcceptedRaw\": 253020, \"totalSubmissionRaw\": 548496, \"acRate\": \"46.1%\"}", "similarQuestions": "[{\"title\": \"Sliding Window Median\", \"titleSlug\": \"sliding-window-median\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Heap", "slug": "heap"}, {"name": "Design", "slug": "design"}]}}, {"id": "291", "name": "word-pattern-ii", "content": {"questionId": "291", "questionFrontendId": "291", "questionTitle": "Word Pattern II", "questionTitleSlug": "word-pattern-ii", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"47K\", \"totalSubmission\": \"107.1K\", \"totalAcceptedRaw\": 47045, \"totalSubmissionRaw\": 107066, \"acRate\": \"43.9%\"}", "similarQuestions": "[{\"title\": \"Word Pattern\", \"titleSlug\": \"word-pattern\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "282", "name": "expression-add-operators", "content": {"questionId": "282", "questionFrontendId": "282", "questionTitle": "Expression Add Operators", "questionTitleSlug": "expression-add-operators", "content": "<p>Given a string that contains only digits <code>0-9</code> and a target value, return all possibilities to add <b>binary</b> operators (not unary) <code>+</code>, <code>-</code>, or <code>*</code> between the digits so they evaluate to the target value.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> <code><em>num</em> = </code>&quot;123&quot;, <em>target</em> = 6\r\n<b>Output: </b>[&quot;1+2+3&quot;, &quot;1*2*3&quot;] \r\n</pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> <code><em>num</em> = </code>&quot;232&quot;, <em>target</em> = 8\r\n<b>Output: </b>[&quot;2*3+2&quot;, &quot;2+3*2&quot;]</pre>\r\n\r\n<p><b>Example 3:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> <code><em>num</em> = </code>&quot;105&quot;, <em>target</em> = 5\r\n<b>Output: </b>[&quot;1*0+5&quot;,&quot;10-5&quot;]</pre>\r\n\r\n<p><b>Example 4:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> <code><em>num</em> = </code>&quot;00&quot;, <em>target</em> = 0\r\n<b>Output: </b>[&quot;0+0&quot;, &quot;0-0&quot;, &quot;0*0&quot;]\r\n</pre>\r\n\r\n<p><b>Example 5:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> <code><em>num</em> = </code>&quot;3456237490&quot;, <em>target</em> = 9191\r\n<b>Output: </b>[]\r\n</pre>\r\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= num.length &lt;= 10</code></li>\n\t<li><code>num</code> only contain&nbsp;digits.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"120.2K\", \"totalSubmission\": \"330.2K\", \"totalAcceptedRaw\": 120220, \"totalSubmissionRaw\": 330167, \"acRate\": \"36.4%\"}", "similarQuestions": "[{\"title\": \"Evaluate Reverse Polish Notation\", \"titleSlug\": \"evaluate-reverse-polish-notation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator\", \"titleSlug\": \"basic-calculator\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator II\", \"titleSlug\": \"basic-calculator-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Different Ways to Add Parentheses\", \"titleSlug\": \"different-ways-to-add-parentheses\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Target Sum\", \"titleSlug\": \"target-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Divide and Conquer", "slug": "divide-and-conquer"}]}}, {"id": "273", "name": "integer-to-english-words", "content": {"questionId": "273", "questionFrontendId": "273", "questionTitle": "Integer to English Words", "questionTitleSlug": "integer-to-english-words", "content": "<p>Convert a non-negative integer <code>num</code> to its English words representation.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> num = 123\n<strong>Output:</strong> \"One Hundred Twenty Three\"\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> num = 12345\n<strong>Output:</strong> \"Twelve Thousand Three Hundred Forty Five\"\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> num = 1234567\n<strong>Output:</strong> \"One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven\"\n</pre><p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> num = 1234567891\n<strong>Output:</strong> \"One Billion Two Hundred Thirty Four Million Five Hundred Sixty Seven Thousand Eight Hundred Ninety One\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= num &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"208.5K\", \"totalSubmission\": \"749.6K\", \"totalAcceptedRaw\": 208456, \"totalSubmissionRaw\": 749560, \"acRate\": \"27.8%\"}", "similarQuestions": "[{\"title\": \"Integer to Roman\", \"titleSlug\": \"integer-to-roman\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "String", "slug": "string"}]}}, {"id": "272", "name": "closest-binary-search-tree-value-ii", "content": {"questionId": "272", "questionFrontendId": "272", "questionTitle": "Closest Binary Search Tree Value II", "questionTitleSlug": "closest-binary-search-tree-value-ii", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"63.4K\", \"totalSubmission\": \"122.8K\", \"totalAcceptedRaw\": 63366, \"totalSubmissionRaw\": 122822, \"acRate\": \"51.6%\"}", "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Closest Binary Search Tree Value\", \"titleSlug\": \"closest-binary-search-tree-value\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Stack", "slug": "stack"}, {"name": "Tree", "slug": "tree"}]}}, {"id": "269", "name": "alien-dictionary", "content": {"questionId": "269", "questionFrontendId": "269", "questionTitle": "Alien Dictionary", "questionTitleSlug": "alien-dictionary", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"178.9K\", \"totalSubmission\": \"533.4K\", \"totalAcceptedRaw\": 178920, \"totalSubmissionRaw\": 533423, \"acRate\": \"33.5%\"}", "similarQuestions": "[{\"title\": \"Course Schedule II\", \"titleSlug\": \"course-schedule-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Graph", "slug": "graph"}, {"name": "Topological Sort", "slug": "topological-sort"}]}}, {"id": "265", "name": "paint-house-ii", "content": {"questionId": "265", "questionFrontendId": "265", "questionTitle": "Paint House II", "questionTitleSlug": "paint-house-ii", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"64.9K\", \"totalSubmission\": \"143.1K\", \"totalAcceptedRaw\": 64877, \"totalSubmissionRaw\": 143101, \"acRate\": \"45.3%\"}", "similarQuestions": "[{\"title\": \"Product of Array Except Self\", \"titleSlug\": \"product-of-array-except-self\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sliding Window Maximum\", \"titleSlug\": \"sliding-window-maximum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Paint House\", \"titleSlug\": \"paint-house\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paint Fence\", \"titleSlug\": \"paint-fence\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "262", "name": "trips-and-users", "content": {"questionId": "262", "questionFrontendId": "262", "questionTitle": "Trips and Users", "questionTitleSlug": "trips-and-users", "content": "<p>The <code>Trips</code> table holds all taxi trips. Each trip has a unique Id, while Client_Id and Driver_Id are both foreign keys to the Users_Id at the <code>Users</code> table. Status is an ENUM type of (&lsquo;completed&rsquo;, &lsquo;cancelled_by_driver&rsquo;, &lsquo;cancelled_by_client&rsquo;).</p>\n\n<pre>\n+----+-----------+-----------+---------+--------------------+----------+\n| Id | Client_Id | Driver_Id | City_Id |        Status      |Request_at|\n+----+-----------+-----------+---------+--------------------+----------+\n| 1  |     1     |    10     |    1    |     completed      |2013-10-01|\n| 2  |     2     |    11     |    1    | cancelled_by_driver|2013-10-01|\n| 3  |     3     |    12     |    6    |     completed      |2013-10-01|\n| 4  |     4     |    13     |    6    | cancelled_by_client|2013-10-01|\n| 5  |     1     |    10     |    1    |     completed      |2013-10-02|\n| 6  |     2     |    11     |    6    |     completed      |2013-10-02|\n| 7  |     3     |    12     |    6    |     completed      |2013-10-02|\n| 8  |     2     |    12     |    12   |     completed      |2013-10-03|\n| 9  |     3     |    10     |    12   |     completed      |2013-10-03| \n| 10 |     4     |    13     |    12   | cancelled_by_driver|2013-10-03|\n+----+-----------+-----------+---------+--------------------+----------+\n</pre>\n\n<p>The <code>Users</code> table holds all users. Each user has an unique Users_Id, and Role is an ENUM type of (&lsquo;client&rsquo;, &lsquo;driver&rsquo;, &lsquo;partner&rsquo;).</p>\n\n<pre>\n+----------+--------+--------+\n| Users_Id | Banned |  Role  |\n+----------+--------+--------+\n|    1     |   No   | client |\n|    2     |   Yes  | client |\n|    3     |   No   | client |\n|    4     |   No   | client |\n|    10    |   No   | driver |\n|    11    |   No   | driver |\n|    12    |   No   | driver |\n|    13    |   No   | driver |\n+----------+--------+--------+\n</pre>\n\n<p>Write a SQL query to find the cancellation rate of requests made by unbanned users (both client and driver must be unbanned)&nbsp;between <strong>Oct 1, 2013</strong> and <strong>Oct 3, 2013</strong>. The cancellation rate is computed by dividing the number of canceled (by client or driver) requests&nbsp;made by unbanned users by the total number of requests&nbsp;made by unbanned users.</p>\n\n<p>For the above tables, your SQL query should return the following rows with the cancellation rate being rounded to <em>two</em> decimal places.</p>\n\n<pre>\n+------------+-------------------+\n|     Day    | Cancellation Rate |\n+------------+-------------------+\n| 2013-10-01 |       0.33        |\n| 2013-10-02 |       0.00        |\n| 2013-10-03 |       0.50        |\n+------------+-------------------+\n</pre>\n\n<p><strong>Credits:</strong><br />\nSpecial thanks to <a href=\"https://leetcode.com/discuss/user/cak1erlizhou\">@cak1erlizhou</a> for contributing this question, writing the problem description and adding part of the test cases.</p>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"70.8K\", \"totalSubmission\": \"201.9K\", \"totalAcceptedRaw\": 70849, \"totalSubmissionRaw\": 201886, \"acRate\": \"35.1%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "248", "name": "strobogrammatic-number-iii", "content": {"questionId": "248", "questionFrontendId": "248", "questionTitle": "Strobogrammatic Number III", "questionTitleSlug": "strobogrammatic-number-iii", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"29.3K\", \"totalSubmission\": \"73.3K\", \"totalAcceptedRaw\": 29303, \"totalSubmissionRaw\": 73286, \"acRate\": \"40.0%\"}", "similarQuestions": "[{\"title\": \"Strobogrammatic Number\", \"titleSlug\": \"strobogrammatic-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Strobogrammatic Number II\", \"titleSlug\": \"strobogrammatic-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Recursion", "slug": "recursion"}]}}, {"id": "239", "name": "sliding-window-maximum", "content": {"questionId": "239", "questionFrontendId": "239", "questionTitle": "Sliding Window Maximum", "questionTitleSlug": "sliding-window-maximum", "content": "<p>You are given an array of integers&nbsp;<code>nums</code>, there is a sliding window of size <code>k</code> which is moving from the very left of the array to the very right. You can only see the <code>k</code> numbers in the window. Each time the sliding window moves right by one position.</p>\n\n<p>Return <em>the max sliding window</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,-1,-3,5,3,6,7], k = 3\n<strong>Output:</strong> [3,3,5,5,6,7]\n<strong>Explanation:</strong> \nWindow position                Max\n---------------               -----\n[1  3  -1] -3  5  3  6  7       <strong>3</strong>\n 1 [3  -1  -3] 5  3  6  7       <strong>3</strong>\n 1  3 [-1  -3  5] 3  6  7      <strong> 5</strong>\n 1  3  -1 [-3  5  3] 6  7       <strong>5</strong>\n 1  3  -1  -3 [5  3  6] 7       <strong>6</strong>\n 1  3  -1  -3  5 [3  6  7]      <strong>7</strong>\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1], k = 1\n<strong>Output:</strong> [1]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,-1], k = 1\n<strong>Output:</strong> [1,-1]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [9,11], k = 2\n<strong>Output:</strong> [11]\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,-2], k = 2\n<strong>Output:</strong> [4]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= nums.length</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"345.5K\", \"totalSubmission\": \"778.2K\", \"totalAcceptedRaw\": 345542, \"totalSubmissionRaw\": 778188, \"acRate\": \"44.4%\"}", "similarQuestions": "[{\"title\": \"Minimum Window Substring\", \"titleSlug\": \"minimum-window-substring\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Min Stack\", \"titleSlug\": \"min-stack\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Longest Substring with At Most Two Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-two-distinct-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paint House II\", \"titleSlug\": \"paint-house-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Jump Game VI\", \"titleSlug\": \"jump-game-vi\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Heap", "slug": "heap"}, {"name": "Sliding Window", "slug": "sliding-window"}, {"name": "Dequeue", "slug": "dequeue"}]}}, {"id": "233", "name": "number-of-digit-one", "content": {"questionId": "233", "questionFrontendId": "233", "questionTitle": "Number of Digit One", "questionTitleSlug": "number-of-digit-one", "content": "<p>Given an integer <code>n</code>, count <em>the total number of digit </em><code>1</code><em> appearing in all non-negative integers less than or equal to</em> <code>n</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 13\n<strong>Output:</strong> 6\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 0\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 2 * 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"51.1K\", \"totalSubmission\": \"161.9K\", \"totalAcceptedRaw\": 51143, \"totalSubmissionRaw\": 161882, \"acRate\": \"31.6%\"}", "similarQuestions": "[{\"title\": \"Factorial Trailing Zeroes\", \"titleSlug\": \"factorial-trailing-zeroes\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Digit Count in Range\", \"titleSlug\": \"digit-count-in-range\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}]}}, {"id": "224", "name": "basic-calculator", "content": {"questionId": "224", "questionFrontendId": "224", "questionTitle": "Basic Calculator", "questionTitleSlug": "basic-calculator", "content": "<p>Implement a basic calculator to evaluate a simple expression string.</p>\r\n\r\n<p>The expression string may contain open <code>(</code> and closing parentheses <code>)</code>, the plus <code>+</code> or minus sign <code>-</code>, <b>non-negative</b> integers and empty spaces <code> </code>.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> &quot;1 + 1&quot;\r\n<strong>Output:</strong> 2\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> &quot; 2-1 + 2 &quot;\r\n<strong>Output:</strong> 3</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> &quot;(1+(4+5+2)-3)+(6+8)&quot;\r\n<strong>Output:</strong> 23</pre>\r\n<b>Note:</b>\r\n\r\n<ul>\r\n\t<li>You may assume that the given expression is always valid.</li>\r\n\t<li><b>Do not</b> use the <code>eval</code> built-in library function.</li>\r\n</ul>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"187.1K\", \"totalSubmission\": \"493.8K\", \"totalAcceptedRaw\": 187115, \"totalSubmissionRaw\": 493765, \"acRate\": \"37.9%\"}", "similarQuestions": "[{\"title\": \"Evaluate Reverse Polish Notation\", \"titleSlug\": \"evaluate-reverse-polish-notation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator II\", \"titleSlug\": \"basic-calculator-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Different Ways to Add Parentheses\", \"titleSlug\": \"different-ways-to-add-parentheses\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Expression Add Operators\", \"titleSlug\": \"expression-add-operators\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator III\", \"titleSlug\": \"basic-calculator-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Stack", "slug": "stack"}]}}, {"id": "218", "name": "the-skyline-problem", "content": {"questionId": "218", "questionFrontendId": "218", "questionTitle": "The Skyline Problem", "questionTitleSlug": "the-skyline-problem", "content": "<p>A city&#39;s <strong>skyline</strong> is the outer contour of the silhouette formed by all the buildings in that city when viewed from a distance. Given the locations and heights of all the buildings, return <em>the <strong>skyline</strong> formed by these buildings collectively</em>.</p>\n\n<p>The geometric information of each building is given in the array <code>buildings</code> where <code>buildings[i] = [left<sub>i</sub>, right<sub>i</sub>, height<sub>i</sub>]</code>:</p>\n\n<ul>\n\t<li><code>left<sub>i</sub></code> is the x coordinate of the left edge of the <code>i<sup>th</sup></code> building.</li>\n\t<li><code>right<sub>i</sub></code> is the x coordinate of the right edge of the <code>i<sup>th</sup></code> building.</li>\n\t<li><code>height<sub>i</sub></code> is the height of the <code>i<sup>th</sup></code> building.</li>\n</ul>\n\n<p>You may assume all buildings are perfect rectangles grounded on an absolutely flat surface at height <code>0</code>.</p>\n\n<p>The <strong>skyline</strong> should be represented as a list of &quot;key points&quot; <strong>sorted by their x-coordinate</strong> in the form <code>[[x<sub>1</sub>,y<sub>1</sub>],[x<sub>2</sub>,y<sub>2</sub>],...]</code>. Each key point is the left endpoint of some horizontal segment in the skyline except the last point in the list, which always has a y-coordinate <code>0</code> and is used to mark the skyline&#39;s termination where the rightmost building ends. Any ground between the leftmost and rightmost buildings should be part of the skyline&#39;s contour.</p>\n\n<p><b>Note:</b> There must be no consecutive horizontal lines of equal height in the output skyline. For instance, <code>[...,[2 3],[4 5],[7 5],[11 5],[12 7],...]</code> is not acceptable; the three lines of height 5 should be merged into one in the final output as such: <code>[...,[2 3],[4 5],[12 7],...]</code></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/01/merged.jpg\" style=\"width: 800px; height: 331px;\" />\n<pre>\n<strong>Input:</strong> buildings = [[2,9,10],[3,7,15],[5,12,12],[15,20,10],[19,24,8]]\n<strong>Output:</strong> [[2,10],[3,15],[7,12],[12,0],[15,10],[20,8],[24,0]]\n<strong>Explanation:</strong>\nFigure A shows the buildings of the input.\nFigure B shows the skyline formed by those buildings. The red points in figure B represent the key points in the output list.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> buildings = [[0,2,3],[2,5,3]]\n<strong>Output:</strong> [[0,3],[5,0]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= buildings.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= left<sub>i</sub> &lt; right<sub>i</sub> &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>1 &lt;= height<sub>i</sub> &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>buildings</code> is sorted by <code>left<sub>i</sub></code> in&nbsp;non-decreasing order.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"156.2K\", \"totalSubmission\": \"435.2K\", \"totalAcceptedRaw\": 156232, \"totalSubmissionRaw\": 435222, \"acRate\": \"35.9%\"}", "similarQuestions": "[{\"title\": \"Falling Squares\", \"titleSlug\": \"falling-squares\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Divide and Conquer", "slug": "divide-and-conquer"}, {"name": "Heap", "slug": "heap"}, {"name": "Binary Indexed Tree", "slug": "binary-indexed-tree"}, {"name": "Segment Tree", "slug": "segment-tree"}, {"name": "Line Sweep", "slug": "line-sweep"}]}}, {"id": "214", "name": "shortest-palindrome", "content": {"questionId": "214", "questionFrontendId": "214", "questionTitle": "Shortest Palindrome", "questionTitleSlug": "shortest-palindrome", "content": "<p>Given a string <em><b>s</b></em>, you can convert it to a palindrome by adding characters in front of it. Find and return the shortest palindrome you can find by performing this transformation.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"aacecaaa\"\n<strong>Output:</strong> \"aaacecaaa\"\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"abcd\"\n<strong>Output:</strong> \"dcbabcd\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of lowercase English letters only.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"108.1K\", \"totalSubmission\": \"355.9K\", \"totalAcceptedRaw\": 108077, \"totalSubmissionRaw\": 355864, \"acRate\": \"30.4%\"}", "similarQuestions": "[{\"title\": \"Longest Palindromic Substring\", \"titleSlug\": \"longest-palindromic-substring\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Implement strStr()\", \"titleSlug\": \"implement-strstr\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Palindrome Pairs\", \"titleSlug\": \"palindrome-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "212", "name": "word-search-ii", "content": {"questionId": "212", "questionFrontendId": "212", "questionTitle": "Word Search II", "questionTitleSlug": "word-search-ii", "content": "<p>Given an <code>m x n</code> <code>board</code>&nbsp;of characters and a list of strings <code>words</code>, return <em>all words on the board</em>.</p>\n\n<p>Each word must be constructed from letters of sequentially adjacent cells, where <strong>adjacent cells</strong> are horizontally or vertically neighboring. The same letter cell may not be used more than once in a word.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/07/search1.jpg\" style=\"width: 322px; height: 322px;\" />\n<pre>\n<strong>Input:</strong> board = [[&quot;o&quot;,&quot;a&quot;,&quot;a&quot;,&quot;n&quot;],[&quot;e&quot;,&quot;t&quot;,&quot;a&quot;,&quot;e&quot;],[&quot;i&quot;,&quot;h&quot;,&quot;k&quot;,&quot;r&quot;],[&quot;i&quot;,&quot;f&quot;,&quot;l&quot;,&quot;v&quot;]], words = [&quot;oath&quot;,&quot;pea&quot;,&quot;eat&quot;,&quot;rain&quot;]\n<strong>Output:</strong> [&quot;eat&quot;,&quot;oath&quot;]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/07/search2.jpg\" style=\"width: 162px; height: 162px;\" />\n<pre>\n<strong>Input:</strong> board = [[&quot;a&quot;,&quot;b&quot;],[&quot;c&quot;,&quot;d&quot;]], words = [&quot;abcb&quot;]\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == board.length</code></li>\n\t<li><code>n == board[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 12</code></li>\n\t<li><code>board[i][j]</code> is a lowercase English letter.</li>\n\t<li><code>1 &lt;= words.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 10</code></li>\n\t<li><code>words[i]</code> consists of lowercase English letters.</li>\n\t<li>All the strings of <code>words</code> are unique.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"261K\", \"totalSubmission\": \"720K\", \"totalAcceptedRaw\": 261006, \"totalSubmissionRaw\": 720002, \"acRate\": \"36.3%\"}", "similarQuestions": "[{\"title\": \"Word Search\", \"titleSlug\": \"word-search\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Unique Paths III\", \"titleSlug\": \"unique-paths-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}, {"name": "Trie", "slug": "trie"}]}}, {"id": "188", "name": "best-time-to-buy-and-sell-stock-iv", "content": {"questionId": "188", "questionFrontendId": "188", "questionTitle": "Best Time to Buy and Sell Stock IV", "questionTitleSlug": "best-time-to-buy-and-sell-stock-iv", "content": "<p>You are given&nbsp;an integer array <code>prices</code> where <code>prices[i]</code>&nbsp;is the price of a given stock on the <code>i<sup>th</sup></code> day.</p>\n\n<p>Design an algorithm to find the maximum profit. You may complete at most <code>k</code> transactions.</p>\n\n<p><strong>Notice</strong> that you may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 2, prices = [2,4,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Buy on day 1 (price = 2) and sell on day 2 (price = 4), profit = 4-2 = 2.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 2, prices = [3,2,6,5,0,3]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> Buy on day 2 (price = 2) and sell on day 3 (price = 6), profit = 6-2 = 4. Then buy on day 5 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= k &lt;= 10<sup>9</sup></code></li>\n\t<li><code>0 &lt;= prices.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= prices[i] &lt;= 1000</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"163.6K\", \"totalSubmission\": \"563.2K\", \"totalAcceptedRaw\": 163636, \"totalSubmissionRaw\": 563199, \"acRate\": \"29.1%\"}", "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock\", \"titleSlug\": \"best-time-to-buy-and-sell-stock\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock II\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock III\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "185", "name": "department-top-three-salaries", "content": {"questionId": "185", "questionFrontendId": "185", "questionTitle": "Department Top Three Salaries", "questionTitleSlug": "department-top-three-salaries", "content": "<p>The <code>Employee</code> table holds all employees. Every employee has an Id, and there is also a column for the department Id.</p>\r\n\r\n<pre>\r\n+----+-------+--------+--------------+\r\n| Id | Name  | Salary | DepartmentId |\r\n+----+-------+--------+--------------+\r\n| 1  | Joe   | 85000  | 1            |\r\n| 2  | Henry | 80000  | 2            |\r\n| 3  | Sam   | 60000  | 2            |\r\n| 4  | Max   | 90000  | 1            |\r\n| 5  | Janet | 69000  | 1            |\r\n| 6  | Randy | 85000  | 1            |\r\n| 7  | Will  | 70000  | 1            |\r\n+----+-------+--------+--------------+\r\n</pre>\r\n\r\n<p>The <code>Department</code> table holds all departments of the company.</p>\r\n\r\n<pre>\r\n+----+----------+\r\n| Id | Name     |\r\n+----+----------+\r\n| 1  | IT       |\r\n| 2  | Sales    |\r\n+----+----------+\r\n</pre>\r\n\r\n<p>Write a SQL query to find employees who earn the top three salaries in each of the department. For the above tables, your SQL query should return the following rows (order of rows does not matter).</p>\r\n\r\n<pre>\r\n+------------+----------+--------+\r\n| Department | Employee | Salary |\r\n+------------+----------+--------+\r\n| IT         | Max      | 90000  |\r\n| IT         | Randy    | 85000  |\r\n| IT         | Joe      | 85000  |\r\n| IT         | Will     | 70000  |\r\n| Sales      | Henry    | 80000  |\r\n| Sales      | Sam      | 60000  |\r\n+------------+----------+--------+\r\n</pre>\r\n\r\n<p><strong>Explanation:</strong></p>\r\n\r\n<p>In IT department, Max earns the highest salary, both Randy and Joe earn the second highest salary, and Will earns the third highest salary. There are only two employees in the Sales department, Henry earns the highest salary while Sam earns the second highest salary.</p>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"95K\", \"totalSubmission\": \"252.9K\", \"totalAcceptedRaw\": 94980, \"totalSubmissionRaw\": 252922, \"acRate\": \"37.6%\"}", "similarQuestions": "[]", "categoryTitle": "Database", "topicTags": []}}, {"id": "174", "name": "dungeon-game", "content": {"questionId": "174", "questionFrontendId": "174", "questionTitle": "Dungeon Game", "questionTitleSlug": "dungeon-game", "content": "<style type=\"text/css\">table.dungeon, .dungeon th, .dungeon td {\r\n  border:3px solid black;\r\n}\r\n\r\n .dungeon th, .dungeon td {\r\n    text-align: center;\r\n    height: 70px;\r\n    width: 70px;\r\n}\r\n</style>\r\n<p>The demons had captured the princess (<strong>P</strong>) and imprisoned her in the bottom-right corner of a dungeon. The dungeon consists of M x N rooms laid out in a 2D grid. Our valiant knight (<strong>K</strong>) was initially positioned in the top-left room and must fight his way through the dungeon to rescue the princess.</p>\r\n\r\n<p>The knight has an initial health point represented by a positive integer. If at any point his health point drops to 0 or below, he dies immediately.</p>\r\n\r\n<p>Some of the rooms are guarded by demons, so the knight loses health (<em>negative</em> integers) upon entering these rooms; other rooms are either empty (<em>0&#39;s</em>) or contain magic orbs that increase the knight&#39;s health (<em>positive</em> integers).</p>\r\n\r\n<p>In order to reach the princess as quickly as possible, the knight decides to move only rightward or downward in each step.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Write a function to determine the knight&#39;s minimum initial health so that he is able to rescue the princess.</strong></p>\r\n\r\n<p>For example, given the dungeon below, the initial health of the knight must be at least <strong>7</strong> if he follows the optimal path <code>RIGHT-&gt; RIGHT -&gt; DOWN -&gt; DOWN</code>.</p>\r\n\r\n<table class=\"dungeon\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>-2 (K)</td>\r\n\t\t\t<td>-3</td>\r\n\t\t\t<td>3</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>-5</td>\r\n\t\t\t<td>-10</td>\r\n\t\t\t<td>1</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>10</td>\r\n\t\t\t<td>30</td>\r\n\t\t\t<td>-5 (P)</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li>The knight&#39;s health has no upper bound.</li>\r\n\t<li>Any room can contain threats or power-ups, even the first room the knight enters and the bottom-right room where the princess is imprisoned.</li>\r\n</ul>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"118.2K\", \"totalSubmission\": \"358.2K\", \"totalAcceptedRaw\": 118232, \"totalSubmissionRaw\": 358244, \"acRate\": \"33.0%\"}", "similarQuestions": "[{\"title\": \"Unique Paths\", \"titleSlug\": \"unique-paths\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Path Sum\", \"titleSlug\": \"minimum-path-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Cherry Pickup\", \"titleSlug\": \"cherry-pickup\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Binary Search", "slug": "binary-search"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "164", "name": "maximum-gap", "content": {"questionId": "164", "questionFrontendId": "164", "questionTitle": "Maximum Gap", "questionTitleSlug": "maximum-gap", "content": "<p>Given an unsorted array, find the maximum difference between the successive elements in its sorted form.</p>\r\n\r\n<p>Return 0 if the array contains less than 2 elements.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [3,6,9,1]\r\n<strong>Output:</strong> 3\r\n<strong>Explanation:</strong> The sorted form of the array is [1,3,6,9], either\r\n&nbsp;            (3,6) or (6,9) has the maximum difference 3.</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [10]\r\n<strong>Output:</strong> 0\r\n<strong>Explanation:</strong> The array contains less than 2 elements, therefore return 0.</pre>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ul>\r\n\t<li>You may assume all elements in the array are non-negative integers and fit in the 32-bit signed integer range.</li>\r\n\t<li>Try to solve it in linear time/space.</li>\r\n</ul>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"96.4K\", \"totalSubmission\": \"264.2K\", \"totalAcceptedRaw\": 96366, \"totalSubmissionRaw\": 264222, \"acRate\": \"36.5%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Sort", "slug": "sort"}]}}, {"id": "158", "name": "read-n-characters-given-read4-ii-call-multiple-times", "content": {"questionId": "158", "questionFrontendId": "158", "questionTitle": "Read N Characters Given Read4 II - Call multiple times", "questionTitleSlug": "read-n-characters-given-read4-ii-call-multiple-times", "content": null, "difficulty": "Hard", "stats": "{\"totalAccepted\": \"121.8K\", \"totalSubmission\": \"338K\", \"totalAcceptedRaw\": 121778, \"totalSubmissionRaw\": 338046, \"acRate\": \"36.0%\"}", "similarQuestions": "[{\"title\": \"Read N Characters Given Read4\", \"titleSlug\": \"read-n-characters-given-read4\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "154", "name": "find-minimum-in-rotated-sorted-array-ii", "content": {"questionId": "154", "questionFrontendId": "154", "questionTitle": "Find Minimum in Rotated Sorted Array II", "questionTitleSlug": "find-minimum-in-rotated-sorted-array-ii", "content": "<p>Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.</p>\r\n\r\n<p>(i.e., &nbsp;<code>[0,1,2,4,5,6,7]</code>&nbsp;might become &nbsp;<code>[4,5,6,7,0,1,2]</code>).</p>\r\n\r\n<p>Find the minimum element.</p>\r\n\r\n<p>The array may contain duplicates.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [1,3,5]\r\n<strong>Output:</strong> 1</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [2,2,2,0,1]\r\n<strong>Output:</strong> 0</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li>This is a follow up problem to&nbsp;<a href=\"https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/description/\">Find Minimum in Rotated Sorted Array</a>.</li>\r\n\t<li>Would allow duplicates affect the run-time complexity? How and why?</li>\r\n</ul>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"226.5K\", \"totalSubmission\": \"541.1K\", \"totalAcceptedRaw\": 226457, \"totalSubmissionRaw\": 541131, \"acRate\": \"41.8%\"}", "similarQuestions": "[{\"title\": \"Find Minimum in Rotated Sorted Array\", \"titleSlug\": \"find-minimum-in-rotated-sorted-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Binary Search", "slug": "binary-search"}]}}, {"id": "149", "name": "max-points-on-a-line", "content": {"questionId": "149", "questionFrontendId": "149", "questionTitle": "Max Points on a Line", "questionTitleSlug": "max-points-on-a-line", "content": "<p>Given <em>n</em> points on a 2D plane, find the maximum number of points that lie on the same straight line.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [[1,1],[2,2],[3,3]]\r\n<strong>Output:</strong> 3\r\n<strong>Explanation:</strong>\r\n^\r\n|\r\n| &nbsp; &nbsp; &nbsp; &nbsp;o\r\n| &nbsp; &nbsp; o\r\n| &nbsp;o &nbsp;\r\n+-------------&gt;\r\n0 &nbsp;1 &nbsp;2 &nbsp;3  4\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]]\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong>\r\n^\r\n|\r\n|  o\r\n| &nbsp;&nbsp;&nbsp;&nbsp;o&nbsp;&nbsp;      o\r\n| &nbsp;&nbsp;&nbsp;&nbsp;   o\r\n| &nbsp;o &nbsp;      o\r\n+-------------------&gt;\r\n0 &nbsp;1 &nbsp;2 &nbsp;3 &nbsp;4 &nbsp;5 &nbsp;6\r\n</pre>\r\n\r\n<p><strong>NOTE:</strong>&nbsp;input types have been changed on April 15, 2019. Please reset to default code definition to get new method signature.</p>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"166.8K\", \"totalSubmission\": \"970.2K\", \"totalAcceptedRaw\": 166848, \"totalSubmissionRaw\": 970179, \"acRate\": \"17.2%\"}", "similarQuestions": "[{\"title\": \"Line Reflection\", \"titleSlug\": \"line-reflection\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Math", "slug": "math"}]}}, {"id": "140", "name": "word-break-ii", "content": {"questionId": "140", "questionFrontendId": "140", "questionTitle": "Word Break II", "questionTitleSlug": "word-break-ii", "content": "<p>Given a <strong>non-empty</strong> string <em>s</em> and a dictionary <em>wordDict</em> containing a list of <strong>non-empty</strong> words, add spaces in <em>s</em> to construct a sentence where each word is a valid dictionary word.&nbsp;Return all such possible sentences.</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li>The same word in the dictionary may be reused multiple times in the segmentation.</li>\r\n\t<li>You may assume the dictionary does not contain duplicate words.</li>\r\n</ul>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:\r\n</strong>s = &quot;<code>catsanddog</code>&quot;\r\nwordDict = <code>[&quot;cat&quot;, &quot;cats&quot;, &quot;and&quot;, &quot;sand&quot;, &quot;dog&quot;]</code>\r\n<strong>Output:\r\n</strong><code>[\r\n&nbsp; &quot;cats and dog&quot;,\r\n&nbsp; &quot;cat sand dog&quot;\r\n]</code>\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:\r\n</strong>s = &quot;pineapplepenapple&quot;\r\nwordDict = [&quot;apple&quot;, &quot;pen&quot;, &quot;applepen&quot;, &quot;pine&quot;, &quot;pineapple&quot;]\r\n<strong>Output:\r\n</strong>[\r\n&nbsp; &quot;pine apple pen apple&quot;,\r\n&nbsp; &quot;pineapple pen apple&quot;,\r\n&nbsp; &quot;pine applepen apple&quot;\r\n]\r\n<strong>Explanation:</strong> Note that you are allowed to reuse a dictionary word.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:\r\n</strong>s = &quot;catsandog&quot;\r\nwordDict = [&quot;cats&quot;, &quot;dog&quot;, &quot;sand&quot;, &quot;and&quot;, &quot;cat&quot;]\r\n<strong>Output:\r\n</strong>[]</pre>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"289.5K\", \"totalSubmission\": \"850.8K\", \"totalAcceptedRaw\": 289488, \"totalSubmissionRaw\": 850775, \"acRate\": \"34.0%\"}", "similarQuestions": "[{\"title\": \"Word Break\", \"titleSlug\": \"word-break\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Concatenated Words\", \"titleSlug\": \"concatenated-words\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "135", "name": "candy", "content": {"questionId": "135", "questionFrontendId": "135", "questionTitle": "Candy", "questionTitleSlug": "candy", "content": "<p>There are <em>N</em> children standing in a line. Each child is assigned a rating value.</p>\r\n\r\n<p>You are giving candies to these children subjected to the following requirements:</p>\r\n\r\n<ul>\r\n\t<li>Each child must have at least one candy.</li>\r\n\t<li>Children with a higher rating get more candies than their neighbors.</li>\r\n</ul>\r\n\r\n<p>What is the minimum candies you must give?</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [1,0,2]\r\n<strong>Output:</strong> 5\r\n<strong>Explanation:</strong> You can allocate to the first, second and third child with 2, 1, 2 candies respectively.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [1,2,2]\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> You can allocate to the first, second and third child with 1, 2, 1 candies respectively.\r\n             The third child gets 1 candy because it satisfies the above two conditions.\r\n</pre>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"144.4K\", \"totalSubmission\": \"443.3K\", \"totalAcceptedRaw\": 144437, \"totalSubmissionRaw\": 443277, \"acRate\": \"32.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Greedy", "slug": "greedy"}]}}, {"id": "132", "name": "palindrome-partitioning-ii", "content": {"questionId": "132", "questionFrontendId": "132", "questionTitle": "Palindrome Partitioning II", "questionTitleSlug": "palindrome-partitioning-ii", "content": "<p>Given a string <code>s</code>, partition <code>s</code> such that every substring of the partition is a palindrome.</p>\n\n<p>Return <em>the minimum cuts needed</em> for a palindrome partitioning of <code>s</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aab&quot;\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The palindrome partitioning [&quot;aa&quot;,&quot;b&quot;] could be produced using 1 cut.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;a&quot;\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ab&quot;\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 2000</code></li>\n\t<li><code>s</code> consists of lower-case English letters only.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"145.2K\", \"totalSubmission\": \"470.2K\", \"totalAcceptedRaw\": 145166, \"totalSubmissionRaw\": 470162, \"acRate\": \"30.9%\"}", "similarQuestions": "[{\"title\": \"Palindrome Partitioning\", \"titleSlug\": \"palindrome-partitioning\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "128", "name": "longest-consecutive-sequence", "content": {"questionId": "128", "questionFrontendId": "128", "questionTitle": "Longest Consecutive Sequence", "questionTitleSlug": "longest-consecutive-sequence", "content": "<p>Given an unsorted array of integers <code>nums</code>, return <em>the length of the longest consecutive elements sequence.</em></p>\n\n<p><strong>Follow up:</strong>&nbsp;Could you implement the <code>O(n)</code> solution?&nbsp;</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [100,4,200,1,3,2]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The longest consecutive elements sequence is <code>[1, 2, 3, 4]</code>. Therefore its length is 4.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,3,7,2,5,8,4,6,0,1]\n<strong>Output:</strong> 9\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"355.9K\", \"totalSubmission\": \"775.5K\", \"totalAcceptedRaw\": 355870, \"totalSubmissionRaw\": 775472, \"acRate\": \"45.9%\"}", "similarQuestions": "[{\"title\": \"Binary Tree Longest Consecutive Sequence\", \"titleSlug\": \"binary-tree-longest-consecutive-sequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Union Find", "slug": "union-find"}]}}, {"id": "126", "name": "word-ladder-ii", "content": {"questionId": "126", "questionFrontendId": "126", "questionTitle": "Word Ladder II", "questionTitleSlug": "word-ladder-ii", "content": "<p>Given two words (<em>beginWord</em> and <em>endWord</em>), and a dictionary&#39;s word list, find all shortest transformation sequence(s) from <em>beginWord</em> to <em>endWord</em>, such that:</p>\r\n\r\n<ol>\r\n\t<li>Only one letter can be changed at a time</li>\r\n\t<li>Each transformed word must exist in the word list. Note that <em>beginWord</em> is <em>not</em> a transformed word.</li>\r\n</ol>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li>Return an empty list if there is no such transformation sequence.</li>\r\n\t<li>All words have the same length.</li>\r\n\t<li>All words contain only lowercase alphabetic characters.</li>\r\n\t<li>You may assume no duplicates in the word list.</li>\r\n\t<li>You may assume <em>beginWord</em> and <em>endWord</em> are non-empty and are not the same.</li>\r\n</ul>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>\r\nbeginWord = &quot;hit&quot;,\r\nendWord = &quot;cog&quot;,\r\nwordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]\r\n\r\n<strong>Output:</strong>\r\n[\r\n  [&quot;hit&quot;,&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;cog&quot;],\r\n&nbsp; [&quot;hit&quot;,&quot;hot&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]\r\n]\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>\r\nbeginWord = &quot;hit&quot;\r\nendWord = &quot;cog&quot;\r\nwordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;]\r\n\r\n<strong>Output: </strong>[]\r\n\r\n<strong>Explanation:</strong>&nbsp;The endWord &quot;cog&quot; is not in wordList, therefore no possible<strong>&nbsp;</strong>transformation.\r\n</pre>\r\n\r\n<ul>\r\n</ul>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"208.9K\", \"totalSubmission\": \"900.7K\", \"totalAcceptedRaw\": 208927, \"totalSubmissionRaw\": 900718, \"acRate\": \"23.2%\"}", "similarQuestions": "[{\"title\": \"Word Ladder\", \"titleSlug\": \"word-ladder\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "String", "slug": "string"}, {"name": "Backtracking", "slug": "backtracking"}, {"name": "Breadth-first Search", "slug": "breadth-first-search"}]}}, {"id": "124", "name": "binary-tree-maximum-path-sum", "content": {"questionId": "124", "questionFrontendId": "124", "questionTitle": "Binary Tree Maximum Path Sum", "questionTitleSlug": "binary-tree-maximum-path-sum", "content": "<p>Given a <strong>non-empty</strong> binary tree, find the maximum path sum.</p>\r\n\r\n<p>For this problem, a path is defined as any node sequence from some starting node to any node in the tree along the parent-child connections. The path must contain <strong>at least one node</strong> and does not need to go through the root.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/13/exx1.jpg\" style=\"width: 322px; height: 182px;\" />\r\n<pre>\r\n<strong>Input:</strong> root = [1,2,3]\r\n<strong>Output:</strong> 6\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/13/exx2.jpg\" />\r\n<pre>\r\n<strong>Input:</strong> root = [-10,9,20,null,null,15,7]\r\n<strong>Output:</strong> 42\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li>The number of nodes in the tree is in the range <code>[0, 3 * 10<sup>4</sup>]</code>.</li>\r\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\r\n</ul>", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"445.1K\", \"totalSubmission\": \"1.3M\", \"totalAcceptedRaw\": 445134, \"totalSubmissionRaw\": 1267469, \"acRate\": \"35.1%\"}", "similarQuestions": "[{\"title\": \"Path Sum\", \"titleSlug\": \"path-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sum Root to Leaf Numbers\", \"titleSlug\": \"sum-root-to-leaf-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Path Sum IV\", \"titleSlug\": \"path-sum-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Univalue Path\", \"titleSlug\": \"longest-univalue-path\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Time Needed to Inform All Employees\", \"titleSlug\": \"time-needed-to-inform-all-employees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}, {"name": "Recursion", "slug": "recursion"}]}}, {"id": "123", "name": "best-time-to-buy-and-sell-stock-iii", "content": {"questionId": "123", "questionFrontendId": "123", "questionTitle": "Best Time to Buy and Sell Stock III", "questionTitleSlug": "best-time-to-buy-and-sell-stock-iii", "content": "<p>Say you have an array for which the <em>i</em><sup>th</sup> element is the price of a given stock on day <em>i</em>.</p>\n\n<p>Design an algorithm to find the maximum profit. You may complete at most <em>two</em> transactions.</p>\n\n<p><strong>Note:&nbsp;</strong>You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> prices = [3,3,5,0,0,3,1,4]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\nThen buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> prices = [1,2,3,4,5]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\nNote that you cannot buy on day 1, buy on day 2 and sell them later, as you are engaging multiple transactions at the same time. You must sell before buying again.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> prices = [7,6,4,3,1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> In this case, no transaction is done, i.e. max profit = 0.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> prices = [1]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;=&nbsp;prices.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;=&nbsp;prices[i] &lt;=&nbsp;10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"265.5K\", \"totalSubmission\": \"672.1K\", \"totalAcceptedRaw\": 265515, \"totalSubmissionRaw\": 672057, \"acRate\": \"39.5%\"}", "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock\", \"titleSlug\": \"best-time-to-buy-and-sell-stock\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock II\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock IV\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Sum of 3 Non-Overlapping Subarrays\", \"titleSlug\": \"maximum-sum-of-3-non-overlapping-subarrays\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "115", "name": "distinct-subsequences", "content": {"questionId": "115", "questionFrontendId": "115", "questionTitle": "Distinct Subsequences", "questionTitleSlug": "distinct-subsequences", "content": "<p>Given two strings <code>s</code> and <code>t</code>, return <em>the&nbsp;number of distinct subsequences of <code>s</code> which equals <code>t</code></em>.</p>\n\n<p>A string&#39;s <strong>subsequence</strong> is a new string formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., <code>&quot;ACE&quot;</code> is a subsequence of <code>&quot;ABCDE&quot;</code> while <code>&quot;AEC&quot;</code> is not).</p>\n\n<p>It&#39;s guaranteed the answer fits on a 32-bit signed integer.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;rabbbit&quot;, t = &quot;rabbit&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>\nAs shown below, there are 3 ways you can generate &quot;rabbit&quot; from S.\n<code><strong><u>rabb</u></strong>b<strong><u>it</u></strong></code>\n<code><strong><u>ra</u></strong>b<strong><u>bbit</u></strong></code>\n<code><strong><u>rab</u></strong>b<strong><u>bit</u></strong></code>\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;babgbag&quot;, t = &quot;bag&quot;\n<strong>Output:</strong> 5\n<strong>Explanation:</strong>\nAs shown below, there are 5 ways you can generate &quot;bag&quot; from S.\n<code><strong><u>ba</u></strong>b<u><strong>g</strong></u>bag</code>\n<code><strong><u>ba</u></strong>bgba<strong><u>g</u></strong></code>\n<code><u><strong>b</strong></u>abgb<strong><u>ag</u></strong></code>\n<code>ba<u><strong>b</strong></u>gb<u><strong>ag</strong></u></code>\n<code>babg<strong><u>bag</u></strong></code></pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length, t.length &lt;= 1000</code></li>\n\t<li><code>s</code> and <code>t</code> consist of English letters.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"152K\", \"totalSubmission\": \"387.2K\", \"totalAcceptedRaw\": 151978, \"totalSubmissionRaw\": 387194, \"acRate\": \"39.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "99", "name": "recover-binary-search-tree", "content": {"questionId": "99", "questionFrontendId": "99", "questionTitle": "Recover Binary Search Tree", "questionTitleSlug": "recover-binary-search-tree", "content": "<p>You are given the <code>root</code> of a binary search tree (BST), where exactly two nodes of the tree were swapped by mistake. <em>Recover the tree without changing its structure</em>.</p>\n\n<p><strong>Follow up:</strong> A solution using <code>O(n)</code> space is pretty straight forward. Could you devise a constant space solution?</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/28/recover1.jpg\" style=\"width: 422px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [1,3,null,null,2]\n<strong>Output:</strong> [3,1,null,null,2]\n<strong>Explanation:</strong> 3 cannot be a left child of 1 because 3 &gt; 1. Swapping 1 and 3 makes the BST valid.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/28/recover2.jpg\" style=\"width: 581px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [3,1,4,null,null,2]\n<strong>Output:</strong> [2,1,4,null,null,3]\n<strong>Explanation:</strong> 2 cannot be in the right subtree of 3 because 2 &lt; 3. Swapping 2 and 3 makes the BST valid.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[2, 1000]</code>.</li>\n\t<li><code>-2<sup>31</sup> &lt;= Node.val &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"195.6K\", \"totalSubmission\": \"466.4K\", \"totalAcceptedRaw\": 195574, \"totalSubmissionRaw\": 466392, \"acRate\": \"41.9%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Tree", "slug": "tree"}, {"name": "Depth-first Search", "slug": "depth-first-search"}]}}, {"id": "97", "name": "interleaving-string", "content": {"questionId": "97", "questionFrontendId": "97", "questionTitle": "Interleaving String", "questionTitleSlug": "interleaving-string", "content": "<p>Given strings <code>s1</code>, <code>s2</code>, and <code>s3</code>, find whether <code>s3</code> is formed by an <strong>interleaving</strong> of <code>s1</code> and <code>s2</code>.</p>\n\n<p>An <strong>interleaving</strong> of two strings <code>s</code> and <code>t</code> is a configuration where they are divided into <strong>non-empty</strong> substrings such that:</p>\n\n<ul>\n\t<li><code>s = s<sub>1</sub> + s<sub>2</sub> + ... + s<sub>n</sub></code></li>\n\t<li><code>t = t<sub>1</sub> + t<sub>2</sub> + ... + t<sub>m</sub></code></li>\n\t<li><code>|n - m| &lt;= 1</code></li>\n\t<li>The <strong>interleaving</strong> is <code>s<sub>1</sub> + t<sub>1</sub> + s<sub>2</sub> + t<sub>2</sub> + s<sub>3</sub> + t<sub>3</sub> + ...</code> or <code>t<sub>1</sub> + s<sub>1</sub> + t<sub>2</sub> + s<sub>2</sub> + t<sub>3</sub> + s<sub>3</sub> + ...</code></li>\n</ul>\n\n<p><strong>Note:</strong> <code>a + b</code> is the concatenation of strings <code>a</code> and <code>b</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/02/interleave.jpg\" style=\"width: 561px; height: 203px;\" />\n<pre>\n<strong>Input:</strong> s1 = &quot;aabcc&quot;, s2 = &quot;dbbca&quot;, s3 = &quot;aadbbcbcac&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s1 = &quot;aabcc&quot;, s2 = &quot;dbbca&quot;, s3 = &quot;aadbbbaccc&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s1 = &quot;&quot;, s2 = &quot;&quot;, s3 = &quot;&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s1.length, s2.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= s3.length &lt;= 200</code></li>\n\t<li><code>s1</code>, <code>s2</code>, and <code>s3</code> consist of lower-case English letters.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"170K\", \"totalSubmission\": \"526.7K\", \"totalAcceptedRaw\": 170018, \"totalSubmissionRaw\": 526658, \"acRate\": \"32.3%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "87", "name": "scramble-string", "content": {"questionId": "87", "questionFrontendId": "87", "questionTitle": "Scramble String", "questionTitleSlug": "scramble-string", "content": "<p>We can scramble a string s to get a string t using the following algorithm:</p>\n\n<ol>\n\t<li>If the length of the string is 1, stop.</li>\n\t<li>If the length of the string is &gt; 1, do the following:\n\t<ul>\n\t\t<li>Split the string into two non-empty substrings at a random index, i.e., if the string is <code>s</code>, divide it to <code>x</code> and <code>y</code> where <code>s = x + y</code>.</li>\n\t\t<li><strong>Randomly</strong>&nbsp;decide to swap the two substrings or to keep them in the same order. i.e., after this step, <code>s</code> may become <code>s = x + y</code> or <code>s = y + x</code>.</li>\n\t\t<li>Apply step 1 recursively on each of the two substrings <code>x</code> and <code>y</code>.</li>\n\t</ul>\n\t</li>\n</ol>\n\n<p>Given two strings <code>s1</code> and <code>s2</code> of <strong>the same length</strong>, return <code>true</code> if <code>s2</code> is a scrambled string of <code>s1</code>, otherwise, return <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s1 = &quot;great&quot;, s2 = &quot;rgeat&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> One possible scenario applied on s1 is:\n&quot;great&quot; --&gt; &quot;gr/eat&quot; // divide at random index.\n&quot;gr/eat&quot; --&gt; &quot;gr/eat&quot; // random decision is not to swap the two substrings and keep them in order.\n&quot;gr/eat&quot; --&gt; &quot;g/r / e/at&quot; // apply the same algorithm recursively on both substrings. divide at ranom index each of them.\n&quot;g/r / e/at&quot; --&gt; &quot;r/g / e/at&quot; // random decision was to swap the first substring and to keep the second substring in the same order.\n&quot;r/g / e/at&quot; --&gt; &quot;r/g / e/ a/t&quot; // again apply the algorithm recursively, divide &quot;at&quot; to &quot;a/t&quot;.\n&quot;r/g / e/ a/t&quot; --&gt; &quot;r/g / e/ a/t&quot; // random decision is to keep both substrings in the same order.\nThe algorithm stops now and the result string is &quot;rgeat&quot; which is s2.\nAs there is one possible scenario that led s1 to be scrambled to s2, we return true.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s1 = &quot;abcde&quot;, s2 = &quot;caebd&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s1 = &quot;a&quot;, s2 = &quot;a&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>s1.length == s2.length</code></li>\n\t<li><code>1 &lt;= s1.length &lt;= 30</code></li>\n\t<li><code>s1</code> and <code>s2</code> consist of lower-case English letters.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"118.3K\", \"totalSubmission\": \"344.1K\", \"totalAcceptedRaw\": 118295, \"totalSubmissionRaw\": 344067, \"acRate\": \"34.4%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "85", "name": "maximal-rectangle", "content": {"questionId": "85", "questionFrontendId": "85", "questionTitle": "Maximal Rectangle", "questionTitleSlug": "maximal-rectangle", "content": "<p>Given a <code>rows x cols</code>&nbsp;binary <code>matrix</code> filled with <code>0</code>&#39;s and <code>1</code>&#39;s, find the largest rectangle containing only <code>1</code>&#39;s and return <em>its area</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/14/maximal.jpg\" style=\"width: 402px; height: 322px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;],[&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],[&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],[&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;]]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The maximal rectangle is shown in the above picture.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix = []\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix = [[&quot;0&quot;]]\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix = [[&quot;1&quot;]]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix = [[&quot;0&quot;,&quot;0&quot;]]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>rows == matrix.length</code></li>\n\t<li><code>cols == matrix.length</code></li>\n\t<li><code>0 &lt;= row, cols &lt;= 200</code></li>\n\t<li><code>matrix[i][j]</code> is <code>&#39;0&#39;</code> or <code>&#39;1&#39;</code>.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"207.4K\", \"totalSubmission\": \"532K\", \"totalAcceptedRaw\": 207431, \"totalSubmissionRaw\": 532008, \"acRate\": \"39.0%\"}", "similarQuestions": "[{\"title\": \"Largest Rectangle in Histogram\", \"titleSlug\": \"largest-rectangle-in-histogram\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximal Square\", \"titleSlug\": \"maximal-square\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Hash Table", "slug": "hash-table"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Stack", "slug": "stack"}]}}, {"id": "84", "name": "largest-rectangle-in-histogram", "content": {"questionId": "84", "questionFrontendId": "84", "questionTitle": "Largest Rectangle in Histogram", "questionTitleSlug": "largest-rectangle-in-histogram", "content": "<p>Given <em>n</em> non-negative integers representing the histogram&#39;s bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/histogram.png\" style=\"width: 188px; height: 204px;\" /><br />\r\n<small>Above is a histogram where width of each bar is 1, given height = <code>[2,1,5,6,2,3]</code>.</small></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/histogram_area.png\" style=\"width: 188px; height: 204px;\" /><br />\r\n<small>The largest rectangle is shown in the shaded area, which has area = <code>10</code> unit.</small></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [2,1,5,6,2,3]\r\n<strong>Output:</strong> 10\r\n</pre>\r\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"310.9K\", \"totalSubmission\": \"857.9K\", \"totalAcceptedRaw\": 310900, \"totalSubmissionRaw\": 857926, \"acRate\": \"36.2%\"}", "similarQuestions": "[{\"title\": \"Maximal Rectangle\", \"titleSlug\": \"maximal-rectangle\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Stack", "slug": "stack"}]}}, {"id": "76", "name": "minimum-window-substring", "content": {"questionId": "76", "questionFrontendId": "76", "questionTitle": "Minimum Window Substring", "questionTitleSlug": "minimum-window-substring", "content": "<p>Given two strings <code>s</code> and <code>t</code>, return <em>the minimum window in <code>s</code> which will contain all the characters in <code>t</code></em>. If there is no such window in <code>s</code> that covers all characters in <code>t</code>, return <em>the empty string <code>&quot;&quot;</code></em>.</p>\n\n<p><strong>Note</strong> that If there is such a window, it is&nbsp;guaranteed that there will always be only one unique minimum window in <code>s</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"ADOBECODEBANC\", t = \"ABC\"\n<strong>Output:</strong> \"BANC\"\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"a\", t = \"a\"\n<strong>Output:</strong> \"a\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length, t.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> and <code>t</code> consist of English letters.</li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you find an algorithm that runs in <code>O(n)</code> time?", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"471.3K\", \"totalSubmission\": \"1.3M\", \"totalAcceptedRaw\": 471324, \"totalSubmissionRaw\": 1326180, \"acRate\": \"35.5%\"}", "similarQuestions": "[{\"title\": \"Substring with Concatenation of All Words\", \"titleSlug\": \"substring-with-concatenation-of-all-words\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Size Subarray Sum\", \"titleSlug\": \"minimum-size-subarray-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sliding Window Maximum\", \"titleSlug\": \"sliding-window-maximum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Permutation in String\", \"titleSlug\": \"permutation-in-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Smallest Range Covering Elements from K Lists\", \"titleSlug\": \"smallest-range-covering-elements-from-k-lists\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Window Subsequence\", \"titleSlug\": \"minimum-window-subsequence\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Two Pointers", "slug": "two-pointers"}, {"name": "String", "slug": "string"}, {"name": "Sliding Window", "slug": "sliding-window"}]}}, {"id": "72", "name": "edit-distance", "content": {"questionId": "72", "questionFrontendId": "72", "questionTitle": "Edit Distance", "questionTitleSlug": "edit-distance", "content": "<p>Given two strings <code>word1</code> and <code>word2</code>, return <em>the minimum number of operations required to convert <code>word1</code> to <code>word2</code></em>.</p>\n\n<p>You have the following three operations permitted on a word:</p>\n\n<ul>\n\t<li>Insert a character</li>\n\t<li>Delete a character</li>\n\t<li>Replace a character</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> word1 = &quot;horse&quot;, word2 = &quot;ros&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> \nhorse -&gt; rorse (replace &#39;h&#39; with &#39;r&#39;)\nrorse -&gt; rose (remove &#39;r&#39;)\nrose -&gt; ros (remove &#39;e&#39;)\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> word1 = &quot;intention&quot;, word2 = &quot;execution&quot;\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> \nintention -&gt; inention (remove &#39;t&#39;)\ninention -&gt; enention (replace &#39;i&#39; with &#39;e&#39;)\nenention -&gt; exention (replace &#39;n&#39; with &#39;x&#39;)\nexention -&gt; exection (replace &#39;n&#39; with &#39;c&#39;)\nexection -&gt; execution (insert &#39;u&#39;)\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= word1.length, word2.length &lt;= 500</code></li>\n\t<li><code>word1</code> and <code>word2</code> consist of lowercase English letters.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"322.6K\", \"totalSubmission\": \"698.7K\", \"totalAcceptedRaw\": 322598, \"totalSubmissionRaw\": 698703, \"acRate\": \"46.2%\"}", "similarQuestions": "[{\"title\": \"One Edit Distance\", \"titleSlug\": \"one-edit-distance\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Delete Operation for Two Strings\", \"titleSlug\": \"delete-operation-for-two-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum ASCII Delete Sum for Two Strings\", \"titleSlug\": \"minimum-ascii-delete-sum-for-two-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Uncrossed Lines\", \"titleSlug\": \"uncrossed-lines\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "68", "name": "text-justification", "content": {"questionId": "68", "questionFrontendId": "68", "questionTitle": "Text Justification", "questionTitleSlug": "text-justification", "content": "<p>Given an array of words and a width&nbsp;<em>maxWidth</em>, format the text such that each line has exactly <em>maxWidth</em> characters and is fully (left and right) justified.</p>\n\n<p>You should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces <code>&#39; &#39;</code> when necessary so that each line has exactly <em>maxWidth</em> characters.</p>\n\n<p>Extra spaces between words should be distributed as evenly as possible. If the number of spaces on a line do not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right.</p>\n\n<p>For the last line of text, it should be left justified and no <strong>extra</strong> space is inserted between words.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>A word is defined as a character sequence consisting&nbsp;of non-space characters only.</li>\n\t<li>Each word&#39;s length is&nbsp;guaranteed to be greater than 0 and not exceed <em>maxWidth</em>.</li>\n\t<li>The input array <code>words</code>&nbsp;contains at least one word.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;This&quot;, &quot;is&quot;, &quot;an&quot;, &quot;example&quot;, &quot;of&quot;, &quot;text&quot;, &quot;justification.&quot;], maxWidth = 16\n<strong>Output:</strong>\n[\n&nbsp; &nbsp;&quot;This &nbsp; &nbsp;is &nbsp; &nbsp;an&quot;,\n&nbsp; &nbsp;&quot;example &nbsp;of text&quot;,\n&nbsp; &nbsp;&quot;justification. &nbsp;&quot;\n]</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;What&quot;,&quot;must&quot;,&quot;be&quot;,&quot;acknowledgment&quot;,&quot;shall&quot;,&quot;be&quot;], maxWidth = 16\n<strong>Output:</strong>\n[\n&nbsp; &quot;What &nbsp; must &nbsp; be&quot;,\n&nbsp; &quot;acknowledgment &nbsp;&quot;,\n&nbsp; &quot;shall be &nbsp; &nbsp; &nbsp; &nbsp;&quot;\n]\n<strong>Explanation:</strong> Note that the last line is &quot;shall be    &quot; instead of &quot;shall     be&quot;, because the last line must be left-justified instead of fully-justified.\nNote that the second line is also left-justified becase it contains only one word.</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;Science&quot;,&quot;is&quot;,&quot;what&quot;,&quot;we&quot;,&quot;understand&quot;,&quot;well&quot;,&quot;enough&quot;,&quot;to&quot;,&quot;explain&quot;,&quot;to&quot;,&quot;a&quot;,&quot;computer.&quot;,&quot;Art&quot;,&quot;is&quot;,&quot;everything&quot;,&quot;else&quot;,&quot;we&quot;,&quot;do&quot;], maxWidth = 20\n<strong>Output:</strong>\n[\n&nbsp; &quot;Science &nbsp;is &nbsp;what we&quot;,\n  &quot;understand &nbsp; &nbsp; &nbsp;well&quot;,\n&nbsp; &quot;enough to explain to&quot;,\n&nbsp; &quot;a &nbsp;computer. &nbsp;Art is&quot;,\n&nbsp; &quot;everything &nbsp;else &nbsp;we&quot;,\n&nbsp; &quot;do &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;\n]</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 300</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 20</code></li>\n\t<li><code>words[i]</code> consists of only English letters and symbols.</li>\n\t<li><code>1 &lt;= maxWidth &lt;= 100</code></li>\n\t<li><code>words[i].length &lt;= maxWidth</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"152.7K\", \"totalSubmission\": \"527K\", \"totalAcceptedRaw\": 152746, \"totalSubmissionRaw\": 526985, \"acRate\": \"29.0%\"}", "similarQuestions": "[{\"title\": \"Rearrange Spaces Between Words\", \"titleSlug\": \"rearrange-spaces-between-words\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}]}}, {"id": "65", "name": "valid-number", "content": {"questionId": "65", "questionFrontendId": "65", "questionTitle": "Valid Number", "questionTitleSlug": "valid-number", "content": "<p>Validate if a given string can be interpreted as&nbsp;a decimal number.</p>\n\n<p>Some examples:<br />\n<code>&quot;0&quot;</code> =&gt; <code>true</code><br />\n<code>&quot; 0.1 &quot;</code> =&gt; <code>true</code><br />\n<code>&quot;abc&quot;</code> =&gt; <code>false</code><br />\n<code>&quot;1 a&quot;</code> =&gt; <code>false</code><br />\n<code>&quot;2e10&quot;</code> =&gt; <code>true</code><br />\n<code>&quot; -90e3&nbsp; &nbsp;&quot;</code> =&gt; <code>true</code><br />\n<code>&quot; 1e&quot;</code> =&gt; <code>false</code><br />\n<code>&quot;e3&quot;</code> =&gt; <code>false</code><br />\n<code>&quot; 6e-1&quot;</code> =&gt; <code>true</code><br />\n<code>&quot; 99e2.5&nbsp;&quot;</code> =&gt; <code>false</code><br />\n<code>&quot;53.5e93&quot;</code> =&gt; <code>true</code><br />\n<code>&quot; --6 &quot;</code> =&gt; <code>false</code><br />\n<code>&quot;-+3&quot;</code> =&gt; <code>false</code><br />\n<code>&quot;95a54e53&quot;</code> =&gt; <code>false</code></p>\n\n<p><strong>Note:</strong> It is intended for the problem statement to be ambiguous. It would be best if you gathered all requirements up front before implementing one. However, here is a list of characters that can be in a valid decimal number:</p>\n\n<ul>\n\t<li>Numbers 0-9</li>\n\t<li>Exponent - &quot;e&quot;</li>\n\t<li>Positive/negative sign - &quot;+&quot;/&quot;-&quot;</li>\n\t<li>Decimal point - &quot;.&quot;</li>\n</ul>\n\n<p>Of course, the context of these characters also matters in the input.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"0\"\n<strong>Output:</strong> true\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"3\"\n<strong>Output:</strong> true\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 20</code></li>\n\t<li><code>s</code> consists of only English letters, digits, space <code>&#39; &#39;</code>, plus <code>&#39;+&#39;</code>, minus <code>&#39;-&#39;</code>, or dot <code>&#39;.&#39;</code>.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"187.6K\", \"totalSubmission\": \"1.2M\", \"totalAcceptedRaw\": 187562, \"totalSubmissionRaw\": 1198302, \"acRate\": \"15.7%\"}", "similarQuestions": "[{\"title\": \"String to Integer (atoi)\", \"titleSlug\": \"string-to-integer-atoi\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "String", "slug": "string"}]}}, {"id": "60", "name": "permutation-sequence", "content": {"questionId": "60", "questionFrontendId": "60", "questionTitle": "Permutation Sequence", "questionTitleSlug": "permutation-sequence", "content": "<p>The set <code>[1, 2, 3, ...,&nbsp;n]</code> contains a total of <code>n!</code> unique permutations.</p>\n\n<p>By listing and labeling all of the permutations in order, we get the following sequence for <code>n = 3</code>:</p>\n\n<ol>\n\t<li><code>&quot;123&quot;</code></li>\n\t<li><code>&quot;132&quot;</code></li>\n\t<li><code>&quot;213&quot;</code></li>\n\t<li><code>&quot;231&quot;</code></li>\n\t<li><code>&quot;312&quot;</code></li>\n\t<li><code>&quot;321&quot;</code></li>\n</ol>\n\n<p>Given <code>n</code> and <code>k</code>, return the <code>k<sup>th</sup></code> permutation sequence.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 3, k = 3\n<strong>Output:</strong> \"213\"\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 4, k = 9\n<strong>Output:</strong> \"2314\"\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> n = 3, k = 1\n<strong>Output:</strong> \"123\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 9</code></li>\n\t<li><code>1 &lt;= k &lt;= n!</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"215.6K\", \"totalSubmission\": \"551.7K\", \"totalAcceptedRaw\": 215642, \"totalSubmissionRaw\": 551695, \"acRate\": \"39.1%\"}", "similarQuestions": "[{\"title\": \"Next Permutation\", \"titleSlug\": \"next-permutation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutations\", \"titleSlug\": \"permutations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Math", "slug": "math"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "52", "name": "n-queens-ii", "content": {"questionId": "52", "questionFrontendId": "52", "questionTitle": "N-Queens II", "questionTitleSlug": "n-queens-ii", "content": "<p>The <strong>n-queens</strong> puzzle is the problem of placing <code>n</code> queens on an <code>n x n</code> chessboard such that no two queens attack each other.</p>\n\n<p>Given an integer <code>n</code>, return <em>the number of distinct solutions to the&nbsp;<strong>n-queens puzzle</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/queens.jpg\" style=\"width: 600px; height: 268px;\" />\n<pre>\n<strong>Input:</strong> n = 4\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There are two distinct solutions to the 4-queens puzzle as shown.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 9</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"148.6K\", \"totalSubmission\": \"250.1K\", \"totalAcceptedRaw\": 148649, \"totalSubmissionRaw\": 250125, \"acRate\": \"59.4%\"}", "similarQuestions": "[{\"title\": \"N-Queens\", \"titleSlug\": \"n-queens\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "51", "name": "n-queens", "content": {"questionId": "51", "questionFrontendId": "51", "questionTitle": "N-Queens", "questionTitleSlug": "n-queens", "content": "<p>The <strong>n-queens</strong> puzzle is the problem of placing <code>n</code> queens on an <code>n x n</code> chessboard such that no two queens attack each other.</p>\n\n<p>Given an integer <code>n</code>, return <em>all distinct solutions to the <strong>n-queens puzzle</strong></em>.</p>\n\n<p>Each solution contains a distinct board configuration of the n-queens&#39; placement, where <code>&#39;Q&#39;</code> and <code>&#39;.&#39;</code> both indicate a queen and an empty space, respectively.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/queens.jpg\" style=\"width: 600px; height: 268px;\" />\n<pre>\n<strong>Input:</strong> n = 4\n<strong>Output:</strong> [[&quot;.Q..&quot;,&quot;...Q&quot;,&quot;Q...&quot;,&quot;..Q.&quot;],[&quot;..Q.&quot;,&quot;Q...&quot;,&quot;...Q&quot;,&quot;.Q..&quot;]]\n<strong>Explanation:</strong> There exist two distinct solutions to the 4-queens puzzle as shown above\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> [[&quot;Q&quot;]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 9</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"230.2K\", \"totalSubmission\": \"472.8K\", \"totalAcceptedRaw\": 230153, \"totalSubmissionRaw\": 472771, \"acRate\": \"48.7%\"}", "similarQuestions": "[{\"title\": \"N-Queens II\", \"titleSlug\": \"n-queens-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Grid Illumination\", \"titleSlug\": \"grid-illumination\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "45", "name": "jump-game-ii", "content": {"questionId": "45", "questionFrontendId": "45", "questionTitle": "Jump Game II", "questionTitleSlug": "jump-game-ii", "content": "<p>Given an array of non-negative integers <code>nums</code>, you are initially positioned at the first index of the array.</p>\n\n<p>Each element in the array represents your maximum jump length at that position.</p>\n\n<p>Your goal is to reach the last index in the minimum number of jumps.</p>\n\n<p>You can assume that you can always reach the last index.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,1,1,4]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,0,1,4]\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"301.4K\", \"totalSubmission\": \"966.5K\", \"totalAcceptedRaw\": 301423, \"totalSubmissionRaw\": 966510, \"acRate\": \"31.2%\"}", "similarQuestions": "[{\"title\": \"Jump Game\", \"titleSlug\": \"jump-game\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Jump Game III\", \"titleSlug\": \"jump-game-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "44", "name": "wildcard-matching", "content": {"questionId": "44", "questionFrontendId": "44", "questionTitle": "Wildcard Matching", "questionTitleSlug": "wildcard-matching", "content": "<p>Given an input string (<code>s</code>) and a pattern (<code>p</code>), implement wildcard pattern matching with support for <code>&#39;?&#39;</code> and <code>&#39;*&#39;</code> where:</p>\n\n<ul>\n\t<li><code>&#39;?&#39;</code> Matches any single character.</li>\n\t<li><code>&#39;*&#39;</code> Matches any sequence of characters (including the empty sequence).</li>\n</ul>\n\n<p>The matching should cover the <strong>entire</strong> input string (not partial).</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aa&quot;, p = &quot;a&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong> &quot;a&quot; does not match the entire string &quot;aa&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aa&quot;, p = &quot;*&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong>&nbsp;&#39;*&#39; matches any sequence.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;cb&quot;, p = &quot;?a&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong>&nbsp;&#39;?&#39; matches &#39;c&#39;, but the second letter is &#39;a&#39;, which does not match &#39;b&#39;.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;adceb&quot;, p = &quot;*a*b&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong>&nbsp;The first &#39;*&#39; matches the empty sequence, while the second &#39;*&#39; matches the substring &quot;dce&quot;.\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;acdcb&quot;, p = &quot;a*c?b&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length, p.length &lt;= 2000</code></li>\n\t<li><code>s</code> contains only lowercase English letters.</li>\n\t<li><code>p</code> contains only lowercase English letters, <code>&#39;?&#39;</code> or <code>&#39;*&#39;</code>.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"276.8K\", \"totalSubmission\": \"1.1M\", \"totalAcceptedRaw\": 276801, \"totalSubmissionRaw\": 1098304, \"acRate\": \"25.2%\"}", "similarQuestions": "[{\"title\": \"Regular Expression Matching\", \"titleSlug\": \"regular-expression-matching\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Backtracking", "slug": "backtracking"}, {"name": "Greedy", "slug": "greedy"}]}}, {"id": "42", "name": "trapping-rain-water", "content": {"questionId": "42", "questionFrontendId": "42", "questionTitle": "Trapping Rain Water", "questionTitleSlug": "trapping-rain-water", "content": "<p>Given <code>n</code> non-negative integers representing an elevation map where the width of each bar is <code>1</code>, compute how much water it can trap after raining.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2018/10/22/rainwatertrap.png\" style=\"width: 412px; height: 161px;\" />\n<pre>\n<strong>Input:</strong> height = [0,1,0,2,1,0,1,3,2,1,2,1]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> height = [4,2,0,3,2,5]\n<strong>Output:</strong> 9\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == height.length</code></li>\n\t<li><code>0 &lt;= n &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= height[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"632.8K\", \"totalSubmission\": \"1.3M\", \"totalAcceptedRaw\": 632827, \"totalSubmissionRaw\": 1253243, \"acRate\": \"50.5%\"}", "similarQuestions": "[{\"title\": \"Container With Most Water\", \"titleSlug\": \"container-with-most-water\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Product of Array Except Self\", \"titleSlug\": \"product-of-array-except-self\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Trapping Rain Water II\", \"titleSlug\": \"trapping-rain-water-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Pour Water\", \"titleSlug\": \"pour-water\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Two Pointers", "slug": "two-pointers"}, {"name": "Stack", "slug": "stack"}]}}, {"id": "41", "name": "first-missing-positive", "content": {"questionId": "41", "questionFrontendId": "41", "questionTitle": "First Missing Positive", "questionTitleSlug": "first-missing-positive", "content": "<p>Given an unsorted integer array <code>nums</code>, find the smallest missing&nbsp;positive integer.</p>\n\n<p><strong>Follow up:</strong>&nbsp;Could you implement an&nbsp;algorithm that runs in <code>O(n)</code> time and uses constant extra space.?</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,0]\n<strong>Output:</strong> 3\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [3,4,-1,1]\n<strong>Output:</strong> 2\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [7,8,9,11,12]\n<strong>Output:</strong> 1\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= nums.length &lt;= 300</code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"420.4K\", \"totalSubmission\": \"1.3M\", \"totalAcceptedRaw\": 420449, \"totalSubmissionRaw\": 1263472, \"acRate\": \"33.3%\"}", "similarQuestions": "[{\"title\": \"Missing Number\", \"titleSlug\": \"missing-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Duplicate Number\", \"titleSlug\": \"find-the-duplicate-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find All Numbers Disappeared in an Array\", \"titleSlug\": \"find-all-numbers-disappeared-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Couples Holding Hands\", \"titleSlug\": \"couples-holding-hands\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}]}}, {"id": "37", "name": "sudoku-solver", "content": {"questionId": "37", "questionFrontendId": "37", "questionTitle": "Sudoku Solver", "questionTitleSlug": "sudoku-solver", "content": "<p>Write a program to solve a Sudoku puzzle by filling the empty cells.</p>\n\n<p>A&nbsp;sudoku solution must satisfy <strong>all of&nbsp;the following rules</strong>:</p>\n\n<ol>\n\t<li>Each of the digits&nbsp;<code>1-9</code> must occur exactly&nbsp;once in each row.</li>\n\t<li>Each of the digits&nbsp;<code>1-9</code>&nbsp;must occur&nbsp;exactly once in each column.</li>\n\t<li>Each of the digits&nbsp;<code>1-9</code> must occur exactly once in each of the 9 <code>3x3</code> sub-boxes of the grid.</li>\n</ol>\n\n<p>The <code>&#39;.&#39;</code> character indicates empty cells.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png\" style=\"height:250px; width:250px\" />\n<pre>\n<strong>Input:</strong> board = [[&quot;5&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;,&quot;9&quot;,&quot;5&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;9&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;],[&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;3&quot;],[&quot;4&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;],[&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;],[&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;8&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;4&quot;,&quot;1&quot;,&quot;9&quot;,&quot;.&quot;,&quot;.&quot;,&quot;5&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;9&quot;]]\n<strong>Output:</strong> [[&quot;5&quot;,&quot;3&quot;,&quot;4&quot;,&quot;6&quot;,&quot;7&quot;,&quot;8&quot;,&quot;9&quot;,&quot;1&quot;,&quot;2&quot;],[&quot;6&quot;,&quot;7&quot;,&quot;2&quot;,&quot;1&quot;,&quot;9&quot;,&quot;5&quot;,&quot;3&quot;,&quot;4&quot;,&quot;8&quot;],[&quot;1&quot;,&quot;9&quot;,&quot;8&quot;,&quot;3&quot;,&quot;4&quot;,&quot;2&quot;,&quot;5&quot;,&quot;6&quot;,&quot;7&quot;],[&quot;8&quot;,&quot;5&quot;,&quot;9&quot;,&quot;7&quot;,&quot;6&quot;,&quot;1&quot;,&quot;4&quot;,&quot;2&quot;,&quot;3&quot;],[&quot;4&quot;,&quot;2&quot;,&quot;6&quot;,&quot;8&quot;,&quot;5&quot;,&quot;3&quot;,&quot;7&quot;,&quot;9&quot;,&quot;1&quot;],[&quot;7&quot;,&quot;1&quot;,&quot;3&quot;,&quot;9&quot;,&quot;2&quot;,&quot;4&quot;,&quot;8&quot;,&quot;5&quot;,&quot;6&quot;],[&quot;9&quot;,&quot;6&quot;,&quot;1&quot;,&quot;5&quot;,&quot;3&quot;,&quot;7&quot;,&quot;2&quot;,&quot;8&quot;,&quot;4&quot;],[&quot;2&quot;,&quot;8&quot;,&quot;7&quot;,&quot;4&quot;,&quot;1&quot;,&quot;9&quot;,&quot;6&quot;,&quot;3&quot;,&quot;5&quot;],[&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;2&quot;,&quot;8&quot;,&quot;6&quot;,&quot;1&quot;,&quot;7&quot;,&quot;9&quot;]]\n<strong>Explanation:</strong>&nbsp;The input board is shown above and the only valid solution is shown below:\n\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Sudoku-by-L2G-20050714_solution.svg/250px-Sudoku-by-L2G-20050714_solution.svg.png\" style=\"height:250px; width:250px\" />\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>board.length == 9</code></li>\n\t<li><code>board[i].length == 9</code></li>\n\t<li><code>board[i][j]</code> is a digit or <code>&#39;.&#39;</code>.</li>\n\t<li>It is <strong>guaranteed</strong> that the input board has only one solution.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"213.6K\", \"totalSubmission\": \"468.4K\", \"totalAcceptedRaw\": 213565, \"totalSubmissionRaw\": 468363, \"acRate\": \"45.6%\"}", "similarQuestions": "[{\"title\": \"Valid Sudoku\", \"titleSlug\": \"valid-sudoku\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Unique Paths III\", \"titleSlug\": \"unique-paths-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "32", "name": "longest-valid-parentheses", "content": {"questionId": "32", "questionFrontendId": "32", "questionTitle": "Longest Valid Parentheses", "questionTitleSlug": "longest-valid-parentheses", "content": "<p>Given a string containing just the characters <code>&#39;(&#39;</code> and <code>&#39;)&#39;</code>, find the length of the longest valid (well-formed) parentheses substring.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;(()&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The longest valid parentheses substring is &quot;()&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;)()())&quot;\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The longest valid parentheses substring is &quot;()()&quot;.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;&quot;\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>s[i]</code> is <code>&#39;(&#39;</code>, or <code>&#39;)&#39;</code>.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"325.2K\", \"totalSubmission\": \"1.1M\", \"totalAcceptedRaw\": 325170, \"totalSubmissionRaw\": 1120685, \"acRate\": \"29.0%\"}", "similarQuestions": "[{\"title\": \"Valid Parentheses\", \"titleSlug\": \"valid-parentheses\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}]}}, {"id": "30", "name": "substring-with-concatenation-of-all-words", "content": {"questionId": "30", "questionFrontendId": "30", "questionTitle": "Substring with Concatenation of All Words", "questionTitleSlug": "substring-with-concatenation-of-all-words", "content": "<p>You are given a string <code>s</code> and an array of strings <code>words</code> of <strong>the same length</strong>. Return&nbsp;all starting indices of substring(s) in <code>s</code>&nbsp;that is a concatenation of each word in <code>words</code> <strong>exactly once</strong>, <strong>in any order</strong>,&nbsp;and <strong>without any intervening characters</strong>.</p>\n\n<p>You can return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;barfoothefoobarman&quot;, words = [&quot;foo&quot;,&quot;bar&quot;]\n<strong>Output:</strong> [0,9]\n<strong>Explanation:</strong> Substrings starting at index 0 and 9 are &quot;barfoo&quot; and &quot;foobar&quot; respectively.\nThe output order does not matter, returning [9,0] is fine too.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;wordgoodgoodgoodbestword&quot;, words = [&quot;word&quot;,&quot;good&quot;,&quot;best&quot;,&quot;word&quot;]\n<strong>Output:</strong> []\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;barfoofoobarthefoobarman&quot;, words = [&quot;bar&quot;,&quot;foo&quot;,&quot;the&quot;]\n<strong>Output:</strong> [6,9,12]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of lower-case English letters.</li>\n\t<li><code>1 &lt;= words.length &lt;= 5000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 30</code></li>\n\t<li><code>words[i]</code>&nbsp;consists of lower-case English letters.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"193.1K\", \"totalSubmission\": \"744.4K\", \"totalAcceptedRaw\": 193085, \"totalSubmissionRaw\": 744423, \"acRate\": \"25.9%\"}", "similarQuestions": "[{\"title\": \"Minimum Window Substring\", \"titleSlug\": \"minimum-window-substring\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Hash Table", "slug": "hash-table"}, {"name": "Two Pointers", "slug": "two-pointers"}, {"name": "String", "slug": "string"}]}}, {"id": "25", "name": "reverse-nodes-in-k-group", "content": {"questionId": "25", "questionFrontendId": "25", "questionTitle": "Reverse Nodes in k-Group", "questionTitleSlug": "reverse-nodes-in-k-group", "content": "<p>Given a linked list, reverse the nodes of a linked list <em>k</em> at a time and return its modified list.</p>\n\n<p><em>k</em> is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of <em>k</em> then left-out nodes, in the end, should remain as it is.</p>\n\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>Could you solve the problem in <code>O(1)</code> extra memory space?</li>\n\t<li>You may not alter the values in the list&#39;s nodes, only nodes itself may be changed.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/03/reverse_ex1.jpg\" style=\"width: 542px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4,5], k = 2\n<strong>Output:</strong> [2,1,4,3,5]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/03/reverse_ex2.jpg\" style=\"width: 542px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4,5], k = 3\n<strong>Output:</strong> [3,2,1,4,5]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1,2,3,4,5], k = 1\n<strong>Output:</strong> [1,2,3,4,5]\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1], k = 1\n<strong>Output:</strong> [1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list&nbsp;is in the range <code>sz</code>.</li>\n\t<li><code>1 &lt;= sz &lt;= 5000</code></li>\n\t<li><code>0 &lt;= Node.val &lt;= 1000</code></li>\n\t<li><code>1 &lt;= k &lt;= sz</code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"311.8K\", \"totalSubmission\": \"709.8K\", \"totalAcceptedRaw\": 311826, \"totalSubmissionRaw\": 709768, \"acRate\": \"43.9%\"}", "similarQuestions": "[{\"title\": \"Swap Nodes in Pairs\", \"titleSlug\": \"swap-nodes-in-pairs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}]}}, {"id": "23", "name": "merge-k-sorted-lists", "content": {"questionId": "23", "questionFrontendId": "23", "questionTitle": "Merge k Sorted Lists", "questionTitleSlug": "merge-k-sorted-lists", "content": "<p>You are given an array of <code>k</code> linked-lists <code>lists</code>, each linked-list is sorted in ascending order.</p>\n\n<p><em>Merge all the linked-lists into one sorted linked-list and return it.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> lists = [[1,4,5],[1,3,4],[2,6]]\n<strong>Output:</strong> [1,1,2,3,4,4,5,6]\n<strong>Explanation:</strong> The linked-lists are:\n[\n  1-&gt;4-&gt;5,\n  1-&gt;3-&gt;4,\n  2-&gt;6\n]\nmerging them into one sorted list:\n1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4-&gt;5-&gt;6\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> lists = []\n<strong>Output:</strong> []\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> lists = [[]]\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>k == lists.length</code></li>\n\t<li><code>0 &lt;= k &lt;= 10^4</code></li>\n\t<li><code>0 &lt;= lists[i].length &lt;= 500</code></li>\n\t<li><code>-10^4 &lt;= lists[i][j] &lt;= 10^4</code></li>\n\t<li><code>lists[i]</code> is sorted in <strong>ascending order</strong>.</li>\n\t<li>The sum of <code>lists[i].length</code> won&#39;t exceed <code>10^4</code>.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"767.3K\", \"totalSubmission\": \"1.8M\", \"totalAcceptedRaw\": 767276, \"totalSubmissionRaw\": 1838769, \"acRate\": \"41.7%\"}", "similarQuestions": "[{\"title\": \"Merge Two Sorted Lists\", \"titleSlug\": \"merge-two-sorted-lists\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Ugly Number II\", \"titleSlug\": \"ugly-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Linked List", "slug": "linked-list"}, {"name": "Divide and Conquer", "slug": "divide-and-conquer"}, {"name": "Heap", "slug": "heap"}]}}, {"id": "10", "name": "regular-expression-matching", "content": {"questionId": "10", "questionFrontendId": "10", "questionTitle": "Regular Expression Matching", "questionTitleSlug": "regular-expression-matching", "content": "<p>Given an input string (<code>s</code>) and a pattern (<code>p</code>), implement regular expression matching with support for <code>&#39;.&#39;</code> and <code>&#39;*&#39;</code> where:<code>&nbsp;</code></p>\n\n<ul>\n\t<li><code>&#39;.&#39;</code> Matches any single character.\u200b\u200b\u200b\u200b</li>\n\t<li><code>&#39;*&#39;</code> Matches zero or more of the preceding element.</li>\n</ul>\n\n<p>The matching should cover the <strong>entire</strong> input string (not partial).</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aa&quot;, p = &quot;a&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong> &quot;a&quot; does not match the entire string &quot;aa&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aa&quot;, p = &quot;a*&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong>&nbsp;&#39;*&#39; means zero or more of the preceding&nbsp;element, &#39;a&#39;. Therefore, by repeating &#39;a&#39; once, it becomes &quot;aa&quot;.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ab&quot;, p = &quot;.*&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong>&nbsp;&quot;.*&quot; means &quot;zero or more (*) of any character (.)&quot;.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aab&quot;, p = &quot;c*a*b&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong>&nbsp;c can be repeated 0 times, a can be repeated 1 time. Therefore, it matches &quot;aab&quot;.\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;mississippi&quot;, p = &quot;mis*is*p*.&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length&nbsp;&lt;= 20</code></li>\n\t<li><code>0 &lt;= p.length&nbsp;&lt;= 30</code></li>\n\t<li><code>s</code> contains only lowercase English letters.</li>\n\t<li><code>p</code> contains only lowercase English letters, <code>&#39;.&#39;</code>, and&nbsp;<code>&#39;*&#39;</code>.</li>\n\t<li>It is guaranteed for each appearance of the character <code>&#39;*&#39;</code>, there will be a previous valid character to match.</li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"491.7K\", \"totalSubmission\": \"1.8M\", \"totalAcceptedRaw\": 491708, \"totalSubmissionRaw\": 1810730, \"acRate\": \"27.2%\"}", "similarQuestions": "[{\"title\": \"Wildcard Matching\", \"titleSlug\": \"wildcard-matching\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", "categoryTitle": "Algorithms", "topicTags": [{"name": "String", "slug": "string"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}, {"name": "Backtracking", "slug": "backtracking"}]}}, {"id": "4", "name": "median-of-two-sorted-arrays", "content": {"questionId": "4", "questionFrontendId": "4", "questionTitle": "Median of Two Sorted Arrays", "questionTitleSlug": "median-of-two-sorted-arrays", "content": "<p>Given two sorted arrays <code>nums1</code> and <code>nums2</code> of size <code>m</code> and <code>n</code> respectively, return <strong>the median</strong> of the two sorted arrays.</p>\n\n<p><strong>Follow up:</strong> The overall run time complexity should be <code>O(log (m+n))</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,3], nums2 = [2]\n<strong>Output:</strong> 2.00000\n<strong>Explanation:</strong> merged array = [1,2,3] and median is 2.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2], nums2 = [3,4]\n<strong>Output:</strong> 2.50000\n<strong>Explanation:</strong> merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [0,0], nums2 = [0,0]\n<strong>Output:</strong> 0.00000\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [], nums2 = [1]\n<strong>Output:</strong> 1.00000\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [2], nums2 = []\n<strong>Output:</strong> 2.00000\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>nums1.length == m</code></li>\n\t<li><code>nums2.length == n</code></li>\n\t<li><code>0 &lt;= m &lt;= 1000</code></li>\n\t<li><code>0 &lt;= n &lt;= 1000</code></li>\n\t<li><code>1 &lt;= m + n &lt;= 2000</code></li>\n\t<li><code>-10<sup>6</sup> &lt;= nums1[i], nums2[i] &lt;= 10<sup>6</sup></code></li>\n</ul>\n", "difficulty": "Hard", "stats": "{\"totalAccepted\": \"815.7K\", \"totalSubmission\": \"2.7M\", \"totalAcceptedRaw\": 815727, \"totalSubmissionRaw\": 2666399, \"acRate\": \"30.6%\"}", "similarQuestions": "[]", "categoryTitle": "Algorithms", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Binary Search", "slug": "binary-search"}, {"name": "Divide and Conquer", "slug": "divide-and-conquer"}]}}]